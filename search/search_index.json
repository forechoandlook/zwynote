{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"wellcome to my blog","title":"Index"},{"location":"guide/","text":"\u4f7f\u7528\u6307\u5357 \u00b6 \u672c\u5730\u5f00\u53d1 \u00b6 \u73af\u5883\u51c6\u5907 \u00b6 \u5b89\u88c5 Python 3.x \u5b89\u88c5 MkDocs \u548c Material \u4e3b\u9898\uff1a pip install mkdocs-material \u672c\u5730\u8fd0\u884c \u00b6 \u514b\u9686\u4ed3\u5e93\uff1a git clone <repository-url> cd my-notes \u542f\u52a8\u672c\u5730\u670d\u52a1\u5668\uff1a mkdocs serve \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8000 \u67e5\u770b\u6587\u6863 \u6587\u6863\u7ed3\u6784 \u00b6 docs/ \u251c\u2500\u2500 index.md # \u9996\u9875 \u251c\u2500\u2500 guide.md # \u4f7f\u7528\u6307\u5357 \u2514\u2500\u2500 cc/ # C++ \u76f8\u5173\u6587\u6863 \u2514\u2500\u2500 mix.md # Mix \u6a21\u677f\u7f16\u7a0b \u8d21\u732e\u6307\u5357 \u00b6 \u6dfb\u52a0\u65b0\u6587\u6863 \u00b6 \u5728 docs \u76ee\u5f55\u4e0b\u521b\u5efa Markdown \u6587\u4ef6 \u5728 mkdocs.yml \u7684 nav \u90e8\u5206\u6dfb\u52a0\u6587\u6863\u94fe\u63a5 \u63d0\u4ea4 Pull Request Markdown \u89c4\u8303 \u00b6 \u4f7f\u7528 ATX \u98ce\u683c\u6807\u9898\uff08 # \u53f7\uff09 \u4ee3\u7801\u5757\u6307\u5b9a\u8bed\u8a00\u7c7b\u578b \u9002\u5f53\u4f7f\u7528\u8868\u683c\u3001\u5217\u8868\u7b49 Markdown \u5143\u7d20 \u4fdd\u6301\u6587\u6863\u7ed3\u6784\u6e05\u6670 \u672c\u5730\u9884\u89c8 \u00b6 \u4fee\u6539\u6587\u6863\u540e\uff0c\u672c\u5730\u670d\u52a1\u5668\u4f1a\u81ea\u52a8\u91cd\u65b0\u52a0\u8f7d\uff0c\u5b9e\u65f6\u9884\u89c8\u66f4\u6539\u3002 \u90e8\u7f72 \u00b6 \u672c\u6587\u6863\u4f7f\u7528 GitHub Actions \u81ea\u52a8\u90e8\u7f72\u5230 GitHub Pages\u3002\u6bcf\u6b21\u63a8\u9001\u5230 main \u5206\u652f\u65f6\u4f1a\u81ea\u52a8\u89e6\u53d1\u90e8\u7f72\u6d41\u7a0b\u3002","title":"\u4f7f\u7528\u6307\u5357"},{"location":"guide/#_1","text":"","title":"\u4f7f\u7528\u6307\u5357"},{"location":"guide/#_2","text":"","title":"\u672c\u5730\u5f00\u53d1"},{"location":"guide/#_3","text":"\u5b89\u88c5 Python 3.x \u5b89\u88c5 MkDocs \u548c Material \u4e3b\u9898\uff1a pip install mkdocs-material","title":"\u73af\u5883\u51c6\u5907"},{"location":"guide/#_4","text":"\u514b\u9686\u4ed3\u5e93\uff1a git clone <repository-url> cd my-notes \u542f\u52a8\u672c\u5730\u670d\u52a1\u5668\uff1a mkdocs serve \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8000 \u67e5\u770b\u6587\u6863","title":"\u672c\u5730\u8fd0\u884c"},{"location":"guide/#_5","text":"docs/ \u251c\u2500\u2500 index.md # \u9996\u9875 \u251c\u2500\u2500 guide.md # \u4f7f\u7528\u6307\u5357 \u2514\u2500\u2500 cc/ # C++ \u76f8\u5173\u6587\u6863 \u2514\u2500\u2500 mix.md # Mix \u6a21\u677f\u7f16\u7a0b","title":"\u6587\u6863\u7ed3\u6784"},{"location":"guide/#_6","text":"","title":"\u8d21\u732e\u6307\u5357"},{"location":"guide/#_7","text":"\u5728 docs \u76ee\u5f55\u4e0b\u521b\u5efa Markdown \u6587\u4ef6 \u5728 mkdocs.yml \u7684 nav \u90e8\u5206\u6dfb\u52a0\u6587\u6863\u94fe\u63a5 \u63d0\u4ea4 Pull Request","title":"\u6dfb\u52a0\u65b0\u6587\u6863"},{"location":"guide/#markdown","text":"\u4f7f\u7528 ATX \u98ce\u683c\u6807\u9898\uff08 # \u53f7\uff09 \u4ee3\u7801\u5757\u6307\u5b9a\u8bed\u8a00\u7c7b\u578b \u9002\u5f53\u4f7f\u7528\u8868\u683c\u3001\u5217\u8868\u7b49 Markdown \u5143\u7d20 \u4fdd\u6301\u6587\u6863\u7ed3\u6784\u6e05\u6670","title":"Markdown \u89c4\u8303"},{"location":"guide/#_8","text":"\u4fee\u6539\u6587\u6863\u540e\uff0c\u672c\u5730\u670d\u52a1\u5668\u4f1a\u81ea\u52a8\u91cd\u65b0\u52a0\u8f7d\uff0c\u5b9e\u65f6\u9884\u89c8\u66f4\u6539\u3002","title":"\u672c\u5730\u9884\u89c8"},{"location":"guide/#_9","text":"\u672c\u6587\u6863\u4f7f\u7528 GitHub Actions \u81ea\u52a8\u90e8\u7f72\u5230 GitHub Pages\u3002\u6bcf\u6b21\u63a8\u9001\u5230 main \u5206\u652f\u65f6\u4f1a\u81ea\u52a8\u89e6\u53d1\u90e8\u7f72\u6d41\u7a0b\u3002","title":"\u90e8\u7f72"},{"location":"algorithm/amem/","text":"AMEM \u00b6 \u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff1a \u5982\u4f55\u4e3a LLM Agent \u8bbe\u8ba1\u4e00\u4e2a\u7075\u6d3b\u901a\u7528\u7684\u8bb0\u5fc6\u7cfb\u7edf\uff0c\u4ee5\u652f\u6301\u5176\u4e0e\u5916\u90e8\u73af\u5883\u7684\u957f\u671f\u4ea4\u4e92\uff1f \u5177\u4f53\u95ee\u9898\uff1a 1. \u8bb0\u5fc6\u788e\u7247\u5316 2. \u8bb0\u5fc6\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5982\u4f55\u66f4\u65b0 3. \u9884\u5b9a\u4e49\u6a21\u5f0f\uff08\u5982\u6811\u72b6\u7ed3\u6784/\u56fe\u6570\u636e\u5e93\uff09\u4e0e\u5f00\u653e\u573a\u666f\u77e5\u8bc6\u6f14\u5316 \u5e0c\u671b\uff1a 1. \u81ea\u4e3b\u751f\u6210\uff0c\u81ea\u4e3b\u751f\u6210\u8bb0\u5fc6\u7684\u4e0a\u4e0b\u6587\u63cf\u8ff0\uff0c\u52a8\u6001\u5efa\u7acb\u8bb0\u5fc6\u8fde\u63a5\uff0c\u6839\u636e\u65b0\u7684\u7ecf\u9a8c\u66f4\u65b0\u8bb0\u5fc6 2. \u52a8\u6001\u7ec4\u7ec7\uff0c\u52a8\u6001\u7ed3\u6784\uff1f import torch import torch.nn as nn from sentence_transformers import SentenceTransformer from sklearn.metrics.pairwise import cosine_similarity from typing import List , Dict import json import numpy as np class AgenticMemorySystem : def __init__ ( self ): # \u521d\u59cb\u5316\u6587\u672c\u7f16\u7801\u5668\uff08\u4f7f\u7528sentence-transformers\u7684all-MiniLM-L6-v2\uff09 self . encoder = SentenceTransformer ( 'all-MiniLM-L6-v2' ) # \u8bb0\u5fc6\u5e93\u5b58\u50a8\u7ed3\u6784\uff1a\u5217\u8868\u5b58\u50a8\u8bb0\u5fc6\u8282\u70b9\u5b57\u5178 self . memory_bank = [] # \u8d85\u53c2\u6570\u8bbe\u7f6e self . top_k = 10 # \u76f8\u4f3c\u8bb0\u5fc6\u68c0\u7d22\u6570\u91cf self . sim_threshold = 0.7 # \u76f8\u4f3c\u5ea6\u9608\u503c class MemoryNode : \"\"\"\u8bb0\u5fc6\u8282\u70b9\u6570\u636e\u7ed3\u6784\u5b9a\u4e49 $$ m_i = \\{c_i, t_i, K_i, G_i, X_i, e_i, L_i\\} $$ \"\"\" def __init__ ( self , content : str , timestamp : float ): self . content = content # \u539f\u59cb\u4ea4\u4e92\u5185\u5bb9 c_i self . timestamp = timestamp # \u65f6\u95f4\u6233 t_i self . keywords = [] # \u5173\u952e\u8bcd K_i self . tags = [] # \u5206\u7c7b\u6807\u7b7e G_i self . context = \"\" # \u4e0a\u4e0b\u6587\u63cf\u8ff0 X_i self . embedding = None # \u5d4c\u5165\u5411\u91cf e_i self . links = [] # \u94fe\u63a5\u8bb0\u5fc6 L_i def _generate_note_components ( self , content : str ) -> Dict : \"\"\"\u539f\u5b50\u7b14\u8bb0\u6784\u5efa\u6a21\u5757\uff08\u6a21\u62dfLLM\u751f\u6210\u8fc7\u7a0b\uff09 \u8bba\u6587\u516c\u5f0f\uff1aK_i, G_i, X_i \u2190 LLM(c_i \u2016 t_i \u2016 P_{s1}) \"\"\" # \u5b9e\u9645\u5e94\u7528\u65f6\u66ff\u6362\u4e3a\u771f\u5b9eLLM\u8c03\u7528 return { \"keywords\" : [ \"\u4eba\u5de5\u667a\u80fd\" , \"\u8bb0\u5fc6\u7cfb\u7edf\" , \"\u795e\u7ecf\u7f51\u7edc\" ], \"tags\" : [ \"\u6280\u672f\" , \"\u673a\u5668\u5b66\u4e60\" , \"\u8ba4\u77e5\u79d1\u5b66\" ], \"context\" : \"\u8be5\u5bf9\u8bdd\u6d89\u53ca\u4eba\u5de5\u667a\u80fd\u8bb0\u5fc6\u7cfb\u7edf\u7684\u6280\u672f\u539f\u7406\u53ca\u5176\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u5e94\u7528\" } def _generate_links ( self , new_node : MemoryNode , candidates : List [ MemoryNode ]) -> List [ int ]: \"\"\"\u52a8\u6001\u94fe\u63a5\u751f\u6210\u6a21\u5757 \u8bba\u6587\u516c\u5f0f\uff1aL_i \u2190 LLM(m_n \u2016 M_{near}^n \u2016 P_{s2}) \"\"\" # \u57fa\u4e8e\u8bed\u4e49\u76f8\u4f3c\u5ea6\u548c\u89c4\u5219\u6a21\u62df\u94fe\u63a5\u751f\u6210 linked_ids = [] for candidate in candidates : if len ( linked_ids ) >= 3 : # \u6700\u5927\u94fe\u63a5\u6570\u9650\u5236 break if self . _semantic_relationship ( new_node , candidate ): linked_ids . append ( id ( candidate )) return linked_ids def _semantic_relationship ( self , node_a : MemoryNode , node_b : MemoryNode ) -> bool : \"\"\"\u8bed\u4e49\u5173\u7cfb\u5224\u65ad\uff08\u6a21\u62dfLLM\u63a8\u7406\u8fc7\u7a0b\uff09\"\"\" # \u5b9e\u9645\u5e94\u7528\u5e94\u4f7f\u7528LLM\u5224\u65ad\uff0c\u8fd9\u91cc\u7528\u5173\u952e\u8bcd\u91cd\u53e0\u6a21\u62df common_keywords = set ( node_a . keywords ) & set ( node_b . keywords ) return len ( common_keywords ) >= 1 def _update_memory_evolution ( self , new_node : MemoryNode , linked_nodes : List [ MemoryNode ]): \"\"\"\u8bb0\u5fc6\u8fdb\u5316\u66f4\u65b0\u6a21\u5757 \u8bba\u6587\u516c\u5f0f\uff1am_j^* \u2190 LLM(m_n \u2016 M_{near}^n \\ m_j \u2016 m_j \u2016 P_{s3}) \"\"\" for old_node in linked_nodes : # \u5408\u5e76\u5173\u952e\u8bcd\uff08\u53bb\u91cd\uff09 combined_keywords = list ( set ( old_node . keywords + new_node . keywords )) # \u66f4\u65b0\u4e0a\u4e0b\u6587\u63cf\u8ff0 old_node . context = f \" { old_node . context } | \u5173\u8054\u66f4\u65b0\uff1a { new_node . context [: 50 ] } \u2026\" # \u66f4\u65b0\u5d4c\u5165\u5411\u91cf\uff08\u52a0\u6743\u5e73\u5747\uff09 old_embed = old_node . embedding new_embed = new_node . embedding old_node . embedding = ( old_embed * 0.7 + new_embed * 0.3 ) / ( 0.7 + 0.3 ) def add_memory ( self , content : str ): \"\"\"\u6dfb\u52a0\u65b0\u8bb0\u5fc6\u7684\u6838\u5fc3\u6d41\u7a0b\"\"\" # 1. \u521b\u5efa\u57fa\u7840\u8bb0\u5fc6\u8282\u70b9 new_node = self . MemoryNode ( content = content , timestamp = time . time () ) # 2. \u751f\u6210\u7ed3\u6784\u5316\u5c5e\u6027\uff08\u6a21\u62dfLLM\u8fc7\u7a0b\uff09 components = self . _generate_note_components ( content ) new_node . keywords = components [ \"keywords\" ] new_node . tags = components [ \"tags\" ] new_node . context = components [ \"context\" ] # 3. \u751f\u6210\u5d4c\u5165\u5411\u91cf e_i = f_enc[concat(c_i, K_i, G_i, X_i)] text_to_encode = f \" { content } { ' ' . join ( new_node . keywords ) } { ' ' . join ( new_node . tags ) } { new_node . context } \" new_node . embedding = self . encoder . encode ( text_to_encode , convert_to_tensor = True ) # 4. \u76f8\u4f3c\u8bb0\u5fc6\u68c0\u7d22\uff08\u4f59\u5f26\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff09 if self . memory_bank : embeddings = torch . stack ([ node . embedding for node in self . memory_bank ]) sim_scores = cosine_similarity ( new_node . embedding . unsqueeze ( 0 ), embeddings ) top_k_indices = sim_scores . argsort ()[ 0 ][ - self . top_k :] candidates = [ self . memory_bank [ i ] for i in top_k_indices ] else : candidates = [] # 5. \u52a8\u6001\u94fe\u63a5\u751f\u6210 new_node . links = self . _generate_links ( new_node , candidates ) # 6. \u8bb0\u5fc6\u8fdb\u5316\u66f4\u65b0 if candidates : self . _update_memory_evolution ( new_node , candidates ) # 7. \u5b58\u5165\u8bb0\u5fc6\u5e93 self . memory_bank . append ( new_node ) def retrieve_memories ( self , query : str , k : int = 5 ) -> List [ MemoryNode ]: \"\"\"\u8bb0\u5fc6\u68c0\u7d22\u6a21\u5757 \u8bba\u6587\u516c\u5f0f\uff1aM_{retrieved} = {m_i | rank(s_{q,i}) \u2264 k} \"\"\" # \u7f16\u7801\u67e5\u8be2\u8bed\u53e5 query_embed = self . encoder . encode ( query , convert_to_tensor = True ) # \u8ba1\u7b97\u76f8\u4f3c\u5ea6 embeddings = torch . stack ([ node . embedding for node in self . memory_bank ]) sim_scores = cosine_similarity ( query_embed . unsqueeze ( 0 ), embeddings ) # \u6392\u5e8f\u5e76\u8fd4\u56deTop-k\u7ed3\u679c top_k_indices = sim_scores . argsort ()[ 0 ][ - k :] return [ self . memory_bank [ i ] for i in top_k_indices ] # \u4f7f\u7528\u793a\u4f8b if __name__ == \"__main__\" : # \u521d\u59cb\u5316\u8bb0\u5fc6\u7cfb\u7edf ams = AgenticMemorySystem () # \u6dfb\u52a0\u793a\u4f8b\u8bb0\u5fc6 ams . add_memory ( \"\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eZettelkasten\u7684\u4e3b\u52a8\u8bb0\u5fc6\u7cfb\u7edf\" ) ams . add_memory ( \"\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u7684\u8bb0\u5fc6\u673a\u5236\u9700\u8981\u52a8\u6001\u66f4\u65b0\u7b56\u7565\" ) # \u68c0\u7d22\u76f8\u5173\u8bb0\u5fc6 results = ams . retrieve_memories ( \"\u4eba\u5de5\u667a\u80fd\u8bb0\u5fc6\u7cfb\u7edf\" , k = 2 ) for node in results : print ( f \"\u5185\u5bb9\uff1a { node . content [: 50 ] } \u2026\" ) print ( f \"\u5173\u952e\u8bcd\uff1a { node . keywords } \" ) print ( f \"\u4e0a\u4e0b\u6587\uff1a { node . context [: 60 ] } \u2026 \\n \" )","title":"AMEM"},{"location":"algorithm/amem/#amem","text":"\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff1a \u5982\u4f55\u4e3a LLM Agent \u8bbe\u8ba1\u4e00\u4e2a\u7075\u6d3b\u901a\u7528\u7684\u8bb0\u5fc6\u7cfb\u7edf\uff0c\u4ee5\u652f\u6301\u5176\u4e0e\u5916\u90e8\u73af\u5883\u7684\u957f\u671f\u4ea4\u4e92\uff1f \u5177\u4f53\u95ee\u9898\uff1a 1. \u8bb0\u5fc6\u788e\u7247\u5316 2. \u8bb0\u5fc6\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5982\u4f55\u66f4\u65b0 3. \u9884\u5b9a\u4e49\u6a21\u5f0f\uff08\u5982\u6811\u72b6\u7ed3\u6784/\u56fe\u6570\u636e\u5e93\uff09\u4e0e\u5f00\u653e\u573a\u666f\u77e5\u8bc6\u6f14\u5316 \u5e0c\u671b\uff1a 1. \u81ea\u4e3b\u751f\u6210\uff0c\u81ea\u4e3b\u751f\u6210\u8bb0\u5fc6\u7684\u4e0a\u4e0b\u6587\u63cf\u8ff0\uff0c\u52a8\u6001\u5efa\u7acb\u8bb0\u5fc6\u8fde\u63a5\uff0c\u6839\u636e\u65b0\u7684\u7ecf\u9a8c\u66f4\u65b0\u8bb0\u5fc6 2. \u52a8\u6001\u7ec4\u7ec7\uff0c\u52a8\u6001\u7ed3\u6784\uff1f import torch import torch.nn as nn from sentence_transformers import SentenceTransformer from sklearn.metrics.pairwise import cosine_similarity from typing import List , Dict import json import numpy as np class AgenticMemorySystem : def __init__ ( self ): # \u521d\u59cb\u5316\u6587\u672c\u7f16\u7801\u5668\uff08\u4f7f\u7528sentence-transformers\u7684all-MiniLM-L6-v2\uff09 self . encoder = SentenceTransformer ( 'all-MiniLM-L6-v2' ) # \u8bb0\u5fc6\u5e93\u5b58\u50a8\u7ed3\u6784\uff1a\u5217\u8868\u5b58\u50a8\u8bb0\u5fc6\u8282\u70b9\u5b57\u5178 self . memory_bank = [] # \u8d85\u53c2\u6570\u8bbe\u7f6e self . top_k = 10 # \u76f8\u4f3c\u8bb0\u5fc6\u68c0\u7d22\u6570\u91cf self . sim_threshold = 0.7 # \u76f8\u4f3c\u5ea6\u9608\u503c class MemoryNode : \"\"\"\u8bb0\u5fc6\u8282\u70b9\u6570\u636e\u7ed3\u6784\u5b9a\u4e49 $$ m_i = \\{c_i, t_i, K_i, G_i, X_i, e_i, L_i\\} $$ \"\"\" def __init__ ( self , content : str , timestamp : float ): self . content = content # \u539f\u59cb\u4ea4\u4e92\u5185\u5bb9 c_i self . timestamp = timestamp # \u65f6\u95f4\u6233 t_i self . keywords = [] # \u5173\u952e\u8bcd K_i self . tags = [] # \u5206\u7c7b\u6807\u7b7e G_i self . context = \"\" # \u4e0a\u4e0b\u6587\u63cf\u8ff0 X_i self . embedding = None # \u5d4c\u5165\u5411\u91cf e_i self . links = [] # \u94fe\u63a5\u8bb0\u5fc6 L_i def _generate_note_components ( self , content : str ) -> Dict : \"\"\"\u539f\u5b50\u7b14\u8bb0\u6784\u5efa\u6a21\u5757\uff08\u6a21\u62dfLLM\u751f\u6210\u8fc7\u7a0b\uff09 \u8bba\u6587\u516c\u5f0f\uff1aK_i, G_i, X_i \u2190 LLM(c_i \u2016 t_i \u2016 P_{s1}) \"\"\" # \u5b9e\u9645\u5e94\u7528\u65f6\u66ff\u6362\u4e3a\u771f\u5b9eLLM\u8c03\u7528 return { \"keywords\" : [ \"\u4eba\u5de5\u667a\u80fd\" , \"\u8bb0\u5fc6\u7cfb\u7edf\" , \"\u795e\u7ecf\u7f51\u7edc\" ], \"tags\" : [ \"\u6280\u672f\" , \"\u673a\u5668\u5b66\u4e60\" , \"\u8ba4\u77e5\u79d1\u5b66\" ], \"context\" : \"\u8be5\u5bf9\u8bdd\u6d89\u53ca\u4eba\u5de5\u667a\u80fd\u8bb0\u5fc6\u7cfb\u7edf\u7684\u6280\u672f\u539f\u7406\u53ca\u5176\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u5e94\u7528\" } def _generate_links ( self , new_node : MemoryNode , candidates : List [ MemoryNode ]) -> List [ int ]: \"\"\"\u52a8\u6001\u94fe\u63a5\u751f\u6210\u6a21\u5757 \u8bba\u6587\u516c\u5f0f\uff1aL_i \u2190 LLM(m_n \u2016 M_{near}^n \u2016 P_{s2}) \"\"\" # \u57fa\u4e8e\u8bed\u4e49\u76f8\u4f3c\u5ea6\u548c\u89c4\u5219\u6a21\u62df\u94fe\u63a5\u751f\u6210 linked_ids = [] for candidate in candidates : if len ( linked_ids ) >= 3 : # \u6700\u5927\u94fe\u63a5\u6570\u9650\u5236 break if self . _semantic_relationship ( new_node , candidate ): linked_ids . append ( id ( candidate )) return linked_ids def _semantic_relationship ( self , node_a : MemoryNode , node_b : MemoryNode ) -> bool : \"\"\"\u8bed\u4e49\u5173\u7cfb\u5224\u65ad\uff08\u6a21\u62dfLLM\u63a8\u7406\u8fc7\u7a0b\uff09\"\"\" # \u5b9e\u9645\u5e94\u7528\u5e94\u4f7f\u7528LLM\u5224\u65ad\uff0c\u8fd9\u91cc\u7528\u5173\u952e\u8bcd\u91cd\u53e0\u6a21\u62df common_keywords = set ( node_a . keywords ) & set ( node_b . keywords ) return len ( common_keywords ) >= 1 def _update_memory_evolution ( self , new_node : MemoryNode , linked_nodes : List [ MemoryNode ]): \"\"\"\u8bb0\u5fc6\u8fdb\u5316\u66f4\u65b0\u6a21\u5757 \u8bba\u6587\u516c\u5f0f\uff1am_j^* \u2190 LLM(m_n \u2016 M_{near}^n \\ m_j \u2016 m_j \u2016 P_{s3}) \"\"\" for old_node in linked_nodes : # \u5408\u5e76\u5173\u952e\u8bcd\uff08\u53bb\u91cd\uff09 combined_keywords = list ( set ( old_node . keywords + new_node . keywords )) # \u66f4\u65b0\u4e0a\u4e0b\u6587\u63cf\u8ff0 old_node . context = f \" { old_node . context } | \u5173\u8054\u66f4\u65b0\uff1a { new_node . context [: 50 ] } \u2026\" # \u66f4\u65b0\u5d4c\u5165\u5411\u91cf\uff08\u52a0\u6743\u5e73\u5747\uff09 old_embed = old_node . embedding new_embed = new_node . embedding old_node . embedding = ( old_embed * 0.7 + new_embed * 0.3 ) / ( 0.7 + 0.3 ) def add_memory ( self , content : str ): \"\"\"\u6dfb\u52a0\u65b0\u8bb0\u5fc6\u7684\u6838\u5fc3\u6d41\u7a0b\"\"\" # 1. \u521b\u5efa\u57fa\u7840\u8bb0\u5fc6\u8282\u70b9 new_node = self . MemoryNode ( content = content , timestamp = time . time () ) # 2. \u751f\u6210\u7ed3\u6784\u5316\u5c5e\u6027\uff08\u6a21\u62dfLLM\u8fc7\u7a0b\uff09 components = self . _generate_note_components ( content ) new_node . keywords = components [ \"keywords\" ] new_node . tags = components [ \"tags\" ] new_node . context = components [ \"context\" ] # 3. \u751f\u6210\u5d4c\u5165\u5411\u91cf e_i = f_enc[concat(c_i, K_i, G_i, X_i)] text_to_encode = f \" { content } { ' ' . join ( new_node . keywords ) } { ' ' . join ( new_node . tags ) } { new_node . context } \" new_node . embedding = self . encoder . encode ( text_to_encode , convert_to_tensor = True ) # 4. \u76f8\u4f3c\u8bb0\u5fc6\u68c0\u7d22\uff08\u4f59\u5f26\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff09 if self . memory_bank : embeddings = torch . stack ([ node . embedding for node in self . memory_bank ]) sim_scores = cosine_similarity ( new_node . embedding . unsqueeze ( 0 ), embeddings ) top_k_indices = sim_scores . argsort ()[ 0 ][ - self . top_k :] candidates = [ self . memory_bank [ i ] for i in top_k_indices ] else : candidates = [] # 5. \u52a8\u6001\u94fe\u63a5\u751f\u6210 new_node . links = self . _generate_links ( new_node , candidates ) # 6. \u8bb0\u5fc6\u8fdb\u5316\u66f4\u65b0 if candidates : self . _update_memory_evolution ( new_node , candidates ) # 7. \u5b58\u5165\u8bb0\u5fc6\u5e93 self . memory_bank . append ( new_node ) def retrieve_memories ( self , query : str , k : int = 5 ) -> List [ MemoryNode ]: \"\"\"\u8bb0\u5fc6\u68c0\u7d22\u6a21\u5757 \u8bba\u6587\u516c\u5f0f\uff1aM_{retrieved} = {m_i | rank(s_{q,i}) \u2264 k} \"\"\" # \u7f16\u7801\u67e5\u8be2\u8bed\u53e5 query_embed = self . encoder . encode ( query , convert_to_tensor = True ) # \u8ba1\u7b97\u76f8\u4f3c\u5ea6 embeddings = torch . stack ([ node . embedding for node in self . memory_bank ]) sim_scores = cosine_similarity ( query_embed . unsqueeze ( 0 ), embeddings ) # \u6392\u5e8f\u5e76\u8fd4\u56deTop-k\u7ed3\u679c top_k_indices = sim_scores . argsort ()[ 0 ][ - k :] return [ self . memory_bank [ i ] for i in top_k_indices ] # \u4f7f\u7528\u793a\u4f8b if __name__ == \"__main__\" : # \u521d\u59cb\u5316\u8bb0\u5fc6\u7cfb\u7edf ams = AgenticMemorySystem () # \u6dfb\u52a0\u793a\u4f8b\u8bb0\u5fc6 ams . add_memory ( \"\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eZettelkasten\u7684\u4e3b\u52a8\u8bb0\u5fc6\u7cfb\u7edf\" ) ams . add_memory ( \"\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u7684\u8bb0\u5fc6\u673a\u5236\u9700\u8981\u52a8\u6001\u66f4\u65b0\u7b56\u7565\" ) # \u68c0\u7d22\u76f8\u5173\u8bb0\u5fc6 results = ams . retrieve_memories ( \"\u4eba\u5de5\u667a\u80fd\u8bb0\u5fc6\u7cfb\u7edf\" , k = 2 ) for node in results : print ( f \"\u5185\u5bb9\uff1a { node . content [: 50 ] } \u2026\" ) print ( f \"\u5173\u952e\u8bcd\uff1a { node . keywords } \" ) print ( f \"\u4e0a\u4e0b\u6587\uff1a { node . context [: 60 ] } \u2026 \\n \" )","title":"AMEM"},{"location":"algorithm/merkle/","text":"Merkle\u6811 \u57fa\u672c\u6982\u5ff5 \u6784\u5efa\u8fc7\u7a0b \u5173\u952e\u7279\u70b9 \u5e94\u7528\u573a\u666f \u7b97\u6cd5\u4f18\u52bf \u4e3a\u4ec0\u4e48\u53ea\u9700\u8981\u8ba1\u7b97\u5c11\u6570\u6b21\uff1f \u8ba1\u7b97\u6b21\u6570 = O(log\u2082 n) \u5e94\u7528\u573a\u666f\uff08\u9ad8\u6548\u66f4\u65b0\uff09 \u603b\u7ed3 \u5728\u533a\u5757\u94fe\u4e2d\u7684\u5e94\u7528 1. \u533a\u5757\u94fe\u7684Merkle\u6811\u7ed3\u6784\uff08\u6bcf\u4e2a\u533a\u5757\u72ec\u7acb\uff09 \u793a\u4f8b\uff1a\u6bd4\u7279\u5e01\u7684Merkle\u6811 2. \u4e3a\u4ec0\u4e48Merkle\u6811\u4e0d\u4f1a\u65e0\u9650\u589e\u957f\uff1f \uff081\uff09\u6bcf\u4e2aMerkle\u6811\u4ec5\u5305\u542b\u4e00\u4e2a\u533a\u5757\u7684\u4ea4\u6613 \uff082\uff09Merkle Root\u5199\u5165\u533a\u5757\u5934\uff0c\u56fa\u5b9a\u5927\u5c0f \uff083\uff09\u65e7\u533a\u5757\u7684Merkle\u6811\u4e0d\u4f1a\u6539\u53d8 3. \u5982\u679c\u6240\u6709\u4ea4\u6613\u5171\u7528\u4e00\u4e2aMerkle\u6811\u4f1a\u600e\u6837\uff1f 4. \u771f\u6b63\u4f1a\u201c\u53d8\u957f\u201d\u7684\u662f\u4ec0\u4e48\uff1f 5. \u4f8b\u5916\uff1a\u67d0\u4e9b\u533a\u5757\u94fe\u4f18\u5316\uff08\u5982Verkle\u6811\uff09 \u603b\u7ed3 1. \u533a\u5757\u94fe\u7684Merkle\u6811\u662f\u201c\u4e00\u6b21\u6027\u6784\u5efa\u201d\u7684 2. \u4ec0\u4e48\u60c5\u51b5\u4e0b\u80fd\u201c\u53ea\u66f4\u65b0\u90e8\u5206\u8def\u5f84\u201d\uff1f \u573a\u666f\uff1a\u8f7b\u8282\u70b9\u9a8c\u8bc1\u67d0\u7b14\u4ea4\u6613 \u793a\u4f8b\uff08\u7b80\u5316Merkle\u6811\uff09\uff1a 3. \u5982\u679c\u8981\u771f\u6b63\u5b9e\u73b0\u201c\u52a8\u6001Merkle\u6811\u201d \u6b65\u9aa4\uff1a \u4ee3\u7801\u793a\u4f8b\uff08\u4f2a\u4ee3\u7801\uff09\uff1a 4. \u4e3a\u4ec0\u4e48\u533a\u5757\u94fe\u4e0d\u8fd9\u6837\u7528\uff1f \u603b\u7ed3 \u5b9e\u73b0 1. Python \u5b9e\u73b0 \u529f\u80fd 2. C \u5b9e\u73b0 \u529f\u80fd 3. \u5173\u952e\u70b9\u603b\u7ed3 Merkle\u6811 \u00b6 Merkle\u6811\uff08Merkle Tree\uff09\uff0c\u4e5f\u79f0\u4e3a\u54c8\u5e0c\u6811\uff08Hash Tree\uff09\uff0c\u662f\u7531\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6Ralph Merkle\u57281979\u5e74\u63d0\u51fa\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e3b\u8981\u7528\u4e8e\u9ad8\u6548\u9a8c\u8bc1\u5927\u89c4\u6a21\u6570\u636e\u7684\u5b8c\u6574\u6027\u548c\u4e00\u81f4\u6027\u3002 \u57fa\u672c\u6982\u5ff5 \u00b6 Merkle\u6811\u662f\u4e00\u79cd\u4e8c\u53c9\u6811\u7ed3\u6784\uff0c\u5176\u4e2d\uff1a \u53f6\u5b50\u8282\u70b9 \uff1a\u5b58\u50a8\u6570\u636e\u5757\u7684\u54c8\u5e0c\u503c \u975e\u53f6\u5b50\u8282\u70b9 \uff1a\u5b58\u50a8\u5176\u5b50\u8282\u70b9\u54c8\u5e0c\u503c\u7ec4\u5408\u540e\u7684\u54c8\u5e0c\u503c \u6784\u5efa\u8fc7\u7a0b \u00b6 \u5c06\u6570\u636e\u5206\u5272\u6210\u591a\u4e2a\u6570\u636e\u5757\uff08\u901a\u5e38\u662f2\u7684\u5e42\u6b21\u65b9\u4e2a\uff09 \u5bf9\u6bcf\u4e2a\u6570\u636e\u5757\u8ba1\u7b97\u54c8\u5e0c\u503c\uff0c\u4f5c\u4e3a\u53f6\u5b50\u8282\u70b9 \u5c06\u76f8\u90bb\u7684\u4e24\u4e2a\u54c8\u5e0c\u503c\u7ec4\u5408\uff0c\u8ba1\u7b97\u5176\u54c8\u5e0c\u503c\u4f5c\u4e3a\u7236\u8282\u70b9 \u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u5230\u751f\u6210\u552f\u4e00\u7684\u6839\u54c8\u5e0c\u503c\uff08Merkle\u6839\uff09 \u5173\u952e\u7279\u70b9 \u00b6 \u9ad8\u6548\u9a8c\u8bc1 \uff1a\u53ef\u4ee5\u5feb\u901f\u9a8c\u8bc1\u67d0\u4e2a\u6570\u636e\u5757\u662f\u5426\u5c5e\u4e8e\u6574\u4e2a\u6570\u636e\u96c6 \u5c40\u90e8\u9a8c\u8bc1 \uff1a\u4e0d\u9700\u8981\u4e0b\u8f7d\u6574\u4e2a\u6570\u636e\u96c6\u5373\u53ef\u9a8c\u8bc1\u7279\u5b9a\u6570\u636e \u9632\u7be1\u6539 \uff1a\u4efb\u4f55\u6570\u636e\u7684\u4fee\u6539\u90fd\u4f1a\u5bfc\u81f4\u6839\u54c8\u5e0c\u503c\u53d8\u5316 \u5e94\u7528\u573a\u666f \u00b6 \u533a\u5757\u94fe\u6280\u672f \uff1a\u6bd4\u7279\u5e01\u548c\u4ee5\u592a\u574a\u7b49\u533a\u5757\u94fe\u4f7f\u7528Merkle\u6811\u9a8c\u8bc1\u4ea4\u6613 \u5206\u5e03\u5f0f\u7cfb\u7edf \uff1a\u5982IPFS\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528Merkle DAG \u7248\u672c\u63a7\u5236\u7cfb\u7edf \uff1a\u5982Git\u4f7f\u7528\u7c7b\u4f3c\u7684Merkle\u7ed3\u6784 \u8bc1\u4e66\u900f\u660e\u5ea6 \uff1a\u7528\u4e8e\u9a8c\u8bc1SSL/TLS\u8bc1\u4e66 \u7b97\u6cd5\u4f18\u52bf \u00b6 \u7a7a\u95f4\u6548\u7387\u9ad8 \u9a8c\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(log n) \u652f\u6301\u5e76\u884c\u8ba1\u7b97\u54c8\u5e0c Merkle\u6811\u662f\u73b0\u4ee3\u5bc6\u7801\u5b66\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u9a8c\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u7684\u91cd\u8981\u5de5\u5177\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u9ad8\u6548\u9a8c\u8bc1\u5927\u6570\u636e\u96c6\u5b8c\u6574\u6027\u7684\u573a\u666f\u4e2d\u8868\u73b0\u4f18\u5f02\u3002 Merkle \u6811\u7684\u4f18\u52bf\u5c31\u5728\u4e8e\u5f53\u6570\u636e\u5757\uff08\u53f6\u5b50\u8282\u70b9\uff09\u66f4\u65b0\u6216\u65b0\u589e\u65f6\uff0c \u53ea\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u53d7\u5f71\u54cd\u8def\u5f84\u4e0a\u7684\u54c8\u5e0c\u503c \uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u6574\u4e2a\u6811\uff0c\u56e0\u6b64\u6548\u7387\u5f88\u9ad8\u3002 \u4e3a\u4ec0\u4e48\u53ea\u9700\u8981\u8ba1\u7b97\u5c11\u6570\u6b21\uff1f \u00b6 Merkle \u6811\u7684\u6784\u9020\u51b3\u5b9a\u4e86\u5b83\u7684**\u5c40\u90e8\u66f4\u65b0\u7279\u6027**\uff1a 1. \u65b0\u589e/\u4fee\u6539\u4e00\u4e2a\u6570\u636e\u5757 \uff0c\u53ea\u4f1a\u5f71\u54cd\u4ece\u8be5\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u54c8\u5e0c\u503c\u3002 2. \u5176\u4ed6\u5206\u652f\u7684\u54c8\u5e0c\u503c\u4fdd\u6301\u4e0d\u53d8 \uff0c\u65e0\u9700\u91cd\u65b0\u8ba1\u7b97\u3002 \u793a\u4f8b \uff08\u5047\u8bbe\u4e00\u4e2a\u7b80\u5355\u7684 Merkle \u6811\uff09\uff1a Root (HashABCD) / \\ HashAB HashCD / \\ / \\ HashA HashB HashC HashD - \u5982\u679c \u6570\u636e\u5757 D \u88ab\u4fee\u6539\uff1a - \u53ea\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\uff1a 1. HashD \uff08\u65b0\u7684\u53f6\u5b50\u8282\u70b9\u54c8\u5e0c\uff09 2. HashCD \uff08\u65b0\u7684\u7236\u8282\u70b9\u54c8\u5e0c\uff09 3. Root = HashABCD \uff08\u65b0\u7684\u6839\u54c8\u5e0c\uff09 - \u4e0d\u9700\u8981\u91cd\u65b0\u8ba1\u7b97 HashA \u3001 HashB \u3001 HashAB \uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u53d7\u5f71\u54cd\u3002 \u8ba1\u7b97\u6b21\u6570 = O(log\u2082 n) \u00b6 \u5982\u679c Merkle \u6811\u6709 n \u4e2a\u53f6\u5b50\u8282\u70b9 \uff0c\u6811\u7684\u9ad8\u5ea6\u662f log\u2082 n \u3002 \u6bcf\u6b21\u66f4\u65b0\u53ea\u9700\u8981\u8ba1\u7b97 log\u2082 n + 1 \u6b21\u54c8\u5e0c\uff08\u4ece\u53f6\u5b50\u5230\u6839\u7684\u6240\u6709\u8def\u5f84\u8282\u70b9\uff09\u3002 \u4f8b\u5982\uff1a \u5982\u679c\u6709 1024 (2\u00b9\u2070) \u4e2a\u6570\u636e\u5757 \uff0c\u66f4\u65b0\u4e00\u4e2a\u5757\u53ea\u9700\u8981\u8ba1\u7b97 11 \u6b21\u54c8\u5e0c \uff0810 \u5c42 + \u6839\uff09\u3002 \u76f8\u6bd4\u91cd\u65b0\u8ba1\u7b97\u6240\u6709 1024 \u4e2a\u54c8\u5e0c\uff0c\u6548\u7387\u63d0\u5347\u5de8\u5927\uff01 \u5e94\u7528\u573a\u666f\uff08\u9ad8\u6548\u66f4\u65b0\uff09 \u00b6 \u533a\u5757\u94fe\uff08\u6bd4\u7279\u5e01\u3001\u4ee5\u592a\u574a\u7b49\uff09 \uff1a \u65b0\u4ea4\u6613\u52a0\u5165\u533a\u5757\u65f6\uff0c\u53ea\u9700\u66f4\u65b0 Merkle \u6811\u7684\u8def\u5f84\uff0c\u800c\u4e0d\u7528\u91cd\u65b0\u8ba1\u7b97\u6574\u4e2a\u4ea4\u6613\u5217\u8868\u7684\u54c8\u5e0c\u3002 \u6587\u4ef6\u7cfb\u7edf\uff08IPFS\u3001Git\uff09 \uff1a \u4fee\u6539\u4e00\u4e2a\u6587\u4ef6\u65f6\uff0c\u53ea\u9700\u66f4\u65b0\u53d7\u5f71\u54cd\u7684\u54c8\u5e0c\u8def\u5f84\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u5b58\u50a8\u5e93\u3002 \u5206\u5e03\u5f0f\u6570\u636e\u5e93 \uff1a \u53ef\u4ee5\u5feb\u901f\u9a8c\u8bc1\u67d0\u90e8\u5206\u6570\u636e\u662f\u5426\u88ab\u7be1\u6539\uff0c\u800c\u65e0\u9700\u4e0b\u8f7d\u6574\u4e2a\u6570\u636e\u5e93\u3002 \u603b\u7ed3 \u00b6 \u2705 \u662f\u7684\uff0cMerkle \u6811\u5728\u65b0\u52a0/\u4fee\u6539\u5757\u65f6\uff0c\u53ea\u9700\u8981\u8ba1\u7b97 log\u2082 n \u6b21\u54c8\u5e0c \uff0c\u800c\u4e0d\u662f\u5168\u90e8\u91cd\u65b0\u8ba1\u7b97\uff0c\u56e0\u6b64\u6548\u7387\u6781\u9ad8\uff01 \u2705 \u8fd9\u4f7f\u5f97\u5b83\u7279\u522b\u9002\u5408**\u52a8\u6001\u6570\u636e**\u548c**\u5927\u89c4\u6a21\u6570\u636e\u9a8c\u8bc1**\u7684\u573a\u666f\u3002 \u5728\u533a\u5757\u94fe\u4e2d\u7684\u5e94\u7528 \u00b6 Merkle\u6811\u5728\u533a\u5757\u94fe\u4e2d\u4e0d\u4f1a\u65e0\u9650\u5236\u53d8\u957f \uff0c\u56e0\u4e3a\u6bcf\u4e2a\u533a\u5757\u90fd\u6709\u81ea\u5df1\u7684\u72ec\u7acbMerkle\u6811\uff0c\u800c\u4e0d\u662f\u6240\u6709\u4ea4\u6613\u5171\u7528\u4e00\u4e2a\u4e0d\u65ad\u589e\u957f\u7684\u6811\u3002\u4e0b\u9762\u8be6\u7ec6\u89e3\u91ca\uff1a 1. \u533a\u5757\u94fe\u7684Merkle\u6811\u7ed3\u6784\uff08\u6bcf\u4e2a\u533a\u5757\u72ec\u7acb\uff09 \u00b6 \u5728\u6bd4\u7279\u5e01\u3001\u4ee5\u592a\u574a\u7b49\u533a\u5757\u94fe\u4e2d\uff1a - \u6bcf\u4e2a\u533a\u5757\u90fd\u6709\u81ea\u5df1\u7684Merkle\u6811 \uff0c\u53ea\u5305\u542b\u8be5\u533a\u5757\u7684\u4ea4\u6613\uff08\u6bd4\u59821000\u7b14\u4ea4\u6613\uff09\u3002 - Merkle\u6811\u7684\u5927\u5c0f\u4ec5\u53d6\u51b3\u4e8e\u8be5\u533a\u5757\u7684\u4ea4\u6613\u6570\u91cf \uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u533a\u5757\u94fe\u7684\u5386\u53f2\u4ea4\u6613\u3002 - \u65b0\u533a\u5757\u4e0d\u4f1a\u5f71\u54cd\u65e7\u533a\u5757\u7684Merkle\u6811 \uff0c\u56e0\u4e3a\u533a\u5757\u94fe\u662f**\u4e0d\u53ef\u53d8\u7684\uff08immutable\uff09**\u3002 \u793a\u4f8b\uff1a\u6bd4\u7279\u5e01\u7684Merkle\u6811 \u00b6 \u5047\u8bbe\u533a\u5757A\u67094\u7b14\u4ea4\u6613\uff08TX1, TX2, TX3, TX4\uff09\uff0c\u6784\u5efa\u4e00\u4e2a\u5c0f\u578bMerkle\u6811\uff1a Merkle Root (Hash1234) / \\ Hash12 Hash34 / \\ / \\ Hash1 Hash2 Hash3 Hash4 \u4e0b\u4e00\u4e2a\u533a\u5757B\u6253\u5305\u4e86\u53e6\u59163\u7b14\u4ea4\u6613\uff08TX5, TX6, TX7\uff09\uff0c\u4f1a**\u65b0\u5efa\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684Merkle\u6811**\uff1a Merkle Root (Hash567) / \\ Hash56 Hash7 / \\ | Hash5 Hash6 Hash7\uff08\u91cd\u590d\uff09 \u4e24\u4e2a\u533a\u5757\u7684Merkle\u6811\u4e92\u4e0d\u5f71\u54cd \uff0c\u4e0d\u4f1a\u5408\u5e76\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u6811\u3002 2. \u4e3a\u4ec0\u4e48Merkle\u6811\u4e0d\u4f1a\u65e0\u9650\u589e\u957f\uff1f \u00b6 \uff081\uff09\u6bcf\u4e2aMerkle\u6811\u4ec5\u5305\u542b\u4e00\u4e2a\u533a\u5757\u7684\u4ea4\u6613 \u00b6 \u5982\u679c\u533a\u5757\u5305\u542b N \u7b14\u4ea4\u6613 \uff0c\u5b83\u7684Merkle\u6811\u9ad8\u5ea6\u662f log\u2082N \uff08\u6bd4\u59821024\u7b14\u4ea4\u6613 \u2192 \u6811\u9ad810\u5c42\uff09\u3002 \u5373\u4f7f\u533a\u5757\u94fe\u8fd0\u884c10\u5e74\uff0c\u6bcf\u4e2aMerkle\u6811\u4ecd\u7136\u53ea\u8ba1\u7b97\u5f53\u524d\u533a\u5757\u7684\u4ea4\u6613 \uff0c\u4e0d\u4f1a\u7d2f\u79ef\u589e\u957f\u3002 \uff082\uff09Merkle Root\u5199\u5165\u533a\u5757\u5934\uff0c\u56fa\u5b9a\u5927\u5c0f \u00b6 \u65e0\u8bba\u533a\u5757\u5305\u542b1\u7b14\u4ea4\u6613\u8fd8\u662f10\u4e07\u7b14\u4ea4\u6613\uff0c Merkle Root\u6c38\u8fdc\u662f\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u54c8\u5e0c\u503c \uff08\u5982SHA-256\uff0c32\u5b57\u8282\uff09\u3002 \u533a\u5757\u94fe\u589e\u957f\u7684\u662f**\u533a\u5757\u6570\u91cf**\uff0c\u800c\u4e0d\u662f\u5355\u4e2aMerkle\u6811\u7684\u5927\u5c0f\u3002 \uff083\uff09\u65e7\u533a\u5757\u7684Merkle\u6811\u4e0d\u4f1a\u6539\u53d8 \u00b6 \u4e00\u65e6\u533a\u5757\u4e0a\u94fe\uff0c\u5b83\u7684Merkle\u6811\u5c31\u56fa\u5b9a\u4e86\uff0c\u540e\u7eed\u65b0\u533a\u5757\u4e0d\u4f1a\u4fee\u6539\u5b83\u3002 3. \u5982\u679c\u6240\u6709\u4ea4\u6613\u5171\u7528\u4e00\u4e2aMerkle\u6811\u4f1a\u600e\u6837\uff1f \u00b6 \u5047\u8bbe\uff08\u9519\u8bef\u60c5\u51b5\uff09\uff1a - \u5982\u679c\u533a\u5757\u94fe**\u6240\u6709\u4ea4\u6613**\u5171\u7528\u4e00\u4e2aMerkle\u6811\uff0c\u90a3\u4e48\u968f\u7740\u4ea4\u6613\u589e\u52a0\uff0c\u6811\u7684\u9ad8\u5ea6\u4f1a\u4e0d\u65ad\u589e\u957f\uff08\u6bd4\u5982100\u4e07\u7b14\u4ea4\u6613 \u2192 \u6811\u9ad820\u5c42\uff09\u3002 - \u4f46\u533a\u5757\u94fe\u4e0d\u8fd9\u6837\u8bbe\u8ba1 \uff0c\u56e0\u4e3a\uff1a 1. \u9a8c\u8bc1\u6210\u672c\u9ad8 \uff1a\u6bcf\u6b21\u65b0\u589e\u4ea4\u6613\u90fd\u8981\u8ba1\u7b97\u6574\u4e2a\u5927\u6811\u7684\u8def\u5f84\uff0c\u6548\u7387\u4f4e\u3002 2. \u4e0d\u53ef\u53d8\u6027\u88ab\u7834\u574f \uff1a\u4fee\u6539\u65e9\u671f\u4ea4\u6613\u4f1a\u5f71\u54cd\u6574\u4e2a\u6811\uff0c\u8fdd\u80cc\u533a\u5757\u94fe\u539f\u5219\u3002 3. \u5b58\u50a8\u5f00\u9500\u5927 \uff1a\u9700\u8981\u4fdd\u5b58\u6240\u6709\u5386\u53f2\u4ea4\u6613\u7684Merkle\u8282\u70b9\u3002 4. \u771f\u6b63\u4f1a\u201c\u53d8\u957f\u201d\u7684\u662f\u4ec0\u4e48\uff1f \u00b6 \u533a\u5757\u94fe\u589e\u957f\u7684\u662f**\u533a\u5757\u94fe\u5f0f\u7ed3\u6784**\uff0c\u800c\u4e0d\u662f\u5355\u4e2aMerkle\u6811\uff1a Block 1 (Merkle Root A) \u2192 Block 2 (Merkle Root B) \u2192 Block 3 (Merkle Root C) \u2192 ... - \u6bcf\u4e2a\u533a\u5757\u7684Merkle\u6811**\u72ec\u7acb\u4e14\u5927\u5c0f\u53ef\u63a7**\u3002 - \u53ea\u6709**\u533a\u5757\u5934\u94fe\uff08\u901a\u8fc7\u54c8\u5e0c\u6307\u9488\u8fde\u63a5\uff09**\u4f1a\u4e0d\u65ad\u53d8\u957f\u3002 5. \u4f8b\u5916\uff1a\u67d0\u4e9b\u533a\u5757\u94fe\u4f18\u5316\uff08\u5982Verkle\u6811\uff09 \u00b6 \u4ee5\u592a\u574a\u672a\u6765\u53ef\u80fd\u91c7\u7528**Verkle\u6811**\uff08\u57fa\u4e8e\u5411\u91cf\u627f\u8bfa\u7684Merkle\u6811\u4f18\u5316\uff09\uff0c\u4f46\u5b83\u4ecd\u7136\u662f**\u6bcf\u4e2a\u533a\u5757\u72ec\u7acb**\uff0c\u4e0d\u4f1a\u65e0\u9650\u589e\u957f\u3002 \u4e00\u4e9b**\u72b6\u6001\u6811**\uff08\u5982\u4ee5\u592a\u574a\u7684Patricia-Merkle Trie\uff09\u4f1a\u7d2f\u79ef\u72b6\u6001\uff0c\u4f46\u901a\u8fc7\u5b9a\u671f\u526a\u679d\uff08pruning\uff09\u63a7\u5236\u5927\u5c0f\u3002 \u603b\u7ed3 \u00b6 \u2705 Merkle\u6811\u5728\u533a\u5757\u94fe\u4e2d\u4e0d\u4f1a\u65e0\u9650\u53d8\u957f \uff0c\u56e0\u4e3a\uff1a 1. \u6bcf\u4e2a\u533a\u5757\u7684Merkle\u6811**\u4ec5\u5305\u542b\u5f53\u524d\u533a\u5757\u7684\u4ea4\u6613**\uff0c\u72ec\u7acb\u8ba1\u7b97\u3002 2. \u65e7\u533a\u5757\u7684Merkle\u6811**\u4e0d\u53ef\u53d8**\uff0c\u65b0\u533a\u5757\u4e0d\u4f1a\u4fee\u6539\u5b83\u3002 3. \u771f\u6b63\u589e\u957f\u7684\u662f\u533a\u5757\u94fe \uff0c\u800c\u4e0d\u662f\u5355\u4e2aMerkle\u6811\u3002 \u5982\u4f55\u7406\u89e3 \"\u65b0\u4ea4\u6613\u52a0\u5165\u533a\u5757\u65f6\uff0c\u53ea\u9700\u66f4\u65b0 Merkle \u6811\u7684\u8def\u5f84\uff0c\u800c\u4e0d\u7528\u91cd\u65b0\u8ba1\u7b97\u6574\u4e2a\u4ea4\u6613\u5217\u8868\u7684\u54c8\u5e0c\u3002\" \u533a\u5757\u94fe\u7684Merkle\u6811\u5728\u65b0\u533a\u5757\u751f\u6210\u65f6\u662f\u5168\u65b0\u6784\u5efa\u7684 \uff0c\u800c\u4e0d\u662f\u589e\u91cf\u66f4\u65b0\u5df2\u6709\u6811\u3002\u4f46\u201c\u5c40\u90e8\u66f4\u65b0\u201d\u7684\u6982\u5ff5\u4ecd\u7136\u9002\u7528\u4e8e\u67d0\u4e9b\u573a\u666f\uff08\u5982\u8f7b\u8282\u70b9\u9a8c\u8bc1\uff09\u3002\u4e0b\u9762\u6211\u4f1a\u7528\u66f4\u6e05\u6670\u7684\u4f8b\u5b50\u89e3\u91ca\uff1a 1. \u533a\u5757\u94fe\u7684Merkle\u6811\u662f\u201c\u4e00\u6b21\u6027\u6784\u5efa\u201d\u7684 \u00b6 \u5f53\u77ff\u5de5\u6253\u5305\u65b0\u533a\u5757\u65f6\uff1a 1. \u6536\u96c6\u4ea4\u6613 \uff1a\u4f8b\u59821000\u7b14\u65b0\u4ea4\u6613\uff08TX1-TX1000\uff09\u3002 2. \u6784\u5efa\u5168\u65b0\u7684Merkle\u6811 \uff1a - \u8ba1\u7b97\u6240\u6709\u4ea4\u6613\u7684\u54c8\u5e0c\u503c\uff08\u53f6\u5b50\u8282\u70b9\uff09\u3002 - \u9010\u5c42\u54c8\u5e0c\uff0c\u751f\u6210\u65b0\u7684Merkle Root\u3002 3. \u5199\u5165\u533a\u5757\u5934 \uff1aMerkle Root\u88ab\u56fa\u5b9a\uff0c\u533a\u5757\u4e0a\u94fe\u540e\u4e0d\u518d\u4fee\u6539\u3002 \u2705 \u5173\u952e\u70b9 \uff1a\u8fd9\u4e2aMerkle\u6811\u662f**\u72ec\u7acb**\u7684\uff0c\u548c\u4e4b\u524d\u533a\u5757\u7684Merkle\u6811\u65e0\u5173\u3002 2. \u4ec0\u4e48\u60c5\u51b5\u4e0b\u80fd\u201c\u53ea\u66f4\u65b0\u90e8\u5206\u8def\u5f84\u201d\uff1f \u00b6 \u867d\u7136\u533a\u5757\u94fe\u7684Merkle\u6811\u4e0d\u589e\u91cf\u66f4\u65b0\uff0c\u4f46\u5b83\u7684\u7ed3\u6784\u5141\u8bb8**\u9ad8\u6548\u9a8c\u8bc1\u5355\u7b14\u4ea4\u6613**\uff08Merkle Proof\uff09\u3002\u4f8b\u5982\uff1a \u573a\u666f\uff1a\u8f7b\u8282\u70b9\u9a8c\u8bc1\u67d0\u7b14\u4ea4\u6613 \u00b6 \u5047\u8bbe\u4f60\u60f3\u9a8c\u8bc1\u4ea4\u6613TX500\u662f\u5426\u5728Block 1000\u4e2d\u3002 \u5168\u8282\u70b9\u4e0d\u9700\u8981\u53d1\u9001\u6574\u4e2a\u533a\u5757 \uff0c\u53ea\u9700\u63d0\u4f9b\uff1a TX500\u7684\u54c8\u5e0c\u3002 \u4eceTX500\u5230Merkle Root\u7684\u8def\u5f84\u4e0a\u7684\u54c8\u5e0c\uff08\u5373Merkle Proof\uff09\u3002 \u8f7b\u8282\u70b9\u53ea\u9700\u8ba1\u7b97log\u2082N\u6b21\u54c8\u5e0c \uff08N\u662f\u4ea4\u6613\u6570\u91cf\uff09\uff0c\u5373\u53ef\u9a8c\u8bc1\u3002 \u793a\u4f8b \uff08\u7b80\u5316Merkle\u6811\uff09\uff1a \u00b6 Root (Hash1-8) / \\ Hash1-4 Hash5-8 / \\ / \\ H1-2 H3-4 H5-6 H7-8 / \\ / \\ / \\ / \\ H1 H2 H3 H4 H5 H6 H7 H8 - \u8981\u9a8c\u8bc1**H5**\u662f\u5426\u5728\u6811\u4e2d\uff0c\u5168\u8282\u70b9\u63d0\u4f9b\uff1a - H6\uff08H5\u7684\u5144\u5f1f\u8282\u70b9\uff09 - H7-8\uff08H5-6\u7684\u53d4\u7236\u8282\u70b9\uff09 - Hash1-4\uff08\u53e6\u4e00\u4fa7\u7684\u5b50\u6811\u6839\uff09 - \u8f7b\u8282\u70b9\u8ba1\u7b97\uff1a 1. Hash5-6 = Hash(H5 + H6) 2. Hash5-8 = Hash(Hash5-6 + H7-8) 3. Root = Hash(Hash1-4 + Hash5-8) - \u5982\u679c\u8ba1\u7b97\u7ed3\u679c\u4e0e\u5df2\u77e5Root\u5339\u914d\uff0c\u5219H5\u6709\u6548\u3002 \u2705 \u8fd9\u5c31\u662f\u201c\u5c40\u90e8\u66f4\u65b0\u201d\u601d\u60f3\u7684\u5b9e\u9645\u5e94\u7528 \uff1a\u53ea\u9700\u8ba1\u7b97\u8def\u5f84\u4e0a\u7684\u54c8\u5e0c\uff0c\u800c\u975e\u6574\u68f5\u6811\u3002 3. \u5982\u679c\u8981\u771f\u6b63\u5b9e\u73b0\u201c\u52a8\u6001Merkle\u6811\u201d \u00b6 \u5982\u679c\u8981\u5728**\u53ef\u53d8\u6570\u636e**\u4e2d\u5b9e\u73b0\u589e\u91cf\u66f4\u65b0\uff08\u5982\u6570\u636e\u5e93\u3001IPFS\uff09\uff0c\u9700\u8fd9\u6837\u8bbe\u8ba1\uff1a \u6b65\u9aa4\uff1a \u00b6 \u521d\u59cb\u72b6\u6001 \uff1a\u6784\u5efa\u5305\u542b\u6240\u6709\u6570\u636e\u7684Merkle\u6811\u3002 \u65b0\u589e\u6570\u636e \uff1a \u6dfb\u52a0\u65b0\u53f6\u5b50\u8282\u70b9\u3002 \u91cd\u65b0\u8ba1\u7b97\u4ece\u8be5\u53f6\u5b50\u5230\u6839\u7684\u8def\u5f84\u54c8\u5e0c\u3002 \u5176\u4ed6\u5206\u652f\u4fdd\u6301\u4e0d\u53d8\u3002 \u4fee\u6539\u6570\u636e \uff1a \u66f4\u65b0\u5bf9\u5e94\u53f6\u5b50\u8282\u70b9\u7684\u54c8\u5e0c\u3002 \u91cd\u65b0\u8ba1\u7b97\u5176\u5230\u6839\u7684\u8def\u5f84\u3002 \u4ee3\u7801\u793a\u4f8b\uff08\u4f2a\u4ee3\u7801\uff09 \uff1a \u00b6 class MerkleTree : def __init__ ( self , data ): self . leaves = [ hash ( d ) for d in data ] self . tree = self . build_tree ( self . leaves ) def build_tree ( self , leaves ): # \u9012\u5f52\u6784\u5efaMerkle\u6811 ... def update ( self , index , new_data ): # 1. \u66f4\u65b0\u53f6\u5b50\u8282\u70b9 self . leaves [ index ] = hash ( new_data ) # 2. \u91cd\u65b0\u8ba1\u7b97\u8def\u5f84\u54c8\u5e0c current_index = index while current_index > 0 : sibling_index = current_index - 1 if current_index % 2 == 1 else current_index + 1 parent_index = current_index // 2 # \u91cd\u65b0\u8ba1\u7b97\u7236\u8282\u70b9\u54c8\u5e0c self . tree [ parent_index ] = hash ( self . tree [ current_index ] + self . tree [ sibling_index ]) current_index = parent_index 4. \u4e3a\u4ec0\u4e48\u533a\u5757\u94fe\u4e0d\u8fd9\u6837\u7528\uff1f \u00b6 \u4e0d\u53ef\u53d8\u6027 \uff1a\u533a\u5757\u94fe\u8981\u6c42\u5386\u53f2\u6570\u636e\u4e0d\u53ef\u4fee\u6539\uff0c\u56e0\u6b64\u6bcf\u4e2a\u533a\u5757\u7684Merkle\u6811\u5fc5\u987b\u56fa\u5b9a\u3002 \u6027\u80fd \uff1a\u65b0\u533a\u5757\u6253\u5305\u65f6\uff0c\u5168\u91cf\u8ba1\u7b97Merkle\u6811\u6bd4\u589e\u91cf\u66f4\u65b0\u66f4\u7b80\u5355\uff08\u4ea4\u6613\u5217\u8868\u5df2\u77e5\uff0c\u5e76\u884c\u54c8\u5e0c\u8ba1\u7b97\u5feb\uff09\u3002 \u603b\u7ed3 \u00b6 \u573a\u666f \u662f\u5426\u589e\u91cf\u66f4\u65b0Merkle\u6811\uff1f \u539f\u56e0 \u5178\u578b\u6848\u4f8b \u533a\u5757\u94fe\u65b0\u533a\u5757 \u274c \u5168\u91cf\u91cd\u5efa \u533a\u5757\u6570\u636e\u4e0d\u53ef\u53d8 \u6bd4\u7279\u5e01\u3001\u4ee5\u592a\u574a \u4ea4\u6613\u9a8c\u8bc1 \u2705 \u5c40\u90e8\u8ba1\u7b97\u8def\u5f84 \u9ad8\u6548\u9a8c\u8bc1\u5355\u7b14\u4ea4\u6613 SPV\u8f7b\u94b1\u5305 \u53ef\u53d8\u6570\u636e\u7cfb\u7edf \u2705 \u589e\u91cf\u66f4\u65b0 \u652f\u6301\u52a8\u6001\u4fee\u6539 IPFS, Git \u5e0c\u671b\u8fd9\u4e2a\u89e3\u91ca\u80fd\u8ba9\u4f60\u5f7b\u5e95\u7406\u89e3\uff01\u5173\u952e\u70b9\u662f\uff1a 1. \u533a\u5757\u94fe\u7684Merkle\u6811\u662f\u533a\u5757\u7ea7\u522b\u7684\uff0c\u4e0d\u662f\u5168\u5c40\u7684 \u3002 2. \u201c\u5c40\u90e8\u66f4\u65b0\u201d\u601d\u60f3\u4e3b\u8981\u7528\u4e8e**\u9a8c\u8bc1**\u800c\u975e\u5b58\u50a8\u3002 3. \u771f\u6b63\u7684\u52a8\u6001Merkle\u6811\u9700\u8981\u8bbe\u8ba1\u53ef\u53d8\u6570\u636e\u7ed3\u6784\u3002 \u5b9e\u73b0 \u00b6 \u4ee5\u4e0b\u662f\u4f7f\u7528 Python \u548c C \u5b9e\u73b0\u7684 Merkle\u6811\uff08Merkle Tree\uff09 \u6784\u5efa\u7b97\u6cd5\uff0c\u5305\u542b\u8be6\u7ec6\u7684\u4ee3\u7801\u6ce8\u91ca\u548c\u793a\u4f8b\u3002 1. Python \u5b9e\u73b0 \u00b6 \u529f\u80fd \u00b6 \u6784\u5efa Merkle \u6811 \u8ba1\u7b97 Merkle Root \u751f\u6210 Merkle Proof\uff08\u7528\u4e8e\u9a8c\u8bc1\u67d0\u4e2a\u53f6\u5b50\u8282\u70b9\uff09 import hashlib def sha256 ( data ): \"\"\"\u8ba1\u7b97SHA-256\u54c8\u5e0c\u503c\"\"\" return hashlib . sha256 ( data . encode ( 'utf-8' )) . hexdigest () class MerkleTree : def __init__ ( self , transactions ): \"\"\"\u521d\u59cb\u5316Merkle\u6811\"\"\" self . transactions = transactions self . levels = [] # \u5b58\u50a8\u6811\u7684\u6bcf\u4e00\u5c42 self . build_tree () def build_tree ( self ): \"\"\"\u6784\u5efaMerkle\u6811\"\"\" if not self . transactions : return \"\" # 1. \u8ba1\u7b97\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u54c8\u5e0c leaves = [ sha256 ( tx ) for tx in self . transactions ] self . levels . append ( leaves ) # 2. \u9010\u5c42\u8ba1\u7b97\u7236\u8282\u70b9\u54c8\u5e0c while len ( leaves ) > 1 : # \u5982\u679c\u53f6\u5b50\u8282\u70b9\u6570\u91cf\u4e3a\u5947\u6570\uff0c\u590d\u5236\u6700\u540e\u4e00\u4e2a\u8282\u70b9 if len ( leaves ) % 2 != 0 : leaves . append ( leaves [ - 1 ]) # \u8ba1\u7b97\u7236\u5c42\u54c8\u5e0c parents = [] for i in range ( 0 , len ( leaves ), 2 ): left = leaves [ i ] right = leaves [ i + 1 ] parent = sha256 ( left + right ) parents . append ( parent ) self . levels . append ( parents ) leaves = parents def get_merkle_root ( self ): \"\"\"\u8fd4\u56deMerkle\u6839\"\"\" return self . levels [ - 1 ][ 0 ] if self . levels else \"\" def get_merkle_proof ( self , index ): \"\"\"\u83b7\u53d6\u67d0\u4e2a\u53f6\u5b50\u8282\u70b9\u7684Merkle Proof\uff08\u7528\u4e8e\u9a8c\u8bc1\uff09\"\"\" proof = [] if index >= len ( self . levels [ 0 ]): return proof for level in self . levels [: - 1 ]: # \u627e\u5230\u5f53\u524d\u8282\u70b9\u7684\u5144\u5f1f\u8282\u70b9 if index % 2 == 0 : sibling = level [ index + 1 ] if index + 1 < len ( level ) else level [ index ] else : sibling = level [ index - 1 ] proof . append ( sibling ) index = index // 2 # \u5411\u4e0a\u79fb\u52a8\u5230\u7236\u5c42 return proof # \u793a\u4f8b if __name__ == \"__main__\" : transactions = [ \"TX1\" , \"TX2\" , \"TX3\" , \"TX4\" ] merkle_tree = MerkleTree ( transactions ) print ( \"Merkle Root:\" , merkle_tree . get_merkle_root ()) print ( \"Merkle Proof for TX1:\" , merkle_tree . get_merkle_proof ( 0 )) \u8f93\u51fa\u793a\u4f8b \uff1a Merkle Root: 8a7b8e3d2e1f4c5d6a7b8e3d2e1f4c5d6a7b8e3d2e1f4c5d6a7b8e3d2e1f4c5d Merkle Proof for TX1: ['hash(TX2)', 'hash(hash(TX3)+hash(TX4))'] 2. C \u5b9e\u73b0 \u00b6 \u529f\u80fd \u00b6 \u4f7f\u7528 OpenSSL \u7684 SHA-256 \u8ba1\u7b97\u54c8\u5e0c \u6784\u5efa Merkle \u6811\u5e76\u8ba1\u7b97 Merkle Root #include <stdio.h> #include <stdlib.h> #include <string.h> #include <openssl/sha.h> #define MAX_TX 1000 // \u8ba1\u7b97SHA-256\u54c8\u5e0c void sha256 ( const char * str , unsigned char * output ) { SHA256_CTX ctx ; SHA256_Init ( & ctx ); SHA256_Update ( & ctx , str , strlen ( str )); SHA256_Final ( output , & ctx ); } // \u6253\u5370\u54c8\u5e0c\uff08\u5341\u516d\u8fdb\u5236\uff09 void print_hash ( unsigned char * hash ) { for ( int i = 0 ; i < SHA256_DIGEST_LENGTH ; i ++ ) { printf ( \"%02x\" , hash [ i ]); } printf ( \" \\n \" ); } // Merkle\u6811\u7ed3\u6784 typedef struct { unsigned char hashes [ MAX_TX ][ SHA256_DIGEST_LENGTH ]; int count ; } MerkleLevel ; // \u6784\u5efaMerkle\u6811 void build_merkle_tree ( const char * transactions [], int tx_count , unsigned char * merkle_root ) { if ( tx_count == 0 ) return ; MerkleLevel levels [ 20 ]; // \u5047\u8bbe\u6700\u591a20\u5c42 int level_count = 0 ; // 1. \u8ba1\u7b97\u53f6\u5b50\u8282\u70b9\u54c8\u5e0c for ( int i = 0 ; i < tx_count ; i ++ ) { sha256 ( transactions [ i ], levels [ 0 ]. hashes [ i ]); } levels [ 0 ]. count = tx_count ; level_count ++ ; // 2. \u9010\u5c42\u8ba1\u7b97\u7236\u8282\u70b9 while ( levels [ level_count - 1 ]. count > 1 ) { int current_count = levels [ level_count - 1 ]. count ; int parent_count = ( current_count + 1 ) / 2 ; // \u5904\u7406\u5947\u6570\u60c5\u51b5 for ( int i = 0 ; i < parent_count ; i ++ ) { int left = 2 * i ; int right = ( 2 * i + 1 < current_count ) ? 2 * i + 1 : left ; // \u5904\u7406\u5947\u6570\u60c5\u51b5 char combined [ 2 * SHA256_DIGEST_LENGTH ]; memcpy ( combined , levels [ level_count - 1 ]. hashes [ left ], SHA256_DIGEST_LENGTH ); memcpy ( combined + SHA256_DIGEST_LENGTH , levels [ level_count - 1 ]. hashes [ right ], SHA256_DIGEST_LENGTH ); sha256 ( combined , levels [ level_count ]. hashes [ i ]); } levels [ level_count ]. count = parent_count ; level_count ++ ; } // 3. \u8fd4\u56deMerkle Root memcpy ( merkle_root , levels [ level_count - 1 ]. hashes [ 0 ], SHA256_DIGEST_LENGTH ); } int main () { const char * transactions [] = { \"TX1\" , \"TX2\" , \"TX3\" , \"TX4\" }; int tx_count = 4 ; unsigned char merkle_root [ SHA256_DIGEST_LENGTH ]; build_merkle_tree ( transactions , tx_count , merkle_root ); printf ( \"Merkle Root: \" ); print_hash ( merkle_root ); return 0 ; } \u7f16\u8bd1 & \u8fd0\u884c \uff08\u9700\u5b89\u88c5 OpenSSL\uff09\uff1a gcc merkle_tree.c -o merkle_tree -lcrypto ./merkle_tree \u8f93\u51fa\u793a\u4f8b \uff1a Merkle Root: 8a7b8e3d2e1f4c5d6a7b8e3d2e1f4c5d6a7b8e3d2e1f4c5d6a7b8e3d2e1f4c5d 3. \u5173\u952e\u70b9\u603b\u7ed3 \u00b6 Merkle\u6811\u6784\u5efa\u6b65\u9aa4 \uff1a \u8ba1\u7b97\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u54c8\u5e0c\u3002 \u9010\u5c42\u4e24\u4e24\u54c8\u5e0c\uff0c\u76f4\u5230\u751f\u6210\u552f\u4e00\u7684 Merkle Root\u3002 Python vs C \uff1a Python \u66f4\u7b80\u6d01\uff0c\u9002\u5408\u5feb\u901f\u5b9e\u73b0\u3002 C \u66f4\u9ad8\u6548\uff0c\u9002\u5408\u5d4c\u5165\u5f0f\u6216\u9ad8\u6027\u80fd\u573a\u666f\uff08\u5982\u533a\u5757\u94fe\u8282\u70b9\uff09\u3002 \u5b9e\u9645\u5e94\u7528 \uff1a \u6bd4\u7279\u5e01/\u4ee5\u592a\u574a\u7528 Merkle \u6811\u9a8c\u8bc1\u4ea4\u6613\u3002 IPFS/Git \u7528 Merkle DAG \u7ba1\u7406\u6587\u4ef6\u7248\u672c\u3002 \u8981\u6b63\u786e\u751f\u6210\u6216\u9a8c\u8bc1 Merkle Proof\uff0c\u5fc5\u987b\u77e5\u9053\u76ee\u6807\u8282\u70b9\u7684\u4f4d\u7f6e\uff08\u7d22\u5f15\uff09\u548c\u5144\u5f1f\u8282\u70b9\u7684\u987a\u5e8f\u5173\u7cfb\uff0c\u5426\u5219\u65e0\u6cd5\u6b63\u786e\u8ba1\u7b97\u8def\u5f84\u54c8\u5e0c","title":"Merkle"},{"location":"algorithm/merkle/#merkle","text":"Merkle\u6811\uff08Merkle Tree\uff09\uff0c\u4e5f\u79f0\u4e3a\u54c8\u5e0c\u6811\uff08Hash Tree\uff09\uff0c\u662f\u7531\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6Ralph Merkle\u57281979\u5e74\u63d0\u51fa\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e3b\u8981\u7528\u4e8e\u9ad8\u6548\u9a8c\u8bc1\u5927\u89c4\u6a21\u6570\u636e\u7684\u5b8c\u6574\u6027\u548c\u4e00\u81f4\u6027\u3002","title":"Merkle\u6811"},{"location":"algorithm/merkle/#_1","text":"Merkle\u6811\u662f\u4e00\u79cd\u4e8c\u53c9\u6811\u7ed3\u6784\uff0c\u5176\u4e2d\uff1a \u53f6\u5b50\u8282\u70b9 \uff1a\u5b58\u50a8\u6570\u636e\u5757\u7684\u54c8\u5e0c\u503c \u975e\u53f6\u5b50\u8282\u70b9 \uff1a\u5b58\u50a8\u5176\u5b50\u8282\u70b9\u54c8\u5e0c\u503c\u7ec4\u5408\u540e\u7684\u54c8\u5e0c\u503c","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"algorithm/merkle/#_2","text":"\u5c06\u6570\u636e\u5206\u5272\u6210\u591a\u4e2a\u6570\u636e\u5757\uff08\u901a\u5e38\u662f2\u7684\u5e42\u6b21\u65b9\u4e2a\uff09 \u5bf9\u6bcf\u4e2a\u6570\u636e\u5757\u8ba1\u7b97\u54c8\u5e0c\u503c\uff0c\u4f5c\u4e3a\u53f6\u5b50\u8282\u70b9 \u5c06\u76f8\u90bb\u7684\u4e24\u4e2a\u54c8\u5e0c\u503c\u7ec4\u5408\uff0c\u8ba1\u7b97\u5176\u54c8\u5e0c\u503c\u4f5c\u4e3a\u7236\u8282\u70b9 \u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u5230\u751f\u6210\u552f\u4e00\u7684\u6839\u54c8\u5e0c\u503c\uff08Merkle\u6839\uff09","title":"\u6784\u5efa\u8fc7\u7a0b"},{"location":"algorithm/merkle/#_3","text":"\u9ad8\u6548\u9a8c\u8bc1 \uff1a\u53ef\u4ee5\u5feb\u901f\u9a8c\u8bc1\u67d0\u4e2a\u6570\u636e\u5757\u662f\u5426\u5c5e\u4e8e\u6574\u4e2a\u6570\u636e\u96c6 \u5c40\u90e8\u9a8c\u8bc1 \uff1a\u4e0d\u9700\u8981\u4e0b\u8f7d\u6574\u4e2a\u6570\u636e\u96c6\u5373\u53ef\u9a8c\u8bc1\u7279\u5b9a\u6570\u636e \u9632\u7be1\u6539 \uff1a\u4efb\u4f55\u6570\u636e\u7684\u4fee\u6539\u90fd\u4f1a\u5bfc\u81f4\u6839\u54c8\u5e0c\u503c\u53d8\u5316","title":"\u5173\u952e\u7279\u70b9"},{"location":"algorithm/merkle/#_4","text":"\u533a\u5757\u94fe\u6280\u672f \uff1a\u6bd4\u7279\u5e01\u548c\u4ee5\u592a\u574a\u7b49\u533a\u5757\u94fe\u4f7f\u7528Merkle\u6811\u9a8c\u8bc1\u4ea4\u6613 \u5206\u5e03\u5f0f\u7cfb\u7edf \uff1a\u5982IPFS\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528Merkle DAG \u7248\u672c\u63a7\u5236\u7cfb\u7edf \uff1a\u5982Git\u4f7f\u7528\u7c7b\u4f3c\u7684Merkle\u7ed3\u6784 \u8bc1\u4e66\u900f\u660e\u5ea6 \uff1a\u7528\u4e8e\u9a8c\u8bc1SSL/TLS\u8bc1\u4e66","title":"\u5e94\u7528\u573a\u666f"},{"location":"algorithm/merkle/#_5","text":"\u7a7a\u95f4\u6548\u7387\u9ad8 \u9a8c\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(log n) \u652f\u6301\u5e76\u884c\u8ba1\u7b97\u54c8\u5e0c Merkle\u6811\u662f\u73b0\u4ee3\u5bc6\u7801\u5b66\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u9a8c\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u7684\u91cd\u8981\u5de5\u5177\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u9ad8\u6548\u9a8c\u8bc1\u5927\u6570\u636e\u96c6\u5b8c\u6574\u6027\u7684\u573a\u666f\u4e2d\u8868\u73b0\u4f18\u5f02\u3002 Merkle \u6811\u7684\u4f18\u52bf\u5c31\u5728\u4e8e\u5f53\u6570\u636e\u5757\uff08\u53f6\u5b50\u8282\u70b9\uff09\u66f4\u65b0\u6216\u65b0\u589e\u65f6\uff0c \u53ea\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u53d7\u5f71\u54cd\u8def\u5f84\u4e0a\u7684\u54c8\u5e0c\u503c \uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u6574\u4e2a\u6811\uff0c\u56e0\u6b64\u6548\u7387\u5f88\u9ad8\u3002","title":"\u7b97\u6cd5\u4f18\u52bf"},{"location":"algorithm/merkle/#_6","text":"Merkle \u6811\u7684\u6784\u9020\u51b3\u5b9a\u4e86\u5b83\u7684**\u5c40\u90e8\u66f4\u65b0\u7279\u6027**\uff1a 1. \u65b0\u589e/\u4fee\u6539\u4e00\u4e2a\u6570\u636e\u5757 \uff0c\u53ea\u4f1a\u5f71\u54cd\u4ece\u8be5\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u54c8\u5e0c\u503c\u3002 2. \u5176\u4ed6\u5206\u652f\u7684\u54c8\u5e0c\u503c\u4fdd\u6301\u4e0d\u53d8 \uff0c\u65e0\u9700\u91cd\u65b0\u8ba1\u7b97\u3002 \u793a\u4f8b \uff08\u5047\u8bbe\u4e00\u4e2a\u7b80\u5355\u7684 Merkle \u6811\uff09\uff1a Root (HashABCD) / \\ HashAB HashCD / \\ / \\ HashA HashB HashC HashD - \u5982\u679c \u6570\u636e\u5757 D \u88ab\u4fee\u6539\uff1a - \u53ea\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\uff1a 1. HashD \uff08\u65b0\u7684\u53f6\u5b50\u8282\u70b9\u54c8\u5e0c\uff09 2. HashCD \uff08\u65b0\u7684\u7236\u8282\u70b9\u54c8\u5e0c\uff09 3. Root = HashABCD \uff08\u65b0\u7684\u6839\u54c8\u5e0c\uff09 - \u4e0d\u9700\u8981\u91cd\u65b0\u8ba1\u7b97 HashA \u3001 HashB \u3001 HashAB \uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u53d7\u5f71\u54cd\u3002","title":"\u4e3a\u4ec0\u4e48\u53ea\u9700\u8981\u8ba1\u7b97\u5c11\u6570\u6b21\uff1f"},{"location":"algorithm/merkle/#olog2-n","text":"\u5982\u679c Merkle \u6811\u6709 n \u4e2a\u53f6\u5b50\u8282\u70b9 \uff0c\u6811\u7684\u9ad8\u5ea6\u662f log\u2082 n \u3002 \u6bcf\u6b21\u66f4\u65b0\u53ea\u9700\u8981\u8ba1\u7b97 log\u2082 n + 1 \u6b21\u54c8\u5e0c\uff08\u4ece\u53f6\u5b50\u5230\u6839\u7684\u6240\u6709\u8def\u5f84\u8282\u70b9\uff09\u3002 \u4f8b\u5982\uff1a \u5982\u679c\u6709 1024 (2\u00b9\u2070) \u4e2a\u6570\u636e\u5757 \uff0c\u66f4\u65b0\u4e00\u4e2a\u5757\u53ea\u9700\u8981\u8ba1\u7b97 11 \u6b21\u54c8\u5e0c \uff0810 \u5c42 + \u6839\uff09\u3002 \u76f8\u6bd4\u91cd\u65b0\u8ba1\u7b97\u6240\u6709 1024 \u4e2a\u54c8\u5e0c\uff0c\u6548\u7387\u63d0\u5347\u5de8\u5927\uff01","title":"\u8ba1\u7b97\u6b21\u6570 = O(log\u2082 n)"},{"location":"algorithm/merkle/#_7","text":"\u533a\u5757\u94fe\uff08\u6bd4\u7279\u5e01\u3001\u4ee5\u592a\u574a\u7b49\uff09 \uff1a \u65b0\u4ea4\u6613\u52a0\u5165\u533a\u5757\u65f6\uff0c\u53ea\u9700\u66f4\u65b0 Merkle \u6811\u7684\u8def\u5f84\uff0c\u800c\u4e0d\u7528\u91cd\u65b0\u8ba1\u7b97\u6574\u4e2a\u4ea4\u6613\u5217\u8868\u7684\u54c8\u5e0c\u3002 \u6587\u4ef6\u7cfb\u7edf\uff08IPFS\u3001Git\uff09 \uff1a \u4fee\u6539\u4e00\u4e2a\u6587\u4ef6\u65f6\uff0c\u53ea\u9700\u66f4\u65b0\u53d7\u5f71\u54cd\u7684\u54c8\u5e0c\u8def\u5f84\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u5b58\u50a8\u5e93\u3002 \u5206\u5e03\u5f0f\u6570\u636e\u5e93 \uff1a \u53ef\u4ee5\u5feb\u901f\u9a8c\u8bc1\u67d0\u90e8\u5206\u6570\u636e\u662f\u5426\u88ab\u7be1\u6539\uff0c\u800c\u65e0\u9700\u4e0b\u8f7d\u6574\u4e2a\u6570\u636e\u5e93\u3002","title":"\u5e94\u7528\u573a\u666f\uff08\u9ad8\u6548\u66f4\u65b0\uff09"},{"location":"algorithm/merkle/#_8","text":"\u2705 \u662f\u7684\uff0cMerkle \u6811\u5728\u65b0\u52a0/\u4fee\u6539\u5757\u65f6\uff0c\u53ea\u9700\u8981\u8ba1\u7b97 log\u2082 n \u6b21\u54c8\u5e0c \uff0c\u800c\u4e0d\u662f\u5168\u90e8\u91cd\u65b0\u8ba1\u7b97\uff0c\u56e0\u6b64\u6548\u7387\u6781\u9ad8\uff01 \u2705 \u8fd9\u4f7f\u5f97\u5b83\u7279\u522b\u9002\u5408**\u52a8\u6001\u6570\u636e**\u548c**\u5927\u89c4\u6a21\u6570\u636e\u9a8c\u8bc1**\u7684\u573a\u666f\u3002","title":"\u603b\u7ed3"},{"location":"algorithm/merkle/#_9","text":"Merkle\u6811\u5728\u533a\u5757\u94fe\u4e2d\u4e0d\u4f1a\u65e0\u9650\u5236\u53d8\u957f \uff0c\u56e0\u4e3a\u6bcf\u4e2a\u533a\u5757\u90fd\u6709\u81ea\u5df1\u7684\u72ec\u7acbMerkle\u6811\uff0c\u800c\u4e0d\u662f\u6240\u6709\u4ea4\u6613\u5171\u7528\u4e00\u4e2a\u4e0d\u65ad\u589e\u957f\u7684\u6811\u3002\u4e0b\u9762\u8be6\u7ec6\u89e3\u91ca\uff1a","title":"\u5728\u533a\u5757\u94fe\u4e2d\u7684\u5e94\u7528"},{"location":"algorithm/merkle/#1-merkle","text":"\u5728\u6bd4\u7279\u5e01\u3001\u4ee5\u592a\u574a\u7b49\u533a\u5757\u94fe\u4e2d\uff1a - \u6bcf\u4e2a\u533a\u5757\u90fd\u6709\u81ea\u5df1\u7684Merkle\u6811 \uff0c\u53ea\u5305\u542b\u8be5\u533a\u5757\u7684\u4ea4\u6613\uff08\u6bd4\u59821000\u7b14\u4ea4\u6613\uff09\u3002 - Merkle\u6811\u7684\u5927\u5c0f\u4ec5\u53d6\u51b3\u4e8e\u8be5\u533a\u5757\u7684\u4ea4\u6613\u6570\u91cf \uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u533a\u5757\u94fe\u7684\u5386\u53f2\u4ea4\u6613\u3002 - \u65b0\u533a\u5757\u4e0d\u4f1a\u5f71\u54cd\u65e7\u533a\u5757\u7684Merkle\u6811 \uff0c\u56e0\u4e3a\u533a\u5757\u94fe\u662f**\u4e0d\u53ef\u53d8\u7684\uff08immutable\uff09**\u3002","title":"1. \u533a\u5757\u94fe\u7684Merkle\u6811\u7ed3\u6784\uff08\u6bcf\u4e2a\u533a\u5757\u72ec\u7acb\uff09"},{"location":"algorithm/merkle/#merkle_1","text":"\u5047\u8bbe\u533a\u5757A\u67094\u7b14\u4ea4\u6613\uff08TX1, TX2, TX3, TX4\uff09\uff0c\u6784\u5efa\u4e00\u4e2a\u5c0f\u578bMerkle\u6811\uff1a Merkle Root (Hash1234) / \\ Hash12 Hash34 / \\ / \\ Hash1 Hash2 Hash3 Hash4 \u4e0b\u4e00\u4e2a\u533a\u5757B\u6253\u5305\u4e86\u53e6\u59163\u7b14\u4ea4\u6613\uff08TX5, TX6, TX7\uff09\uff0c\u4f1a**\u65b0\u5efa\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684Merkle\u6811**\uff1a Merkle Root (Hash567) / \\ Hash56 Hash7 / \\ | Hash5 Hash6 Hash7\uff08\u91cd\u590d\uff09 \u4e24\u4e2a\u533a\u5757\u7684Merkle\u6811\u4e92\u4e0d\u5f71\u54cd \uff0c\u4e0d\u4f1a\u5408\u5e76\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u6811\u3002","title":"\u793a\u4f8b\uff1a\u6bd4\u7279\u5e01\u7684Merkle\u6811"},{"location":"algorithm/merkle/#2-merkle","text":"","title":"2. \u4e3a\u4ec0\u4e48Merkle\u6811\u4e0d\u4f1a\u65e0\u9650\u589e\u957f\uff1f"},{"location":"algorithm/merkle/#1merkle","text":"\u5982\u679c\u533a\u5757\u5305\u542b N \u7b14\u4ea4\u6613 \uff0c\u5b83\u7684Merkle\u6811\u9ad8\u5ea6\u662f log\u2082N \uff08\u6bd4\u59821024\u7b14\u4ea4\u6613 \u2192 \u6811\u9ad810\u5c42\uff09\u3002 \u5373\u4f7f\u533a\u5757\u94fe\u8fd0\u884c10\u5e74\uff0c\u6bcf\u4e2aMerkle\u6811\u4ecd\u7136\u53ea\u8ba1\u7b97\u5f53\u524d\u533a\u5757\u7684\u4ea4\u6613 \uff0c\u4e0d\u4f1a\u7d2f\u79ef\u589e\u957f\u3002","title":"\uff081\uff09\u6bcf\u4e2aMerkle\u6811\u4ec5\u5305\u542b\u4e00\u4e2a\u533a\u5757\u7684\u4ea4\u6613"},{"location":"algorithm/merkle/#2merkle-root","text":"\u65e0\u8bba\u533a\u5757\u5305\u542b1\u7b14\u4ea4\u6613\u8fd8\u662f10\u4e07\u7b14\u4ea4\u6613\uff0c Merkle Root\u6c38\u8fdc\u662f\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u54c8\u5e0c\u503c \uff08\u5982SHA-256\uff0c32\u5b57\u8282\uff09\u3002 \u533a\u5757\u94fe\u589e\u957f\u7684\u662f**\u533a\u5757\u6570\u91cf**\uff0c\u800c\u4e0d\u662f\u5355\u4e2aMerkle\u6811\u7684\u5927\u5c0f\u3002","title":"\uff082\uff09Merkle Root\u5199\u5165\u533a\u5757\u5934\uff0c\u56fa\u5b9a\u5927\u5c0f"},{"location":"algorithm/merkle/#3merkle","text":"\u4e00\u65e6\u533a\u5757\u4e0a\u94fe\uff0c\u5b83\u7684Merkle\u6811\u5c31\u56fa\u5b9a\u4e86\uff0c\u540e\u7eed\u65b0\u533a\u5757\u4e0d\u4f1a\u4fee\u6539\u5b83\u3002","title":"\uff083\uff09\u65e7\u533a\u5757\u7684Merkle\u6811\u4e0d\u4f1a\u6539\u53d8"},{"location":"algorithm/merkle/#3-merkle","text":"\u5047\u8bbe\uff08\u9519\u8bef\u60c5\u51b5\uff09\uff1a - \u5982\u679c\u533a\u5757\u94fe**\u6240\u6709\u4ea4\u6613**\u5171\u7528\u4e00\u4e2aMerkle\u6811\uff0c\u90a3\u4e48\u968f\u7740\u4ea4\u6613\u589e\u52a0\uff0c\u6811\u7684\u9ad8\u5ea6\u4f1a\u4e0d\u65ad\u589e\u957f\uff08\u6bd4\u5982100\u4e07\u7b14\u4ea4\u6613 \u2192 \u6811\u9ad820\u5c42\uff09\u3002 - \u4f46\u533a\u5757\u94fe\u4e0d\u8fd9\u6837\u8bbe\u8ba1 \uff0c\u56e0\u4e3a\uff1a 1. \u9a8c\u8bc1\u6210\u672c\u9ad8 \uff1a\u6bcf\u6b21\u65b0\u589e\u4ea4\u6613\u90fd\u8981\u8ba1\u7b97\u6574\u4e2a\u5927\u6811\u7684\u8def\u5f84\uff0c\u6548\u7387\u4f4e\u3002 2. \u4e0d\u53ef\u53d8\u6027\u88ab\u7834\u574f \uff1a\u4fee\u6539\u65e9\u671f\u4ea4\u6613\u4f1a\u5f71\u54cd\u6574\u4e2a\u6811\uff0c\u8fdd\u80cc\u533a\u5757\u94fe\u539f\u5219\u3002 3. \u5b58\u50a8\u5f00\u9500\u5927 \uff1a\u9700\u8981\u4fdd\u5b58\u6240\u6709\u5386\u53f2\u4ea4\u6613\u7684Merkle\u8282\u70b9\u3002","title":"3. \u5982\u679c\u6240\u6709\u4ea4\u6613\u5171\u7528\u4e00\u4e2aMerkle\u6811\u4f1a\u600e\u6837\uff1f"},{"location":"algorithm/merkle/#4","text":"\u533a\u5757\u94fe\u589e\u957f\u7684\u662f**\u533a\u5757\u94fe\u5f0f\u7ed3\u6784**\uff0c\u800c\u4e0d\u662f\u5355\u4e2aMerkle\u6811\uff1a Block 1 (Merkle Root A) \u2192 Block 2 (Merkle Root B) \u2192 Block 3 (Merkle Root C) \u2192 ... - \u6bcf\u4e2a\u533a\u5757\u7684Merkle\u6811**\u72ec\u7acb\u4e14\u5927\u5c0f\u53ef\u63a7**\u3002 - \u53ea\u6709**\u533a\u5757\u5934\u94fe\uff08\u901a\u8fc7\u54c8\u5e0c\u6307\u9488\u8fde\u63a5\uff09**\u4f1a\u4e0d\u65ad\u53d8\u957f\u3002","title":"4. \u771f\u6b63\u4f1a\u201c\u53d8\u957f\u201d\u7684\u662f\u4ec0\u4e48\uff1f"},{"location":"algorithm/merkle/#5-verkle","text":"\u4ee5\u592a\u574a\u672a\u6765\u53ef\u80fd\u91c7\u7528**Verkle\u6811**\uff08\u57fa\u4e8e\u5411\u91cf\u627f\u8bfa\u7684Merkle\u6811\u4f18\u5316\uff09\uff0c\u4f46\u5b83\u4ecd\u7136\u662f**\u6bcf\u4e2a\u533a\u5757\u72ec\u7acb**\uff0c\u4e0d\u4f1a\u65e0\u9650\u589e\u957f\u3002 \u4e00\u4e9b**\u72b6\u6001\u6811**\uff08\u5982\u4ee5\u592a\u574a\u7684Patricia-Merkle Trie\uff09\u4f1a\u7d2f\u79ef\u72b6\u6001\uff0c\u4f46\u901a\u8fc7\u5b9a\u671f\u526a\u679d\uff08pruning\uff09\u63a7\u5236\u5927\u5c0f\u3002","title":"5. \u4f8b\u5916\uff1a\u67d0\u4e9b\u533a\u5757\u94fe\u4f18\u5316\uff08\u5982Verkle\u6811\uff09"},{"location":"algorithm/merkle/#_10","text":"\u2705 Merkle\u6811\u5728\u533a\u5757\u94fe\u4e2d\u4e0d\u4f1a\u65e0\u9650\u53d8\u957f \uff0c\u56e0\u4e3a\uff1a 1. \u6bcf\u4e2a\u533a\u5757\u7684Merkle\u6811**\u4ec5\u5305\u542b\u5f53\u524d\u533a\u5757\u7684\u4ea4\u6613**\uff0c\u72ec\u7acb\u8ba1\u7b97\u3002 2. \u65e7\u533a\u5757\u7684Merkle\u6811**\u4e0d\u53ef\u53d8**\uff0c\u65b0\u533a\u5757\u4e0d\u4f1a\u4fee\u6539\u5b83\u3002 3. \u771f\u6b63\u589e\u957f\u7684\u662f\u533a\u5757\u94fe \uff0c\u800c\u4e0d\u662f\u5355\u4e2aMerkle\u6811\u3002 \u5982\u4f55\u7406\u89e3 \"\u65b0\u4ea4\u6613\u52a0\u5165\u533a\u5757\u65f6\uff0c\u53ea\u9700\u66f4\u65b0 Merkle \u6811\u7684\u8def\u5f84\uff0c\u800c\u4e0d\u7528\u91cd\u65b0\u8ba1\u7b97\u6574\u4e2a\u4ea4\u6613\u5217\u8868\u7684\u54c8\u5e0c\u3002\" \u533a\u5757\u94fe\u7684Merkle\u6811\u5728\u65b0\u533a\u5757\u751f\u6210\u65f6\u662f\u5168\u65b0\u6784\u5efa\u7684 \uff0c\u800c\u4e0d\u662f\u589e\u91cf\u66f4\u65b0\u5df2\u6709\u6811\u3002\u4f46\u201c\u5c40\u90e8\u66f4\u65b0\u201d\u7684\u6982\u5ff5\u4ecd\u7136\u9002\u7528\u4e8e\u67d0\u4e9b\u573a\u666f\uff08\u5982\u8f7b\u8282\u70b9\u9a8c\u8bc1\uff09\u3002\u4e0b\u9762\u6211\u4f1a\u7528\u66f4\u6e05\u6670\u7684\u4f8b\u5b50\u89e3\u91ca\uff1a","title":"\u603b\u7ed3"},{"location":"algorithm/merkle/#1-merkle_1","text":"\u5f53\u77ff\u5de5\u6253\u5305\u65b0\u533a\u5757\u65f6\uff1a 1. \u6536\u96c6\u4ea4\u6613 \uff1a\u4f8b\u59821000\u7b14\u65b0\u4ea4\u6613\uff08TX1-TX1000\uff09\u3002 2. \u6784\u5efa\u5168\u65b0\u7684Merkle\u6811 \uff1a - \u8ba1\u7b97\u6240\u6709\u4ea4\u6613\u7684\u54c8\u5e0c\u503c\uff08\u53f6\u5b50\u8282\u70b9\uff09\u3002 - \u9010\u5c42\u54c8\u5e0c\uff0c\u751f\u6210\u65b0\u7684Merkle Root\u3002 3. \u5199\u5165\u533a\u5757\u5934 \uff1aMerkle Root\u88ab\u56fa\u5b9a\uff0c\u533a\u5757\u4e0a\u94fe\u540e\u4e0d\u518d\u4fee\u6539\u3002 \u2705 \u5173\u952e\u70b9 \uff1a\u8fd9\u4e2aMerkle\u6811\u662f**\u72ec\u7acb**\u7684\uff0c\u548c\u4e4b\u524d\u533a\u5757\u7684Merkle\u6811\u65e0\u5173\u3002","title":"1. \u533a\u5757\u94fe\u7684Merkle\u6811\u662f\u201c\u4e00\u6b21\u6027\u6784\u5efa\u201d\u7684"},{"location":"algorithm/merkle/#2","text":"\u867d\u7136\u533a\u5757\u94fe\u7684Merkle\u6811\u4e0d\u589e\u91cf\u66f4\u65b0\uff0c\u4f46\u5b83\u7684\u7ed3\u6784\u5141\u8bb8**\u9ad8\u6548\u9a8c\u8bc1\u5355\u7b14\u4ea4\u6613**\uff08Merkle Proof\uff09\u3002\u4f8b\u5982\uff1a","title":"2. \u4ec0\u4e48\u60c5\u51b5\u4e0b\u80fd\u201c\u53ea\u66f4\u65b0\u90e8\u5206\u8def\u5f84\u201d\uff1f"},{"location":"algorithm/merkle/#_11","text":"\u5047\u8bbe\u4f60\u60f3\u9a8c\u8bc1\u4ea4\u6613TX500\u662f\u5426\u5728Block 1000\u4e2d\u3002 \u5168\u8282\u70b9\u4e0d\u9700\u8981\u53d1\u9001\u6574\u4e2a\u533a\u5757 \uff0c\u53ea\u9700\u63d0\u4f9b\uff1a TX500\u7684\u54c8\u5e0c\u3002 \u4eceTX500\u5230Merkle Root\u7684\u8def\u5f84\u4e0a\u7684\u54c8\u5e0c\uff08\u5373Merkle Proof\uff09\u3002 \u8f7b\u8282\u70b9\u53ea\u9700\u8ba1\u7b97log\u2082N\u6b21\u54c8\u5e0c \uff08N\u662f\u4ea4\u6613\u6570\u91cf\uff09\uff0c\u5373\u53ef\u9a8c\u8bc1\u3002","title":"\u573a\u666f\uff1a\u8f7b\u8282\u70b9\u9a8c\u8bc1\u67d0\u7b14\u4ea4\u6613"},{"location":"algorithm/merkle/#merkle_2","text":"Root (Hash1-8) / \\ Hash1-4 Hash5-8 / \\ / \\ H1-2 H3-4 H5-6 H7-8 / \\ / \\ / \\ / \\ H1 H2 H3 H4 H5 H6 H7 H8 - \u8981\u9a8c\u8bc1**H5**\u662f\u5426\u5728\u6811\u4e2d\uff0c\u5168\u8282\u70b9\u63d0\u4f9b\uff1a - H6\uff08H5\u7684\u5144\u5f1f\u8282\u70b9\uff09 - H7-8\uff08H5-6\u7684\u53d4\u7236\u8282\u70b9\uff09 - Hash1-4\uff08\u53e6\u4e00\u4fa7\u7684\u5b50\u6811\u6839\uff09 - \u8f7b\u8282\u70b9\u8ba1\u7b97\uff1a 1. Hash5-6 = Hash(H5 + H6) 2. Hash5-8 = Hash(Hash5-6 + H7-8) 3. Root = Hash(Hash1-4 + Hash5-8) - \u5982\u679c\u8ba1\u7b97\u7ed3\u679c\u4e0e\u5df2\u77e5Root\u5339\u914d\uff0c\u5219H5\u6709\u6548\u3002 \u2705 \u8fd9\u5c31\u662f\u201c\u5c40\u90e8\u66f4\u65b0\u201d\u601d\u60f3\u7684\u5b9e\u9645\u5e94\u7528 \uff1a\u53ea\u9700\u8ba1\u7b97\u8def\u5f84\u4e0a\u7684\u54c8\u5e0c\uff0c\u800c\u975e\u6574\u68f5\u6811\u3002","title":"\u793a\u4f8b\uff08\u7b80\u5316Merkle\u6811\uff09\uff1a"},{"location":"algorithm/merkle/#3-merkle_1","text":"\u5982\u679c\u8981\u5728**\u53ef\u53d8\u6570\u636e**\u4e2d\u5b9e\u73b0\u589e\u91cf\u66f4\u65b0\uff08\u5982\u6570\u636e\u5e93\u3001IPFS\uff09\uff0c\u9700\u8fd9\u6837\u8bbe\u8ba1\uff1a","title":"3. \u5982\u679c\u8981\u771f\u6b63\u5b9e\u73b0\u201c\u52a8\u6001Merkle\u6811\u201d"},{"location":"algorithm/merkle/#_12","text":"\u521d\u59cb\u72b6\u6001 \uff1a\u6784\u5efa\u5305\u542b\u6240\u6709\u6570\u636e\u7684Merkle\u6811\u3002 \u65b0\u589e\u6570\u636e \uff1a \u6dfb\u52a0\u65b0\u53f6\u5b50\u8282\u70b9\u3002 \u91cd\u65b0\u8ba1\u7b97\u4ece\u8be5\u53f6\u5b50\u5230\u6839\u7684\u8def\u5f84\u54c8\u5e0c\u3002 \u5176\u4ed6\u5206\u652f\u4fdd\u6301\u4e0d\u53d8\u3002 \u4fee\u6539\u6570\u636e \uff1a \u66f4\u65b0\u5bf9\u5e94\u53f6\u5b50\u8282\u70b9\u7684\u54c8\u5e0c\u3002 \u91cd\u65b0\u8ba1\u7b97\u5176\u5230\u6839\u7684\u8def\u5f84\u3002","title":"\u6b65\u9aa4\uff1a"},{"location":"algorithm/merkle/#_13","text":"class MerkleTree : def __init__ ( self , data ): self . leaves = [ hash ( d ) for d in data ] self . tree = self . build_tree ( self . leaves ) def build_tree ( self , leaves ): # \u9012\u5f52\u6784\u5efaMerkle\u6811 ... def update ( self , index , new_data ): # 1. \u66f4\u65b0\u53f6\u5b50\u8282\u70b9 self . leaves [ index ] = hash ( new_data ) # 2. \u91cd\u65b0\u8ba1\u7b97\u8def\u5f84\u54c8\u5e0c current_index = index while current_index > 0 : sibling_index = current_index - 1 if current_index % 2 == 1 else current_index + 1 parent_index = current_index // 2 # \u91cd\u65b0\u8ba1\u7b97\u7236\u8282\u70b9\u54c8\u5e0c self . tree [ parent_index ] = hash ( self . tree [ current_index ] + self . tree [ sibling_index ]) current_index = parent_index","title":"\u4ee3\u7801\u793a\u4f8b\uff08\u4f2a\u4ee3\u7801\uff09\uff1a"},{"location":"algorithm/merkle/#4_1","text":"\u4e0d\u53ef\u53d8\u6027 \uff1a\u533a\u5757\u94fe\u8981\u6c42\u5386\u53f2\u6570\u636e\u4e0d\u53ef\u4fee\u6539\uff0c\u56e0\u6b64\u6bcf\u4e2a\u533a\u5757\u7684Merkle\u6811\u5fc5\u987b\u56fa\u5b9a\u3002 \u6027\u80fd \uff1a\u65b0\u533a\u5757\u6253\u5305\u65f6\uff0c\u5168\u91cf\u8ba1\u7b97Merkle\u6811\u6bd4\u589e\u91cf\u66f4\u65b0\u66f4\u7b80\u5355\uff08\u4ea4\u6613\u5217\u8868\u5df2\u77e5\uff0c\u5e76\u884c\u54c8\u5e0c\u8ba1\u7b97\u5feb\uff09\u3002","title":"4. \u4e3a\u4ec0\u4e48\u533a\u5757\u94fe\u4e0d\u8fd9\u6837\u7528\uff1f"},{"location":"algorithm/merkle/#_14","text":"\u573a\u666f \u662f\u5426\u589e\u91cf\u66f4\u65b0Merkle\u6811\uff1f \u539f\u56e0 \u5178\u578b\u6848\u4f8b \u533a\u5757\u94fe\u65b0\u533a\u5757 \u274c \u5168\u91cf\u91cd\u5efa \u533a\u5757\u6570\u636e\u4e0d\u53ef\u53d8 \u6bd4\u7279\u5e01\u3001\u4ee5\u592a\u574a \u4ea4\u6613\u9a8c\u8bc1 \u2705 \u5c40\u90e8\u8ba1\u7b97\u8def\u5f84 \u9ad8\u6548\u9a8c\u8bc1\u5355\u7b14\u4ea4\u6613 SPV\u8f7b\u94b1\u5305 \u53ef\u53d8\u6570\u636e\u7cfb\u7edf \u2705 \u589e\u91cf\u66f4\u65b0 \u652f\u6301\u52a8\u6001\u4fee\u6539 IPFS, Git \u5e0c\u671b\u8fd9\u4e2a\u89e3\u91ca\u80fd\u8ba9\u4f60\u5f7b\u5e95\u7406\u89e3\uff01\u5173\u952e\u70b9\u662f\uff1a 1. \u533a\u5757\u94fe\u7684Merkle\u6811\u662f\u533a\u5757\u7ea7\u522b\u7684\uff0c\u4e0d\u662f\u5168\u5c40\u7684 \u3002 2. \u201c\u5c40\u90e8\u66f4\u65b0\u201d\u601d\u60f3\u4e3b\u8981\u7528\u4e8e**\u9a8c\u8bc1**\u800c\u975e\u5b58\u50a8\u3002 3. \u771f\u6b63\u7684\u52a8\u6001Merkle\u6811\u9700\u8981\u8bbe\u8ba1\u53ef\u53d8\u6570\u636e\u7ed3\u6784\u3002","title":"\u603b\u7ed3"},{"location":"algorithm/merkle/#_15","text":"\u4ee5\u4e0b\u662f\u4f7f\u7528 Python \u548c C \u5b9e\u73b0\u7684 Merkle\u6811\uff08Merkle Tree\uff09 \u6784\u5efa\u7b97\u6cd5\uff0c\u5305\u542b\u8be6\u7ec6\u7684\u4ee3\u7801\u6ce8\u91ca\u548c\u793a\u4f8b\u3002","title":"\u5b9e\u73b0"},{"location":"algorithm/merkle/#1-python","text":"","title":"1. Python \u5b9e\u73b0"},{"location":"algorithm/merkle/#_16","text":"\u6784\u5efa Merkle \u6811 \u8ba1\u7b97 Merkle Root \u751f\u6210 Merkle Proof\uff08\u7528\u4e8e\u9a8c\u8bc1\u67d0\u4e2a\u53f6\u5b50\u8282\u70b9\uff09 import hashlib def sha256 ( data ): \"\"\"\u8ba1\u7b97SHA-256\u54c8\u5e0c\u503c\"\"\" return hashlib . sha256 ( data . encode ( 'utf-8' )) . hexdigest () class MerkleTree : def __init__ ( self , transactions ): \"\"\"\u521d\u59cb\u5316Merkle\u6811\"\"\" self . transactions = transactions self . levels = [] # \u5b58\u50a8\u6811\u7684\u6bcf\u4e00\u5c42 self . build_tree () def build_tree ( self ): \"\"\"\u6784\u5efaMerkle\u6811\"\"\" if not self . transactions : return \"\" # 1. \u8ba1\u7b97\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u54c8\u5e0c leaves = [ sha256 ( tx ) for tx in self . transactions ] self . levels . append ( leaves ) # 2. \u9010\u5c42\u8ba1\u7b97\u7236\u8282\u70b9\u54c8\u5e0c while len ( leaves ) > 1 : # \u5982\u679c\u53f6\u5b50\u8282\u70b9\u6570\u91cf\u4e3a\u5947\u6570\uff0c\u590d\u5236\u6700\u540e\u4e00\u4e2a\u8282\u70b9 if len ( leaves ) % 2 != 0 : leaves . append ( leaves [ - 1 ]) # \u8ba1\u7b97\u7236\u5c42\u54c8\u5e0c parents = [] for i in range ( 0 , len ( leaves ), 2 ): left = leaves [ i ] right = leaves [ i + 1 ] parent = sha256 ( left + right ) parents . append ( parent ) self . levels . append ( parents ) leaves = parents def get_merkle_root ( self ): \"\"\"\u8fd4\u56deMerkle\u6839\"\"\" return self . levels [ - 1 ][ 0 ] if self . levels else \"\" def get_merkle_proof ( self , index ): \"\"\"\u83b7\u53d6\u67d0\u4e2a\u53f6\u5b50\u8282\u70b9\u7684Merkle Proof\uff08\u7528\u4e8e\u9a8c\u8bc1\uff09\"\"\" proof = [] if index >= len ( self . levels [ 0 ]): return proof for level in self . levels [: - 1 ]: # \u627e\u5230\u5f53\u524d\u8282\u70b9\u7684\u5144\u5f1f\u8282\u70b9 if index % 2 == 0 : sibling = level [ index + 1 ] if index + 1 < len ( level ) else level [ index ] else : sibling = level [ index - 1 ] proof . append ( sibling ) index = index // 2 # \u5411\u4e0a\u79fb\u52a8\u5230\u7236\u5c42 return proof # \u793a\u4f8b if __name__ == \"__main__\" : transactions = [ \"TX1\" , \"TX2\" , \"TX3\" , \"TX4\" ] merkle_tree = MerkleTree ( transactions ) print ( \"Merkle Root:\" , merkle_tree . get_merkle_root ()) print ( \"Merkle Proof for TX1:\" , merkle_tree . get_merkle_proof ( 0 )) \u8f93\u51fa\u793a\u4f8b \uff1a Merkle Root: 8a7b8e3d2e1f4c5d6a7b8e3d2e1f4c5d6a7b8e3d2e1f4c5d6a7b8e3d2e1f4c5d Merkle Proof for TX1: ['hash(TX2)', 'hash(hash(TX3)+hash(TX4))']","title":"\u529f\u80fd"},{"location":"algorithm/merkle/#2-c","text":"","title":"2. C \u5b9e\u73b0"},{"location":"algorithm/merkle/#_17","text":"\u4f7f\u7528 OpenSSL \u7684 SHA-256 \u8ba1\u7b97\u54c8\u5e0c \u6784\u5efa Merkle \u6811\u5e76\u8ba1\u7b97 Merkle Root #include <stdio.h> #include <stdlib.h> #include <string.h> #include <openssl/sha.h> #define MAX_TX 1000 // \u8ba1\u7b97SHA-256\u54c8\u5e0c void sha256 ( const char * str , unsigned char * output ) { SHA256_CTX ctx ; SHA256_Init ( & ctx ); SHA256_Update ( & ctx , str , strlen ( str )); SHA256_Final ( output , & ctx ); } // \u6253\u5370\u54c8\u5e0c\uff08\u5341\u516d\u8fdb\u5236\uff09 void print_hash ( unsigned char * hash ) { for ( int i = 0 ; i < SHA256_DIGEST_LENGTH ; i ++ ) { printf ( \"%02x\" , hash [ i ]); } printf ( \" \\n \" ); } // Merkle\u6811\u7ed3\u6784 typedef struct { unsigned char hashes [ MAX_TX ][ SHA256_DIGEST_LENGTH ]; int count ; } MerkleLevel ; // \u6784\u5efaMerkle\u6811 void build_merkle_tree ( const char * transactions [], int tx_count , unsigned char * merkle_root ) { if ( tx_count == 0 ) return ; MerkleLevel levels [ 20 ]; // \u5047\u8bbe\u6700\u591a20\u5c42 int level_count = 0 ; // 1. \u8ba1\u7b97\u53f6\u5b50\u8282\u70b9\u54c8\u5e0c for ( int i = 0 ; i < tx_count ; i ++ ) { sha256 ( transactions [ i ], levels [ 0 ]. hashes [ i ]); } levels [ 0 ]. count = tx_count ; level_count ++ ; // 2. \u9010\u5c42\u8ba1\u7b97\u7236\u8282\u70b9 while ( levels [ level_count - 1 ]. count > 1 ) { int current_count = levels [ level_count - 1 ]. count ; int parent_count = ( current_count + 1 ) / 2 ; // \u5904\u7406\u5947\u6570\u60c5\u51b5 for ( int i = 0 ; i < parent_count ; i ++ ) { int left = 2 * i ; int right = ( 2 * i + 1 < current_count ) ? 2 * i + 1 : left ; // \u5904\u7406\u5947\u6570\u60c5\u51b5 char combined [ 2 * SHA256_DIGEST_LENGTH ]; memcpy ( combined , levels [ level_count - 1 ]. hashes [ left ], SHA256_DIGEST_LENGTH ); memcpy ( combined + SHA256_DIGEST_LENGTH , levels [ level_count - 1 ]. hashes [ right ], SHA256_DIGEST_LENGTH ); sha256 ( combined , levels [ level_count ]. hashes [ i ]); } levels [ level_count ]. count = parent_count ; level_count ++ ; } // 3. \u8fd4\u56deMerkle Root memcpy ( merkle_root , levels [ level_count - 1 ]. hashes [ 0 ], SHA256_DIGEST_LENGTH ); } int main () { const char * transactions [] = { \"TX1\" , \"TX2\" , \"TX3\" , \"TX4\" }; int tx_count = 4 ; unsigned char merkle_root [ SHA256_DIGEST_LENGTH ]; build_merkle_tree ( transactions , tx_count , merkle_root ); printf ( \"Merkle Root: \" ); print_hash ( merkle_root ); return 0 ; } \u7f16\u8bd1 & \u8fd0\u884c \uff08\u9700\u5b89\u88c5 OpenSSL\uff09\uff1a gcc merkle_tree.c -o merkle_tree -lcrypto ./merkle_tree \u8f93\u51fa\u793a\u4f8b \uff1a Merkle Root: 8a7b8e3d2e1f4c5d6a7b8e3d2e1f4c5d6a7b8e3d2e1f4c5d6a7b8e3d2e1f4c5d","title":"\u529f\u80fd"},{"location":"algorithm/merkle/#3","text":"Merkle\u6811\u6784\u5efa\u6b65\u9aa4 \uff1a \u8ba1\u7b97\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u54c8\u5e0c\u3002 \u9010\u5c42\u4e24\u4e24\u54c8\u5e0c\uff0c\u76f4\u5230\u751f\u6210\u552f\u4e00\u7684 Merkle Root\u3002 Python vs C \uff1a Python \u66f4\u7b80\u6d01\uff0c\u9002\u5408\u5feb\u901f\u5b9e\u73b0\u3002 C \u66f4\u9ad8\u6548\uff0c\u9002\u5408\u5d4c\u5165\u5f0f\u6216\u9ad8\u6027\u80fd\u573a\u666f\uff08\u5982\u533a\u5757\u94fe\u8282\u70b9\uff09\u3002 \u5b9e\u9645\u5e94\u7528 \uff1a \u6bd4\u7279\u5e01/\u4ee5\u592a\u574a\u7528 Merkle \u6811\u9a8c\u8bc1\u4ea4\u6613\u3002 IPFS/Git \u7528 Merkle DAG \u7ba1\u7406\u6587\u4ef6\u7248\u672c\u3002 \u8981\u6b63\u786e\u751f\u6210\u6216\u9a8c\u8bc1 Merkle Proof\uff0c\u5fc5\u987b\u77e5\u9053\u76ee\u6807\u8282\u70b9\u7684\u4f4d\u7f6e\uff08\u7d22\u5f15\uff09\u548c\u5144\u5f1f\u8282\u70b9\u7684\u987a\u5e8f\u5173\u7cfb\uff0c\u5426\u5219\u65e0\u6cd5\u6b63\u786e\u8ba1\u7b97\u8def\u5f84\u54c8\u5e0c","title":"3. \u5173\u952e\u70b9\u603b\u7ed3"},{"location":"algorithm/minhash/","text":"MinHash \u5de5\u4f5c\u539f\u7406 \u63d0\u51fa\u65f6\u95f4 \u6539\u8fdb\u65b9\u6cd5 \u7f3a\u9677\u53ca\u514b\u670d\u65b9\u6cd5 \u603b\u7ed3 MinHash \u5de5\u4f5c\u539f\u7406\u8be6\u89e3\uff08\u4e3e\u4f8b\u8bf4\u660e\uff09 1. \u5b9a\u4e49\u95ee\u9898 2. MinHash \u8ba1\u7b97\u6b65\u9aa4 \u6539\u8fdb\u65b9\u6cd5\uff08\u9644\u4f8b\u5b50\u8bf4\u660e\uff09 1. One Permutation Hashing (OPH) 2. B-bit MinHash 3. Weighted MinHash \u603b\u7ed3 MinHash \u5de5\u4f5c\u539f\u7406 \u00b6 MinHash \u662f\u4e00\u79cd\u7528\u4e8e\u5feb\u901f\u4f30\u8ba1\u96c6\u5408\u76f8\u4f3c\u5ea6\uff08\u5982Jaccard\u76f8\u4f3c\u5ea6\uff09\u7684\u7b97\u6cd5\uff0c\u6838\u5fc3\u6b65\u9aa4\u5982\u4e0b\uff1a Jaccard\u76f8\u4f3c\u5ea6 \uff1a\u5bf9\u4e8e\u96c6\u5408A\u548cB\uff0c\u5176Jaccard\u76f8\u4f3c\u5ea6\u4e3a \\( J(A,B) = \\frac{|A \\cap B|}{|A \\cup B|} \\) \u3002 \u54c8\u5e0c\u51fd\u6570\u8f6c\u6362 \uff1a - \u5bf9\u96c6\u5408\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u5e94\u7528\u4e00\u4e2a\u968f\u673a\u54c8\u5e0c\u51fd\u6570 \\( h \\) \uff0c\u751f\u6210\u54c8\u5e0c\u503c\u3002 - \u4fdd\u7559\u6bcf\u4e2a\u96c6\u5408\u7684\u6700\u5c0f\u54c8\u5e0c\u503c\uff08MinHash\uff09\uff0c\u5373 \\( \\min(h(A)) \\) \u548c \\( \\min(h(B)) \\) \u3002 \u76f8\u4f3c\u5ea6\u4f30\u8ba1 \uff1a - \u82e5 \\( \\min(h(A)) = \\min(h(B)) \\) \uff0c\u5219\u4e24\u96c6\u5408\u7684MinHash\u503c\u76f8\u540c\u3002 - \u901a\u8fc7\u591a\u4e2a\u54c8\u5e0c\u51fd\u6570\u91cd\u590d\u6b64\u8fc7\u7a0b\uff0cMinHash\u503c\u76f8\u540c\u7684\u6bd4\u4f8b\u5373\u4e3aJaccard\u76f8\u4f3c\u5ea6\u7684\u65e0\u504f\u4f30\u8ba1\u3002 \u63d0\u51fa\u65f6\u95f4 \u00b6 MinHash \u7531 Andrei Broder \u57281997\u5e74\u9996\u6b21\u63d0\u51fa\uff0c\u7528\u4e8e\u89e3\u51b3 AltaVista \u641c\u7d22\u5f15\u64ce\u4e2d\u7f51\u9875\u53bb\u91cd\u548c\u76f8\u4f3c\u6587\u6863\u68c0\u6d4b\u7684\u95ee\u9898\u3002 \u6539\u8fdb\u65b9\u6cd5 \u00b6 \u591a\u4e2a\u54c8\u5e0c\u51fd\u6570\uff08k\u4e2a\uff09 \uff1a \u539f\u59cb\u65b9\u6cd5\u9700\u591a\u4e2a\u72ec\u7acb\u54c8\u5e0c\u51fd\u6570\uff0c\u8ba1\u7b97\u5f00\u9500\u5927\u3002\u6539\u8fdb\u65b9\u6848\u5982 Permutation Hashing \uff08\u901a\u8fc7\u6392\u5217\u6a21\u62df\u54c8\u5e0c\uff09\u51cf\u5c11\u8ba1\u7b97\u91cf\u3002 One Permutation Hashing (OPH) \uff1a \u5c06\u5143\u7d20\u54c8\u5e0c\u5230\u4e00\u4e2a\u6876\u4e2d\uff0c\u4ec5\u4fdd\u7559\u6bcf\u4e2a\u6876\u7684\u6700\u5c0f\u503c\uff0c\u663e\u8457\u964d\u4f4e\u8ba1\u7b97\u590d\u6742\u5ea6\uff08Li et al., 2012\uff09\u3002 B-bit MinHash \uff1a \u4ec5\u5b58\u50a8MinHash\u7684\u6700\u4f4e \\( b \\) \u4f4d\uff08\u59821-bit\uff09\uff0c\u51cf\u5c11\u5b58\u50a8\u7a7a\u95f4\uff0c\u4f46\u9700\u8c03\u6574\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff08Li & K\u00f6nig, 2010\uff09\u3002 Weighted MinHash \uff1a \u6269\u5c55\u81f3\u52a0\u6743\u96c6\u5408\uff08\u5982TF-IDF\uff09\uff0c\u901a\u8fc7\u8c03\u6574\u54c8\u5e0c\u51fd\u6570\u5904\u7406\u5143\u7d20\u6743\u91cd\uff08Ioffe, 2010\uff09\u3002 Locality-Sensitive Hashing (LSH) \uff1a \u7ed3\u5408LSH\u5c06\u76f8\u4f3c\u9879\u5206\u5230\u76f8\u540c\u6876\u4e2d\uff0c\u9002\u7528\u4e8e\u8fd1\u90bb\u641c\u7d22\u3002 \u7f3a\u9677\u53ca\u514b\u670d\u65b9\u6cd5 \u00b6 \u9ad8\u7ef4\u6570\u636e\u8ba1\u7b97\u5f00\u9500\u5927 \uff1a \u95ee\u9898 \uff1a\u9700\u5927\u91cf\u54c8\u5e0c\u51fd\u6570\u4fdd\u8bc1\u7cbe\u5ea6\u3002 \u89e3\u51b3 \uff1a\u4f7f\u7528OPH\u6216B-bit MinHash\u964d\u4f4e\u8ba1\u7b97/\u5b58\u50a8\u9700\u6c42\u3002 \u54c8\u5e0c\u51b2\u7a81 \uff1a \u95ee\u9898 \uff1a\u4e0d\u540c\u5143\u7d20\u53ef\u80fd\u54c8\u5e0c\u5230\u76f8\u540c\u503c\u3002 \u89e3\u51b3 \uff1a\u91c7\u7528\u5f3a\u54c8\u5e0c\u51fd\u6570\uff08\u5982MurmurHash3\uff09\u51cf\u5c11\u51b2\u7a81\u3002 \u4ec5\u9002\u7528\u4e8e\u96c6\u5408\u6570\u636e \uff1a \u95ee\u9898 \uff1a\u76f4\u63a5\u5904\u7406\u8fde\u7eed\u6570\u636e\u6216\u590d\u6742\u7279\u5f81\u56f0\u96be\u3002 \u89e3\u51b3 \uff1a\u52a0\u6743MinHash\u6216\u7279\u5f81\u79bb\u6563\u5316\u3002 \u957f\u5c3e\u5206\u5e03\u504f\u5dee \uff1a \u95ee\u9898 \uff1a\u7a00\u6709\u5143\u7d20\u53ef\u80fd\u88ab\u5ffd\u7565\u3002 \u89e3\u51b3 \uff1a\u7ed3\u5408\u91cd\u8981\u6027\u91c7\u6837\u6216\u52a0\u6743\u65b9\u6848\u3002 \u52a8\u6001\u6570\u636e\u66f4\u65b0\u56f0\u96be \uff1a \u95ee\u9898 \uff1a\u65b0\u589e\u5143\u7d20\u9700\u91cd\u65b0\u8ba1\u7b97MinHash\u3002 \u89e3\u51b3 \uff1a\u589e\u91cf\u5f0fMinHash\uff08\u5982\u7ef4\u62a4\u6700\u5c0f\u503c\u7684\u5806\u7ed3\u6784\uff09\u3002 \u603b\u7ed3 \u00b6 MinHash \u901a\u8fc7\u6700\u5c0f\u54c8\u5e0c\u503c\u9ad8\u6548\u4f30\u8ba1\u76f8\u4f3c\u5ea6\uff0c\u6539\u8fdb\u65b9\u6cd5\u805a\u7126\u4e8e\u964d\u4f4e\u8ba1\u7b97/\u5b58\u50a8\u6210\u672c\uff08\u5982OPH\u3001B-bit\uff09\u548c\u6269\u5c55\u5e94\u7528\u573a\u666f\uff08\u5982\u52a0\u6743MinHash\uff09\u3002\u7f3a\u9677\u53ef\u901a\u8fc7\u7b97\u6cd5\u4f18\u5316\uff08\u5982\u589e\u91cf\u66f4\u65b0\uff09\u548c\u7ed3\u5408\u5176\u4ed6\u6280\u672f\uff08\u5982LSH\uff09\u514b\u670d\uff0c\u4f7f\u5176\u5728\u5927\u89c4\u6a21\u6570\u636e\u4e2d\u4fdd\u6301\u5b9e\u7528\u6027\u3002 MinHash \u5de5\u4f5c\u539f\u7406\u8be6\u89e3\uff08\u4e3e\u4f8b\u8bf4\u660e\uff09 \u00b6 MinHash \u7684\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5c06\u96c6\u5408\u6620\u5c04\u4e3a\u7d27\u51d1\u7684\u7b7e\u540d\uff08signature\uff09\uff0c\u4ece\u800c\u9ad8\u6548\u4f30\u8ba1\u96c6\u5408\u7684 Jaccard \u76f8\u4f3c\u5ea6\u3002\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5177\u4f53\u4f8b\u5b50\u6765\u8bf4\u660e\u3002 1. \u5b9a\u4e49\u95ee\u9898 \u00b6 \u5047\u8bbe\u6709\u4e24\u4e2a\u96c6\u5408\uff1a - A = {\u201capple\u201d, \u201cbanana\u201d, \u201corange\u201d} - B = {\u201capple\u201d, \u201cpear\u201d, \u201cgrape\u201d} \u8ba1\u7b97\u5b83\u4eec\u7684 Jaccard \u76f8\u4f3c\u5ea6 \uff1a \\(J(A, B) = \\frac{|A \\cap B|}{|A \\cup B|} = \\frac{1}{5} = 0.2\\) \uff08\u56e0\u4e3a A \u2229 B = {\u201capple\u201d} \uff0c A \u222a B = {\u201capple\u201d, \u201cbanana\u201d, \u201corange\u201d, \u201cpear\u201d, \u201cgrape\u201d} \uff09 \u4f46\u76f4\u63a5\u8ba1\u7b97\u5728\u5927\u89c4\u6a21\u6570\u636e\uff08\u5982\u767e\u4e07\u7ea7\u7f51\u9875\u53bb\u91cd\uff09\u65f6\u6548\u7387\u4f4e\uff0cMinHash \u53ef\u4ee5\u9ad8\u6548\u4f30\u8ba1\u8fd9\u4e2a\u503c\u3002 2. MinHash \u8ba1\u7b97\u6b65\u9aa4 \u00b6 (1) \u6784\u5efa\u54c8\u5e0c\u51fd\u6570 \u5047\u8bbe\u6211\u4eec\u4f7f\u7528 3 \u4e2a\u54c8\u5e0c\u51fd\u6570\uff08\u5b9e\u9645\u53ef\u80fd\u9700\u8981\u66f4\u591a\uff09\uff1a \\( h_1(x) = (x \\cdot 1 + 1) \\mod 5 \\) \\( h_2(x) = (x \\cdot 2 + 1) \\mod 5 \\) \\( h_3(x) = (x \\cdot 3 + 1) \\mod 5 \\) \uff08\u6ce8\uff1a\u8fd9\u91cc\u7b80\u5355\u7528\u6570\u5b57\u4ee3\u8868\u5355\u8bcd\uff0c\u5982 \u201capple\u201d=1 , \u201cbanana\u201d=2 , \u201corange\u201d=3 , \u201cpear\u201d=4 , \u201cgrape\u201d=5 \uff09 (2) \u8ba1\u7b97\u6bcf\u4e2a\u96c6\u5408\u7684 MinHash \u96c6\u5408 A = {1, 2, 3} \\( h_1 \\) \u54c8\u5e0c\u503c\uff1a \\( h_1(1)=2 \\) , \\( h_1(2)=0 \\) , \\( h_1(3)=2 \\) \u2192 MinHash = min(2, 0, 2) = 0 \\( h_2 \\) \u54c8\u5e0c\u503c\uff1a \\( h_2(1)=3 \\) , \\( h_2(2)=0 \\) , \\( h_2(3)=2 \\) \u2192 MinHash = min(3, 0, 2) = 0 \\( h_3 \\) \u54c8\u5e0c\u503c\uff1a \\( h_3(1)=4 \\) , \\( h_3(2)=2 \\) , \\( h_3(3)=0 \\) \u2192 MinHash = min(4, 2, 0) = 0 A \u7684 MinHash \u7b7e\u540d = [0, 0, 0] \u96c6\u5408 B = {1, 4, 5} \\( h_1 \\) \u54c8\u5e0c\u503c\uff1a \\( h_1(1)=2 \\) , \\( h_1(4)=0 \\) , \\( h_1(5)=1 \\) \u2192 MinHash = min(2, 0, 1) = 0 \\( h_2 \\) \u54c8\u5e0c\u503c\uff1a \\( h_2(1)=3 \\) , \\( h_2(4)=4 \\) , \\( h_2(5)=1 \\) \u2192 MinHash = min(3, 4, 1) = 1 \\( h_3 \\) \u54c8\u5e0c\u503c\uff1a \\( h_3(1)=4 \\) , \\( h_3(4)=3 \\) , \\( h_3(5)=1 \\) \u2192 MinHash = min(4, 3, 1) = 1 B \u7684 MinHash \u7b7e\u540d = [0, 1, 1] (3) \u4f30\u8ba1 Jaccard \u76f8\u4f3c\u5ea6 \u6bd4\u8f83\u4e24\u4e2a\u7b7e\u540d\u7684\u76f8\u540c\u4f4d\u7f6e\uff1a \u7b2c 1 \u4f4d\uff1a0 == 0 \u2714 \u7b2c 2 \u4f4d\uff1a0 \u2260 1 \u2716 \u7b2c 3 \u4f4d\uff1a0 \u2260 1 \u2716 \u76f8\u4f3c\u5ea6\u4f30\u8ba1 = \u2153 \u2248 0.333 \uff08\u771f\u5b9e\u503c 0.2\uff0c\u8bef\u5dee\u6765\u81ea\u54c8\u5e0c\u51fd\u6570\u592a\u5c11\uff09\u3002 \u6539\u8fdb\u65b9\u6cd5\uff08\u9644\u4f8b\u5b50\u8bf4\u660e\uff09 \u00b6 1. One Permutation Hashing (OPH) \u00b6 \u95ee\u9898 \uff1a\u4f20\u7edf MinHash \u9700\u8981\u591a\u4e2a\u72ec\u7acb\u54c8\u5e0c\u51fd\u6570\uff0c\u8ba1\u7b97\u6210\u672c\u9ad8\u3002 \u6539\u8fdb \uff1a\u4ec5\u7528 \u4e00\u6b21\u6392\u5217\uff08permutation\uff09 \u5206\u5272\u6570\u636e\u5230\u591a\u4e2a\u6876\uff0c\u6bcf\u4e2a\u6876\u53d6\u6700\u5c0f\u503c\u3002 \u4f8b\u5b50 \uff1a \u5047\u8bbe\u54c8\u5e0c\u8303\u56f4\u662f 0-9\uff0c\u5206\u6210 2 \u4e2a\u6876\uff08\u6876\u5927\u5c0f=5\uff09\uff1a \u96c6\u5408 A = {1, 2, 3} \u2192 \u54c8\u5e0c\u5230\u6876 0: {1,2,3}, \u6876 1: {} \u6876 0 \u7684\u6700\u5c0f\u503c = 1\uff0c\u6876 1 \u4e3a\u7a7a\uff08\u7528\u7279\u6b8a\u503c\u586b\u5145\uff0c\u5982 \u221e\uff09 A \u7684\u7b7e\u540d = [1, \u221e] \u96c6\u5408 B = {1, 4, 5} \u2192 \u6876 0: {1,4}, \u6876 1: {5} \u6876 0 \u7684\u6700\u5c0f\u503c = 1\uff0c\u6876 1 \u7684\u6700\u5c0f\u503c = 5 B \u7684\u7b7e\u540d = [1, 5] \u76f8\u4f3c\u5ea6\u4f30\u8ba1\uff1a\u4ec5\u7b2c 1 \u4f4d\u76f8\u540c \u2192 \u00bd = 0.5\uff08\u9700\u8c03\u6574\u7a7a\u6876\u7684\u5f71\u54cd\uff09\u3002 2. B-bit MinHash \u00b6 \u95ee\u9898 \uff1aMinHash \u7b7e\u540d\u5b58\u50a8\u6210\u672c\u9ad8\uff08\u5982 64-bit \u6574\u6570\uff09\u3002 \u6539\u8fdb \uff1a\u53ea\u4fdd\u7559 MinHash \u7684\u6700\u4f4e b \u4f4d \uff08\u5982 1-bit\uff09\uff0c\u5927\u5e45\u51cf\u5c11\u5b58\u50a8\u3002 \u4f8b\u5b50 \uff1a - \u5047\u8bbe\u539f MinHash \u7b7e\u540d A = [5 (101), 3 (011), 6 (110)] - \u53d6 1-bit MinHash\uff1a - 5 \u2192 1, 3 \u2192 1, 6 \u2192 0 - \u65b0\u7b7e\u540d = [1, 1, 0] - \u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65f6\u9700\u6821\u6b63\uff08\u56e0\u4e3a 1-bit \u4f1a\u5f15\u5165\u504f\u5dee\uff09\u3002 3. Weighted MinHash \u00b6 \u95ee\u9898 \uff1a\u4f20\u7edf MinHash \u4ec5\u9002\u7528\u4e8e\u4e8c\u5143\u96c6\u5408\uff08\u5b58\u5728/\u4e0d\u5b58\u5728\uff09\uff0c\u65e0\u6cd5\u5904\u7406\u6743\u91cd\uff08\u5982 TF-IDF\uff09\u3002 \u6539\u8fdb \uff1a\u8c03\u6574\u54c8\u5e0c\u51fd\u6570\uff0c\u4f7f\u9ad8\u6743\u91cd\u5143\u7d20\u66f4\u53ef\u80fd\u88ab\u9009\u4e3a MinHash\u3002 \u4f8b\u5b50 \uff1a \u96c6\u5408 A = {(\u201capple\u201d, 0.9), (\u201cbanana\u201d, 0.2)} \u52a0\u6743 MinHash \u4f1a\u503e\u5411\u4e8e\u9009\u62e9 \u201capple\u201d \uff0c\u56e0\u5176\u6743\u91cd\u66f4\u9ad8\u3002 \u603b\u7ed3 \u00b6 MinHash \u672c\u8d28 \uff1a\u901a\u8fc7\u6700\u5c0f\u54c8\u5e0c\u503c\u4f30\u8ba1\u96c6\u5408\u76f8\u4f3c\u5ea6\uff0c\u9002\u5408\u5927\u89c4\u6a21\u53bb\u91cd\u3001\u63a8\u8350\u7cfb\u7edf\u7b49\u573a\u666f\u3002 \u6539\u8fdb\u65b9\u5411 \uff1a \u964d\u4f4e\u8ba1\u7b97\u6210\u672c \uff1aOPH\uff08\u5355\u6392\u5217\u54c8\u5e0c\uff09\u3002 \u51cf\u5c11\u5b58\u50a8 \uff1aB-bit MinHash\u3002 \u652f\u6301\u590d\u6742\u6570\u636e \uff1aWeighted MinHash\uff08\u52a0\u6743\u96c6\u5408\uff09\u3002 \u5b9e\u9645\u5e94\u7528 \uff1a \u7f51\u9875\u53bb\u91cd\uff08\u5982 Google \u722c\u866b\uff09\u3001 \u534f\u540c\u8fc7\u6ee4\uff08\u7528\u6237-\u7269\u54c1\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff09\u3002","title":"Minhash"},{"location":"algorithm/minhash/#minhash","text":"MinHash \u662f\u4e00\u79cd\u7528\u4e8e\u5feb\u901f\u4f30\u8ba1\u96c6\u5408\u76f8\u4f3c\u5ea6\uff08\u5982Jaccard\u76f8\u4f3c\u5ea6\uff09\u7684\u7b97\u6cd5\uff0c\u6838\u5fc3\u6b65\u9aa4\u5982\u4e0b\uff1a Jaccard\u76f8\u4f3c\u5ea6 \uff1a\u5bf9\u4e8e\u96c6\u5408A\u548cB\uff0c\u5176Jaccard\u76f8\u4f3c\u5ea6\u4e3a \\( J(A,B) = \\frac{|A \\cap B|}{|A \\cup B|} \\) \u3002 \u54c8\u5e0c\u51fd\u6570\u8f6c\u6362 \uff1a - \u5bf9\u96c6\u5408\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u5e94\u7528\u4e00\u4e2a\u968f\u673a\u54c8\u5e0c\u51fd\u6570 \\( h \\) \uff0c\u751f\u6210\u54c8\u5e0c\u503c\u3002 - \u4fdd\u7559\u6bcf\u4e2a\u96c6\u5408\u7684\u6700\u5c0f\u54c8\u5e0c\u503c\uff08MinHash\uff09\uff0c\u5373 \\( \\min(h(A)) \\) \u548c \\( \\min(h(B)) \\) \u3002 \u76f8\u4f3c\u5ea6\u4f30\u8ba1 \uff1a - \u82e5 \\( \\min(h(A)) = \\min(h(B)) \\) \uff0c\u5219\u4e24\u96c6\u5408\u7684MinHash\u503c\u76f8\u540c\u3002 - \u901a\u8fc7\u591a\u4e2a\u54c8\u5e0c\u51fd\u6570\u91cd\u590d\u6b64\u8fc7\u7a0b\uff0cMinHash\u503c\u76f8\u540c\u7684\u6bd4\u4f8b\u5373\u4e3aJaccard\u76f8\u4f3c\u5ea6\u7684\u65e0\u504f\u4f30\u8ba1\u3002","title":"MinHash \u5de5\u4f5c\u539f\u7406"},{"location":"algorithm/minhash/#_1","text":"MinHash \u7531 Andrei Broder \u57281997\u5e74\u9996\u6b21\u63d0\u51fa\uff0c\u7528\u4e8e\u89e3\u51b3 AltaVista \u641c\u7d22\u5f15\u64ce\u4e2d\u7f51\u9875\u53bb\u91cd\u548c\u76f8\u4f3c\u6587\u6863\u68c0\u6d4b\u7684\u95ee\u9898\u3002","title":"\u63d0\u51fa\u65f6\u95f4"},{"location":"algorithm/minhash/#_2","text":"\u591a\u4e2a\u54c8\u5e0c\u51fd\u6570\uff08k\u4e2a\uff09 \uff1a \u539f\u59cb\u65b9\u6cd5\u9700\u591a\u4e2a\u72ec\u7acb\u54c8\u5e0c\u51fd\u6570\uff0c\u8ba1\u7b97\u5f00\u9500\u5927\u3002\u6539\u8fdb\u65b9\u6848\u5982 Permutation Hashing \uff08\u901a\u8fc7\u6392\u5217\u6a21\u62df\u54c8\u5e0c\uff09\u51cf\u5c11\u8ba1\u7b97\u91cf\u3002 One Permutation Hashing (OPH) \uff1a \u5c06\u5143\u7d20\u54c8\u5e0c\u5230\u4e00\u4e2a\u6876\u4e2d\uff0c\u4ec5\u4fdd\u7559\u6bcf\u4e2a\u6876\u7684\u6700\u5c0f\u503c\uff0c\u663e\u8457\u964d\u4f4e\u8ba1\u7b97\u590d\u6742\u5ea6\uff08Li et al., 2012\uff09\u3002 B-bit MinHash \uff1a \u4ec5\u5b58\u50a8MinHash\u7684\u6700\u4f4e \\( b \\) \u4f4d\uff08\u59821-bit\uff09\uff0c\u51cf\u5c11\u5b58\u50a8\u7a7a\u95f4\uff0c\u4f46\u9700\u8c03\u6574\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff08Li & K\u00f6nig, 2010\uff09\u3002 Weighted MinHash \uff1a \u6269\u5c55\u81f3\u52a0\u6743\u96c6\u5408\uff08\u5982TF-IDF\uff09\uff0c\u901a\u8fc7\u8c03\u6574\u54c8\u5e0c\u51fd\u6570\u5904\u7406\u5143\u7d20\u6743\u91cd\uff08Ioffe, 2010\uff09\u3002 Locality-Sensitive Hashing (LSH) \uff1a \u7ed3\u5408LSH\u5c06\u76f8\u4f3c\u9879\u5206\u5230\u76f8\u540c\u6876\u4e2d\uff0c\u9002\u7528\u4e8e\u8fd1\u90bb\u641c\u7d22\u3002","title":"\u6539\u8fdb\u65b9\u6cd5"},{"location":"algorithm/minhash/#_3","text":"\u9ad8\u7ef4\u6570\u636e\u8ba1\u7b97\u5f00\u9500\u5927 \uff1a \u95ee\u9898 \uff1a\u9700\u5927\u91cf\u54c8\u5e0c\u51fd\u6570\u4fdd\u8bc1\u7cbe\u5ea6\u3002 \u89e3\u51b3 \uff1a\u4f7f\u7528OPH\u6216B-bit MinHash\u964d\u4f4e\u8ba1\u7b97/\u5b58\u50a8\u9700\u6c42\u3002 \u54c8\u5e0c\u51b2\u7a81 \uff1a \u95ee\u9898 \uff1a\u4e0d\u540c\u5143\u7d20\u53ef\u80fd\u54c8\u5e0c\u5230\u76f8\u540c\u503c\u3002 \u89e3\u51b3 \uff1a\u91c7\u7528\u5f3a\u54c8\u5e0c\u51fd\u6570\uff08\u5982MurmurHash3\uff09\u51cf\u5c11\u51b2\u7a81\u3002 \u4ec5\u9002\u7528\u4e8e\u96c6\u5408\u6570\u636e \uff1a \u95ee\u9898 \uff1a\u76f4\u63a5\u5904\u7406\u8fde\u7eed\u6570\u636e\u6216\u590d\u6742\u7279\u5f81\u56f0\u96be\u3002 \u89e3\u51b3 \uff1a\u52a0\u6743MinHash\u6216\u7279\u5f81\u79bb\u6563\u5316\u3002 \u957f\u5c3e\u5206\u5e03\u504f\u5dee \uff1a \u95ee\u9898 \uff1a\u7a00\u6709\u5143\u7d20\u53ef\u80fd\u88ab\u5ffd\u7565\u3002 \u89e3\u51b3 \uff1a\u7ed3\u5408\u91cd\u8981\u6027\u91c7\u6837\u6216\u52a0\u6743\u65b9\u6848\u3002 \u52a8\u6001\u6570\u636e\u66f4\u65b0\u56f0\u96be \uff1a \u95ee\u9898 \uff1a\u65b0\u589e\u5143\u7d20\u9700\u91cd\u65b0\u8ba1\u7b97MinHash\u3002 \u89e3\u51b3 \uff1a\u589e\u91cf\u5f0fMinHash\uff08\u5982\u7ef4\u62a4\u6700\u5c0f\u503c\u7684\u5806\u7ed3\u6784\uff09\u3002","title":"\u7f3a\u9677\u53ca\u514b\u670d\u65b9\u6cd5"},{"location":"algorithm/minhash/#_4","text":"MinHash \u901a\u8fc7\u6700\u5c0f\u54c8\u5e0c\u503c\u9ad8\u6548\u4f30\u8ba1\u76f8\u4f3c\u5ea6\uff0c\u6539\u8fdb\u65b9\u6cd5\u805a\u7126\u4e8e\u964d\u4f4e\u8ba1\u7b97/\u5b58\u50a8\u6210\u672c\uff08\u5982OPH\u3001B-bit\uff09\u548c\u6269\u5c55\u5e94\u7528\u573a\u666f\uff08\u5982\u52a0\u6743MinHash\uff09\u3002\u7f3a\u9677\u53ef\u901a\u8fc7\u7b97\u6cd5\u4f18\u5316\uff08\u5982\u589e\u91cf\u66f4\u65b0\uff09\u548c\u7ed3\u5408\u5176\u4ed6\u6280\u672f\uff08\u5982LSH\uff09\u514b\u670d\uff0c\u4f7f\u5176\u5728\u5927\u89c4\u6a21\u6570\u636e\u4e2d\u4fdd\u6301\u5b9e\u7528\u6027\u3002","title":"\u603b\u7ed3"},{"location":"algorithm/minhash/#minhash_1","text":"MinHash \u7684\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5c06\u96c6\u5408\u6620\u5c04\u4e3a\u7d27\u51d1\u7684\u7b7e\u540d\uff08signature\uff09\uff0c\u4ece\u800c\u9ad8\u6548\u4f30\u8ba1\u96c6\u5408\u7684 Jaccard \u76f8\u4f3c\u5ea6\u3002\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5177\u4f53\u4f8b\u5b50\u6765\u8bf4\u660e\u3002","title":"MinHash \u5de5\u4f5c\u539f\u7406\u8be6\u89e3\uff08\u4e3e\u4f8b\u8bf4\u660e\uff09"},{"location":"algorithm/minhash/#1","text":"\u5047\u8bbe\u6709\u4e24\u4e2a\u96c6\u5408\uff1a - A = {\u201capple\u201d, \u201cbanana\u201d, \u201corange\u201d} - B = {\u201capple\u201d, \u201cpear\u201d, \u201cgrape\u201d} \u8ba1\u7b97\u5b83\u4eec\u7684 Jaccard \u76f8\u4f3c\u5ea6 \uff1a \\(J(A, B) = \\frac{|A \\cap B|}{|A \\cup B|} = \\frac{1}{5} = 0.2\\) \uff08\u56e0\u4e3a A \u2229 B = {\u201capple\u201d} \uff0c A \u222a B = {\u201capple\u201d, \u201cbanana\u201d, \u201corange\u201d, \u201cpear\u201d, \u201cgrape\u201d} \uff09 \u4f46\u76f4\u63a5\u8ba1\u7b97\u5728\u5927\u89c4\u6a21\u6570\u636e\uff08\u5982\u767e\u4e07\u7ea7\u7f51\u9875\u53bb\u91cd\uff09\u65f6\u6548\u7387\u4f4e\uff0cMinHash \u53ef\u4ee5\u9ad8\u6548\u4f30\u8ba1\u8fd9\u4e2a\u503c\u3002","title":"1. \u5b9a\u4e49\u95ee\u9898"},{"location":"algorithm/minhash/#2-minhash","text":"(1) \u6784\u5efa\u54c8\u5e0c\u51fd\u6570 \u5047\u8bbe\u6211\u4eec\u4f7f\u7528 3 \u4e2a\u54c8\u5e0c\u51fd\u6570\uff08\u5b9e\u9645\u53ef\u80fd\u9700\u8981\u66f4\u591a\uff09\uff1a \\( h_1(x) = (x \\cdot 1 + 1) \\mod 5 \\) \\( h_2(x) = (x \\cdot 2 + 1) \\mod 5 \\) \\( h_3(x) = (x \\cdot 3 + 1) \\mod 5 \\) \uff08\u6ce8\uff1a\u8fd9\u91cc\u7b80\u5355\u7528\u6570\u5b57\u4ee3\u8868\u5355\u8bcd\uff0c\u5982 \u201capple\u201d=1 , \u201cbanana\u201d=2 , \u201corange\u201d=3 , \u201cpear\u201d=4 , \u201cgrape\u201d=5 \uff09 (2) \u8ba1\u7b97\u6bcf\u4e2a\u96c6\u5408\u7684 MinHash \u96c6\u5408 A = {1, 2, 3} \\( h_1 \\) \u54c8\u5e0c\u503c\uff1a \\( h_1(1)=2 \\) , \\( h_1(2)=0 \\) , \\( h_1(3)=2 \\) \u2192 MinHash = min(2, 0, 2) = 0 \\( h_2 \\) \u54c8\u5e0c\u503c\uff1a \\( h_2(1)=3 \\) , \\( h_2(2)=0 \\) , \\( h_2(3)=2 \\) \u2192 MinHash = min(3, 0, 2) = 0 \\( h_3 \\) \u54c8\u5e0c\u503c\uff1a \\( h_3(1)=4 \\) , \\( h_3(2)=2 \\) , \\( h_3(3)=0 \\) \u2192 MinHash = min(4, 2, 0) = 0 A \u7684 MinHash \u7b7e\u540d = [0, 0, 0] \u96c6\u5408 B = {1, 4, 5} \\( h_1 \\) \u54c8\u5e0c\u503c\uff1a \\( h_1(1)=2 \\) , \\( h_1(4)=0 \\) , \\( h_1(5)=1 \\) \u2192 MinHash = min(2, 0, 1) = 0 \\( h_2 \\) \u54c8\u5e0c\u503c\uff1a \\( h_2(1)=3 \\) , \\( h_2(4)=4 \\) , \\( h_2(5)=1 \\) \u2192 MinHash = min(3, 4, 1) = 1 \\( h_3 \\) \u54c8\u5e0c\u503c\uff1a \\( h_3(1)=4 \\) , \\( h_3(4)=3 \\) , \\( h_3(5)=1 \\) \u2192 MinHash = min(4, 3, 1) = 1 B \u7684 MinHash \u7b7e\u540d = [0, 1, 1] (3) \u4f30\u8ba1 Jaccard \u76f8\u4f3c\u5ea6 \u6bd4\u8f83\u4e24\u4e2a\u7b7e\u540d\u7684\u76f8\u540c\u4f4d\u7f6e\uff1a \u7b2c 1 \u4f4d\uff1a0 == 0 \u2714 \u7b2c 2 \u4f4d\uff1a0 \u2260 1 \u2716 \u7b2c 3 \u4f4d\uff1a0 \u2260 1 \u2716 \u76f8\u4f3c\u5ea6\u4f30\u8ba1 = \u2153 \u2248 0.333 \uff08\u771f\u5b9e\u503c 0.2\uff0c\u8bef\u5dee\u6765\u81ea\u54c8\u5e0c\u51fd\u6570\u592a\u5c11\uff09\u3002","title":"2. MinHash \u8ba1\u7b97\u6b65\u9aa4"},{"location":"algorithm/minhash/#_5","text":"","title":"\u6539\u8fdb\u65b9\u6cd5\uff08\u9644\u4f8b\u5b50\u8bf4\u660e\uff09"},{"location":"algorithm/minhash/#1-one-permutation-hashing-oph","text":"\u95ee\u9898 \uff1a\u4f20\u7edf MinHash \u9700\u8981\u591a\u4e2a\u72ec\u7acb\u54c8\u5e0c\u51fd\u6570\uff0c\u8ba1\u7b97\u6210\u672c\u9ad8\u3002 \u6539\u8fdb \uff1a\u4ec5\u7528 \u4e00\u6b21\u6392\u5217\uff08permutation\uff09 \u5206\u5272\u6570\u636e\u5230\u591a\u4e2a\u6876\uff0c\u6bcf\u4e2a\u6876\u53d6\u6700\u5c0f\u503c\u3002 \u4f8b\u5b50 \uff1a \u5047\u8bbe\u54c8\u5e0c\u8303\u56f4\u662f 0-9\uff0c\u5206\u6210 2 \u4e2a\u6876\uff08\u6876\u5927\u5c0f=5\uff09\uff1a \u96c6\u5408 A = {1, 2, 3} \u2192 \u54c8\u5e0c\u5230\u6876 0: {1,2,3}, \u6876 1: {} \u6876 0 \u7684\u6700\u5c0f\u503c = 1\uff0c\u6876 1 \u4e3a\u7a7a\uff08\u7528\u7279\u6b8a\u503c\u586b\u5145\uff0c\u5982 \u221e\uff09 A \u7684\u7b7e\u540d = [1, \u221e] \u96c6\u5408 B = {1, 4, 5} \u2192 \u6876 0: {1,4}, \u6876 1: {5} \u6876 0 \u7684\u6700\u5c0f\u503c = 1\uff0c\u6876 1 \u7684\u6700\u5c0f\u503c = 5 B \u7684\u7b7e\u540d = [1, 5] \u76f8\u4f3c\u5ea6\u4f30\u8ba1\uff1a\u4ec5\u7b2c 1 \u4f4d\u76f8\u540c \u2192 \u00bd = 0.5\uff08\u9700\u8c03\u6574\u7a7a\u6876\u7684\u5f71\u54cd\uff09\u3002","title":"1. One Permutation Hashing (OPH)"},{"location":"algorithm/minhash/#2-b-bit-minhash","text":"\u95ee\u9898 \uff1aMinHash \u7b7e\u540d\u5b58\u50a8\u6210\u672c\u9ad8\uff08\u5982 64-bit \u6574\u6570\uff09\u3002 \u6539\u8fdb \uff1a\u53ea\u4fdd\u7559 MinHash \u7684\u6700\u4f4e b \u4f4d \uff08\u5982 1-bit\uff09\uff0c\u5927\u5e45\u51cf\u5c11\u5b58\u50a8\u3002 \u4f8b\u5b50 \uff1a - \u5047\u8bbe\u539f MinHash \u7b7e\u540d A = [5 (101), 3 (011), 6 (110)] - \u53d6 1-bit MinHash\uff1a - 5 \u2192 1, 3 \u2192 1, 6 \u2192 0 - \u65b0\u7b7e\u540d = [1, 1, 0] - \u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65f6\u9700\u6821\u6b63\uff08\u56e0\u4e3a 1-bit \u4f1a\u5f15\u5165\u504f\u5dee\uff09\u3002","title":"2. B-bit MinHash"},{"location":"algorithm/minhash/#3-weighted-minhash","text":"\u95ee\u9898 \uff1a\u4f20\u7edf MinHash \u4ec5\u9002\u7528\u4e8e\u4e8c\u5143\u96c6\u5408\uff08\u5b58\u5728/\u4e0d\u5b58\u5728\uff09\uff0c\u65e0\u6cd5\u5904\u7406\u6743\u91cd\uff08\u5982 TF-IDF\uff09\u3002 \u6539\u8fdb \uff1a\u8c03\u6574\u54c8\u5e0c\u51fd\u6570\uff0c\u4f7f\u9ad8\u6743\u91cd\u5143\u7d20\u66f4\u53ef\u80fd\u88ab\u9009\u4e3a MinHash\u3002 \u4f8b\u5b50 \uff1a \u96c6\u5408 A = {(\u201capple\u201d, 0.9), (\u201cbanana\u201d, 0.2)} \u52a0\u6743 MinHash \u4f1a\u503e\u5411\u4e8e\u9009\u62e9 \u201capple\u201d \uff0c\u56e0\u5176\u6743\u91cd\u66f4\u9ad8\u3002","title":"3. Weighted MinHash"},{"location":"algorithm/minhash/#_6","text":"MinHash \u672c\u8d28 \uff1a\u901a\u8fc7\u6700\u5c0f\u54c8\u5e0c\u503c\u4f30\u8ba1\u96c6\u5408\u76f8\u4f3c\u5ea6\uff0c\u9002\u5408\u5927\u89c4\u6a21\u53bb\u91cd\u3001\u63a8\u8350\u7cfb\u7edf\u7b49\u573a\u666f\u3002 \u6539\u8fdb\u65b9\u5411 \uff1a \u964d\u4f4e\u8ba1\u7b97\u6210\u672c \uff1aOPH\uff08\u5355\u6392\u5217\u54c8\u5e0c\uff09\u3002 \u51cf\u5c11\u5b58\u50a8 \uff1aB-bit MinHash\u3002 \u652f\u6301\u590d\u6742\u6570\u636e \uff1aWeighted MinHash\uff08\u52a0\u6743\u96c6\u5408\uff09\u3002 \u5b9e\u9645\u5e94\u7528 \uff1a \u7f51\u9875\u53bb\u91cd\uff08\u5982 Google \u722c\u866b\uff09\u3001 \u534f\u540c\u8fc7\u6ee4\uff08\u7528\u6237-\u7269\u54c1\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff09\u3002","title":"\u603b\u7ed3"},{"location":"algorithm/openvocie/","text":"openvoice \u7b97\u6cd5\u903b\u8f91 \u6838\u5fc3\u7ec4\u4ef6 TTS \u6a21\u578b\u8be6\u89e3 \u652f\u6301\u7684\u8bed\u8a00 \u5de5\u4f5c\u6d41\u7a0b \u4f7f\u7528\u7279\u70b9 openvoice \u7b97\u6cd5\u903b\u8f91 \u00b6 \u6838\u5fc3\u7ec4\u4ef6 \u00b6 ToneColorConverter : \u8bed\u97f3\u8f6c\u6362\u7cfb\u7edf \u8d1f\u8d23\u58f0\u97f3\u98ce\u683c\u8f6c\u6362\u7684\u6838\u5fc3\u6a21\u578b\uff0c\u4f4d\u4e8e OpenVoiceV2/converter \u76ee\u5f55 SE Extractor : \u58f0\u97f3\u7279\u5f81\u63d0\u53d6\u5668 \u7528\u4e8e\u63d0\u53d6\u8bf4\u8bdd\u4eba\u7684\u58f0\u97f3\u7279\u5f81, \u901a\u8fc7 se_extractor.get_se() \u65b9\u6cd5\u5b9e\u73b0, \u652f\u6301 VAD (Voice Activity Detection) \u529f\u80fd \u6587\u672c\u8f6c\u8bed\u97f3\u7cfb\u7edf (TTS) \u57fa\u4e8e melo.api \u7684\u591a\u8bed\u8a00 TTS \u6a21\u578b. \u57fa\u7840\u8bf4\u8bdd\u4eba\u6a21\u578b OpenVoiceV2/base_speakers/ses/ \u76ee\u5f55. \u6bcf\u4e2a\u8bed\u8a00\u90fd\u6709\u5bf9\u5e94\u7684\u57fa\u7840\u8bf4\u8bdd\u4eba\u58f0\u97f3\u7279\u5f81\u6a21\u578b\uff08.pth \u6587\u4ef6\uff09 TTS \u6a21\u578b\u8be6\u89e3 \u00b6 \u652f\u6301\u7684\u8bed\u8a00 \u00b6 \u82f1\u8bed (EN, EN_NEWEST) \u4e2d\u6587 (ZH) \u897f\u73ed\u7259\u8bed (ES) \u6cd5\u8bed (FR) \u65e5\u8bed (JP) \u97e9\u8bed (KR) \u5de5\u4f5c\u6d41\u7a0b \u00b6 \u521d\u59cb\u5316 \u6839\u636e\u6307\u5b9a\u8bed\u8a00\u52a0\u8f7d\u5bf9\u5e94\u7684 TTS \u6a21\u578b \u914d\u7f6e\u8bbe\u5907\uff08GPU/CPU\uff09 \u52a0\u8f7d\u8bed\u8a00\u5bf9\u5e94\u7684\u8bf4\u8bdd\u4eba ID \u6620\u5c04\u8868 \u6587\u672c\u9884\u5904\u7406 \u6587\u672c\u89c4\u8303\u5316 \u6587\u672c\u5206\u8bcd \u8f6c\u6362\u4e3a\u6a21\u578b\u53ef\u5904\u7406\u7684\u8f93\u5165\u683c\u5f0f \u8bed\u97f3\u751f\u6210 \u6587\u672c\u8f6c\u6362\u4e3a\u58f0\u5b66\u7279\u5f81\uff08\u5982\u6885\u5c14\u9891\u8c31\u56fe\uff09 \u901a\u8fc7\u58f0\u7801\u5668\u5c06\u58f0\u5b66\u7279\u5f81\u8f6c\u6362\u4e3a\u6ce2\u5f62 \u652f\u6301\u8c03\u6574\u8bed\u901f\uff08speed \u53c2\u6570\uff09 \u8f93\u51fa\u5904\u7406 \u751f\u6210\u4e34\u65f6 WAV \u6587\u4ef6 \u53ef\u4ee5\u8fdb\u4e00\u6b65\u4e0e ToneColorConverter \u7ed3\u5408\u5b9e\u73b0\u58f0\u97f3\u514b\u9686 \u4f7f\u7528\u7279\u70b9 \u00b6 \u652f\u6301\u5b9e\u65f6\u751f\u6210 \u53ef\u8c03\u8282\u8bed\u901f \u6bcf\u79cd\u8bed\u8a00\u6709\u591a\u4e2a\u57fa\u7840\u8bf4\u8bdd\u4eba\u53ef\u9009 \u652f\u6301\u8de8\u8bed\u8a00\u58f0\u97f3\u514b\u9686 SE Extractor \u63d0\u53d6\u76ee\u6807\u8bf4\u8bdd\u4eba\u7684\u58f0\u97f3\u7279\u5f81 ToneColorConverter \u5c06\u57fa\u7840\u8bed\u97f3\u8f6c\u6362\u4e3a\u76ee\u6807\u8bf4\u8bdd\u4eba\u7684\u58f0\u97f3\u98ce\u683c graph TD subgraph \u6587\u672c\u8f6c\u8bed\u97f3TTS A[\u8f93\u5165\u6587\u672c] --> B[\u6587\u672c\u5206\u53e5] B --> C[TTS\u6a21\u578b] C --> D[\u57fa\u7840\u8bed\u97f3wav] end subgraph \u58f0\u97f3\u7279\u5f81\u63d0\u53d6 E[\u76ee\u6807\u97f3\u9891] --> F[\u9891\u8c31\u56fe\u751f\u6210] F --> G[\u7279\u5f81\u63d0\u53d6\u5668ref_enc] G --> H[\u76ee\u6807\u58f0\u97f3\u7279\u5f81tgt_se] end subgraph \u58f0\u97f3\u8f6c\u6362 D --> I[\u9891\u8c31\u56fe\u751f\u6210] I --> J[\u58f0\u97f3\u8f6c\u6362\u6a21\u578b] H --> J J --> K[\u8f6c\u6362\u540e\u97f3\u9891] K --> L[\u6c34\u5370\u6dfb\u52a0] L --> M[\u6700\u7ec8\u8f93\u51fawav] end subgraph \u6838\u5fc3\u6a21\u578b N[SynthesizerTrn] O[ToneColorConverter] P[WatermarkModel] end","title":"Openvocie"},{"location":"algorithm/openvocie/#openvoice","text":"","title":"openvoice \u7b97\u6cd5\u903b\u8f91"},{"location":"algorithm/openvocie/#_1","text":"ToneColorConverter : \u8bed\u97f3\u8f6c\u6362\u7cfb\u7edf \u8d1f\u8d23\u58f0\u97f3\u98ce\u683c\u8f6c\u6362\u7684\u6838\u5fc3\u6a21\u578b\uff0c\u4f4d\u4e8e OpenVoiceV2/converter \u76ee\u5f55 SE Extractor : \u58f0\u97f3\u7279\u5f81\u63d0\u53d6\u5668 \u7528\u4e8e\u63d0\u53d6\u8bf4\u8bdd\u4eba\u7684\u58f0\u97f3\u7279\u5f81, \u901a\u8fc7 se_extractor.get_se() \u65b9\u6cd5\u5b9e\u73b0, \u652f\u6301 VAD (Voice Activity Detection) \u529f\u80fd \u6587\u672c\u8f6c\u8bed\u97f3\u7cfb\u7edf (TTS) \u57fa\u4e8e melo.api \u7684\u591a\u8bed\u8a00 TTS \u6a21\u578b. \u57fa\u7840\u8bf4\u8bdd\u4eba\u6a21\u578b OpenVoiceV2/base_speakers/ses/ \u76ee\u5f55. \u6bcf\u4e2a\u8bed\u8a00\u90fd\u6709\u5bf9\u5e94\u7684\u57fa\u7840\u8bf4\u8bdd\u4eba\u58f0\u97f3\u7279\u5f81\u6a21\u578b\uff08.pth \u6587\u4ef6\uff09","title":"\u6838\u5fc3\u7ec4\u4ef6"},{"location":"algorithm/openvocie/#tts","text":"","title":"TTS \u6a21\u578b\u8be6\u89e3"},{"location":"algorithm/openvocie/#_2","text":"\u82f1\u8bed (EN, EN_NEWEST) \u4e2d\u6587 (ZH) \u897f\u73ed\u7259\u8bed (ES) \u6cd5\u8bed (FR) \u65e5\u8bed (JP) \u97e9\u8bed (KR)","title":"\u652f\u6301\u7684\u8bed\u8a00"},{"location":"algorithm/openvocie/#_3","text":"\u521d\u59cb\u5316 \u6839\u636e\u6307\u5b9a\u8bed\u8a00\u52a0\u8f7d\u5bf9\u5e94\u7684 TTS \u6a21\u578b \u914d\u7f6e\u8bbe\u5907\uff08GPU/CPU\uff09 \u52a0\u8f7d\u8bed\u8a00\u5bf9\u5e94\u7684\u8bf4\u8bdd\u4eba ID \u6620\u5c04\u8868 \u6587\u672c\u9884\u5904\u7406 \u6587\u672c\u89c4\u8303\u5316 \u6587\u672c\u5206\u8bcd \u8f6c\u6362\u4e3a\u6a21\u578b\u53ef\u5904\u7406\u7684\u8f93\u5165\u683c\u5f0f \u8bed\u97f3\u751f\u6210 \u6587\u672c\u8f6c\u6362\u4e3a\u58f0\u5b66\u7279\u5f81\uff08\u5982\u6885\u5c14\u9891\u8c31\u56fe\uff09 \u901a\u8fc7\u58f0\u7801\u5668\u5c06\u58f0\u5b66\u7279\u5f81\u8f6c\u6362\u4e3a\u6ce2\u5f62 \u652f\u6301\u8c03\u6574\u8bed\u901f\uff08speed \u53c2\u6570\uff09 \u8f93\u51fa\u5904\u7406 \u751f\u6210\u4e34\u65f6 WAV \u6587\u4ef6 \u53ef\u4ee5\u8fdb\u4e00\u6b65\u4e0e ToneColorConverter \u7ed3\u5408\u5b9e\u73b0\u58f0\u97f3\u514b\u9686","title":"\u5de5\u4f5c\u6d41\u7a0b"},{"location":"algorithm/openvocie/#_4","text":"\u652f\u6301\u5b9e\u65f6\u751f\u6210 \u53ef\u8c03\u8282\u8bed\u901f \u6bcf\u79cd\u8bed\u8a00\u6709\u591a\u4e2a\u57fa\u7840\u8bf4\u8bdd\u4eba\u53ef\u9009 \u652f\u6301\u8de8\u8bed\u8a00\u58f0\u97f3\u514b\u9686 SE Extractor \u63d0\u53d6\u76ee\u6807\u8bf4\u8bdd\u4eba\u7684\u58f0\u97f3\u7279\u5f81 ToneColorConverter \u5c06\u57fa\u7840\u8bed\u97f3\u8f6c\u6362\u4e3a\u76ee\u6807\u8bf4\u8bdd\u4eba\u7684\u58f0\u97f3\u98ce\u683c graph TD subgraph \u6587\u672c\u8f6c\u8bed\u97f3TTS A[\u8f93\u5165\u6587\u672c] --> B[\u6587\u672c\u5206\u53e5] B --> C[TTS\u6a21\u578b] C --> D[\u57fa\u7840\u8bed\u97f3wav] end subgraph \u58f0\u97f3\u7279\u5f81\u63d0\u53d6 E[\u76ee\u6807\u97f3\u9891] --> F[\u9891\u8c31\u56fe\u751f\u6210] F --> G[\u7279\u5f81\u63d0\u53d6\u5668ref_enc] G --> H[\u76ee\u6807\u58f0\u97f3\u7279\u5f81tgt_se] end subgraph \u58f0\u97f3\u8f6c\u6362 D --> I[\u9891\u8c31\u56fe\u751f\u6210] I --> J[\u58f0\u97f3\u8f6c\u6362\u6a21\u578b] H --> J J --> K[\u8f6c\u6362\u540e\u97f3\u9891] K --> L[\u6c34\u5370\u6dfb\u52a0] L --> M[\u6700\u7ec8\u8f93\u51fawav] end subgraph \u6838\u5fc3\u6a21\u578b N[SynthesizerTrn] O[ToneColorConverter] P[WatermarkModel] end","title":"\u4f7f\u7528\u7279\u70b9"},{"location":"algorithm/simhash/","text":"SimHash \u548c MinHash \u7684\u533a\u522b 1. \u8bbe\u8ba1\u76ee\u6807 2. \u5de5\u4f5c\u539f\u7406\u5bf9\u6bd4 (1) MinHash\uff08\u57fa\u4e8e\u96c6\u5408\uff09 (2) SimHash\uff08\u57fa\u4e8e\u5411\u91cf\uff09 3. \u9002\u7528\u573a\u666f 4. \u5173\u952e\u533a\u522b\u603b\u7ed3 5. \u5982\u4f55\u9009\u62e9\uff1f \u9644\uff1a\u4e24\u8005\u7ed3\u5408\u7684\u53ef\u80fd\u6027 SimHash \u539f\u7406\u8be6\u89e3 1. SimHash \u5de5\u4f5c\u539f\u7406 \u8f93\u5165\u4e0e\u8f93\u51fa \u6b65\u9aa4 2. \u5982\u4f55\u5b9e\u73b0\u67e5\u91cd\uff1f \u6d41\u7a0b \u4f18\u5316\u65b9\u6cd5 3. \u5982\u4f55\u5904\u7406\u987a\u5e8f\u548c\u65e0\u7528\u8bcd\uff1f \u987a\u5e8f\u65e0\u5173\u6027 \u53bb\u9664\u65e0\u7528\u8bcd 4. \u5b9e\u9645\u6848\u4f8b \u6587\u6863\u53bb\u91cd\u573a\u666f 5. \u4f18\u7f3a\u70b9 \u4f18\u70b9 \u7f3a\u70b9 6. \u6539\u8fdb\u65b9\u5411 \u603b\u7ed3 SimHash \u7528\u4e8e\u8bba\u6587\u67e5\u91cd\u7684\u5177\u4f53\u4f8b\u5b50 1. \u8f93\u5165\u8bba\u6587\u6587\u672c 2. SimHash \u67e5\u91cd\u6b65\u9aa4 Step 1: \u9884\u5904\u7406\uff08\u5206\u8bcd\u3001\u53bb\u505c\u7528\u8bcd\u3001\u8bcd\u5e72\u5316\uff09 Step 2: \u8ba1\u7b97 TF-IDF \u6743\u91cd Step 3: \u751f\u6210 SimHash \u6307\u7eb9 Step 4: \u8ba1\u7b97\u6c49\u660e\u8ddd\u79bb Step 5: \u5224\u5b9a\u7ed3\u679c 3. \u5982\u4f55\u5904\u7406\u8bcd\u5e8f\u548c\u8bed\u4e49\uff1f \u8bcd\u5e8f\u95ee\u9898 \u8bed\u4e49\u95ee\u9898 4. \u5b9e\u9645\u5de5\u5177\u63a8\u8350 5. \u603b\u7ed3 \ud83c\udfaf \u76ee\u6807\uff1a\u6539\u8fdb SimHash\uff0c\u4f7f\u5176\u80fd\u8bc6\u522b\u201c\u987a\u5e8f\u6539\u53d8\u4f46\u5185\u5bb9\u7c7b\u4f3c\u201d\u7684\u6587\u672c \ud83e\udde9 Step 1\uff1a\u6587\u672c\u9884\u5904\u7406 \u793a\u4f8b\uff1a \ud83e\udde9 Step 2\uff1a\u751f\u6210 n-gram \u7279\u5f81\uff08\u6bd4\u5982 2-gram \u6216 3-gram\uff09 \ud83e\udde9 Step 3\uff1a\u5bf9\u6bcf\u4e2a n-gram \u8ba1\u7b97\u54c8\u5e0c\u503c\u5e76\u7d2f\u52a0\u5411\u91cf \ud83e\udde9 Step 4\uff1a\u8ba1\u7b97\u6700\u7ec8 SimHash \u503c \u2705 \u6bd4\u5bf9\u65b9\u5f0f \ud83d\udd0d \u4e3e\u4e2a\u4f8b\u5b50 \u539f\u6587\uff1a \u6539\u5199\u540e\uff1a \u2757 \u6f5c\u5728\u95ee\u9898 & \u5bf9\u7b56 \ud83d\udd27 \u5b9e\u6218\u5efa\u8bae SimHash \u548c MinHash \u7684\u533a\u522b \u00b6 \u6838\u5fc3\u7ed3\u8bba \uff1a \u4e0d\u4e00\u6837 \uff01\u867d\u7136\u4e24\u8005\u90fd\u662f\u7528\u4e8e\u9ad8\u6548\u8ba1\u7b97\u76f8\u4f3c\u5ea6\u7684\u54c8\u5e0c\u6280\u672f\uff0c\u4f46\u8bbe\u8ba1\u76ee\u6807\u3001\u9002\u7528\u573a\u666f\u548c\u539f\u7406\u5b8c\u5168\u4e0d\u540c\u3002 1. \u8bbe\u8ba1\u76ee\u6807 \u00b6 \u7279\u6027 MinHash SimHash \u4e3b\u8981\u7528\u9014 \u4f30\u8ba1 \u96c6\u5408\u76f8\u4f3c\u5ea6 \uff08Jaccard\uff09 \u4f30\u8ba1 \u6587\u6863\u76f8\u4f3c\u5ea6 \uff08\u4f59\u5f26/\u6c49\u660e\uff09 \u8f93\u5165\u6570\u636e \u96c6\u5408\uff08\u5982\u8bcd\u888b\u3001\u7528\u6237\u884c\u4e3a\u8bb0\u5f55\uff09 \u9ad8\u7ef4\u7279\u5f81\u5411\u91cf\uff08\u5982TF-IDF\u3001\u8bcd\u9891\uff09 \u8f93\u51fa\u76f8\u4f3c\u5ea6 Jaccard \u76f8\u4f3c\u5ea6\uff080~1\uff09 \u6c49\u660e\u8ddd\u79bb\u6216\u4f59\u5f26\u76f8\u4f3c\u5ea6 2. \u5de5\u4f5c\u539f\u7406\u5bf9\u6bd4 \u00b6 (1) MinHash\uff08\u57fa\u4e8e\u96c6\u5408\uff09 \u00b6 \u76ee\u6807 \uff1a\u4f30\u8ba1\u4e24\u4e2a\u96c6\u5408\u7684 Jaccard \u76f8\u4f3c\u5ea6 \\( J(A,B) = \\frac{|A \\cap B|}{|A \\cup B|} \\) \u3002 \u6b65\u9aa4 \uff1a \u5bf9\u96c6\u5408\u4e2d\u6bcf\u4e2a\u5143\u7d20\u5e94\u7528\u54c8\u5e0c\u51fd\u6570\uff0c\u53d6\u6240\u6709\u54c8\u5e0c\u503c\u7684**\u6700\u5c0f\u503c**\uff08MinHash\uff09\u3002 \u901a\u8fc7\u591a\u4e2a\u54c8\u5e0c\u51fd\u6570\u751f\u6210\u7b7e\u540d\uff0c\u7edf\u8ba1\u76f8\u540c MinHash \u7684\u6bd4\u4f8b\u4f5c\u4e3a\u76f8\u4f3c\u5ea6\u4f30\u8ba1\u3002 \u5173\u952e\u70b9 \uff1a \u4ec5\u9002\u7528\u4e8e**\u4e8c\u5143\u5b58\u5728\u5224\u65ad**\uff08\u5143\u7d20\u662f\u5426\u5728\u96c6\u5408\u4e2d\uff09\u3002 \u5bf9\u96c6\u5408\u987a\u5e8f\u4e0d\u654f\u611f\u3002 \u4f8b\u5b50 \uff1a - \u96c6\u5408 A = {\"apple\", \"banana\"}\uff0c\u96c6\u5408 B = {\"apple\", \"orange\"} - MinHash \u4f1a\u7edf\u8ba1\u5171\u540c\u5143\u7d20 \"apple\" \u7684\u6bd4\u4f8b\u3002 (2) SimHash\uff08\u57fa\u4e8e\u5411\u91cf\uff09 \u00b6 \u76ee\u6807 \uff1a\u4f30\u8ba1\u4e24\u4e2a\u5411\u91cf\u7684**\u4f59\u5f26\u76f8\u4f3c\u5ea6**\uff08\u5982\u6587\u6863\u7684TF-IDF\u5411\u91cf\uff09\u3002 \u6b65\u9aa4 \uff1a \u5bf9\u5411\u91cf\u7684\u6bcf\u4e2a\u7ef4\u5ea6\u52a0\u6743\uff08\u5982TF-IDF\u503c\uff09\uff0c\u751f\u6210\u4e8c\u8fdb\u5236\u54c8\u5e0c\u503c\uff08+1/-1\uff09\u3002 \u5bf9\u6240\u6709\u7ef4\u5ea6\u6c42\u548c\u5e76\u4e8c\u503c\u5316\uff08>0\u21921\uff0c\u22640\u21920\uff09\uff0c\u5f97\u5230\u56fa\u5b9a\u957f\u5ea6\u7684SimHash\u6307\u7eb9\u3002 \u901a\u8fc7**\u6c49\u660e\u8ddd\u79bb**\uff08\u4e0d\u540c\u6bd4\u7279\u6570\uff09\u8861\u91cf\u76f8\u4f3c\u5ea6\u3002 \u5173\u952e\u70b9 \uff1a \u9002\u7528\u4e8e**\u52a0\u6743\u7279\u5f81**\uff08\u5982\u8bcd\u9891\u3001TF-IDF\uff09\u3002 \u5bf9\u8f93\u5165\u987a\u5e8f\u654f\u611f\uff08\u4f9d\u8d56\u7279\u5f81\u7ef4\u5ea6\u987a\u5e8f\uff09\u3002 \u4f8b\u5b50 \uff1a - \u6587\u68631\uff1a\"apple banana\"\uff08TF-IDF\u5411\u91cf [0.7, 0.3]\uff09 - \u6587\u68632\uff1a\"apple orange\"\uff08TF-IDF\u5411\u91cf [0.6, 0.4]\uff09 - SimHash \u4f1a\u751f\u6210\u4e8c\u8fdb\u5236\u6307\u7eb9\uff08\u5982 1101 \u548c 1011 \uff09\uff0c\u901a\u8fc7\u6c49\u660e\u8ddd\u79bb\u6bd4\u8f83\u3002 3. \u9002\u7528\u573a\u666f \u00b6 \u573a\u666f MinHash SimHash \u7f51\u9875\u53bb\u91cd \u2714 \u9002\u5408\uff08\u96c6\u5408\u578b\u6570\u636e\uff0c\u5982URL\u96c6\u5408\uff09 \u2714 \u9002\u5408\uff08\u6587\u6863\u5185\u5bb9\u6307\u7eb9\uff09 \u63a8\u8350\u7cfb\u7edf \u2714 \u7528\u6237-\u7269\u54c1\u4ea4\u4e92\u96c6\u5408 \u2716 \u4e0d\u76f4\u63a5\u9002\u7528 \u6587\u672c\u76f8\u4f3c\u5ea6 \u2716 \u9700\u5148\u8f6c\u4e3a\u8bcd\u888b\u96c6\u5408 \u2714 \u76f4\u63a5\u5904\u7406TF-IDF\u5411\u91cf \u5927\u89c4\u6a21\u68c0\u7d22 \u2714 \u7ed3\u5408LSH\u5feb\u901f\u8fc7\u6ee4 \u2714 \u6c49\u660e\u8ddd\u79bb\u9ad8\u6548\u8ba1\u7b97 4. \u5173\u952e\u533a\u522b\u603b\u7ed3 \u00b6 \u7ef4\u5ea6 MinHash SimHash \u6570\u5b66\u57fa\u7840 Jaccard \u76f8\u4f3c\u5ea6 \u4f59\u5f26\u76f8\u4f3c\u5ea6 + \u6c49\u660e\u8ddd\u79bb \u54c8\u5e0c\u8f93\u51fa \u591a\u4e2a\u6700\u5c0f\u503c\uff08\u7b7e\u540d\uff09 \u56fa\u5b9a\u957f\u5ea6\u7684\u4e8c\u8fdb\u5236\u6307\u7eb9 \u6297\u566a\u58f0\u80fd\u529b \u5bf9\u96c6\u5408\u5143\u7d20\u589e\u51cf\u654f\u611f \u5bf9\u7279\u5f81\u6743\u91cd\u53d8\u5316\u9c81\u68d2 \u8ba1\u7b97\u6548\u7387 \u9700\u591a\u4e2a\u54c8\u5e0c\u51fd\u6570 \u5355\u6b21\u54c8\u5e0c\u751f\u6210\u6307\u7eb9 5. \u5982\u4f55\u9009\u62e9\uff1f \u00b6 \u7528 MinHash \u5982\u679c \uff1a \u6570\u636e\u662f**\u96c6\u5408**\uff08\u5982\u7528\u6237\u70b9\u51fb\u8bb0\u5f55\u3001\u5173\u952e\u8bcd\u96c6\u5408\uff09\u3002 \u9700\u8981\u5feb\u901f\u4f30\u8ba1**\u4ea4\u96c6\u5360\u6bd4**\uff08Jaccard\uff09\u3002 \u7528 SimHash \u5982\u679c \uff1a \u6570\u636e\u662f**\u52a0\u6743\u5411\u91cf**\uff08\u5982\u6587\u6863TF-IDF\u3001\u56fe\u50cf\u7279\u5f81\uff09\u3002 \u9700\u8981\u62b5\u6297\u8f7b\u5fae\u53d8\u5316\uff08\u5982\u6587\u672c\u5c11\u91cf\u7f16\u8f91\uff09\u3002 \u9644\uff1a\u4e24\u8005\u7ed3\u5408\u7684\u53ef\u80fd\u6027 \u00b6 \u5728\u590d\u6742\u573a\u666f\u4e2d\uff08\u5982\u6587\u6863\u53bb\u91cd\uff09\uff0c\u53ef\u4ee5\uff1a 1. \u5148\u7528 SimHash \u5feb\u901f\u8fc7\u6ee4\u76f8\u4f3c\u6587\u6863\uff08\u6c49\u660e\u8ddd\u79bb\u8fd1\u7684\u5019\u9009\u5bf9\uff09\u3002 2. \u518d\u7528 MinHash \u7cbe\u786e\u8ba1\u7b97 Jaccard \u76f8\u4f3c\u5ea6\uff0c\u51cf\u5c11\u8ba1\u7b97\u91cf\u3002 \u8fd9\u79cd\u6df7\u5408\u7b56\u7565\u517c\u987e\u4e86\u6548\u7387\u548c\u7cbe\u5ea6\u3002 SimHash \u539f\u7406\u8be6\u89e3 \u00b6 SimHash \u662f\u4e00\u79cd\u7528\u4e8e \u5feb\u901f\u4f30\u8ba1\u6587\u6863\u76f8\u4f3c\u5ea6 \u7684\u5c40\u90e8\u654f\u611f\u54c8\u5e0c\uff08LSH\uff09\u6280\u672f\uff0c\u7531 Moses Charikar \u57282002\u5e74\u63d0\u51fa\uff0c\u540e\u88ab Google \u7528\u4e8e\u5927\u89c4\u6a21\u7f51\u9875\u53bb\u91cd\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u9ad8\u7ef4\u7279\u5f81\uff08\u5982\u6587\u672c\u8bcd\u9891\uff09\u538b\u7f29\u4e3a\u56fa\u5b9a\u957f\u5ea6\u7684\u4e8c\u8fdb\u5236\u6307\u7eb9\uff08fingerprint\uff09\uff0c\u5e76\u901a\u8fc7 \u6c49\u660e\u8ddd\u79bb\uff08Hamming Distance\uff09 \u8861\u91cf\u76f8\u4f3c\u5ea6\u3002 1. SimHash \u5de5\u4f5c\u539f\u7406 \u00b6 \u8f93\u5165\u4e0e\u8f93\u51fa \u00b6 \u8f93\u5165 \uff1a\u6587\u6863\u7684\u7279\u5f81\u5411\u91cf\uff08\u5982 TF-IDF \u52a0\u6743\u8bcd\u9891\u3001n-gram \u7b49\uff09\u3002 \u8f93\u51fa \uff1a\u56fa\u5b9a\u957f\u5ea6\u7684\u4e8c\u8fdb\u5236\u6307\u7eb9\uff08\u5982 64-bit \u54c8\u5e0c\u503c\uff09\u3002 \u6b65\u9aa4 \u00b6 \u7279\u5f81\u63d0\u53d6\u4e0e\u52a0\u6743 \u5bf9\u6587\u6863\u5206\u8bcd\uff0c\u751f\u6210\u7279\u5f81\uff08\u5982\u5355\u8bcd\u6216 n-gram\uff09\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u7279\u5f81\u8d4b\u4e88\u6743\u91cd\uff08\u5982 TF-IDF \u503c\uff09\u3002 \u4f8b\u5982\uff1a\u6587\u6863 \"apple banana apple\" \u2192 {\"apple\": 2, \"banana\": 1}\uff08\u6743\u91cd\u53ef\u5f52\u4e00\u5316\uff09\u3002 \u54c8\u5e0c\u6620\u5c04 \u5bf9\u6bcf\u4e2a\u7279\u5f81\u751f\u6210\u4e00\u4e2a \u4e8c\u8fdb\u5236\u54c8\u5e0c\u503c \uff08\u5982\u7528 MurmurHash \u5f97\u5230 64-bit \u54c8\u5e0c\uff09\u3002 \u4f8b\u5982\uff1a hash(\"apple\") = 1011 , hash(\"banana\") = 0110 \uff08\u7b80\u5316\u793a\u4f8b\uff09\u3002 \u52a0\u6743\u53e0\u52a0 \u5bf9\u54c8\u5e0c\u503c\u7684\u6bcf\u4e00\u4f4d\uff1a \u5982\u679c\u8be5\u4f4d\u4e3a 1 \uff0c\u5219\u52a0\u4e0a\u7279\u5f81\u7684\u6743\u91cd\uff1b \u5982\u679c\u8be5\u4f4d\u4e3a 0 \uff0c\u5219\u51cf\u53bb\u7279\u5f81\u7684\u6743\u91cd\u3002 \u4f8b\u5982\uff1a \"apple\" (\u6743\u91cd=2) \u7684\u54c8\u5e0c 1011 \u2192 \u5411\u91cf [+2, -2, +2, +2] \"banana\" (\u6743\u91cd=1) \u7684\u54c8\u5e0c 0110 \u2192 \u5411\u91cf [-1, +1, +1, -1] \u53e0\u52a0\u7ed3\u679c\uff1a [+1, -1, +3, +1] \u4e8c\u503c\u5316\u751f\u6210\u6307\u7eb9 \u5bf9\u53e0\u52a0\u7ed3\u679c\u7684\u6bcf\u4e00\u4f4d\uff1a \u82e5\u503c > 0\uff0c\u5219\u8be5\u4f4d\u4e3a 1 \uff1b \u82e5\u503c \u2264 0\uff0c\u5219\u8be5\u4f4d\u4e3a 0 \u3002 \u4e0a\u4f8b\u7ed3\u679c [+1, -1, +3, +1] \u2192 SimHash \u6307\u7eb9 1011 \u3002 \u76f8\u4f3c\u5ea6\u8ba1\u7b97 \u901a\u8fc7\u4e24\u7bc7\u6587\u6863\u7684 SimHash \u6307\u7eb9\u7684 \u6c49\u660e\u8ddd\u79bb \uff08\u4e0d\u540c\u6bd4\u7279\u6570\uff09\u5224\u65ad\u76f8\u4f3c\u5ea6\u3002 \u6c49\u660e\u8ddd\u79bb\u8d8a\u5c0f\uff0c\u6587\u6863\u8d8a\u76f8\u4f3c\uff08\u5982\u8ddd\u79bb \u2264 3 \u53ef\u8ba4\u4e3a\u91cd\u590d\uff09\u3002 2. \u5982\u4f55\u5b9e\u73b0\u67e5\u91cd\uff1f \u00b6 \u6d41\u7a0b \u00b6 \u9884\u5904\u7406 \u5206\u8bcd\u3001\u53bb\u505c\u7528\u8bcd\uff08\u5982 \"the\", \"and\"\uff09\u3001\u8bcd\u5e72\u5316\uff08\u5982 \"running\" \u2192 \"run\"\uff09\u3002 \u8fc7\u6ee4\u4f4e\u9891\u8bcd\uff08\u51cf\u5c11\u566a\u58f0\uff09\u548c\u9ad8\u9891\u8bcd\uff08\u5982\u901a\u7528\u8bcd\uff09\u3002 \u751f\u6210 SimHash \u6307\u7eb9\u5e93 \u5bf9\u6bcf\u4e2a\u6587\u6863\u8ba1\u7b97 SimHash\uff0c\u5e76\u5b58\u50a8\u5230\u6570\u636e\u5e93\u6216\u5012\u6392\u7d22\u5f15\u4e2d\u3002 \u5feb\u901f\u68c0\u7d22 \u7ed9\u5b9a\u4e00\u4e2a\u65b0\u6587\u6863\uff0c\u8ba1\u7b97\u5176 SimHash\uff0c\u4e0e\u5e93\u4e2d\u6307\u7eb9\u6bd4\u5bf9\u6c49\u660e\u8ddd\u79bb\u3002 \u82e5\u6c49\u660e\u8ddd\u79bb \u2264 \u9608\u503c\uff08\u5982 3\uff09\uff0c\u5219\u5224\u5b9a\u4e3a\u91cd\u590d\u6216\u76f8\u4f3c\u3002 \u4f18\u5316\u65b9\u6cd5 \u00b6 \u5206\u5757\u68c0\u7d22 \uff1a\u5c06 64-bit \u6307\u7eb9\u5206\u6210 4 \u6bb5\uff0c\u5229\u7528\u5012\u6392\u7d22\u5f15\u52a0\u901f\uff08\u5982\u5148\u5339\u914d\u9ad816\u4f4d\uff09\u3002 \u5c40\u90e8\u654f\u611f\u54c8\u5e0c\uff08LSH\uff09 \uff1a\u8fdb\u4e00\u6b65\u538b\u7f29\u6307\u7eb9\uff0c\u5feb\u901f\u8fc7\u6ee4\u5019\u9009\u96c6\u3002 3. \u5982\u4f55\u5904\u7406\u987a\u5e8f\u548c\u65e0\u7528\u8bcd\uff1f \u00b6 \u987a\u5e8f\u65e0\u5173\u6027 \u00b6 SimHash \u4e0d\u4f9d\u8d56\u8bcd\u5e8f \uff0c\u56e0\u4e3a\u5b83\u662f\u57fa\u4e8e\u8bcd\u9891\u7684\u52a0\u6743\u7edf\u8ba1\u3002 \u4f8b\u5982\uff1a\"apple banana\" \u548c \"banana apple\" \u7684 SimHash \u76f8\u540c\u3002 \u82e5\u9700\u4fdd\u7559\u987a\u5e8f\u4fe1\u606f\uff0c\u53ef\u4f7f\u7528 n-gram \u7279\u5f81 \uff08\u5982 2-gram\uff1a\"apple banana\" \u2192 [\"ap\", \"pp\", \"pl\", ...]\uff09\u3002 \u53bb\u9664\u65e0\u7528\u8bcd \u00b6 \u505c\u7528\u8bcd\u8fc7\u6ee4 \u79fb\u9664\u65e0\u610f\u4e49\u7684\u5e38\u7528\u8bcd\uff08\u5982 \"a\", \"the\", \"of\"\uff09\u3002 TF-IDF \u52a0\u6743 \u81ea\u52a8\u964d\u4f4e\u9ad8\u9891\u8bcd\uff08\u65e0\u7528\u8bcd\uff09\u7684\u6743\u91cd\uff0c\u63d0\u5347\u5173\u952e\u8bcd\u8bed\u4e49\u8d21\u732e\u3002 \u4f4e\u9891\u8bcd\u8fc7\u6ee4 \u5220\u9664\u4ec5\u51fa\u73b01\u6b21\u7684\u8bcd\uff08\u53ef\u80fd\u4e3a\u566a\u58f0\uff09\u3002 4. \u5b9e\u9645\u6848\u4f8b \u00b6 \u6587\u6863\u53bb\u91cd\u573a\u666f \u00b6 \u6587\u68631 : \"The quick brown fox jumps over the lazy dog\" \u6587\u68632 : \"A quick brown fox leaps over a lazy dog\" \u6b65\u9aa4 \uff1a \u5206\u8bcd\u5e76\u53bb\u505c\u7528\u8bcd\uff08\"the\", \"a\"\uff09\u2192 {\"quick\", \"brown\", \"fox\", \"jumps\", \"lazy\", \"dog\"} \u8ba1\u7b97 TF-IDF \u6743\u91cd\uff08\u5047\u8bbe \"jumps\" \u548c \"leaps\" \u6743\u91cd\u4f4e\uff09\u3002 \u751f\u6210 SimHash\uff1a\u4e24\u6587\u6863\u56e0\u6838\u5fc3\u8bcd\u76f8\u540c\uff0cSimHash \u6c49\u660e\u8ddd\u79bb\u5f88\u5c0f\uff0c\u5224\u5b9a\u4e3a\u76f8\u4f3c\u3002 5. \u4f18\u7f3a\u70b9 \u00b6 \u4f18\u70b9 \u00b6 \u9ad8\u6548 \uff1a\u6307\u7eb9\u56fa\u5b9a\u957f\u5ea6\uff0c\u6c49\u660e\u8ddd\u79bb\u8ba1\u7b97\u5feb\uff08\u4f4d\u8fd0\u7b97\uff09\u3002 \u6297\u566a\u58f0 \uff1a\u5bf9\u5c11\u91cf\u8bcd\u4fee\u6539\uff08\u5982\u62fc\u5199\u9519\u8bef\uff09\u9c81\u68d2\u3002 \u7f3a\u70b9 \u00b6 \u957f\u6587\u672c\u6548\u679c\u5dee \uff1a\u7279\u5f81\u7ef4\u5ea6\u9ad8\u65f6\uff0c\u6743\u91cd\u5206\u6563\uff0c\u533a\u5206\u5ea6\u4e0b\u964d\u3002 \u8bed\u4e49\u7f3a\u5931 \uff1a\u540c\u4e49\u8bcd\uff08\u5982 \"happy\" \u548c \"joyful\"\uff09\u65e0\u6cd5\u76f4\u63a5\u5173\u8054\u3002 6. \u6539\u8fdb\u65b9\u5411 \u00b6 \u7ed3\u5408\u8bed\u4e49\u54c8\u5e0c \uff1a\u5148\u7528 Word2Vec \u6216 BERT \u7f16\u7801\u8bcd\u8bed\u4e49\uff0c\u518d\u751f\u6210 SimHash\u3002 \u52a8\u6001\u6743\u91cd\u8c03\u6574 \uff1a\u6839\u636e\u8bcd\u6027\uff08\u540d\u8bcd\u6743\u91cd > \u5f62\u5bb9\u8bcd\uff09\u4f18\u5316\u7279\u5f81\u3002 \u6df7\u5408 MinHash \uff1a\u5bf9\u957f\u6587\u672c\u5148\u7528 SimHash \u7c97\u7b5b\uff0c\u518d\u7528 MinHash \u7cbe\u7b97\u3002 \u603b\u7ed3 \u00b6 SimHash \u901a\u8fc7 \u52a0\u6743\u54c8\u5e0c\u53e0\u52a0+\u4e8c\u503c\u5316 \u5c06\u6587\u6863\u538b\u7f29\u4e3a\u6307\u7eb9\uff0c\u9002\u5408\u6d77\u91cf\u6587\u672c\u53bb\u91cd\u3002\u5176\u5173\u952e\u5728\u4e8e\uff1a \u7279\u5f81\u9009\u62e9 \uff08TF-IDF\u3001n-gram\uff09\u548c \u53bb\u566a \uff08\u505c\u7528\u8bcd\u8fc7\u6ee4\uff09\u3002 \u6c49\u660e\u8ddd\u79bb\u5feb\u901f\u6bd4\u5bf9 \uff0c\u9608\u503c\u9700\u6839\u636e\u573a\u666f\u8c03\u6574\uff08\u901a\u5e38 3~5\uff09\u3002 \u4e0e\u8bcd\u5e8f\u65e0\u5173 \uff0c\u4f46\u53ef\u901a\u8fc7 n-gram \u4fdd\u7559\u5c40\u90e8\u987a\u5e8f\u4fe1\u606f\u3002 \u4ee3\u7801\u5b9e\u73b0\u53ef\u53c2\u8003 Google \u7684 simhash-py \u6216 gensim \u5e93\u3002 SimHash \u7528\u4e8e\u8bba\u6587\u67e5\u91cd\u7684\u5177\u4f53\u4f8b\u5b50 \u00b6 \u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5177\u4f53\u7684\u8bba\u6587\u67e5\u91cd\u573a\u666f\uff0c\u8bf4\u660e SimHash \u5982\u4f55\u5b9e\u73b0\u6587\u672c\u53bb\u91cd\uff0c\u5e76\u5c55\u793a\u5176\u5982\u4f55\u5904\u7406\u8bcd\u5e8f\u3001\u505c\u7528\u8bcd\u7b49\u95ee\u9898\u3002 1. \u8f93\u5165\u8bba\u6587\u6587\u672c \u00b6 \u5047\u8bbe\u6709\u4e24\u7bc7\u8bba\u6587\u7684\u6458\u8981\uff1a - \u539f\u6587\uff08A\uff09 : \"Deep learning models have achieved remarkable success in computer vision tasks. These models rely on large-scale datasets and powerful GPUs.\" \u6284\u88ad\u6587\uff08B\uff09 : \"In computer vision tasks, deep learning models show great success. They depend on large datasets and strong GPU computing.\" \u65e0\u5173\u6587\uff08C\uff09 : \"Traditional machine learning methods require feature engineering, while deep learning automates this process.\" 2. SimHash \u67e5\u91cd\u6b65\u9aa4 \u00b6 Step 1: \u9884\u5904\u7406\uff08\u5206\u8bcd\u3001\u53bb\u505c\u7528\u8bcd\u3001\u8bcd\u5e72\u5316\uff09 \u00b6 \u5206\u8bcd \uff1a \u539f\u6587\uff08A\uff09: [\"deep\", \"learning\", \"models\", \"achieved\", \"remarkable\", \"success\", \"computer\", \"vision\", \"tasks\", \"these\", \"models\", \"rely\", \"large\", \"scale\", \"datasets\", \"powerful\", \"gpus\"] \u6284\u88ad\u6587\uff08B\uff09: [\"computer\", \"vision\", \"tasks\", \"deep\", \"learning\", \"models\", \"show\", \"great\", \"success\", \"they\", \"depend\", \"large\", \"datasets\", \"strong\", \"gpu\", \"computing\"] \u65e0\u5173\u6587\uff08C\uff09: [\"traditional\", \"machine\", \"learning\", \"methods\", \"require\", \"feature\", \"engineering\", \"while\", \"deep\", \"learning\", \"automates\", \"process\"] \u53bb\u505c\u7528\u8bcd \uff08\u79fb\u9664 \"these\", \"they\", \"while\" \u7b49\u65e0\u610f\u4e49\u8bcd\uff09\uff1a \u539f\u6587\uff08A\uff09: [\"deep\", \"learning\", \"models\", \"achieved\", \"remarkable\", \"success\", \"computer\", \"vision\", \"tasks\", \"models\", \"rely\", \"large\", \"scale\", \"datasets\", \"powerful\", \"gpus\"] \u6284\u88ad\u6587\uff08B\uff09: [\"computer\", \"vision\", \"tasks\", \"deep\", \"learning\", \"models\", \"show\", \"great\", \"success\", \"depend\", \"large\", \"datasets\", \"strong\", \"gpu\", \"computing\"] \u8bcd\u5e72\u5316 \uff08\u5982 \"achieved\" \u2192 \"achiev\", \"computing\" \u2192 \"comput\"\uff09\uff1a \u539f\u6587\uff08A\uff09: [\"deep\", \"learn\", \"model\", \"achiev\", \"remark\", \"success\", \"comput\", \"vision\", \"task\", \"model\", \"reli\", \"larg\", \"scale\", \"dataset\", \"power\", \"gpus\"] \u6284\u88ad\u6587\uff08B\uff09: [\"comput\", \"vision\", \"task\", \"deep\", \"learn\", \"model\", \"show\", \"great\", \"success\", \"depend\", \"larg\", \"dataset\", \"strong\", \"gpu\", \"comput\"] Step 2: \u8ba1\u7b97 TF-IDF \u6743\u91cd \u00b6 \u5047\u8bbe\u8bed\u6599\u5e93\u4e2d\u6240\u6709\u8bcd\u7684 IDF \u503c\u5982\u4e0b\uff08\u7b80\u5316\u793a\u4f8b\uff09\uff1a \u5355\u8bcd IDF \u6743\u91cd deep 0.1 comput 0.2 vision 0.3 success 0.4 ... ... \u539f\u6587\uff08A\uff09\u7684 TF-IDF \u5411\u91cf\uff08\u90e8\u5206\uff09\uff1a {\"deep\": 0.1*2, \"comput\": 0.2*1, \"success\": 0.4*1, ...} \u6284\u88ad\u6587\uff08B\uff09\u7684 TF-IDF \u5411\u91cf\uff1a {\"deep\": 0.1*1, \"comput\": 0.2*2, \"success\": 0.4*1, ...} Step 3: \u751f\u6210 SimHash \u6307\u7eb9 \u00b6 \u5bf9\u6bcf\u4e2a\u8bcd\u751f\u6210 64-bit \u54c8\u5e0c\uff08\u5047\u8bbe\u7b80\u5316\u7248 4-bit\uff09\uff1a hash(\"deep\") = 1100 , hash(\"comput\") = 1010 , hash(\"success\") = 0110 \u52a0\u6743\u53e0\u52a0 \uff08\u6743\u91cd=TF-IDF\u503c\uff09\uff1a \u539f\u6587\uff08A\uff09: \"deep\" (\u6743\u91cd=0.2): [+0.2, +0.2, -0.2, -0.2] \"comput\" (\u6743\u91cd=0.2): [+0.2, -0.2, +0.2, -0.2] \"success\" (\u6743\u91cd=0.4): [-0.4, +0.4, +0.4, -0.4] \u53e0\u52a0\u7ed3\u679c: [0.0, +0.4, +0.4, -0.8] \u4e8c\u503c\u5316: [0, 1, 1, 0] \u2192 SimHash = 0110 \u6284\u88ad\u6587\uff08B\uff09: \"deep\" (\u6743\u91cd=0.1): [+0.1, +0.1, -0.1, -0.1] \"comput\" (\u6743\u91cd=0.4): [+0.4, -0.4, +0.4, -0.4] \"success\" (\u6743\u91cd=0.4): [-0.4, +0.4, +0.4, -0.4] \u53e0\u52a0\u7ed3\u679c: [+0.1, +0.1, +0.7, -0.9] \u4e8c\u503c\u5316: [1, 1, 1, 0] \u2192 SimHash = 1110 Step 4: \u8ba1\u7b97\u6c49\u660e\u8ddd\u79bb \u00b6 \u539f\u6587\uff08A\uff09: 0110 \u6284\u88ad\u6587\uff08B\uff09: 1110 \u6c49\u660e\u8ddd\u79bb = 1\uff08\u4ec5\u7b2c1\u4f4d\u4e0d\u540c\uff09\u2192 \u9ad8\u5ea6\u76f8\u4f3c \u65e0\u5173\u6587\uff08C\uff09: \u5047\u8bbe SimHash = 1100 \uff0c\u4e0e A \u7684\u8ddd\u79bb=2\uff08\u53ef\u80fd\u4e0d\u76f8\u4f3c\uff09\u3002 Step 5: \u5224\u5b9a\u7ed3\u679c \u00b6 \u8bbe\u5b9a\u9608\u503c=2\uff1a A \u548c B \u8ddd\u79bb=1 \u2264 2 \u2192 \u5224\u5b9a\u4e3a\u91cd\u590d A \u548c C \u8ddd\u79bb=2 \u2192 \u9700\u8fdb\u4e00\u6b65\u4eba\u5de5\u68c0\u67e5 3. \u5982\u4f55\u5904\u7406\u8bcd\u5e8f\u548c\u8bed\u4e49\uff1f \u00b6 \u8bcd\u5e8f\u95ee\u9898 \u00b6 SimHash \u5929\u7136\u5ffd\u7565\u8bcd\u5e8f \uff08\u56e0\u57fa\u4e8e\u8bcd\u9891\u7edf\u8ba1\uff09\uff0c\u4f46\u53ef\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u589e\u5f3a\uff1a n-gram \u7279\u5f81 \uff1a\u5c06\u8fde\u7eed2~3\u4e2a\u8bcd\u4f5c\u4e3a\u7279\u5f81\uff08\u5982 \"deep learning\" \u548c \"learning models\"\uff09\u3002 \u6ed1\u52a8\u7a97\u53e3\u54c8\u5e0c \uff1a\u5bf9\u6587\u672c\u5206\u7a97\u53e3\u8ba1\u7b97\u5c40\u90e8 SimHash\uff0c\u518d\u7efc\u5408\u7ed3\u679c\u3002 \u8bed\u4e49\u95ee\u9898 \u00b6 \u95ee\u9898 \uff1aSimHash \u65e0\u6cd5\u8bc6\u522b\u540c\u4e49\u8bcd\uff08\u5982 \"big\" \u548c \"large\"\uff09\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a \u8bcd\u5d4c\u5165\u6269\u5c55 \uff1a\u7528 Word2Vec \u6216 BERT \u5c06\u540c\u4e49\u8bcd\u6620\u5c04\u5230\u76f8\u8fd1\u5411\u91cf\uff0c\u518d\u751f\u6210 SimHash\u3002 \u8bed\u4e49\u54c8\u5e0c \uff1a\u5148\u5bf9\u6587\u672c\u505a\u8bed\u4e49\u7f16\u7801\uff08\u5982 Doc2Vec\uff09\uff0c\u518d\u5e94\u7528 SimHash\u3002 4. \u5b9e\u9645\u5de5\u5177\u63a8\u8350 \u00b6 Python \u5e93 \uff1a simhash \u5e93\uff08\u76f4\u63a5\u751f\u6210\u6307\u7eb9\uff09\uff1a from simhash import Simhash text1 = \"deep learning models...\" text2 = \"in computer vision tasks...\" hash1 = Simhash ( text1 . split ()) hash2 = Simhash ( text2 . split ()) distance = hash1 . distance ( hash2 ) # \u6c49\u660e\u8ddd\u79bb gensim + TF-IDF \uff1a\u5148\u8ba1\u7b97\u52a0\u6743\u5411\u91cf\uff0c\u518d\u751f\u6210 SimHash\u3002 \u5de5\u4e1a\u7ea7\u5e94\u7528 \uff1a Google \u7684\u7f51\u9875\u53bb\u91cd\u7cfb\u7edf\u3002 \u5b66\u672f\u5de5\u5177\u5982 Turnitin\uff08\u7ed3\u5408\u591a\u79cd\u7b97\u6cd5\uff0c\u5305\u62ec SimHash\uff09\u3002 5. \u603b\u7ed3 \u00b6 SimHash \u67e5\u91cd\u6d41\u7a0b \uff1a \u5206\u8bcd \u2192 \u53bb\u566a \u2192 \u52a0\u6743 \u2192 \u54c8\u5e0c\u53e0\u52a0 \u2192 \u4e8c\u503c\u5316 \u2192 \u6c49\u660e\u8ddd\u79bb\u6bd4\u5bf9 \u3002 \u4f18\u52bf \uff1a \u5bf9\u8f7b\u5fae\u6539\u5199\uff08\u5982\u66ff\u6362\u540c\u4e49\u8bcd\u3001\u8c03\u6574\u8bed\u5e8f\uff09\u9c81\u68d2\u3002 \u8ba1\u7b97\u9ad8\u6548\uff0c\u9002\u5408\u6d77\u91cf\u6587\u672c\u3002 \u5c40\u9650\u6027 \uff1a \u65e0\u6cd5\u76f4\u63a5\u5904\u7406\u8bed\u4e49\u76f8\u4f3c\u6027\uff08\u9700\u7ed3\u5408\u8bcd\u5d4c\u5165\uff09\u3002 \u957f\u6587\u672c\u9700\u5206\u5757\u5904\u7406\uff08\u5982\u6309\u6bb5\u843d\u751f\u6210 SimHash\uff09\u3002 \u901a\u8fc7\u5408\u7406\u8bbe\u7f6e\u9608\u503c\u548c\u7279\u5f81\uff08\u5982 n-gram + TF-IDF\uff09\uff0cSimHash \u53ef\u6709\u6548\u7528\u4e8e\u8bba\u6587\u3001\u65b0\u95fb\u3001\u4ee3\u7801\u7b49\u6587\u672c\u7684\u67e5\u91cd\u3002 \ud83c\udfaf \u76ee\u6807\uff1a\u6539\u8fdb SimHash\uff0c\u4f7f\u5176\u80fd\u8bc6\u522b\u201c\u987a\u5e8f\u6539\u53d8\u4f46\u5185\u5bb9\u7c7b\u4f3c\u201d\u7684\u6587\u672c \u00b6 \ud83e\udde9 Step 1\uff1a\u6587\u672c\u9884\u5904\u7406 \u00b6 \u4e2d\u6587\u6587\u672c \uff1a\u5efa\u8bae\u4f7f\u7528\u5206\u8bcd\uff08\u5982jieba\uff09\u5c06\u6587\u672c\u5207\u5206\u6210\u8bcd\u5217\u8868 \u82f1\u6587\u6587\u672c \uff1a\u53ef\u4ee5\u7528\u7a7a\u683c\u76f4\u63a5\u5207\u8bcd\uff0c\u6216\u7528\u66f4\u597d\u7684\u5206\u8bcd\u5668\u5982 spaCy \u793a\u4f8b\uff1a \u00b6 \u539f\u6587\uff1a\u673a\u5668\u5b66\u4e60\u662f\u4e00\u79cd\u4eba\u5de5\u667a\u80fd\u65b9\u6cd5\u3002 \u8bcd\u5e8f\u6539\u5199\u540e\uff1a\u4eba\u5de5\u667a\u80fd\u65b9\u6cd5\u662f\u4e00\u79cd\u673a\u5668\u5b66\u4e60\u3002 \u5206\u8bcd\u7ed3\u679c\uff08\u4ee5\u4e2d\u6587\u4e3a\u4f8b\uff09\uff1a [ \"\u673a\u5668\" , \"\u5b66\u4e60\" , \"\u662f\" , \"\u4e00\u79cd\" , \"\u4eba\u5de5\" , \"\u667a\u80fd\" , \"\u65b9\u6cd5\" ] [ \"\u4eba\u5de5\" , \"\u667a\u80fd\" , \"\u65b9\u6cd5\" , \"\u662f\" , \"\u4e00\u79cd\" , \"\u673a\u5668\" , \"\u5b66\u4e60\" ] \ud83e\udde9 Step 2\uff1a\u751f\u6210 n-gram \u7279\u5f81\uff08\u6bd4\u5982 2-gram \u6216 3-gram\uff09 \u00b6 \u6bd4\u5982\u7528 3-gram\uff1a [ \"\u673a\u5668 \u5b66\u4e60 \u662f\" , \"\u5b66\u4e60 \u662f \u4e00\u79cd\" , \"\u662f \u4e00\u79cd \u4eba\u5de5\" , ... ] \u8fd9\u4e00\u6b65\u5f15\u5165\u4e86**\u4e0a\u4e0b\u6587\u987a\u5e8f\u4fe1\u606f**\u3002\u5982\u679c\u8bcd\u987a\u5e8f\u6539\u53d8\uff0c\u5f97\u5230\u7684 n-gram \u7ec4\u5408\u5c31\u4e0d\u540c\uff0c\u4ece\u800c\u6700\u7ec8 SimHash \u4e0d\u4e00\u6837\u3002 \ud83e\udde9 Step 3\uff1a\u5bf9\u6bcf\u4e2a n-gram \u8ba1\u7b97\u54c8\u5e0c\u503c\u5e76\u7d2f\u52a0\u5411\u91cf \u00b6 \u4f60\u53ef\u4ee5\u4f7f\u7528 Python \u81ea\u5e26\u7684 hash() \u51fd\u6570\uff0c\u6216\u7528\u66f4\u7a33\u5b9a\u7684\u54c8\u5e0c\u7b97\u6cd5\uff08\u5982 MurmurHash\u3001MD5 \u7b49\uff09\u3002 import hashlib def hash_ngram ( ngram , hashbits = 64 ): h = hashlib . md5 ( ngram . encode ( 'utf-8' )) . hexdigest () binval = bin ( int ( h , 16 ))[ 2 :] . zfill ( hashbits ) return [ 1 if b == '1' else - 1 for b in binval ] \u7136\u540e\u5bf9\u6240\u6709 n-gram \u7684\u54c8\u5e0c\u503c\u8fdb\u884c\u201c\u52a0\u6743\u7d2f\u52a0\u201d\uff08\u6b64\u5904\u6743\u91cd\u53ef\u4ee5\u5148\u7edf\u4e00\u4e3a 1\uff09\uff1a vector = [ 0 ] * 64 for ngram in ngrams : hv = hash_ngram ( ngram ) vector = [ v + h for v , h in zip ( vector , hv )] \ud83e\udde9 Step 4\uff1a\u8ba1\u7b97\u6700\u7ec8 SimHash \u503c \u00b6 simhash_bits = '' . join ([ '1' if v > 0 else '0' for v in vector ]) \u81f3\u6b64\uff0c\u4f60\u5df2\u7ecf\u62ff\u5230\u4e86\u201c\u8003\u8651\u987a\u5e8f\u201d\u7684 SimHash \u503c\u3002 \u2705 \u6bd4\u5bf9\u65b9\u5f0f \u00b6 \u7528**\u6d77\u660e\u8ddd\u79bb**\u6bd4\u8f83\u4e24\u4e2a SimHash \u503c\uff08\u5982 64bit\uff09\uff0c\u5c0f\u4e8e\u67d0\u4e2a\u9608\u503c\u5373\u8ba4\u4e3a\u76f8\u4f3c\u3002 def hamming_distance ( hash1 , hash2 ): return sum ( c1 != c2 for c1 , c2 in zip ( hash1 , hash2 )) \ud83d\udd0d \u4e3e\u4e2a\u4f8b\u5b50 \u00b6 \u539f\u6587\uff1a \u00b6 \u673a\u5668 \u5b66\u4e60 \u662f \u4e00\u79cd \u4eba\u5de5 \u667a\u80fd \u65b9\u6cd5 \u6539\u5199\u540e\uff1a \u00b6 \u4eba\u5de5 \u667a\u80fd \u65b9\u6cd5 \u662f \u4e00\u79cd \u673a\u5668 \u5b66\u4e60 \u5982\u679c\u4f60\u7528**\u8bcd\u888b**\u6216\u666e\u901a SimHash\uff0c\u4e24\u8005\u7684\u76f8\u4f3c\u5ea6\u51e0\u4e4e\u662f 100%\u3002 \u4f46\u7528 3-gram + SimHash \u540e\uff0c\u54c8\u5e0c\u503c\u4e0d\u540c\uff0c\u6d77\u660e\u8ddd\u79bb\u4f1a\u4e0a\u5347\uff0c\u80fd\u8bc6\u522b\u51fa\u5b83\u4eec\u987a\u5e8f\u4e0d\u540c\u3002 \u2757 \u6f5c\u5728\u95ee\u9898 & \u5bf9\u7b56 \u00b6 \u95ee\u9898 \u63cf\u8ff0 \u89e3\u51b3\u65b9\u6848 \ud83d\udd04 \u987a\u5e8f\u7565\u53d8\u4e5f\u4f1a\u9020\u6210\u8fc7\u5927\u5dee\u5f02 \u8fde\u7eed\u6027\u8981\u6c42\u9ad8 \u9009\u62e9\u8f83\u5c0f n\uff08\u5982 2-gram\uff09\uff0c\u964d\u4f4e\u7075\u654f\u5ea6 \ud83e\udde0 \u8bed\u4e49\u7b49\u4ef7\u65e0\u6cd5\u8bc6\u522b \u6362\u8bcd\u4f46\u4e0d\u6362\u610f\uff0c\u4ecd\u88ab\u89c6\u4e3a\u4e0d\u540c \u7ed3\u5408\u540c\u4e49\u8bcd\u5e93\u6216\u8bcd\u5411\u91cf\uff08\u5982\u8bcd\u5e72\u63d0\u53d6\uff09 \ud83d\udc0c \u54c8\u5e0c\u6548\u7387\u95ee\u9898 n-gram \u6570\u91cf\u5927\u65f6\u8ba1\u7b97\u91cf\u9ad8 \u9650\u5236\u6587\u672c\u957f\u5ea6\u6216\u7528\u5feb\u901f\u54c8\u5e0c \ud83d\udce6 \u5b58\u50a8\u7a7a\u95f4\u5927 \u6bcf\u7bc7\u6587\u7ae0\u8981\u4fdd\u5b58\u591a\u4e2a\u5206\u6bb5 SimHash \u53ea\u4fdd\u7559\u5168\u7bc7 SimHash \u6216\u5c40\u90e8\u6307\u7eb9 \ud83e\uddf1 \u505c\u7528\u8bcd\u5e72\u6270 \u6bd4\u5982\u201c\u662f\u201d\u3001\u201c\u7684\u201d\u7b49\u5e72\u6270 n-gram \u9884\u5904\u7406\u65f6\u53bb\u9664\u505c\u7528\u8bcd \ud83d\udd27 \u5b9e\u6218\u5efa\u8bae \u00b6 \u9884\u5904\u7406 \uff1a\u6e05\u6d17\u6587\u672c\uff0c\u53bb\u6807\u70b9\uff0c\u53bb\u505c\u7528\u8bcd \u4f7f\u7528 2-gram \u6216 3-gram \uff1a\u5927\u591a\u6570\u987a\u5e8f\u53d8\u5316\u80fd\u68c0\u6d4b \u7ed3\u5408 TF-IDF \u6743\u91cd\uff08\u53ef\u9009\uff09 \uff1a\u8ba9\u91cd\u8981 n-gram \u5f71\u54cd\u66f4\u5927 \u8bbe\u7f6e\u5408\u9002\u9608\u503c \uff1a\u6bd4\u5982 64-bit SimHash\uff0c\u6d77\u660e\u8ddd\u79bb\u5c0f\u4e8e 5 \u5c31\u5224\u76f8\u4f3c \u53ef\u9009\uff1a\u7ed3\u5408\u591a\u4e2a\u7b56\u7565 \uff1a SimHash \u505a\u7c97\u7b5b \u518d\u7528\u6df1\u5ea6\u6a21\u578b\u6216\u7f16\u8f91\u8ddd\u79bb\u505a\u7cbe\u7b5b","title":"Simhash"},{"location":"algorithm/simhash/#simhash-minhash","text":"\u6838\u5fc3\u7ed3\u8bba \uff1a \u4e0d\u4e00\u6837 \uff01\u867d\u7136\u4e24\u8005\u90fd\u662f\u7528\u4e8e\u9ad8\u6548\u8ba1\u7b97\u76f8\u4f3c\u5ea6\u7684\u54c8\u5e0c\u6280\u672f\uff0c\u4f46\u8bbe\u8ba1\u76ee\u6807\u3001\u9002\u7528\u573a\u666f\u548c\u539f\u7406\u5b8c\u5168\u4e0d\u540c\u3002","title":"SimHash \u548c MinHash \u7684\u533a\u522b"},{"location":"algorithm/simhash/#1","text":"\u7279\u6027 MinHash SimHash \u4e3b\u8981\u7528\u9014 \u4f30\u8ba1 \u96c6\u5408\u76f8\u4f3c\u5ea6 \uff08Jaccard\uff09 \u4f30\u8ba1 \u6587\u6863\u76f8\u4f3c\u5ea6 \uff08\u4f59\u5f26/\u6c49\u660e\uff09 \u8f93\u5165\u6570\u636e \u96c6\u5408\uff08\u5982\u8bcd\u888b\u3001\u7528\u6237\u884c\u4e3a\u8bb0\u5f55\uff09 \u9ad8\u7ef4\u7279\u5f81\u5411\u91cf\uff08\u5982TF-IDF\u3001\u8bcd\u9891\uff09 \u8f93\u51fa\u76f8\u4f3c\u5ea6 Jaccard \u76f8\u4f3c\u5ea6\uff080~1\uff09 \u6c49\u660e\u8ddd\u79bb\u6216\u4f59\u5f26\u76f8\u4f3c\u5ea6","title":"1. \u8bbe\u8ba1\u76ee\u6807"},{"location":"algorithm/simhash/#2","text":"","title":"2. \u5de5\u4f5c\u539f\u7406\u5bf9\u6bd4"},{"location":"algorithm/simhash/#1-minhash","text":"\u76ee\u6807 \uff1a\u4f30\u8ba1\u4e24\u4e2a\u96c6\u5408\u7684 Jaccard \u76f8\u4f3c\u5ea6 \\( J(A,B) = \\frac{|A \\cap B|}{|A \\cup B|} \\) \u3002 \u6b65\u9aa4 \uff1a \u5bf9\u96c6\u5408\u4e2d\u6bcf\u4e2a\u5143\u7d20\u5e94\u7528\u54c8\u5e0c\u51fd\u6570\uff0c\u53d6\u6240\u6709\u54c8\u5e0c\u503c\u7684**\u6700\u5c0f\u503c**\uff08MinHash\uff09\u3002 \u901a\u8fc7\u591a\u4e2a\u54c8\u5e0c\u51fd\u6570\u751f\u6210\u7b7e\u540d\uff0c\u7edf\u8ba1\u76f8\u540c MinHash \u7684\u6bd4\u4f8b\u4f5c\u4e3a\u76f8\u4f3c\u5ea6\u4f30\u8ba1\u3002 \u5173\u952e\u70b9 \uff1a \u4ec5\u9002\u7528\u4e8e**\u4e8c\u5143\u5b58\u5728\u5224\u65ad**\uff08\u5143\u7d20\u662f\u5426\u5728\u96c6\u5408\u4e2d\uff09\u3002 \u5bf9\u96c6\u5408\u987a\u5e8f\u4e0d\u654f\u611f\u3002 \u4f8b\u5b50 \uff1a - \u96c6\u5408 A = {\"apple\", \"banana\"}\uff0c\u96c6\u5408 B = {\"apple\", \"orange\"} - MinHash \u4f1a\u7edf\u8ba1\u5171\u540c\u5143\u7d20 \"apple\" \u7684\u6bd4\u4f8b\u3002","title":"(1) MinHash\uff08\u57fa\u4e8e\u96c6\u5408\uff09"},{"location":"algorithm/simhash/#2-simhash","text":"\u76ee\u6807 \uff1a\u4f30\u8ba1\u4e24\u4e2a\u5411\u91cf\u7684**\u4f59\u5f26\u76f8\u4f3c\u5ea6**\uff08\u5982\u6587\u6863\u7684TF-IDF\u5411\u91cf\uff09\u3002 \u6b65\u9aa4 \uff1a \u5bf9\u5411\u91cf\u7684\u6bcf\u4e2a\u7ef4\u5ea6\u52a0\u6743\uff08\u5982TF-IDF\u503c\uff09\uff0c\u751f\u6210\u4e8c\u8fdb\u5236\u54c8\u5e0c\u503c\uff08+1/-1\uff09\u3002 \u5bf9\u6240\u6709\u7ef4\u5ea6\u6c42\u548c\u5e76\u4e8c\u503c\u5316\uff08>0\u21921\uff0c\u22640\u21920\uff09\uff0c\u5f97\u5230\u56fa\u5b9a\u957f\u5ea6\u7684SimHash\u6307\u7eb9\u3002 \u901a\u8fc7**\u6c49\u660e\u8ddd\u79bb**\uff08\u4e0d\u540c\u6bd4\u7279\u6570\uff09\u8861\u91cf\u76f8\u4f3c\u5ea6\u3002 \u5173\u952e\u70b9 \uff1a \u9002\u7528\u4e8e**\u52a0\u6743\u7279\u5f81**\uff08\u5982\u8bcd\u9891\u3001TF-IDF\uff09\u3002 \u5bf9\u8f93\u5165\u987a\u5e8f\u654f\u611f\uff08\u4f9d\u8d56\u7279\u5f81\u7ef4\u5ea6\u987a\u5e8f\uff09\u3002 \u4f8b\u5b50 \uff1a - \u6587\u68631\uff1a\"apple banana\"\uff08TF-IDF\u5411\u91cf [0.7, 0.3]\uff09 - \u6587\u68632\uff1a\"apple orange\"\uff08TF-IDF\u5411\u91cf [0.6, 0.4]\uff09 - SimHash \u4f1a\u751f\u6210\u4e8c\u8fdb\u5236\u6307\u7eb9\uff08\u5982 1101 \u548c 1011 \uff09\uff0c\u901a\u8fc7\u6c49\u660e\u8ddd\u79bb\u6bd4\u8f83\u3002","title":"(2) SimHash\uff08\u57fa\u4e8e\u5411\u91cf\uff09"},{"location":"algorithm/simhash/#3","text":"\u573a\u666f MinHash SimHash \u7f51\u9875\u53bb\u91cd \u2714 \u9002\u5408\uff08\u96c6\u5408\u578b\u6570\u636e\uff0c\u5982URL\u96c6\u5408\uff09 \u2714 \u9002\u5408\uff08\u6587\u6863\u5185\u5bb9\u6307\u7eb9\uff09 \u63a8\u8350\u7cfb\u7edf \u2714 \u7528\u6237-\u7269\u54c1\u4ea4\u4e92\u96c6\u5408 \u2716 \u4e0d\u76f4\u63a5\u9002\u7528 \u6587\u672c\u76f8\u4f3c\u5ea6 \u2716 \u9700\u5148\u8f6c\u4e3a\u8bcd\u888b\u96c6\u5408 \u2714 \u76f4\u63a5\u5904\u7406TF-IDF\u5411\u91cf \u5927\u89c4\u6a21\u68c0\u7d22 \u2714 \u7ed3\u5408LSH\u5feb\u901f\u8fc7\u6ee4 \u2714 \u6c49\u660e\u8ddd\u79bb\u9ad8\u6548\u8ba1\u7b97","title":"3. \u9002\u7528\u573a\u666f"},{"location":"algorithm/simhash/#4","text":"\u7ef4\u5ea6 MinHash SimHash \u6570\u5b66\u57fa\u7840 Jaccard \u76f8\u4f3c\u5ea6 \u4f59\u5f26\u76f8\u4f3c\u5ea6 + \u6c49\u660e\u8ddd\u79bb \u54c8\u5e0c\u8f93\u51fa \u591a\u4e2a\u6700\u5c0f\u503c\uff08\u7b7e\u540d\uff09 \u56fa\u5b9a\u957f\u5ea6\u7684\u4e8c\u8fdb\u5236\u6307\u7eb9 \u6297\u566a\u58f0\u80fd\u529b \u5bf9\u96c6\u5408\u5143\u7d20\u589e\u51cf\u654f\u611f \u5bf9\u7279\u5f81\u6743\u91cd\u53d8\u5316\u9c81\u68d2 \u8ba1\u7b97\u6548\u7387 \u9700\u591a\u4e2a\u54c8\u5e0c\u51fd\u6570 \u5355\u6b21\u54c8\u5e0c\u751f\u6210\u6307\u7eb9","title":"4. \u5173\u952e\u533a\u522b\u603b\u7ed3"},{"location":"algorithm/simhash/#5","text":"\u7528 MinHash \u5982\u679c \uff1a \u6570\u636e\u662f**\u96c6\u5408**\uff08\u5982\u7528\u6237\u70b9\u51fb\u8bb0\u5f55\u3001\u5173\u952e\u8bcd\u96c6\u5408\uff09\u3002 \u9700\u8981\u5feb\u901f\u4f30\u8ba1**\u4ea4\u96c6\u5360\u6bd4**\uff08Jaccard\uff09\u3002 \u7528 SimHash \u5982\u679c \uff1a \u6570\u636e\u662f**\u52a0\u6743\u5411\u91cf**\uff08\u5982\u6587\u6863TF-IDF\u3001\u56fe\u50cf\u7279\u5f81\uff09\u3002 \u9700\u8981\u62b5\u6297\u8f7b\u5fae\u53d8\u5316\uff08\u5982\u6587\u672c\u5c11\u91cf\u7f16\u8f91\uff09\u3002","title":"5. \u5982\u4f55\u9009\u62e9\uff1f"},{"location":"algorithm/simhash/#_1","text":"\u5728\u590d\u6742\u573a\u666f\u4e2d\uff08\u5982\u6587\u6863\u53bb\u91cd\uff09\uff0c\u53ef\u4ee5\uff1a 1. \u5148\u7528 SimHash \u5feb\u901f\u8fc7\u6ee4\u76f8\u4f3c\u6587\u6863\uff08\u6c49\u660e\u8ddd\u79bb\u8fd1\u7684\u5019\u9009\u5bf9\uff09\u3002 2. \u518d\u7528 MinHash \u7cbe\u786e\u8ba1\u7b97 Jaccard \u76f8\u4f3c\u5ea6\uff0c\u51cf\u5c11\u8ba1\u7b97\u91cf\u3002 \u8fd9\u79cd\u6df7\u5408\u7b56\u7565\u517c\u987e\u4e86\u6548\u7387\u548c\u7cbe\u5ea6\u3002","title":"\u9644\uff1a\u4e24\u8005\u7ed3\u5408\u7684\u53ef\u80fd\u6027"},{"location":"algorithm/simhash/#simhash","text":"SimHash \u662f\u4e00\u79cd\u7528\u4e8e \u5feb\u901f\u4f30\u8ba1\u6587\u6863\u76f8\u4f3c\u5ea6 \u7684\u5c40\u90e8\u654f\u611f\u54c8\u5e0c\uff08LSH\uff09\u6280\u672f\uff0c\u7531 Moses Charikar \u57282002\u5e74\u63d0\u51fa\uff0c\u540e\u88ab Google \u7528\u4e8e\u5927\u89c4\u6a21\u7f51\u9875\u53bb\u91cd\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u9ad8\u7ef4\u7279\u5f81\uff08\u5982\u6587\u672c\u8bcd\u9891\uff09\u538b\u7f29\u4e3a\u56fa\u5b9a\u957f\u5ea6\u7684\u4e8c\u8fdb\u5236\u6307\u7eb9\uff08fingerprint\uff09\uff0c\u5e76\u901a\u8fc7 \u6c49\u660e\u8ddd\u79bb\uff08Hamming Distance\uff09 \u8861\u91cf\u76f8\u4f3c\u5ea6\u3002","title":"SimHash \u539f\u7406\u8be6\u89e3"},{"location":"algorithm/simhash/#1-simhash","text":"","title":"1. SimHash \u5de5\u4f5c\u539f\u7406"},{"location":"algorithm/simhash/#_2","text":"\u8f93\u5165 \uff1a\u6587\u6863\u7684\u7279\u5f81\u5411\u91cf\uff08\u5982 TF-IDF \u52a0\u6743\u8bcd\u9891\u3001n-gram \u7b49\uff09\u3002 \u8f93\u51fa \uff1a\u56fa\u5b9a\u957f\u5ea6\u7684\u4e8c\u8fdb\u5236\u6307\u7eb9\uff08\u5982 64-bit \u54c8\u5e0c\u503c\uff09\u3002","title":"\u8f93\u5165\u4e0e\u8f93\u51fa"},{"location":"algorithm/simhash/#_3","text":"\u7279\u5f81\u63d0\u53d6\u4e0e\u52a0\u6743 \u5bf9\u6587\u6863\u5206\u8bcd\uff0c\u751f\u6210\u7279\u5f81\uff08\u5982\u5355\u8bcd\u6216 n-gram\uff09\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u7279\u5f81\u8d4b\u4e88\u6743\u91cd\uff08\u5982 TF-IDF \u503c\uff09\u3002 \u4f8b\u5982\uff1a\u6587\u6863 \"apple banana apple\" \u2192 {\"apple\": 2, \"banana\": 1}\uff08\u6743\u91cd\u53ef\u5f52\u4e00\u5316\uff09\u3002 \u54c8\u5e0c\u6620\u5c04 \u5bf9\u6bcf\u4e2a\u7279\u5f81\u751f\u6210\u4e00\u4e2a \u4e8c\u8fdb\u5236\u54c8\u5e0c\u503c \uff08\u5982\u7528 MurmurHash \u5f97\u5230 64-bit \u54c8\u5e0c\uff09\u3002 \u4f8b\u5982\uff1a hash(\"apple\") = 1011 , hash(\"banana\") = 0110 \uff08\u7b80\u5316\u793a\u4f8b\uff09\u3002 \u52a0\u6743\u53e0\u52a0 \u5bf9\u54c8\u5e0c\u503c\u7684\u6bcf\u4e00\u4f4d\uff1a \u5982\u679c\u8be5\u4f4d\u4e3a 1 \uff0c\u5219\u52a0\u4e0a\u7279\u5f81\u7684\u6743\u91cd\uff1b \u5982\u679c\u8be5\u4f4d\u4e3a 0 \uff0c\u5219\u51cf\u53bb\u7279\u5f81\u7684\u6743\u91cd\u3002 \u4f8b\u5982\uff1a \"apple\" (\u6743\u91cd=2) \u7684\u54c8\u5e0c 1011 \u2192 \u5411\u91cf [+2, -2, +2, +2] \"banana\" (\u6743\u91cd=1) \u7684\u54c8\u5e0c 0110 \u2192 \u5411\u91cf [-1, +1, +1, -1] \u53e0\u52a0\u7ed3\u679c\uff1a [+1, -1, +3, +1] \u4e8c\u503c\u5316\u751f\u6210\u6307\u7eb9 \u5bf9\u53e0\u52a0\u7ed3\u679c\u7684\u6bcf\u4e00\u4f4d\uff1a \u82e5\u503c > 0\uff0c\u5219\u8be5\u4f4d\u4e3a 1 \uff1b \u82e5\u503c \u2264 0\uff0c\u5219\u8be5\u4f4d\u4e3a 0 \u3002 \u4e0a\u4f8b\u7ed3\u679c [+1, -1, +3, +1] \u2192 SimHash \u6307\u7eb9 1011 \u3002 \u76f8\u4f3c\u5ea6\u8ba1\u7b97 \u901a\u8fc7\u4e24\u7bc7\u6587\u6863\u7684 SimHash \u6307\u7eb9\u7684 \u6c49\u660e\u8ddd\u79bb \uff08\u4e0d\u540c\u6bd4\u7279\u6570\uff09\u5224\u65ad\u76f8\u4f3c\u5ea6\u3002 \u6c49\u660e\u8ddd\u79bb\u8d8a\u5c0f\uff0c\u6587\u6863\u8d8a\u76f8\u4f3c\uff08\u5982\u8ddd\u79bb \u2264 3 \u53ef\u8ba4\u4e3a\u91cd\u590d\uff09\u3002","title":"\u6b65\u9aa4"},{"location":"algorithm/simhash/#2_1","text":"","title":"2. \u5982\u4f55\u5b9e\u73b0\u67e5\u91cd\uff1f"},{"location":"algorithm/simhash/#_4","text":"\u9884\u5904\u7406 \u5206\u8bcd\u3001\u53bb\u505c\u7528\u8bcd\uff08\u5982 \"the\", \"and\"\uff09\u3001\u8bcd\u5e72\u5316\uff08\u5982 \"running\" \u2192 \"run\"\uff09\u3002 \u8fc7\u6ee4\u4f4e\u9891\u8bcd\uff08\u51cf\u5c11\u566a\u58f0\uff09\u548c\u9ad8\u9891\u8bcd\uff08\u5982\u901a\u7528\u8bcd\uff09\u3002 \u751f\u6210 SimHash \u6307\u7eb9\u5e93 \u5bf9\u6bcf\u4e2a\u6587\u6863\u8ba1\u7b97 SimHash\uff0c\u5e76\u5b58\u50a8\u5230\u6570\u636e\u5e93\u6216\u5012\u6392\u7d22\u5f15\u4e2d\u3002 \u5feb\u901f\u68c0\u7d22 \u7ed9\u5b9a\u4e00\u4e2a\u65b0\u6587\u6863\uff0c\u8ba1\u7b97\u5176 SimHash\uff0c\u4e0e\u5e93\u4e2d\u6307\u7eb9\u6bd4\u5bf9\u6c49\u660e\u8ddd\u79bb\u3002 \u82e5\u6c49\u660e\u8ddd\u79bb \u2264 \u9608\u503c\uff08\u5982 3\uff09\uff0c\u5219\u5224\u5b9a\u4e3a\u91cd\u590d\u6216\u76f8\u4f3c\u3002","title":"\u6d41\u7a0b"},{"location":"algorithm/simhash/#_5","text":"\u5206\u5757\u68c0\u7d22 \uff1a\u5c06 64-bit \u6307\u7eb9\u5206\u6210 4 \u6bb5\uff0c\u5229\u7528\u5012\u6392\u7d22\u5f15\u52a0\u901f\uff08\u5982\u5148\u5339\u914d\u9ad816\u4f4d\uff09\u3002 \u5c40\u90e8\u654f\u611f\u54c8\u5e0c\uff08LSH\uff09 \uff1a\u8fdb\u4e00\u6b65\u538b\u7f29\u6307\u7eb9\uff0c\u5feb\u901f\u8fc7\u6ee4\u5019\u9009\u96c6\u3002","title":"\u4f18\u5316\u65b9\u6cd5"},{"location":"algorithm/simhash/#3_1","text":"","title":"3. \u5982\u4f55\u5904\u7406\u987a\u5e8f\u548c\u65e0\u7528\u8bcd\uff1f"},{"location":"algorithm/simhash/#_6","text":"SimHash \u4e0d\u4f9d\u8d56\u8bcd\u5e8f \uff0c\u56e0\u4e3a\u5b83\u662f\u57fa\u4e8e\u8bcd\u9891\u7684\u52a0\u6743\u7edf\u8ba1\u3002 \u4f8b\u5982\uff1a\"apple banana\" \u548c \"banana apple\" \u7684 SimHash \u76f8\u540c\u3002 \u82e5\u9700\u4fdd\u7559\u987a\u5e8f\u4fe1\u606f\uff0c\u53ef\u4f7f\u7528 n-gram \u7279\u5f81 \uff08\u5982 2-gram\uff1a\"apple banana\" \u2192 [\"ap\", \"pp\", \"pl\", ...]\uff09\u3002","title":"\u987a\u5e8f\u65e0\u5173\u6027"},{"location":"algorithm/simhash/#_7","text":"\u505c\u7528\u8bcd\u8fc7\u6ee4 \u79fb\u9664\u65e0\u610f\u4e49\u7684\u5e38\u7528\u8bcd\uff08\u5982 \"a\", \"the\", \"of\"\uff09\u3002 TF-IDF \u52a0\u6743 \u81ea\u52a8\u964d\u4f4e\u9ad8\u9891\u8bcd\uff08\u65e0\u7528\u8bcd\uff09\u7684\u6743\u91cd\uff0c\u63d0\u5347\u5173\u952e\u8bcd\u8bed\u4e49\u8d21\u732e\u3002 \u4f4e\u9891\u8bcd\u8fc7\u6ee4 \u5220\u9664\u4ec5\u51fa\u73b01\u6b21\u7684\u8bcd\uff08\u53ef\u80fd\u4e3a\u566a\u58f0\uff09\u3002","title":"\u53bb\u9664\u65e0\u7528\u8bcd"},{"location":"algorithm/simhash/#4_1","text":"","title":"4. \u5b9e\u9645\u6848\u4f8b"},{"location":"algorithm/simhash/#_8","text":"\u6587\u68631 : \"The quick brown fox jumps over the lazy dog\" \u6587\u68632 : \"A quick brown fox leaps over a lazy dog\" \u6b65\u9aa4 \uff1a \u5206\u8bcd\u5e76\u53bb\u505c\u7528\u8bcd\uff08\"the\", \"a\"\uff09\u2192 {\"quick\", \"brown\", \"fox\", \"jumps\", \"lazy\", \"dog\"} \u8ba1\u7b97 TF-IDF \u6743\u91cd\uff08\u5047\u8bbe \"jumps\" \u548c \"leaps\" \u6743\u91cd\u4f4e\uff09\u3002 \u751f\u6210 SimHash\uff1a\u4e24\u6587\u6863\u56e0\u6838\u5fc3\u8bcd\u76f8\u540c\uff0cSimHash \u6c49\u660e\u8ddd\u79bb\u5f88\u5c0f\uff0c\u5224\u5b9a\u4e3a\u76f8\u4f3c\u3002","title":"\u6587\u6863\u53bb\u91cd\u573a\u666f"},{"location":"algorithm/simhash/#5_1","text":"","title":"5. \u4f18\u7f3a\u70b9"},{"location":"algorithm/simhash/#_9","text":"\u9ad8\u6548 \uff1a\u6307\u7eb9\u56fa\u5b9a\u957f\u5ea6\uff0c\u6c49\u660e\u8ddd\u79bb\u8ba1\u7b97\u5feb\uff08\u4f4d\u8fd0\u7b97\uff09\u3002 \u6297\u566a\u58f0 \uff1a\u5bf9\u5c11\u91cf\u8bcd\u4fee\u6539\uff08\u5982\u62fc\u5199\u9519\u8bef\uff09\u9c81\u68d2\u3002","title":"\u4f18\u70b9"},{"location":"algorithm/simhash/#_10","text":"\u957f\u6587\u672c\u6548\u679c\u5dee \uff1a\u7279\u5f81\u7ef4\u5ea6\u9ad8\u65f6\uff0c\u6743\u91cd\u5206\u6563\uff0c\u533a\u5206\u5ea6\u4e0b\u964d\u3002 \u8bed\u4e49\u7f3a\u5931 \uff1a\u540c\u4e49\u8bcd\uff08\u5982 \"happy\" \u548c \"joyful\"\uff09\u65e0\u6cd5\u76f4\u63a5\u5173\u8054\u3002","title":"\u7f3a\u70b9"},{"location":"algorithm/simhash/#6","text":"\u7ed3\u5408\u8bed\u4e49\u54c8\u5e0c \uff1a\u5148\u7528 Word2Vec \u6216 BERT \u7f16\u7801\u8bcd\u8bed\u4e49\uff0c\u518d\u751f\u6210 SimHash\u3002 \u52a8\u6001\u6743\u91cd\u8c03\u6574 \uff1a\u6839\u636e\u8bcd\u6027\uff08\u540d\u8bcd\u6743\u91cd > \u5f62\u5bb9\u8bcd\uff09\u4f18\u5316\u7279\u5f81\u3002 \u6df7\u5408 MinHash \uff1a\u5bf9\u957f\u6587\u672c\u5148\u7528 SimHash \u7c97\u7b5b\uff0c\u518d\u7528 MinHash \u7cbe\u7b97\u3002","title":"6. \u6539\u8fdb\u65b9\u5411"},{"location":"algorithm/simhash/#_11","text":"SimHash \u901a\u8fc7 \u52a0\u6743\u54c8\u5e0c\u53e0\u52a0+\u4e8c\u503c\u5316 \u5c06\u6587\u6863\u538b\u7f29\u4e3a\u6307\u7eb9\uff0c\u9002\u5408\u6d77\u91cf\u6587\u672c\u53bb\u91cd\u3002\u5176\u5173\u952e\u5728\u4e8e\uff1a \u7279\u5f81\u9009\u62e9 \uff08TF-IDF\u3001n-gram\uff09\u548c \u53bb\u566a \uff08\u505c\u7528\u8bcd\u8fc7\u6ee4\uff09\u3002 \u6c49\u660e\u8ddd\u79bb\u5feb\u901f\u6bd4\u5bf9 \uff0c\u9608\u503c\u9700\u6839\u636e\u573a\u666f\u8c03\u6574\uff08\u901a\u5e38 3~5\uff09\u3002 \u4e0e\u8bcd\u5e8f\u65e0\u5173 \uff0c\u4f46\u53ef\u901a\u8fc7 n-gram \u4fdd\u7559\u5c40\u90e8\u987a\u5e8f\u4fe1\u606f\u3002 \u4ee3\u7801\u5b9e\u73b0\u53ef\u53c2\u8003 Google \u7684 simhash-py \u6216 gensim \u5e93\u3002","title":"\u603b\u7ed3"},{"location":"algorithm/simhash/#simhash_1","text":"\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5177\u4f53\u7684\u8bba\u6587\u67e5\u91cd\u573a\u666f\uff0c\u8bf4\u660e SimHash \u5982\u4f55\u5b9e\u73b0\u6587\u672c\u53bb\u91cd\uff0c\u5e76\u5c55\u793a\u5176\u5982\u4f55\u5904\u7406\u8bcd\u5e8f\u3001\u505c\u7528\u8bcd\u7b49\u95ee\u9898\u3002","title":"SimHash \u7528\u4e8e\u8bba\u6587\u67e5\u91cd\u7684\u5177\u4f53\u4f8b\u5b50"},{"location":"algorithm/simhash/#1_1","text":"\u5047\u8bbe\u6709\u4e24\u7bc7\u8bba\u6587\u7684\u6458\u8981\uff1a - \u539f\u6587\uff08A\uff09 : \"Deep learning models have achieved remarkable success in computer vision tasks. These models rely on large-scale datasets and powerful GPUs.\" \u6284\u88ad\u6587\uff08B\uff09 : \"In computer vision tasks, deep learning models show great success. They depend on large datasets and strong GPU computing.\" \u65e0\u5173\u6587\uff08C\uff09 : \"Traditional machine learning methods require feature engineering, while deep learning automates this process.\"","title":"1. \u8f93\u5165\u8bba\u6587\u6587\u672c"},{"location":"algorithm/simhash/#2-simhash_1","text":"","title":"2. SimHash \u67e5\u91cd\u6b65\u9aa4"},{"location":"algorithm/simhash/#step-1","text":"\u5206\u8bcd \uff1a \u539f\u6587\uff08A\uff09: [\"deep\", \"learning\", \"models\", \"achieved\", \"remarkable\", \"success\", \"computer\", \"vision\", \"tasks\", \"these\", \"models\", \"rely\", \"large\", \"scale\", \"datasets\", \"powerful\", \"gpus\"] \u6284\u88ad\u6587\uff08B\uff09: [\"computer\", \"vision\", \"tasks\", \"deep\", \"learning\", \"models\", \"show\", \"great\", \"success\", \"they\", \"depend\", \"large\", \"datasets\", \"strong\", \"gpu\", \"computing\"] \u65e0\u5173\u6587\uff08C\uff09: [\"traditional\", \"machine\", \"learning\", \"methods\", \"require\", \"feature\", \"engineering\", \"while\", \"deep\", \"learning\", \"automates\", \"process\"] \u53bb\u505c\u7528\u8bcd \uff08\u79fb\u9664 \"these\", \"they\", \"while\" \u7b49\u65e0\u610f\u4e49\u8bcd\uff09\uff1a \u539f\u6587\uff08A\uff09: [\"deep\", \"learning\", \"models\", \"achieved\", \"remarkable\", \"success\", \"computer\", \"vision\", \"tasks\", \"models\", \"rely\", \"large\", \"scale\", \"datasets\", \"powerful\", \"gpus\"] \u6284\u88ad\u6587\uff08B\uff09: [\"computer\", \"vision\", \"tasks\", \"deep\", \"learning\", \"models\", \"show\", \"great\", \"success\", \"depend\", \"large\", \"datasets\", \"strong\", \"gpu\", \"computing\"] \u8bcd\u5e72\u5316 \uff08\u5982 \"achieved\" \u2192 \"achiev\", \"computing\" \u2192 \"comput\"\uff09\uff1a \u539f\u6587\uff08A\uff09: [\"deep\", \"learn\", \"model\", \"achiev\", \"remark\", \"success\", \"comput\", \"vision\", \"task\", \"model\", \"reli\", \"larg\", \"scale\", \"dataset\", \"power\", \"gpus\"] \u6284\u88ad\u6587\uff08B\uff09: [\"comput\", \"vision\", \"task\", \"deep\", \"learn\", \"model\", \"show\", \"great\", \"success\", \"depend\", \"larg\", \"dataset\", \"strong\", \"gpu\", \"comput\"]","title":"Step 1: \u9884\u5904\u7406\uff08\u5206\u8bcd\u3001\u53bb\u505c\u7528\u8bcd\u3001\u8bcd\u5e72\u5316\uff09"},{"location":"algorithm/simhash/#step-2-tf-idf","text":"\u5047\u8bbe\u8bed\u6599\u5e93\u4e2d\u6240\u6709\u8bcd\u7684 IDF \u503c\u5982\u4e0b\uff08\u7b80\u5316\u793a\u4f8b\uff09\uff1a \u5355\u8bcd IDF \u6743\u91cd deep 0.1 comput 0.2 vision 0.3 success 0.4 ... ... \u539f\u6587\uff08A\uff09\u7684 TF-IDF \u5411\u91cf\uff08\u90e8\u5206\uff09\uff1a {\"deep\": 0.1*2, \"comput\": 0.2*1, \"success\": 0.4*1, ...} \u6284\u88ad\u6587\uff08B\uff09\u7684 TF-IDF \u5411\u91cf\uff1a {\"deep\": 0.1*1, \"comput\": 0.2*2, \"success\": 0.4*1, ...}","title":"Step 2: \u8ba1\u7b97 TF-IDF \u6743\u91cd"},{"location":"algorithm/simhash/#step-3-simhash","text":"\u5bf9\u6bcf\u4e2a\u8bcd\u751f\u6210 64-bit \u54c8\u5e0c\uff08\u5047\u8bbe\u7b80\u5316\u7248 4-bit\uff09\uff1a hash(\"deep\") = 1100 , hash(\"comput\") = 1010 , hash(\"success\") = 0110 \u52a0\u6743\u53e0\u52a0 \uff08\u6743\u91cd=TF-IDF\u503c\uff09\uff1a \u539f\u6587\uff08A\uff09: \"deep\" (\u6743\u91cd=0.2): [+0.2, +0.2, -0.2, -0.2] \"comput\" (\u6743\u91cd=0.2): [+0.2, -0.2, +0.2, -0.2] \"success\" (\u6743\u91cd=0.4): [-0.4, +0.4, +0.4, -0.4] \u53e0\u52a0\u7ed3\u679c: [0.0, +0.4, +0.4, -0.8] \u4e8c\u503c\u5316: [0, 1, 1, 0] \u2192 SimHash = 0110 \u6284\u88ad\u6587\uff08B\uff09: \"deep\" (\u6743\u91cd=0.1): [+0.1, +0.1, -0.1, -0.1] \"comput\" (\u6743\u91cd=0.4): [+0.4, -0.4, +0.4, -0.4] \"success\" (\u6743\u91cd=0.4): [-0.4, +0.4, +0.4, -0.4] \u53e0\u52a0\u7ed3\u679c: [+0.1, +0.1, +0.7, -0.9] \u4e8c\u503c\u5316: [1, 1, 1, 0] \u2192 SimHash = 1110","title":"Step 3: \u751f\u6210 SimHash \u6307\u7eb9"},{"location":"algorithm/simhash/#step-4","text":"\u539f\u6587\uff08A\uff09: 0110 \u6284\u88ad\u6587\uff08B\uff09: 1110 \u6c49\u660e\u8ddd\u79bb = 1\uff08\u4ec5\u7b2c1\u4f4d\u4e0d\u540c\uff09\u2192 \u9ad8\u5ea6\u76f8\u4f3c \u65e0\u5173\u6587\uff08C\uff09: \u5047\u8bbe SimHash = 1100 \uff0c\u4e0e A \u7684\u8ddd\u79bb=2\uff08\u53ef\u80fd\u4e0d\u76f8\u4f3c\uff09\u3002","title":"Step 4: \u8ba1\u7b97\u6c49\u660e\u8ddd\u79bb"},{"location":"algorithm/simhash/#step-5","text":"\u8bbe\u5b9a\u9608\u503c=2\uff1a A \u548c B \u8ddd\u79bb=1 \u2264 2 \u2192 \u5224\u5b9a\u4e3a\u91cd\u590d A \u548c C \u8ddd\u79bb=2 \u2192 \u9700\u8fdb\u4e00\u6b65\u4eba\u5de5\u68c0\u67e5","title":"Step 5: \u5224\u5b9a\u7ed3\u679c"},{"location":"algorithm/simhash/#3_2","text":"","title":"3. \u5982\u4f55\u5904\u7406\u8bcd\u5e8f\u548c\u8bed\u4e49\uff1f"},{"location":"algorithm/simhash/#_12","text":"SimHash \u5929\u7136\u5ffd\u7565\u8bcd\u5e8f \uff08\u56e0\u57fa\u4e8e\u8bcd\u9891\u7edf\u8ba1\uff09\uff0c\u4f46\u53ef\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u589e\u5f3a\uff1a n-gram \u7279\u5f81 \uff1a\u5c06\u8fde\u7eed2~3\u4e2a\u8bcd\u4f5c\u4e3a\u7279\u5f81\uff08\u5982 \"deep learning\" \u548c \"learning models\"\uff09\u3002 \u6ed1\u52a8\u7a97\u53e3\u54c8\u5e0c \uff1a\u5bf9\u6587\u672c\u5206\u7a97\u53e3\u8ba1\u7b97\u5c40\u90e8 SimHash\uff0c\u518d\u7efc\u5408\u7ed3\u679c\u3002","title":"\u8bcd\u5e8f\u95ee\u9898"},{"location":"algorithm/simhash/#_13","text":"\u95ee\u9898 \uff1aSimHash \u65e0\u6cd5\u8bc6\u522b\u540c\u4e49\u8bcd\uff08\u5982 \"big\" \u548c \"large\"\uff09\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a \u8bcd\u5d4c\u5165\u6269\u5c55 \uff1a\u7528 Word2Vec \u6216 BERT \u5c06\u540c\u4e49\u8bcd\u6620\u5c04\u5230\u76f8\u8fd1\u5411\u91cf\uff0c\u518d\u751f\u6210 SimHash\u3002 \u8bed\u4e49\u54c8\u5e0c \uff1a\u5148\u5bf9\u6587\u672c\u505a\u8bed\u4e49\u7f16\u7801\uff08\u5982 Doc2Vec\uff09\uff0c\u518d\u5e94\u7528 SimHash\u3002","title":"\u8bed\u4e49\u95ee\u9898"},{"location":"algorithm/simhash/#4_2","text":"Python \u5e93 \uff1a simhash \u5e93\uff08\u76f4\u63a5\u751f\u6210\u6307\u7eb9\uff09\uff1a from simhash import Simhash text1 = \"deep learning models...\" text2 = \"in computer vision tasks...\" hash1 = Simhash ( text1 . split ()) hash2 = Simhash ( text2 . split ()) distance = hash1 . distance ( hash2 ) # \u6c49\u660e\u8ddd\u79bb gensim + TF-IDF \uff1a\u5148\u8ba1\u7b97\u52a0\u6743\u5411\u91cf\uff0c\u518d\u751f\u6210 SimHash\u3002 \u5de5\u4e1a\u7ea7\u5e94\u7528 \uff1a Google \u7684\u7f51\u9875\u53bb\u91cd\u7cfb\u7edf\u3002 \u5b66\u672f\u5de5\u5177\u5982 Turnitin\uff08\u7ed3\u5408\u591a\u79cd\u7b97\u6cd5\uff0c\u5305\u62ec SimHash\uff09\u3002","title":"4. \u5b9e\u9645\u5de5\u5177\u63a8\u8350"},{"location":"algorithm/simhash/#5_2","text":"SimHash \u67e5\u91cd\u6d41\u7a0b \uff1a \u5206\u8bcd \u2192 \u53bb\u566a \u2192 \u52a0\u6743 \u2192 \u54c8\u5e0c\u53e0\u52a0 \u2192 \u4e8c\u503c\u5316 \u2192 \u6c49\u660e\u8ddd\u79bb\u6bd4\u5bf9 \u3002 \u4f18\u52bf \uff1a \u5bf9\u8f7b\u5fae\u6539\u5199\uff08\u5982\u66ff\u6362\u540c\u4e49\u8bcd\u3001\u8c03\u6574\u8bed\u5e8f\uff09\u9c81\u68d2\u3002 \u8ba1\u7b97\u9ad8\u6548\uff0c\u9002\u5408\u6d77\u91cf\u6587\u672c\u3002 \u5c40\u9650\u6027 \uff1a \u65e0\u6cd5\u76f4\u63a5\u5904\u7406\u8bed\u4e49\u76f8\u4f3c\u6027\uff08\u9700\u7ed3\u5408\u8bcd\u5d4c\u5165\uff09\u3002 \u957f\u6587\u672c\u9700\u5206\u5757\u5904\u7406\uff08\u5982\u6309\u6bb5\u843d\u751f\u6210 SimHash\uff09\u3002 \u901a\u8fc7\u5408\u7406\u8bbe\u7f6e\u9608\u503c\u548c\u7279\u5f81\uff08\u5982 n-gram + TF-IDF\uff09\uff0cSimHash \u53ef\u6709\u6548\u7528\u4e8e\u8bba\u6587\u3001\u65b0\u95fb\u3001\u4ee3\u7801\u7b49\u6587\u672c\u7684\u67e5\u91cd\u3002","title":"5. \u603b\u7ed3"},{"location":"algorithm/simhash/#simhash_2","text":"","title":"\ud83c\udfaf \u76ee\u6807\uff1a\u6539\u8fdb SimHash\uff0c\u4f7f\u5176\u80fd\u8bc6\u522b\u201c\u987a\u5e8f\u6539\u53d8\u4f46\u5185\u5bb9\u7c7b\u4f3c\u201d\u7684\u6587\u672c"},{"location":"algorithm/simhash/#step-1_1","text":"\u4e2d\u6587\u6587\u672c \uff1a\u5efa\u8bae\u4f7f\u7528\u5206\u8bcd\uff08\u5982jieba\uff09\u5c06\u6587\u672c\u5207\u5206\u6210\u8bcd\u5217\u8868 \u82f1\u6587\u6587\u672c \uff1a\u53ef\u4ee5\u7528\u7a7a\u683c\u76f4\u63a5\u5207\u8bcd\uff0c\u6216\u7528\u66f4\u597d\u7684\u5206\u8bcd\u5668\u5982 spaCy","title":"\ud83e\udde9 Step 1\uff1a\u6587\u672c\u9884\u5904\u7406"},{"location":"algorithm/simhash/#_14","text":"\u539f\u6587\uff1a\u673a\u5668\u5b66\u4e60\u662f\u4e00\u79cd\u4eba\u5de5\u667a\u80fd\u65b9\u6cd5\u3002 \u8bcd\u5e8f\u6539\u5199\u540e\uff1a\u4eba\u5de5\u667a\u80fd\u65b9\u6cd5\u662f\u4e00\u79cd\u673a\u5668\u5b66\u4e60\u3002 \u5206\u8bcd\u7ed3\u679c\uff08\u4ee5\u4e2d\u6587\u4e3a\u4f8b\uff09\uff1a [ \"\u673a\u5668\" , \"\u5b66\u4e60\" , \"\u662f\" , \"\u4e00\u79cd\" , \"\u4eba\u5de5\" , \"\u667a\u80fd\" , \"\u65b9\u6cd5\" ] [ \"\u4eba\u5de5\" , \"\u667a\u80fd\" , \"\u65b9\u6cd5\" , \"\u662f\" , \"\u4e00\u79cd\" , \"\u673a\u5668\" , \"\u5b66\u4e60\" ]","title":"\u793a\u4f8b\uff1a"},{"location":"algorithm/simhash/#step-2-n-gram-2-gram-3-gram","text":"\u6bd4\u5982\u7528 3-gram\uff1a [ \"\u673a\u5668 \u5b66\u4e60 \u662f\" , \"\u5b66\u4e60 \u662f \u4e00\u79cd\" , \"\u662f \u4e00\u79cd \u4eba\u5de5\" , ... ] \u8fd9\u4e00\u6b65\u5f15\u5165\u4e86**\u4e0a\u4e0b\u6587\u987a\u5e8f\u4fe1\u606f**\u3002\u5982\u679c\u8bcd\u987a\u5e8f\u6539\u53d8\uff0c\u5f97\u5230\u7684 n-gram \u7ec4\u5408\u5c31\u4e0d\u540c\uff0c\u4ece\u800c\u6700\u7ec8 SimHash \u4e0d\u4e00\u6837\u3002","title":"\ud83e\udde9 Step 2\uff1a\u751f\u6210 n-gram \u7279\u5f81\uff08\u6bd4\u5982 2-gram \u6216 3-gram\uff09"},{"location":"algorithm/simhash/#step-3-n-gram","text":"\u4f60\u53ef\u4ee5\u4f7f\u7528 Python \u81ea\u5e26\u7684 hash() \u51fd\u6570\uff0c\u6216\u7528\u66f4\u7a33\u5b9a\u7684\u54c8\u5e0c\u7b97\u6cd5\uff08\u5982 MurmurHash\u3001MD5 \u7b49\uff09\u3002 import hashlib def hash_ngram ( ngram , hashbits = 64 ): h = hashlib . md5 ( ngram . encode ( 'utf-8' )) . hexdigest () binval = bin ( int ( h , 16 ))[ 2 :] . zfill ( hashbits ) return [ 1 if b == '1' else - 1 for b in binval ] \u7136\u540e\u5bf9\u6240\u6709 n-gram \u7684\u54c8\u5e0c\u503c\u8fdb\u884c\u201c\u52a0\u6743\u7d2f\u52a0\u201d\uff08\u6b64\u5904\u6743\u91cd\u53ef\u4ee5\u5148\u7edf\u4e00\u4e3a 1\uff09\uff1a vector = [ 0 ] * 64 for ngram in ngrams : hv = hash_ngram ( ngram ) vector = [ v + h for v , h in zip ( vector , hv )]","title":"\ud83e\udde9 Step 3\uff1a\u5bf9\u6bcf\u4e2a n-gram \u8ba1\u7b97\u54c8\u5e0c\u503c\u5e76\u7d2f\u52a0\u5411\u91cf"},{"location":"algorithm/simhash/#step-4-simhash","text":"simhash_bits = '' . join ([ '1' if v > 0 else '0' for v in vector ]) \u81f3\u6b64\uff0c\u4f60\u5df2\u7ecf\u62ff\u5230\u4e86\u201c\u8003\u8651\u987a\u5e8f\u201d\u7684 SimHash \u503c\u3002","title":"\ud83e\udde9 Step 4\uff1a\u8ba1\u7b97\u6700\u7ec8 SimHash \u503c"},{"location":"algorithm/simhash/#_15","text":"\u7528**\u6d77\u660e\u8ddd\u79bb**\u6bd4\u8f83\u4e24\u4e2a SimHash \u503c\uff08\u5982 64bit\uff09\uff0c\u5c0f\u4e8e\u67d0\u4e2a\u9608\u503c\u5373\u8ba4\u4e3a\u76f8\u4f3c\u3002 def hamming_distance ( hash1 , hash2 ): return sum ( c1 != c2 for c1 , c2 in zip ( hash1 , hash2 ))","title":"\u2705 \u6bd4\u5bf9\u65b9\u5f0f"},{"location":"algorithm/simhash/#_16","text":"","title":"\ud83d\udd0d \u4e3e\u4e2a\u4f8b\u5b50"},{"location":"algorithm/simhash/#_17","text":"\u673a\u5668 \u5b66\u4e60 \u662f \u4e00\u79cd \u4eba\u5de5 \u667a\u80fd \u65b9\u6cd5","title":"\u539f\u6587\uff1a"},{"location":"algorithm/simhash/#_18","text":"\u4eba\u5de5 \u667a\u80fd \u65b9\u6cd5 \u662f \u4e00\u79cd \u673a\u5668 \u5b66\u4e60 \u5982\u679c\u4f60\u7528**\u8bcd\u888b**\u6216\u666e\u901a SimHash\uff0c\u4e24\u8005\u7684\u76f8\u4f3c\u5ea6\u51e0\u4e4e\u662f 100%\u3002 \u4f46\u7528 3-gram + SimHash \u540e\uff0c\u54c8\u5e0c\u503c\u4e0d\u540c\uff0c\u6d77\u660e\u8ddd\u79bb\u4f1a\u4e0a\u5347\uff0c\u80fd\u8bc6\u522b\u51fa\u5b83\u4eec\u987a\u5e8f\u4e0d\u540c\u3002","title":"\u6539\u5199\u540e\uff1a"},{"location":"algorithm/simhash/#_19","text":"\u95ee\u9898 \u63cf\u8ff0 \u89e3\u51b3\u65b9\u6848 \ud83d\udd04 \u987a\u5e8f\u7565\u53d8\u4e5f\u4f1a\u9020\u6210\u8fc7\u5927\u5dee\u5f02 \u8fde\u7eed\u6027\u8981\u6c42\u9ad8 \u9009\u62e9\u8f83\u5c0f n\uff08\u5982 2-gram\uff09\uff0c\u964d\u4f4e\u7075\u654f\u5ea6 \ud83e\udde0 \u8bed\u4e49\u7b49\u4ef7\u65e0\u6cd5\u8bc6\u522b \u6362\u8bcd\u4f46\u4e0d\u6362\u610f\uff0c\u4ecd\u88ab\u89c6\u4e3a\u4e0d\u540c \u7ed3\u5408\u540c\u4e49\u8bcd\u5e93\u6216\u8bcd\u5411\u91cf\uff08\u5982\u8bcd\u5e72\u63d0\u53d6\uff09 \ud83d\udc0c \u54c8\u5e0c\u6548\u7387\u95ee\u9898 n-gram \u6570\u91cf\u5927\u65f6\u8ba1\u7b97\u91cf\u9ad8 \u9650\u5236\u6587\u672c\u957f\u5ea6\u6216\u7528\u5feb\u901f\u54c8\u5e0c \ud83d\udce6 \u5b58\u50a8\u7a7a\u95f4\u5927 \u6bcf\u7bc7\u6587\u7ae0\u8981\u4fdd\u5b58\u591a\u4e2a\u5206\u6bb5 SimHash \u53ea\u4fdd\u7559\u5168\u7bc7 SimHash \u6216\u5c40\u90e8\u6307\u7eb9 \ud83e\uddf1 \u505c\u7528\u8bcd\u5e72\u6270 \u6bd4\u5982\u201c\u662f\u201d\u3001\u201c\u7684\u201d\u7b49\u5e72\u6270 n-gram \u9884\u5904\u7406\u65f6\u53bb\u9664\u505c\u7528\u8bcd","title":"\u2757 \u6f5c\u5728\u95ee\u9898 &amp; \u5bf9\u7b56"},{"location":"algorithm/simhash/#_20","text":"\u9884\u5904\u7406 \uff1a\u6e05\u6d17\u6587\u672c\uff0c\u53bb\u6807\u70b9\uff0c\u53bb\u505c\u7528\u8bcd \u4f7f\u7528 2-gram \u6216 3-gram \uff1a\u5927\u591a\u6570\u987a\u5e8f\u53d8\u5316\u80fd\u68c0\u6d4b \u7ed3\u5408 TF-IDF \u6743\u91cd\uff08\u53ef\u9009\uff09 \uff1a\u8ba9\u91cd\u8981 n-gram \u5f71\u54cd\u66f4\u5927 \u8bbe\u7f6e\u5408\u9002\u9608\u503c \uff1a\u6bd4\u5982 64-bit SimHash\uff0c\u6d77\u660e\u8ddd\u79bb\u5c0f\u4e8e 5 \u5c31\u5224\u76f8\u4f3c \u53ef\u9009\uff1a\u7ed3\u5408\u591a\u4e2a\u7b56\u7565 \uff1a SimHash \u505a\u7c97\u7b5b \u518d\u7528\u6df1\u5ea6\u6a21\u578b\u6216\u7f16\u8f91\u8ddd\u79bb\u505a\u7cbe\u7b5b","title":"\ud83d\udd27 \u5b9e\u6218\u5efa\u8bae"},{"location":"bitcoin/basic/","text":"\u533a\u5757\u94fe\u7684\u5168\u6d41\u7a0b \u4e00\u3001\u533a\u5757\u94fe\u89e3\u51b3\u7684\u6838\u5fc3\u95ee\u9898 \u4e8c\u3001\u533a\u5757\u94fe\u57fa\u7840\u67b6\u6784 \u4e09\u3001\u6838\u5fc3\u7b97\u6cd5\u4e0e\u6280\u672f \u56db\u3001\u5178\u578b\u6d41\u7a0b\u793a\u4f8b\uff08\u4ee5\u6bd4\u7279\u5e01\u4e3a\u4f8b\uff09 \u4e94\u3001\u533a\u5757\u94fe\u7c7b\u578b\u5bf9\u6bd4 \u516d\u3001\u5173\u952e\u6311\u6218 \u533a\u5757\u94fe\u53ef\u80fd\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6cd5 \u4e00\u3001\u533a\u5757\u94fe\u7684\u201c\u4e0d\u53ef\u80fd\u4e09\u89d2\u201d\uff08Scalability Trilemma\uff09 \u73b0\u5b9e\u6848\u4f8b \u89e3\u51b3\u65b9\u6848\u5c1d\u8bd5 \u4e8c\u3001\u9690\u79c1\u4fdd\u62a4\u6280\u672f 1. \u57fa\u7840\u9690\u79c1\u4fdd\u62a4 2. \u9ad8\u7ea7\u5bc6\u7801\u5b66\u65b9\u6848 3. \u8054\u76df\u94fe\u9690\u79c1\u65b9\u6848 4. \u65b0\u5174\u65b9\u5411 \u4e09\u3001\u9690\u79c1\u4e0e\u76d1\u7ba1\u7684\u51b2\u7a81 \u603b\u7ed3 \u533a\u5757\u94fe\u7684\u5168\u6d41\u7a0b \u00b6 demo \u4e00\u3001\u533a\u5757\u94fe\u89e3\u51b3\u7684\u6838\u5fc3\u95ee\u9898 \u00b6 \u53bb\u4e2d\u5fc3\u5316\u4fe1\u4efb \u5728\u6ca1\u6709\u4e2d\u5fc3\u5316\u673a\u6784\uff08\u5982\u94f6\u884c\u3001\u653f\u5e9c\uff09\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u6570\u5b66\u548c\u5bc6\u7801\u5b66\u5b9e\u73b0\u591a\u65b9\u4e4b\u95f4\u7684\u53ef\u4fe1\u534f\u4f5c\u3002 \u9632\u7be1\u6539\u4e0e\u6570\u636e\u900f\u660e \u786e\u4fdd\u6570\u636e\u4e00\u65e6\u8bb0\u5f55\u65e0\u6cd5\u88ab\u7be1\u6539\uff0c\u6240\u6709\u53c2\u4e0e\u65b9\u53ef\u9a8c\u8bc1\u5386\u53f2\u8bb0\u5f55\u3002 \u6297\u5355\u70b9\u6545\u969c \u5206\u5e03\u5f0f\u7f51\u7edc\u907f\u514d\u4e2d\u5fc3\u5316\u7cfb\u7edf\u7684\u8106\u5f31\u6027\uff0c\u63d0\u5347\u7cfb\u7edf\u9c81\u68d2\u6027\u3002 \u4e8c\u3001\u533a\u5757\u94fe\u57fa\u7840\u67b6\u6784 \u00b6 \u7f51\u7edc\u5c42\uff08P2P\u7f51\u7edc\uff09 - \u529f\u80fd \uff1a\u8282\u70b9\u95f4\u901a\u8fc7\u70b9\u5bf9\u70b9\u534f\u8bae\u901a\u4fe1\uff0c\u5e7f\u64ad\u4ea4\u6613\u548c\u533a\u5757\u3002 - \u5173\u952e\u70b9 \uff1a\u65e0\u4e2d\u5fc3\u670d\u52a1\u5668\uff0c\u91c7\u7528Gossip\u534f\u8bae\u6269\u6563\u4fe1\u606f\u3002 \u6570\u636e\u5c42\uff08\u94fe\u5f0f\u7ed3\u6784\uff09 - \u533a\u5757\u7ed3\u6784 \uff1a\u5305\u542b\u533a\u5757\u5934\uff08\u5143\u6570\u636e\uff09\u548c\u4ea4\u6613\u5217\u8868\u3002 - \u533a\u5757\u5934\uff1a\u7248\u672c\u53f7\u3001\u65f6\u95f4\u6233\u3001\u524d\u4e00\u4e2a\u533a\u5757\u54c8\u5e0c\uff08\u5f62\u6210\u94fe\uff09\u3001Merkle\u6839\u3001Nonce\u7b49\u3002 - Merkle\u6811 \uff1a\u5c06\u4ea4\u6613\u54c8\u5e0c\u9010\u5c42\u8ba1\u7b97\uff0c\u6700\u7ec8\u751f\u6210\u552f\u4e00\u6839\u54c8\u5e0c\uff0c\u7528\u4e8e\u5feb\u901f\u9a8c\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u3002 \u5171\u8bc6\u5c42 - \u6838\u5fc3\u7b97\u6cd5 \uff1aPoW\uff08\u5de5\u4f5c\u91cf\u8bc1\u660e\uff09\u3001PoS\uff08\u6743\u76ca\u8bc1\u660e\uff09\u3001PBFT\uff08\u62dc\u5360\u5ead\u5bb9\u9519\uff09\u7b49\uff08\u540e\u6587\u8be6\u8ff0\uff09\u3002 \u6fc0\u52b1\u5c42\uff08\u516c\u6709\u94fe\u7279\u6709\uff09 - \u77ff\u5de5\u5956\u52b1 \uff1a\u901a\u8fc7\u4ee3\u5e01\u6fc0\u52b1\u8282\u70b9\u53c2\u4e0e\u5171\u8bc6\uff08\u5982\u6bd4\u7279\u5e01\u7684\u533a\u5757\u5956\u52b1+\u4ea4\u6613\u8d39\uff09\u3002 \u5408\u7ea6\u5c42\uff08\u667a\u80fd\u5408\u7ea6\uff09 - \u53ef\u7f16\u7a0b\u903b\u8f91 \uff1a\u5728\u533a\u5757\u94fe\u4e0a\u81ea\u52a8\u6267\u884c\u7684\u4ee3\u7801\uff08\u5982\u4ee5\u592a\u574aSolidity\uff09\u3002 \u5e94\u7528\u5c42 - DApps\uff08\u53bb\u4e2d\u5fc3\u5316\u5e94\u7528\uff09\u3001\u94b1\u5305\u3001\u6d4f\u89c8\u5668\u7b49\u3002 \u4e09\u3001\u6838\u5fc3\u7b97\u6cd5\u4e0e\u6280\u672f \u00b6 \u5bc6\u7801\u5b66\u7b97\u6cd5 - \u54c8\u5e0c\u51fd\u6570 \uff08SHA-256\u3001Keccak\u7b49\uff09\uff1a\u5c06\u4efb\u610f\u6570\u636e\u6620\u5c04\u4e3a\u56fa\u5b9a\u957f\u5ea6\u5b57\u7b26\u4e32\uff0c\u5177\u5907\u5355\u5411\u6027\u548c\u6297\u78b0\u649e\u6027\u3002 - \u975e\u5bf9\u79f0\u52a0\u5bc6 \uff08ECDSA\uff09\uff1a\u516c\u79c1\u94a5\u5bf9\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\u548c\u7b7e\u540d\u3002 - Merkle\u6811 \uff1a\u9ad8\u6548\u9a8c\u8bc1\u5927\u89c4\u6a21\u6570\u636e\u5b8c\u6574\u6027\u3002 \u5171\u8bc6\u7b97\u6cd5 - PoW\uff08\u5de5\u4f5c\u91cf\u8bc1\u660e\uff09 - \u8282\u70b9\u901a\u8fc7\u8ba1\u7b97\u5bfb\u627e\u6ee1\u8db3\u96be\u5ea6\u7684Nonce\u503c\uff08\u5982\u6bd4\u7279\u5e01\u8981\u6c42\u54c8\u5e0c\u524d\u5bfc0\uff09\u3002 - \u4ee3\u8868\uff1a\u6bd4\u7279\u5e01\u3001\u65e9\u671f\u4ee5\u592a\u574a\u3002 - \u4f18\u7f3a\u70b9 \uff1a\u9ad8\u5b89\u5168\u6027\u4f46\u8017\u80fd\u5de8\u5927\u3002 - PoS\uff08\u6743\u76ca\u8bc1\u660e\uff09 - \u6839\u636e\u8282\u70b9\u6301\u6709\u7684\u4ee3\u5e01\u6570\u91cf\u548c\u65f6\u957f\u9009\u62e9\u51fa\u5757\u8005\u3002 - \u4ee3\u8868\uff1a\u4ee5\u592a\u574a2.0\u3001Cardano\u3002 - \u4f18\u5316 \uff1a\u964d\u4f4e\u80fd\u8017\uff0c\u4f46\u53ef\u80fd\u5f15\u53d1\u201c\u5bcc\u8005\u6108\u5bcc\u201d\u95ee\u9898\u3002 - PBFT\uff08\u5b9e\u7528\u62dc\u5360\u5ead\u5bb9\u9519\uff09 - \u8282\u70b9\u901a\u8fc7\u591a\u8f6e\u6295\u7968\u8fbe\u6210\u5171\u8bc6\uff0c\u9002\u5408\u8054\u76df\u94fe\uff08\u5982Hyperledger Fabric\uff09\u3002 - \u7279\u70b9 \uff1a\u4f4e\u5ef6\u8fdf\u4f46\u8282\u70b9\u6570\u91cf\u53d7\u9650\uff08\u901a\u5e38\u2264100\uff09\u3002 \u667a\u80fd\u5408\u7ea6 - \u56fe\u7075\u5b8c\u5907\u865a\u62df\u673a \uff08\u5982EVM\uff09\uff1a\u9694\u79bb\u6267\u884c\u4ee3\u7801\uff0cGas\u673a\u5236\u9632\u6b62\u65e0\u9650\u5faa\u73af\u3002 \u6269\u5c55\u6280\u672f - \u5206\u7247\uff08Sharding\uff09 \uff1a\u5c06\u7f51\u7edc\u5206\u533a\u5e76\u884c\u5904\u7406\u4ea4\u6613\uff08\u4ee5\u592a\u574a2.0\uff09\u3002 - Layer2 \uff1a\u94fe\u4e0b\u5904\u7406\u4ea4\u6613\uff08\u5982Rollups\u3001\u72b6\u6001\u901a\u9053\uff09\u3002 \u56db\u3001\u5178\u578b\u6d41\u7a0b\u793a\u4f8b\uff08\u4ee5\u6bd4\u7279\u5e01\u4e3a\u4f8b\uff09 \u00b6 \u4ea4\u6613\u53d1\u8d77 - \u7528\u6237A\u7528\u79c1\u94a5\u7b7e\u540d\u4e00\u7b14\u8f6c\u8d26\u4ea4\u6613\uff0c\u5e7f\u64ad\u5230P2P\u7f51\u7edc\u3002 \u4ea4\u6613\u9a8c\u8bc1 - \u8282\u70b9\u9a8c\u8bc1\u7b7e\u540d\u3001\u4f59\u989d\u662f\u5426\u5145\u8db3\uff0c\u4ea4\u6613\u662f\u5426\u672a\u91cd\u590d\uff08\u9632\u53cc\u82b1\uff09\u3002 \u533a\u5757\u6253\u5305 - \u77ff\u5de5\u5c06\u6709\u6548\u4ea4\u6613\u6253\u5305\u6210\u533a\u5757\uff0c\u5f00\u59cbPoW\u8ba1\u7b97\u3002 \u5171\u8bc6\u8fbe\u6210 - \u67d0\u77ff\u5de5\u627e\u5230Nonce\u540e\u5e7f\u64ad\u533a\u5757\uff0c\u5176\u4ed6\u8282\u70b9\u9a8c\u8bc1\u540e\u63a5\u53d7\u8be5\u533a\u5757\u3002 \u94fe\u4e0a\u786e\u8ba4 - \u540e\u7eed\u533a\u5757\u7ee7\u7eed\u5ef6\u4f38\uff0c6\u6b21\u786e\u8ba4\u540e\u89c6\u4e3a\u6700\u7ec8\u786e\u8ba4\u3002 \u4e94\u3001\u533a\u5757\u94fe\u7c7b\u578b\u5bf9\u6bd4 \u00b6 \u7c7b\u578b \u516c\u6709\u94fe \u8054\u76df\u94fe \u79c1\u6709\u94fe \u53c2\u4e0e\u8005 \u4efb\u4f55\u4eba \u8bb8\u53ef\u6210\u5458\uff08\u5982\u4f01\u4e1a\uff09 \u5355\u4e00\u7ec4\u7ec7 \u5171\u8bc6\u673a\u5236 PoW/PoS\u7b49 PBFT/Raft \u4e2d\u5fc3\u5316\u5171\u8bc6 \u6027\u80fd \u4f4e\uff08\u53bb\u4e2d\u5fc3\u5316\u4ee3\u4ef7\uff09 \u4e2d-\u9ad8 \u6781\u9ad8 \u7528\u4f8b \u52a0\u5bc6\u8d27\u5e01\uff08\u6bd4\u7279\u5e01\uff09 \u4f9b\u5e94\u94fe\u91d1\u878d\uff08\u8682\u8681\u94fe\uff09 \u5185\u90e8\u5ba1\u8ba1 \u516d\u3001\u5173\u952e\u6311\u6218 \u00b6 \u4e0d\u53ef\u80fd\u4e09\u89d2 \uff1a\u53bb\u4e2d\u5fc3\u5316\u3001\u5b89\u5168\u6027\u3001\u53ef\u6269\u5c55\u6027\u96be\u4ee5\u517c\u987e\u3002 \u9690\u79c1\u4fdd\u62a4 \uff1a\u96f6\u77e5\u8bc6\u8bc1\u660e\uff08ZKP\uff09\u7b49\u65b9\u6848\u5728\u63a2\u7d22\u4e2d\u3002 \u76d1\u7ba1\u5408\u89c4 \uff1a\u5982\u4f55\u5e73\u8861\u533f\u540d\u6027\u4e0e\u53cd\u6d17\u94b1\uff08AML\uff09\u8981\u6c42\u3002 \u533a\u5757\u94fe\u53ef\u80fd\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6cd5 \u00b6 \u4e00\u3001 \u533a\u5757\u94fe\u7684\u201c\u4e0d\u53ef\u80fd\u4e09\u89d2\u201d\uff08Scalability Trilemma\uff09 \u00b6 \u533a\u5757\u94fe\u7684\u4e0d\u53ef\u80fd\u4e09\u89d2\u7531\u4ee5\u592a\u574a\u521b\u59cb\u4ebaVitalik Buterin\u63d0\u51fa\uff0c\u6307\u7cfb\u7edf\u65e0\u6cd5\u540c\u65f6\u5b8c\u7f8e\u5b9e\u73b0\u4ee5\u4e0b\u4e09\u4e2a\u7279\u6027\uff1a \u7ef4\u5ea6 \u63cf\u8ff0 \u51b2\u7a81\u70b9 \u53bb\u4e2d\u5fc3\u5316 \u8282\u70b9\u5e7f\u6cdb\u5206\u5e03\uff0c\u65e0\u5355\u4e00\u63a7\u5236\u65b9\uff08\u5982\u6bd4\u7279\u5e01\u4e0a\u4e07\u8282\u70b9\uff09\u3002 \u8282\u70b9\u8d8a\u591a\uff0c\u5171\u8bc6\u6548\u7387\u8d8a\u4f4e\uff0c\u7f51\u7edc\u5ef6\u8fdf\u8d8a\u9ad8\u3002 \u5b89\u5168\u6027 \u62b5\u6297\u653b\u51fb\uff08\u598251%\u7b97\u529b\u653b\u51fb\u3001\u53cc\u82b1\uff09\u7684\u80fd\u529b\u3002 \u9ad8\u5b89\u5168\u6027\u901a\u5e38\u9700\u8981\u727a\u7272\u6027\u80fd\uff08\u5982PoW\u7684\u7b97\u529b\u7ade\u4e89\uff09\u3002 \u53ef\u6269\u5c55\u6027 \u5904\u7406\u9ad8\u541e\u5410\u91cf\uff08TPS\uff09\u7684\u80fd\u529b\uff08\u5982Visa\u6bcf\u79d2\u5904\u74062.4\u4e07\u7b14\uff0c\u4ee5\u592a\u574a\u4ec515-30\u7b14\uff09\u3002 \u63d0\u5347TPS\u9700\u7b80\u5316\u9a8c\u8bc1\u6d41\u7a0b\uff08\u5982\u51cf\u5c11\u8282\u70b9\uff09\uff0c\u53ef\u80fd\u524a\u5f31\u53bb\u4e2d\u5fc3\u5316\u6216\u5b89\u5168\u6027\u3002 \u73b0\u5b9e\u6848\u4f8b \u00b6 \u6bd4\u7279\u5e01 \uff1a\u5f3a\u53bb\u4e2d\u5fc3\u5316+\u5f3a\u5b89\u5168\u6027\uff0c\u4f46TPS\u6781\u4f4e\uff087\u7b14/\u79d2\uff09\u3002 EOS \uff1a\u9ad8TPS\uff08\u6570\u5343\u7b14/\u79d2\uff09\uff0c\u4f46\u4ec521\u4e2a\u8d85\u7ea7\u8282\u70b9\uff0c\u4e2d\u5fc3\u5316\u4e89\u8bae\u5927\u3002 \u4ee5\u592a\u574a2.0 \uff1a\u901a\u8fc7\u5206\u7247\uff08Sharding\uff09\u548cPoS\u8bd5\u56fe\u5e73\u8861\u4e09\u8005\uff0c\u4f46\u4ecd\u9700\u59a5\u534f\u3002 \u89e3\u51b3\u65b9\u6848\u5c1d\u8bd5 \u00b6 Layer2\u6269\u5c55 \uff1a\u5c06\u4ea4\u6613\u79fb\u81f3\u94fe\u4e0b\uff08\u5982Rollups\u3001\u72b6\u6001\u901a\u9053\uff09\uff0c\u4e3b\u94fe\u4ec5\u7ed3\u7b97\u3002 \u5206\u7247\u6280\u672f \uff1a\u5c06\u7f51\u7edc\u5206\u533a\u5e76\u884c\u5904\u7406\uff08\u727a\u7272\u90e8\u5206\u5168\u5c40\u4e00\u81f4\u6027\uff09\u3002 \u6df7\u5408\u5171\u8bc6 \uff1aPoS+PBFT\u7b49\u7ec4\u5408\uff08\u5982Solana\u7684PoH\u5386\u53f2\u8bc1\u660e\uff09\u3002 \u4e8c\u3001 \u9690\u79c1\u4fdd\u62a4\u6280\u672f \u00b6 \u533a\u5757\u94fe\u7684\u900f\u660e\u6027\uff08\u5982\u6bd4\u7279\u5e01\u4ea4\u6613\u5168\u7f51\u53ef\u89c1\uff09\u4e0e\u9690\u79c1\u9700\u6c42\u77db\u76fe\uff0c\u4ee5\u4e0b\u662f\u4e3b\u6d41\u89e3\u51b3\u65b9\u6848\uff1a 1. \u57fa\u7840\u9690\u79c1\u4fdd\u62a4 \u00b6 \u4f2a\u533f\u540d\u6027 \uff1a\u5730\u5740\u4e0d\u76f4\u63a5\u5173\u8054\u771f\u5b9e\u8eab\u4efd\uff08\u4f46\u901a\u8fc7\u94fe\u4e0a\u5206\u6790\u53ef\u80fd\u8ffd\u8e2a\uff09\u3002 \u73af\u7b7e\u540d\uff08Ring Signature\uff09 \uff1a - \u539f\u7406 \uff1a\u4ea4\u6613\u7b7e\u540d\u6df7\u5408\u591a\u4e2a\u7528\u6237\u7684\u516c\u94a5\uff0c\u9690\u85cf\u771f\u5b9e\u53d1\u9001\u8005\uff08\u5982\u95e8\u7f57\u5e01\uff09\u3002 - \u7f3a\u70b9 \uff1a\u4ea4\u6613\u4f53\u79ef\u5927\uff0c\u9a8c\u8bc1\u6548\u7387\u4f4e\u3002 2. \u9ad8\u7ea7\u5bc6\u7801\u5b66\u65b9\u6848 \u00b6 \u96f6\u77e5\u8bc6\u8bc1\u660e\uff08ZKP\uff09 \uff1a - \u539f\u7406 \uff1a\u8bc1\u660e\u65b9\u65e0\u9700\u900f\u9732\u4fe1\u606f\u672c\u8eab\uff0c\u5373\u53ef\u9a8c\u8bc1\u9648\u8ff0\u771f\u5b9e\u6027\uff08\u5982Zcash\u7684zk-SNARKs\uff09\u3002 - \u7528\u4f8b \uff1a\u9690\u85cf\u4ea4\u6613\u91d1\u989d\u3001\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u3002 - \u7f3a\u70b9 \uff1a\u9700\u8981\u53ef\u4fe1\u8bbe\u7f6e\uff08zk-SNARKs\uff09\u3001\u8ba1\u7b97\u8d44\u6e90\u6d88\u8017\u9ad8\u3002 \u540c\u6001\u52a0\u5bc6 \uff1a - \u539f\u7406 \uff1a\u6570\u636e\u52a0\u5bc6\u72b6\u6001\u4e0b\u53ef\u8ba1\u7b97\uff08\u5982\u9690\u79c1\u667a\u80fd\u5408\u7ea6\uff09\u3002 - \u6311\u6218 \uff1a\u6027\u80fd\u74f6\u9888\uff0c\u5c1a\u672a\u5927\u89c4\u6a21\u5e94\u7528\u3002 3. \u8054\u76df\u94fe\u9690\u79c1\u65b9\u6848 \u00b6 \u901a\u9053\u9694\u79bb\uff08Channel\uff09 \uff1a - \u5982Hyperledger Fabric\u7684\u79c1\u6709\u901a\u9053\uff0c\u4ec5\u53c2\u4e0e\u8005\u53ef\u89c1\u4ea4\u6613\u3002 \u53ef\u4fe1\u6267\u884c\u73af\u5883\uff08TEE\uff09 \uff1a - \u5229\u7528\u786c\u4ef6\uff08\u5982Intel SGX\uff09\u9694\u79bb\u654f\u611f\u8ba1\u7b97\uff08\u5982\u8682\u8681\u94fe\uff09\u3002 4. \u65b0\u5174\u65b9\u5411 \u00b6 Mimblewimble \uff08Grin/Beam\uff09\uff1a - \u5408\u5e76\u4ea4\u6613\u4e2d\u95f4\u72b6\u6001\uff0c\u9690\u85cf\u91d1\u989d\u548c\u5730\u5740\u3002 ZK-Rollups \uff1a - \u5c06\u5927\u91cf\u4ea4\u6613\u538b\u7f29\u4e3a\u4e00\u4e2aZKP\u8bc1\u660e\u63d0\u4ea4\u5230\u94fe\u4e0a\uff08\u517c\u987e\u9690\u79c1\u4e0e\u6269\u5c55\u6027\uff09\u3002 \u4e09\u3001 \u9690\u79c1\u4e0e\u76d1\u7ba1\u7684\u51b2\u7a81 \u00b6 \u9690\u79c1\u5e01\u56f0\u5883 \uff1a\u95e8\u7f57\u5e01\uff08Monero\uff09\u3001Zcash\u7b49\u56e0\u5f3a\u533f\u540d\u6027\u88ab\u90e8\u5206\u4ea4\u6613\u6240\u4e0b\u67b6\u3002 \u5408\u89c4\u65b9\u6848 \uff1a - \u9009\u62e9\u6027\u62ab\u9732 \uff1a\u7528\u6237\u53ef\u5411\u76d1\u7ba1\u65b9\u516c\u5f00\u7279\u5b9a\u4ea4\u6613\uff08\u5982Zcash\u7684\u201c\u67e5\u770b\u5bc6\u94a5\u201d\uff09\u3002 - KYC\u96c6\u6210 \uff1a\u8054\u76df\u94fe\u8981\u6c42\u53c2\u4e0e\u8005\u5b9e\u540d\uff08\u5982R3 Corda\uff09\u3002 \u603b\u7ed3 \u00b6 \u4e0d\u53ef\u80fd\u4e09\u89d2 \u662f\u533a\u5757\u94fe\u8bbe\u8ba1\u7684\u6839\u672c\u7ea6\u675f\uff0c\u9700\u6839\u636e\u573a\u666f\u6743\u8861\uff08\u5982\u91d1\u878d\u7ed3\u7b97\u91cd\u5b89\u5168\uff0c\u6e38\u620fDApp\u91cd\u6269\u5c55\u6027\uff09\u3002 \u9690\u79c1\u4fdd\u62a4 \u6280\u672f\u5feb\u901f\u53d1\u5c55\uff0c\u4f46\u9700\u5e73\u8861\u6027\u80fd\u3001\u6613\u7528\u6027\u548c\u5408\u89c4\u6027\u3002 \u672a\u6765\u8d8b\u52bf \uff1aLayer2+ZK\u6280\u672f\u53ef\u80fd\u662f\u7a81\u7834\u4e09\u89d2\u548c\u9690\u79c1\u96be\u9898\u7684\u5173\u952e\uff08\u5982StarkNet\u3001Aztec\uff09\u3002","title":"Basic"},{"location":"bitcoin/basic/#_1","text":"demo","title":"\u533a\u5757\u94fe\u7684\u5168\u6d41\u7a0b"},{"location":"bitcoin/basic/#_2","text":"\u53bb\u4e2d\u5fc3\u5316\u4fe1\u4efb \u5728\u6ca1\u6709\u4e2d\u5fc3\u5316\u673a\u6784\uff08\u5982\u94f6\u884c\u3001\u653f\u5e9c\uff09\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u6570\u5b66\u548c\u5bc6\u7801\u5b66\u5b9e\u73b0\u591a\u65b9\u4e4b\u95f4\u7684\u53ef\u4fe1\u534f\u4f5c\u3002 \u9632\u7be1\u6539\u4e0e\u6570\u636e\u900f\u660e \u786e\u4fdd\u6570\u636e\u4e00\u65e6\u8bb0\u5f55\u65e0\u6cd5\u88ab\u7be1\u6539\uff0c\u6240\u6709\u53c2\u4e0e\u65b9\u53ef\u9a8c\u8bc1\u5386\u53f2\u8bb0\u5f55\u3002 \u6297\u5355\u70b9\u6545\u969c \u5206\u5e03\u5f0f\u7f51\u7edc\u907f\u514d\u4e2d\u5fc3\u5316\u7cfb\u7edf\u7684\u8106\u5f31\u6027\uff0c\u63d0\u5347\u7cfb\u7edf\u9c81\u68d2\u6027\u3002","title":"\u4e00\u3001\u533a\u5757\u94fe\u89e3\u51b3\u7684\u6838\u5fc3\u95ee\u9898"},{"location":"bitcoin/basic/#_3","text":"\u7f51\u7edc\u5c42\uff08P2P\u7f51\u7edc\uff09 - \u529f\u80fd \uff1a\u8282\u70b9\u95f4\u901a\u8fc7\u70b9\u5bf9\u70b9\u534f\u8bae\u901a\u4fe1\uff0c\u5e7f\u64ad\u4ea4\u6613\u548c\u533a\u5757\u3002 - \u5173\u952e\u70b9 \uff1a\u65e0\u4e2d\u5fc3\u670d\u52a1\u5668\uff0c\u91c7\u7528Gossip\u534f\u8bae\u6269\u6563\u4fe1\u606f\u3002 \u6570\u636e\u5c42\uff08\u94fe\u5f0f\u7ed3\u6784\uff09 - \u533a\u5757\u7ed3\u6784 \uff1a\u5305\u542b\u533a\u5757\u5934\uff08\u5143\u6570\u636e\uff09\u548c\u4ea4\u6613\u5217\u8868\u3002 - \u533a\u5757\u5934\uff1a\u7248\u672c\u53f7\u3001\u65f6\u95f4\u6233\u3001\u524d\u4e00\u4e2a\u533a\u5757\u54c8\u5e0c\uff08\u5f62\u6210\u94fe\uff09\u3001Merkle\u6839\u3001Nonce\u7b49\u3002 - Merkle\u6811 \uff1a\u5c06\u4ea4\u6613\u54c8\u5e0c\u9010\u5c42\u8ba1\u7b97\uff0c\u6700\u7ec8\u751f\u6210\u552f\u4e00\u6839\u54c8\u5e0c\uff0c\u7528\u4e8e\u5feb\u901f\u9a8c\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u3002 \u5171\u8bc6\u5c42 - \u6838\u5fc3\u7b97\u6cd5 \uff1aPoW\uff08\u5de5\u4f5c\u91cf\u8bc1\u660e\uff09\u3001PoS\uff08\u6743\u76ca\u8bc1\u660e\uff09\u3001PBFT\uff08\u62dc\u5360\u5ead\u5bb9\u9519\uff09\u7b49\uff08\u540e\u6587\u8be6\u8ff0\uff09\u3002 \u6fc0\u52b1\u5c42\uff08\u516c\u6709\u94fe\u7279\u6709\uff09 - \u77ff\u5de5\u5956\u52b1 \uff1a\u901a\u8fc7\u4ee3\u5e01\u6fc0\u52b1\u8282\u70b9\u53c2\u4e0e\u5171\u8bc6\uff08\u5982\u6bd4\u7279\u5e01\u7684\u533a\u5757\u5956\u52b1+\u4ea4\u6613\u8d39\uff09\u3002 \u5408\u7ea6\u5c42\uff08\u667a\u80fd\u5408\u7ea6\uff09 - \u53ef\u7f16\u7a0b\u903b\u8f91 \uff1a\u5728\u533a\u5757\u94fe\u4e0a\u81ea\u52a8\u6267\u884c\u7684\u4ee3\u7801\uff08\u5982\u4ee5\u592a\u574aSolidity\uff09\u3002 \u5e94\u7528\u5c42 - DApps\uff08\u53bb\u4e2d\u5fc3\u5316\u5e94\u7528\uff09\u3001\u94b1\u5305\u3001\u6d4f\u89c8\u5668\u7b49\u3002","title":"\u4e8c\u3001\u533a\u5757\u94fe\u57fa\u7840\u67b6\u6784"},{"location":"bitcoin/basic/#_4","text":"\u5bc6\u7801\u5b66\u7b97\u6cd5 - \u54c8\u5e0c\u51fd\u6570 \uff08SHA-256\u3001Keccak\u7b49\uff09\uff1a\u5c06\u4efb\u610f\u6570\u636e\u6620\u5c04\u4e3a\u56fa\u5b9a\u957f\u5ea6\u5b57\u7b26\u4e32\uff0c\u5177\u5907\u5355\u5411\u6027\u548c\u6297\u78b0\u649e\u6027\u3002 - \u975e\u5bf9\u79f0\u52a0\u5bc6 \uff08ECDSA\uff09\uff1a\u516c\u79c1\u94a5\u5bf9\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\u548c\u7b7e\u540d\u3002 - Merkle\u6811 \uff1a\u9ad8\u6548\u9a8c\u8bc1\u5927\u89c4\u6a21\u6570\u636e\u5b8c\u6574\u6027\u3002 \u5171\u8bc6\u7b97\u6cd5 - PoW\uff08\u5de5\u4f5c\u91cf\u8bc1\u660e\uff09 - \u8282\u70b9\u901a\u8fc7\u8ba1\u7b97\u5bfb\u627e\u6ee1\u8db3\u96be\u5ea6\u7684Nonce\u503c\uff08\u5982\u6bd4\u7279\u5e01\u8981\u6c42\u54c8\u5e0c\u524d\u5bfc0\uff09\u3002 - \u4ee3\u8868\uff1a\u6bd4\u7279\u5e01\u3001\u65e9\u671f\u4ee5\u592a\u574a\u3002 - \u4f18\u7f3a\u70b9 \uff1a\u9ad8\u5b89\u5168\u6027\u4f46\u8017\u80fd\u5de8\u5927\u3002 - PoS\uff08\u6743\u76ca\u8bc1\u660e\uff09 - \u6839\u636e\u8282\u70b9\u6301\u6709\u7684\u4ee3\u5e01\u6570\u91cf\u548c\u65f6\u957f\u9009\u62e9\u51fa\u5757\u8005\u3002 - \u4ee3\u8868\uff1a\u4ee5\u592a\u574a2.0\u3001Cardano\u3002 - \u4f18\u5316 \uff1a\u964d\u4f4e\u80fd\u8017\uff0c\u4f46\u53ef\u80fd\u5f15\u53d1\u201c\u5bcc\u8005\u6108\u5bcc\u201d\u95ee\u9898\u3002 - PBFT\uff08\u5b9e\u7528\u62dc\u5360\u5ead\u5bb9\u9519\uff09 - \u8282\u70b9\u901a\u8fc7\u591a\u8f6e\u6295\u7968\u8fbe\u6210\u5171\u8bc6\uff0c\u9002\u5408\u8054\u76df\u94fe\uff08\u5982Hyperledger Fabric\uff09\u3002 - \u7279\u70b9 \uff1a\u4f4e\u5ef6\u8fdf\u4f46\u8282\u70b9\u6570\u91cf\u53d7\u9650\uff08\u901a\u5e38\u2264100\uff09\u3002 \u667a\u80fd\u5408\u7ea6 - \u56fe\u7075\u5b8c\u5907\u865a\u62df\u673a \uff08\u5982EVM\uff09\uff1a\u9694\u79bb\u6267\u884c\u4ee3\u7801\uff0cGas\u673a\u5236\u9632\u6b62\u65e0\u9650\u5faa\u73af\u3002 \u6269\u5c55\u6280\u672f - \u5206\u7247\uff08Sharding\uff09 \uff1a\u5c06\u7f51\u7edc\u5206\u533a\u5e76\u884c\u5904\u7406\u4ea4\u6613\uff08\u4ee5\u592a\u574a2.0\uff09\u3002 - Layer2 \uff1a\u94fe\u4e0b\u5904\u7406\u4ea4\u6613\uff08\u5982Rollups\u3001\u72b6\u6001\u901a\u9053\uff09\u3002","title":"\u4e09\u3001\u6838\u5fc3\u7b97\u6cd5\u4e0e\u6280\u672f"},{"location":"bitcoin/basic/#_5","text":"\u4ea4\u6613\u53d1\u8d77 - \u7528\u6237A\u7528\u79c1\u94a5\u7b7e\u540d\u4e00\u7b14\u8f6c\u8d26\u4ea4\u6613\uff0c\u5e7f\u64ad\u5230P2P\u7f51\u7edc\u3002 \u4ea4\u6613\u9a8c\u8bc1 - \u8282\u70b9\u9a8c\u8bc1\u7b7e\u540d\u3001\u4f59\u989d\u662f\u5426\u5145\u8db3\uff0c\u4ea4\u6613\u662f\u5426\u672a\u91cd\u590d\uff08\u9632\u53cc\u82b1\uff09\u3002 \u533a\u5757\u6253\u5305 - \u77ff\u5de5\u5c06\u6709\u6548\u4ea4\u6613\u6253\u5305\u6210\u533a\u5757\uff0c\u5f00\u59cbPoW\u8ba1\u7b97\u3002 \u5171\u8bc6\u8fbe\u6210 - \u67d0\u77ff\u5de5\u627e\u5230Nonce\u540e\u5e7f\u64ad\u533a\u5757\uff0c\u5176\u4ed6\u8282\u70b9\u9a8c\u8bc1\u540e\u63a5\u53d7\u8be5\u533a\u5757\u3002 \u94fe\u4e0a\u786e\u8ba4 - \u540e\u7eed\u533a\u5757\u7ee7\u7eed\u5ef6\u4f38\uff0c6\u6b21\u786e\u8ba4\u540e\u89c6\u4e3a\u6700\u7ec8\u786e\u8ba4\u3002","title":"\u56db\u3001\u5178\u578b\u6d41\u7a0b\u793a\u4f8b\uff08\u4ee5\u6bd4\u7279\u5e01\u4e3a\u4f8b\uff09"},{"location":"bitcoin/basic/#_6","text":"\u7c7b\u578b \u516c\u6709\u94fe \u8054\u76df\u94fe \u79c1\u6709\u94fe \u53c2\u4e0e\u8005 \u4efb\u4f55\u4eba \u8bb8\u53ef\u6210\u5458\uff08\u5982\u4f01\u4e1a\uff09 \u5355\u4e00\u7ec4\u7ec7 \u5171\u8bc6\u673a\u5236 PoW/PoS\u7b49 PBFT/Raft \u4e2d\u5fc3\u5316\u5171\u8bc6 \u6027\u80fd \u4f4e\uff08\u53bb\u4e2d\u5fc3\u5316\u4ee3\u4ef7\uff09 \u4e2d-\u9ad8 \u6781\u9ad8 \u7528\u4f8b \u52a0\u5bc6\u8d27\u5e01\uff08\u6bd4\u7279\u5e01\uff09 \u4f9b\u5e94\u94fe\u91d1\u878d\uff08\u8682\u8681\u94fe\uff09 \u5185\u90e8\u5ba1\u8ba1","title":"\u4e94\u3001\u533a\u5757\u94fe\u7c7b\u578b\u5bf9\u6bd4"},{"location":"bitcoin/basic/#_7","text":"\u4e0d\u53ef\u80fd\u4e09\u89d2 \uff1a\u53bb\u4e2d\u5fc3\u5316\u3001\u5b89\u5168\u6027\u3001\u53ef\u6269\u5c55\u6027\u96be\u4ee5\u517c\u987e\u3002 \u9690\u79c1\u4fdd\u62a4 \uff1a\u96f6\u77e5\u8bc6\u8bc1\u660e\uff08ZKP\uff09\u7b49\u65b9\u6848\u5728\u63a2\u7d22\u4e2d\u3002 \u76d1\u7ba1\u5408\u89c4 \uff1a\u5982\u4f55\u5e73\u8861\u533f\u540d\u6027\u4e0e\u53cd\u6d17\u94b1\uff08AML\uff09\u8981\u6c42\u3002","title":"\u516d\u3001\u5173\u952e\u6311\u6218"},{"location":"bitcoin/basic/#_8","text":"","title":"\u533a\u5757\u94fe\u53ef\u80fd\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6cd5"},{"location":"bitcoin/basic/#scalability-trilemma","text":"\u533a\u5757\u94fe\u7684\u4e0d\u53ef\u80fd\u4e09\u89d2\u7531\u4ee5\u592a\u574a\u521b\u59cb\u4ebaVitalik Buterin\u63d0\u51fa\uff0c\u6307\u7cfb\u7edf\u65e0\u6cd5\u540c\u65f6\u5b8c\u7f8e\u5b9e\u73b0\u4ee5\u4e0b\u4e09\u4e2a\u7279\u6027\uff1a \u7ef4\u5ea6 \u63cf\u8ff0 \u51b2\u7a81\u70b9 \u53bb\u4e2d\u5fc3\u5316 \u8282\u70b9\u5e7f\u6cdb\u5206\u5e03\uff0c\u65e0\u5355\u4e00\u63a7\u5236\u65b9\uff08\u5982\u6bd4\u7279\u5e01\u4e0a\u4e07\u8282\u70b9\uff09\u3002 \u8282\u70b9\u8d8a\u591a\uff0c\u5171\u8bc6\u6548\u7387\u8d8a\u4f4e\uff0c\u7f51\u7edc\u5ef6\u8fdf\u8d8a\u9ad8\u3002 \u5b89\u5168\u6027 \u62b5\u6297\u653b\u51fb\uff08\u598251%\u7b97\u529b\u653b\u51fb\u3001\u53cc\u82b1\uff09\u7684\u80fd\u529b\u3002 \u9ad8\u5b89\u5168\u6027\u901a\u5e38\u9700\u8981\u727a\u7272\u6027\u80fd\uff08\u5982PoW\u7684\u7b97\u529b\u7ade\u4e89\uff09\u3002 \u53ef\u6269\u5c55\u6027 \u5904\u7406\u9ad8\u541e\u5410\u91cf\uff08TPS\uff09\u7684\u80fd\u529b\uff08\u5982Visa\u6bcf\u79d2\u5904\u74062.4\u4e07\u7b14\uff0c\u4ee5\u592a\u574a\u4ec515-30\u7b14\uff09\u3002 \u63d0\u5347TPS\u9700\u7b80\u5316\u9a8c\u8bc1\u6d41\u7a0b\uff08\u5982\u51cf\u5c11\u8282\u70b9\uff09\uff0c\u53ef\u80fd\u524a\u5f31\u53bb\u4e2d\u5fc3\u5316\u6216\u5b89\u5168\u6027\u3002","title":"\u4e00\u3001\u533a\u5757\u94fe\u7684\u201c\u4e0d\u53ef\u80fd\u4e09\u89d2\u201d\uff08Scalability Trilemma\uff09"},{"location":"bitcoin/basic/#_9","text":"\u6bd4\u7279\u5e01 \uff1a\u5f3a\u53bb\u4e2d\u5fc3\u5316+\u5f3a\u5b89\u5168\u6027\uff0c\u4f46TPS\u6781\u4f4e\uff087\u7b14/\u79d2\uff09\u3002 EOS \uff1a\u9ad8TPS\uff08\u6570\u5343\u7b14/\u79d2\uff09\uff0c\u4f46\u4ec521\u4e2a\u8d85\u7ea7\u8282\u70b9\uff0c\u4e2d\u5fc3\u5316\u4e89\u8bae\u5927\u3002 \u4ee5\u592a\u574a2.0 \uff1a\u901a\u8fc7\u5206\u7247\uff08Sharding\uff09\u548cPoS\u8bd5\u56fe\u5e73\u8861\u4e09\u8005\uff0c\u4f46\u4ecd\u9700\u59a5\u534f\u3002","title":"\u73b0\u5b9e\u6848\u4f8b"},{"location":"bitcoin/basic/#_10","text":"Layer2\u6269\u5c55 \uff1a\u5c06\u4ea4\u6613\u79fb\u81f3\u94fe\u4e0b\uff08\u5982Rollups\u3001\u72b6\u6001\u901a\u9053\uff09\uff0c\u4e3b\u94fe\u4ec5\u7ed3\u7b97\u3002 \u5206\u7247\u6280\u672f \uff1a\u5c06\u7f51\u7edc\u5206\u533a\u5e76\u884c\u5904\u7406\uff08\u727a\u7272\u90e8\u5206\u5168\u5c40\u4e00\u81f4\u6027\uff09\u3002 \u6df7\u5408\u5171\u8bc6 \uff1aPoS+PBFT\u7b49\u7ec4\u5408\uff08\u5982Solana\u7684PoH\u5386\u53f2\u8bc1\u660e\uff09\u3002","title":"\u89e3\u51b3\u65b9\u6848\u5c1d\u8bd5"},{"location":"bitcoin/basic/#_11","text":"\u533a\u5757\u94fe\u7684\u900f\u660e\u6027\uff08\u5982\u6bd4\u7279\u5e01\u4ea4\u6613\u5168\u7f51\u53ef\u89c1\uff09\u4e0e\u9690\u79c1\u9700\u6c42\u77db\u76fe\uff0c\u4ee5\u4e0b\u662f\u4e3b\u6d41\u89e3\u51b3\u65b9\u6848\uff1a","title":"\u4e8c\u3001\u9690\u79c1\u4fdd\u62a4\u6280\u672f"},{"location":"bitcoin/basic/#1","text":"\u4f2a\u533f\u540d\u6027 \uff1a\u5730\u5740\u4e0d\u76f4\u63a5\u5173\u8054\u771f\u5b9e\u8eab\u4efd\uff08\u4f46\u901a\u8fc7\u94fe\u4e0a\u5206\u6790\u53ef\u80fd\u8ffd\u8e2a\uff09\u3002 \u73af\u7b7e\u540d\uff08Ring Signature\uff09 \uff1a - \u539f\u7406 \uff1a\u4ea4\u6613\u7b7e\u540d\u6df7\u5408\u591a\u4e2a\u7528\u6237\u7684\u516c\u94a5\uff0c\u9690\u85cf\u771f\u5b9e\u53d1\u9001\u8005\uff08\u5982\u95e8\u7f57\u5e01\uff09\u3002 - \u7f3a\u70b9 \uff1a\u4ea4\u6613\u4f53\u79ef\u5927\uff0c\u9a8c\u8bc1\u6548\u7387\u4f4e\u3002","title":"1. \u57fa\u7840\u9690\u79c1\u4fdd\u62a4"},{"location":"bitcoin/basic/#2","text":"\u96f6\u77e5\u8bc6\u8bc1\u660e\uff08ZKP\uff09 \uff1a - \u539f\u7406 \uff1a\u8bc1\u660e\u65b9\u65e0\u9700\u900f\u9732\u4fe1\u606f\u672c\u8eab\uff0c\u5373\u53ef\u9a8c\u8bc1\u9648\u8ff0\u771f\u5b9e\u6027\uff08\u5982Zcash\u7684zk-SNARKs\uff09\u3002 - \u7528\u4f8b \uff1a\u9690\u85cf\u4ea4\u6613\u91d1\u989d\u3001\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u3002 - \u7f3a\u70b9 \uff1a\u9700\u8981\u53ef\u4fe1\u8bbe\u7f6e\uff08zk-SNARKs\uff09\u3001\u8ba1\u7b97\u8d44\u6e90\u6d88\u8017\u9ad8\u3002 \u540c\u6001\u52a0\u5bc6 \uff1a - \u539f\u7406 \uff1a\u6570\u636e\u52a0\u5bc6\u72b6\u6001\u4e0b\u53ef\u8ba1\u7b97\uff08\u5982\u9690\u79c1\u667a\u80fd\u5408\u7ea6\uff09\u3002 - \u6311\u6218 \uff1a\u6027\u80fd\u74f6\u9888\uff0c\u5c1a\u672a\u5927\u89c4\u6a21\u5e94\u7528\u3002","title":"2. \u9ad8\u7ea7\u5bc6\u7801\u5b66\u65b9\u6848"},{"location":"bitcoin/basic/#3","text":"\u901a\u9053\u9694\u79bb\uff08Channel\uff09 \uff1a - \u5982Hyperledger Fabric\u7684\u79c1\u6709\u901a\u9053\uff0c\u4ec5\u53c2\u4e0e\u8005\u53ef\u89c1\u4ea4\u6613\u3002 \u53ef\u4fe1\u6267\u884c\u73af\u5883\uff08TEE\uff09 \uff1a - \u5229\u7528\u786c\u4ef6\uff08\u5982Intel SGX\uff09\u9694\u79bb\u654f\u611f\u8ba1\u7b97\uff08\u5982\u8682\u8681\u94fe\uff09\u3002","title":"3. \u8054\u76df\u94fe\u9690\u79c1\u65b9\u6848"},{"location":"bitcoin/basic/#4","text":"Mimblewimble \uff08Grin/Beam\uff09\uff1a - \u5408\u5e76\u4ea4\u6613\u4e2d\u95f4\u72b6\u6001\uff0c\u9690\u85cf\u91d1\u989d\u548c\u5730\u5740\u3002 ZK-Rollups \uff1a - \u5c06\u5927\u91cf\u4ea4\u6613\u538b\u7f29\u4e3a\u4e00\u4e2aZKP\u8bc1\u660e\u63d0\u4ea4\u5230\u94fe\u4e0a\uff08\u517c\u987e\u9690\u79c1\u4e0e\u6269\u5c55\u6027\uff09\u3002","title":"4. \u65b0\u5174\u65b9\u5411"},{"location":"bitcoin/basic/#_12","text":"\u9690\u79c1\u5e01\u56f0\u5883 \uff1a\u95e8\u7f57\u5e01\uff08Monero\uff09\u3001Zcash\u7b49\u56e0\u5f3a\u533f\u540d\u6027\u88ab\u90e8\u5206\u4ea4\u6613\u6240\u4e0b\u67b6\u3002 \u5408\u89c4\u65b9\u6848 \uff1a - \u9009\u62e9\u6027\u62ab\u9732 \uff1a\u7528\u6237\u53ef\u5411\u76d1\u7ba1\u65b9\u516c\u5f00\u7279\u5b9a\u4ea4\u6613\uff08\u5982Zcash\u7684\u201c\u67e5\u770b\u5bc6\u94a5\u201d\uff09\u3002 - KYC\u96c6\u6210 \uff1a\u8054\u76df\u94fe\u8981\u6c42\u53c2\u4e0e\u8005\u5b9e\u540d\uff08\u5982R3 Corda\uff09\u3002","title":"\u4e09\u3001\u9690\u79c1\u4e0e\u76d1\u7ba1\u7684\u51b2\u7a81"},{"location":"bitcoin/basic/#_13","text":"\u4e0d\u53ef\u80fd\u4e09\u89d2 \u662f\u533a\u5757\u94fe\u8bbe\u8ba1\u7684\u6839\u672c\u7ea6\u675f\uff0c\u9700\u6839\u636e\u573a\u666f\u6743\u8861\uff08\u5982\u91d1\u878d\u7ed3\u7b97\u91cd\u5b89\u5168\uff0c\u6e38\u620fDApp\u91cd\u6269\u5c55\u6027\uff09\u3002 \u9690\u79c1\u4fdd\u62a4 \u6280\u672f\u5feb\u901f\u53d1\u5c55\uff0c\u4f46\u9700\u5e73\u8861\u6027\u80fd\u3001\u6613\u7528\u6027\u548c\u5408\u89c4\u6027\u3002 \u672a\u6765\u8d8b\u52bf \uff1aLayer2+ZK\u6280\u672f\u53ef\u80fd\u662f\u7a81\u7834\u4e09\u89d2\u548c\u9690\u79c1\u96be\u9898\u7684\u5173\u952e\uff08\u5982StarkNet\u3001Aztec\uff09\u3002","title":"\u603b\u7ed3"},{"location":"bitcoin/bull_bear/","text":"\u725b\u5e02(bull)\u548c\u718a\u5e02(bear) \u00b6 \u533a\u5757\u94fe\u7684 \u725b\u5e02\uff08Bull Market\uff09 \u548c \u718a\u5e02\uff08Bear Market\uff09 \u5e76\u975e\u5355\u7eaf\u6307\u201c\u6709\u4eba\u4ea4\u6613\u201d\u6216\u201c\u6ca1\u4eba\u4ea4\u6613\u201d\uff0c\u800c\u662f\u53cd\u6620\u5e02\u573a\u6574\u4f53\u7684 \u4ef7\u683c\u8d8b\u52bf\u3001\u6295\u8d44\u8005\u60c5\u7eea\u548c\u8d44\u91d1\u6d41\u52a8 \u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u89e3\u91ca\uff1a 1. \u725b\u5e02 vs. \u718a\u5e02\u7684\u5b9a\u4e49 \u00b6 \u7279\u5f81 \u725b\u5e02 \u718a\u5e02 \u4ef7\u683c\u8d8b\u52bf \u6301\u7eed\u4e0a\u6da8\uff08\u5982BTC\u7a81\u7834\u524d\u9ad8\uff09 \u6301\u7eed\u4e0b\u8dcc\uff08\u5982BTC\u8170\u65a950%+\uff09 \u5e02\u573a\u60c5\u7eea \u4e50\u89c2\u3001FOMO\uff08\u5bb3\u6015\u9519\u8fc7\uff09 \u60b2\u89c2\u3001\u6050\u614c\u629b\u552e \u4ea4\u6613\u91cf \u901a\u5e38\u653e\u5927\uff08\u8d44\u91d1\u6d8c\u5165\uff09 \u53ef\u80fd\u840e\u7f29\uff08\u6d41\u52a8\u6027\u964d\u4f4e\uff09 \u8d44\u91d1\u6d41\u5165 \u65b0\u8d44\u91d1\u5165\u573a\uff08\u673a\u6784\u3001\u6563\u6237\uff09 \u8d44\u91d1\u64a4\u51fa\uff08\u5957\u73b0\u6216\u79bb\u573a\uff09 \u5178\u578b\u73b0\u8c61 ICO/NFT\u72c2\u70ed\u3001\u65b0\u516c\u94fe\u7206\u53d1 \u9879\u76ee\u8dd1\u8def\u3001\u88c1\u5458\u3001\u94fe\u4e0a\u6d3b\u52a8\u51cf\u5c11 2. \u5173\u952e\u533a\u522b\uff1a\u4ea4\u6613\u91cf \u2260 \u725b\u718a\u5e02 \u00b6 \u725b\u5e02 \uff1a \u4ea4\u6613\u91cf\u901a\u5e38\u589e\u52a0\uff0c\u4f46\u6838\u5fc3\u662f \u4ef7\u683c\u4e0a\u6da8+\u8d44\u91d1\u6d41\u5165 \u3002 \u4f8b\u5982\uff1a2021\u5e74\u6bd4\u7279\u5e01\u6da8\u81f36.9\u4e07\u7f8e\u5143\uff0c\u94fe\u4e0aGas\u8d39\u98d9\u5347\uff08\u4ee5\u592a\u574a\u62e5\u5835\uff09\uff0c\u4f46\u8fd9\u662f**\u7ed3\u679c**\u800c\u975e\u539f\u56e0\u3002 \u718a\u5e02 \uff1a \u4ea4\u6613\u91cf\u53ef\u80fd\u4e0b\u964d\uff0c\u4f46\u5173\u952e\u662f \u4ef7\u683c\u4e0b\u8dcc+\u4fe1\u5fc3\u4e27\u5931 \u3002 \u4f8b\u5982\uff1a2022\u5e74LUNA\u5d29\u76d8\u540e\uff0cBTC\u8dcc\u81f31.6\u4e07\u7f8e\u5143\uff0c\u5373\u4f7f\u94fe\u4e0a\u4ea4\u6613\u4ecd\u5728\u5904\u7406\uff08\u6ca1\u4eba\u4ea4\u6613\u662f\u6781\u7aef\u60c5\u51b5\uff09\u3002 \u8bef\u533a\u7ea0\u6b63 \uff1a - \u718a\u5e02\u4ecd\u6709\u4eba\u4ea4\u6613\uff08\u5957\u5229\u3001\u6b62\u635f\u3001\u6284\u5e95\uff09\uff0c\u725b\u5e02\u4e5f\u6709\u4eba\u79bb\u573a\uff08\u83b7\u5229\u4e86\u7ed3\uff09\u3002 - **\u51b3\u5b9a\u6027\u56e0\u7d20**\u662f\u5e02\u573a\u4e3b\u5bfc\u8d8b\u52bf\uff0c\u800c\u975e\u5355\u7eaf\u4ea4\u6613\u6d3b\u8dc3\u5ea6\u3002 3. \u725b\u718a\u5e02\u7684\u9a71\u52a8\u56e0\u7d20 \u00b6 \u725b\u5e02\u5e38\u89c1\u50ac\u5316\u5242 \uff1a \u00b6 \u51cf\u534a\u5468\u671f \uff08\u5982\u6bd4\u7279\u5e012024\u5e74\u51cf\u534a\uff0c\u4f9b\u5e94\u51cf\u5c11\u9884\u671f\uff09\u3002 \u673a\u6784\u5165\u573a \uff08\u5982ETF\u83b7\u6279\u3001MicroStrategy\u56e4\u5e01\uff09\u3002 \u6280\u672f\u7a81\u7834 \uff08\u5982\u4ee5\u592a\u574a\u5408\u5e76\u3001Layer2\u666e\u53ca\uff09\u3002 \u5b8f\u89c2\u7ecf\u6d4e \uff08\u6cd5\u5e01\u8d2c\u503c\u3001\u7f8e\u8054\u50a8\u964d\u606f\uff09\u3002 \u718a\u5e02\u5e38\u89c1\u8bf1\u56e0 \uff1a \u00b6 \u6ce1\u6cab\u7834\u88c2 \uff08\u59822018\u5e74ICO\u6ce1\u6cab\u30012022\u5e74LUNA/FTX\u66b4\u96f7\uff09\u3002 \u76d1\u7ba1\u6253\u51fb \uff08\u5982\u4e2d\u56fd\u6e05\u9000\u77ff\u573a\u3001SEC\u8d77\u8bc9\u9879\u76ee\u65b9\uff09\u3002 \u6d41\u52a8\u6027\u7d27\u7f29 \uff08\u5982\u7f8e\u8054\u50a8\u52a0\u606f\uff0c\u98ce\u9669\u8d44\u4ea7\u88ab\u629b\u552e\uff09\u3002 4. \u5982\u4f55\u5224\u65ad\u5e02\u573a\u9636\u6bb5\uff1f \u00b6 \u4ef7\u683c\u6307\u6807 \uff1a \u725b\u5e02\uff1a\u4ef7\u683c\u9ad8\u4e8e200\u65e5\u5747\u7ebf\uff0c\u7a81\u7834\u524d\u9ad8\u3002 \u718a\u5e02\uff1a\u4ef7\u683c\u4f4e\u4e8e200\u65e5\u5747\u7ebf\uff0c\u8dcc\u5e45\u8d8520%\uff08\u6280\u672f\u6027\u718a\u5e02\uff09\u3002 \u94fe\u4e0a\u6570\u636e \uff1a \u725b\u5e02\uff1a\u65b0\u589e\u5730\u5740\u6570\u3001Gas\u8d39\u3001TVL\uff08\u9501\u4ed3\u91cf\uff09\u589e\u957f\u3002 \u718a\u5e02\uff1a\u5de8\u9cb8\u5730\u5740\u51cf\u6301\u3001\u7a33\u5b9a\u5e01\u5e02\u503c\u6536\u7f29\u3002 \u60c5\u7eea\u6307\u6807 \uff1a \u6050\u60e7\u8d2a\u5a6a\u6307\u6570\uff08Fear & Greed Index\uff09\u6781\u7aef\u503c\u3002 5. \u5178\u578b\u6848\u4f8b \u00b6 2020-2021\u5e74\u725b\u5e02 \uff1a \u9a71\u52a8\uff1a\u7f8e\u8054\u50a8\u653e\u6c34+DeFi\u590f\u5b63+NFT\u7206\u53d1\u3002 \u7ed3\u679c\uff1aETH\u4ece \\(100\u6da8\u81f3\\) 4800\uff0cOpenSea\u65e5\u4ea4\u6613\u91cf\u7834\u4ebf\u3002 2022\u5e74\u718a\u5e02 \uff1a \u9a71\u52a8\uff1aLUNA\u5d29\u76d8+FTX\u66b4\u96f7+\u52a0\u606f\u3002 \u7ed3\u679c\uff1aCrypto\u603b\u5e02\u503c\u4ece \\(3\u4e07\u4ebf\u8dcc\u81f3\\) 8000\u4ebf\u3002 \u603b\u7ed3 \u00b6 \u725b\u5e02 = \u4ef7\u683c\u4e0a\u6da8 + \u8d44\u91d1\u6d8c\u5165 + \u60c5\u7eea\u72c2\u70ed\u3002 \u718a\u5e02 = \u4ef7\u683c\u4e0b\u8dcc + \u8d44\u91d1\u64a4\u79bb + \u60c5\u7eea\u6050\u614c\u3002 **\u4ea4\u6613\u91cf**\u662f\u8f85\u52a9\u6307\u6807\uff0c\u800c\u975e\u672c\u8d28\u539f\u56e0\u3002 \u533a\u5757\u94fe\u5e02\u573a\u5177\u6709\u5f3a\u5468\u671f\u6027\uff0c\u725b\u718a\u8f6c\u6362\u901a\u5e38\u4f34\u968f\u6280\u672f\u3001\u653f\u7b56\u548c\u8d44\u91d1\u9762\u7684\u6839\u672c\u53d8\u5316\u3002","title":"\u725b\u5e02(bull)\u548c\u718a\u5e02(bear)"},{"location":"bitcoin/bull_bear/#bullbear","text":"\u533a\u5757\u94fe\u7684 \u725b\u5e02\uff08Bull Market\uff09 \u548c \u718a\u5e02\uff08Bear Market\uff09 \u5e76\u975e\u5355\u7eaf\u6307\u201c\u6709\u4eba\u4ea4\u6613\u201d\u6216\u201c\u6ca1\u4eba\u4ea4\u6613\u201d\uff0c\u800c\u662f\u53cd\u6620\u5e02\u573a\u6574\u4f53\u7684 \u4ef7\u683c\u8d8b\u52bf\u3001\u6295\u8d44\u8005\u60c5\u7eea\u548c\u8d44\u91d1\u6d41\u52a8 \u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u89e3\u91ca\uff1a","title":"\u725b\u5e02(bull)\u548c\u718a\u5e02(bear)"},{"location":"bitcoin/bull_bear/#1-vs","text":"\u7279\u5f81 \u725b\u5e02 \u718a\u5e02 \u4ef7\u683c\u8d8b\u52bf \u6301\u7eed\u4e0a\u6da8\uff08\u5982BTC\u7a81\u7834\u524d\u9ad8\uff09 \u6301\u7eed\u4e0b\u8dcc\uff08\u5982BTC\u8170\u65a950%+\uff09 \u5e02\u573a\u60c5\u7eea \u4e50\u89c2\u3001FOMO\uff08\u5bb3\u6015\u9519\u8fc7\uff09 \u60b2\u89c2\u3001\u6050\u614c\u629b\u552e \u4ea4\u6613\u91cf \u901a\u5e38\u653e\u5927\uff08\u8d44\u91d1\u6d8c\u5165\uff09 \u53ef\u80fd\u840e\u7f29\uff08\u6d41\u52a8\u6027\u964d\u4f4e\uff09 \u8d44\u91d1\u6d41\u5165 \u65b0\u8d44\u91d1\u5165\u573a\uff08\u673a\u6784\u3001\u6563\u6237\uff09 \u8d44\u91d1\u64a4\u51fa\uff08\u5957\u73b0\u6216\u79bb\u573a\uff09 \u5178\u578b\u73b0\u8c61 ICO/NFT\u72c2\u70ed\u3001\u65b0\u516c\u94fe\u7206\u53d1 \u9879\u76ee\u8dd1\u8def\u3001\u88c1\u5458\u3001\u94fe\u4e0a\u6d3b\u52a8\u51cf\u5c11","title":"1. \u725b\u5e02 vs. \u718a\u5e02\u7684\u5b9a\u4e49"},{"location":"bitcoin/bull_bear/#2","text":"\u725b\u5e02 \uff1a \u4ea4\u6613\u91cf\u901a\u5e38\u589e\u52a0\uff0c\u4f46\u6838\u5fc3\u662f \u4ef7\u683c\u4e0a\u6da8+\u8d44\u91d1\u6d41\u5165 \u3002 \u4f8b\u5982\uff1a2021\u5e74\u6bd4\u7279\u5e01\u6da8\u81f36.9\u4e07\u7f8e\u5143\uff0c\u94fe\u4e0aGas\u8d39\u98d9\u5347\uff08\u4ee5\u592a\u574a\u62e5\u5835\uff09\uff0c\u4f46\u8fd9\u662f**\u7ed3\u679c**\u800c\u975e\u539f\u56e0\u3002 \u718a\u5e02 \uff1a \u4ea4\u6613\u91cf\u53ef\u80fd\u4e0b\u964d\uff0c\u4f46\u5173\u952e\u662f \u4ef7\u683c\u4e0b\u8dcc+\u4fe1\u5fc3\u4e27\u5931 \u3002 \u4f8b\u5982\uff1a2022\u5e74LUNA\u5d29\u76d8\u540e\uff0cBTC\u8dcc\u81f31.6\u4e07\u7f8e\u5143\uff0c\u5373\u4f7f\u94fe\u4e0a\u4ea4\u6613\u4ecd\u5728\u5904\u7406\uff08\u6ca1\u4eba\u4ea4\u6613\u662f\u6781\u7aef\u60c5\u51b5\uff09\u3002 \u8bef\u533a\u7ea0\u6b63 \uff1a - \u718a\u5e02\u4ecd\u6709\u4eba\u4ea4\u6613\uff08\u5957\u5229\u3001\u6b62\u635f\u3001\u6284\u5e95\uff09\uff0c\u725b\u5e02\u4e5f\u6709\u4eba\u79bb\u573a\uff08\u83b7\u5229\u4e86\u7ed3\uff09\u3002 - **\u51b3\u5b9a\u6027\u56e0\u7d20**\u662f\u5e02\u573a\u4e3b\u5bfc\u8d8b\u52bf\uff0c\u800c\u975e\u5355\u7eaf\u4ea4\u6613\u6d3b\u8dc3\u5ea6\u3002","title":"2. \u5173\u952e\u533a\u522b\uff1a\u4ea4\u6613\u91cf \u2260 \u725b\u718a\u5e02"},{"location":"bitcoin/bull_bear/#3","text":"","title":"3. \u725b\u718a\u5e02\u7684\u9a71\u52a8\u56e0\u7d20"},{"location":"bitcoin/bull_bear/#_1","text":"\u51cf\u534a\u5468\u671f \uff08\u5982\u6bd4\u7279\u5e012024\u5e74\u51cf\u534a\uff0c\u4f9b\u5e94\u51cf\u5c11\u9884\u671f\uff09\u3002 \u673a\u6784\u5165\u573a \uff08\u5982ETF\u83b7\u6279\u3001MicroStrategy\u56e4\u5e01\uff09\u3002 \u6280\u672f\u7a81\u7834 \uff08\u5982\u4ee5\u592a\u574a\u5408\u5e76\u3001Layer2\u666e\u53ca\uff09\u3002 \u5b8f\u89c2\u7ecf\u6d4e \uff08\u6cd5\u5e01\u8d2c\u503c\u3001\u7f8e\u8054\u50a8\u964d\u606f\uff09\u3002","title":"\u725b\u5e02\u5e38\u89c1\u50ac\u5316\u5242\uff1a"},{"location":"bitcoin/bull_bear/#_2","text":"\u6ce1\u6cab\u7834\u88c2 \uff08\u59822018\u5e74ICO\u6ce1\u6cab\u30012022\u5e74LUNA/FTX\u66b4\u96f7\uff09\u3002 \u76d1\u7ba1\u6253\u51fb \uff08\u5982\u4e2d\u56fd\u6e05\u9000\u77ff\u573a\u3001SEC\u8d77\u8bc9\u9879\u76ee\u65b9\uff09\u3002 \u6d41\u52a8\u6027\u7d27\u7f29 \uff08\u5982\u7f8e\u8054\u50a8\u52a0\u606f\uff0c\u98ce\u9669\u8d44\u4ea7\u88ab\u629b\u552e\uff09\u3002","title":"\u718a\u5e02\u5e38\u89c1\u8bf1\u56e0\uff1a"},{"location":"bitcoin/bull_bear/#4","text":"\u4ef7\u683c\u6307\u6807 \uff1a \u725b\u5e02\uff1a\u4ef7\u683c\u9ad8\u4e8e200\u65e5\u5747\u7ebf\uff0c\u7a81\u7834\u524d\u9ad8\u3002 \u718a\u5e02\uff1a\u4ef7\u683c\u4f4e\u4e8e200\u65e5\u5747\u7ebf\uff0c\u8dcc\u5e45\u8d8520%\uff08\u6280\u672f\u6027\u718a\u5e02\uff09\u3002 \u94fe\u4e0a\u6570\u636e \uff1a \u725b\u5e02\uff1a\u65b0\u589e\u5730\u5740\u6570\u3001Gas\u8d39\u3001TVL\uff08\u9501\u4ed3\u91cf\uff09\u589e\u957f\u3002 \u718a\u5e02\uff1a\u5de8\u9cb8\u5730\u5740\u51cf\u6301\u3001\u7a33\u5b9a\u5e01\u5e02\u503c\u6536\u7f29\u3002 \u60c5\u7eea\u6307\u6807 \uff1a \u6050\u60e7\u8d2a\u5a6a\u6307\u6570\uff08Fear & Greed Index\uff09\u6781\u7aef\u503c\u3002","title":"4. \u5982\u4f55\u5224\u65ad\u5e02\u573a\u9636\u6bb5\uff1f"},{"location":"bitcoin/bull_bear/#5","text":"2020-2021\u5e74\u725b\u5e02 \uff1a \u9a71\u52a8\uff1a\u7f8e\u8054\u50a8\u653e\u6c34+DeFi\u590f\u5b63+NFT\u7206\u53d1\u3002 \u7ed3\u679c\uff1aETH\u4ece \\(100\u6da8\u81f3\\) 4800\uff0cOpenSea\u65e5\u4ea4\u6613\u91cf\u7834\u4ebf\u3002 2022\u5e74\u718a\u5e02 \uff1a \u9a71\u52a8\uff1aLUNA\u5d29\u76d8+FTX\u66b4\u96f7+\u52a0\u606f\u3002 \u7ed3\u679c\uff1aCrypto\u603b\u5e02\u503c\u4ece \\(3\u4e07\u4ebf\u8dcc\u81f3\\) 8000\u4ebf\u3002","title":"5. \u5178\u578b\u6848\u4f8b"},{"location":"bitcoin/bull_bear/#_3","text":"\u725b\u5e02 = \u4ef7\u683c\u4e0a\u6da8 + \u8d44\u91d1\u6d8c\u5165 + \u60c5\u7eea\u72c2\u70ed\u3002 \u718a\u5e02 = \u4ef7\u683c\u4e0b\u8dcc + \u8d44\u91d1\u64a4\u79bb + \u60c5\u7eea\u6050\u614c\u3002 **\u4ea4\u6613\u91cf**\u662f\u8f85\u52a9\u6307\u6807\uff0c\u800c\u975e\u672c\u8d28\u539f\u56e0\u3002 \u533a\u5757\u94fe\u5e02\u573a\u5177\u6709\u5f3a\u5468\u671f\u6027\uff0c\u725b\u718a\u8f6c\u6362\u901a\u5e38\u4f34\u968f\u6280\u672f\u3001\u653f\u7b56\u548c\u8d44\u91d1\u9762\u7684\u6839\u672c\u53d8\u5316\u3002","title":"\u603b\u7ed3"},{"location":"bitcoin/chains/","text":"Chains 1. \u6bd4\u7279\u5e01\uff08Bitcoin\uff09 2. \u4ee5\u592a\u574a\uff08Ethereum\uff09 3. BNB Chain\uff08\u539f\u5e01\u5b89\u94fe\uff09 4. Solana 5. Polygon\uff08\u539fMatic\uff09 6. Avalanche 7. Cosmos & Polkadot 8. \u65b0\u5174\u516c\u94fe\uff082020\u5e74\u540e\uff09 \u529f\u80fd\u5bf9\u6bd4 \u8d8b\u52bf\u89c2\u5bdf \u4e00\u3001\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u4e9b\u94fe\uff1f\u5b83\u4eec\u4ee3\u8868\u4e86\u4ec0\u4e48\uff1f 1. \u6bd4\u7279\u5e01\uff08BTC\uff09\u2014\u2014 \u53bb\u4e2d\u5fc3\u5316\u6570\u5b57\u9ec4\u91d1 2. \u4ee5\u592a\u574a\uff08ETH\uff09\u2014\u2014 \u667a\u80fd\u5408\u7ea6\u548c\u53bb\u4e2d\u5fc3\u5316\u5e94\u7528\u5e73\u53f0 3. BNB Chain\uff08BSC\uff09\u2014\u2014 \u4ea4\u6613\u6240\u751f\u6001\u7684\u9ad8\u6027\u80fd\u94fe 4. Solana\uff08SOL\uff09\u2014\u2014 \u9ad8\u6027\u80fd\u516c\u94fe 5. Cosmos & Polkadot \u2014\u2014 \u533a\u5757\u94fe\u4e92\u8054 6. Avalanche\uff08AVAX\uff09\u2014\u2014 \u4f01\u4e1a\u7ea7\u5b50\u7f51 7. Polygon\uff08MATIC\uff09\u2014\u2014 \u4ee5\u592a\u574a\u7684Layer2 8. \u65b0\u5174\u94fe\uff08Sui/Aptos/StarkNet\uff09\u2014\u2014 \u4e0b\u4e00\u4ee3\u533a\u5757\u94fe \u4e8c\u3001\u533a\u5757\u94fe\u7684\u6700\u65b0\u65b9\u5411\uff082024-2025\uff09 1. \u6a21\u5757\u5316\u533a\u5757\u94fe\uff08Modular Blockchain\uff09 2. \u96f6\u77e5\u8bc6\u8bc1\u660e\uff08ZK\uff09\u548c\u9690\u79c1\u8ba1\u7b97 3. \u94fe\u62bd\u8c61\uff08Chain Abstraction\uff09 4. \u53bb\u4e2d\u5fc3\u5316\u7269\u7406\u57fa\u7840\u8bbe\u65bd\uff08DePIN\uff09 5. RWA\uff08\u771f\u5b9e\u4e16\u754c\u8d44\u4ea7\u4ee3\u5e01\u5316\uff09 6. \u6bd4\u7279\u5e01\u751f\u6001\u521b\u65b0 7. AI + \u533a\u5757\u94fe \u4e09\u3001\u603b\u7ed3\uff1a\u533a\u5757\u94fe\u7684\u6f14\u8fdb\u903b\u8f91 Chains \u00b6 \u76ee\u524d\u533a\u5757\u94fe\u9886\u57df\u7684\u4e3b\u6d41\u516c\u94fe\u5404\u6709\u7279\u70b9\uff0c\u53d1\u5c55\u8def\u5f84\u548c\u529f\u80fd\u5b9a\u4f4d\u4e5f\u5404\u4e0d\u76f8\u540c\u3002\u4ee5\u4e0b\u662f\u4e3b\u8981\u516c\u94fe\u7684\u6982\u51b5\u3001\u8fd0\u8425\u60c5\u51b5\u3001\u53d1\u5c55\u5386\u7a0b\u53ca\u6838\u5fc3\u529f\u80fd\u5206\u6790\uff1a 1. \u6bd4\u7279\u5e01\uff08Bitcoin\uff09 \u00b6 \u53d1\u5c55\u5386\u7a0b \uff1a 2008\u5e74\u4e2d\u672c\u806a\u53d1\u5e03\u767d\u76ae\u4e66\uff0c2009\u5e74\u4e3b\u7f51\u4e0a\u7ebf\uff0c\u4f5c\u4e3a\u9996\u4e2a\u533a\u5757\u94fe\u7f51\u7edc\uff0c\u5b9a\u4f4d\u4e3a\u300c\u70b9\u5bf9\u70b9\u7535\u5b50\u73b0\u91d1\u7cfb\u7edf\u300d\u3002 \u8fd0\u8425\u60c5\u51b5 \uff1a \u5e02\u503c \uff1a\u957f\u671f\u5360\u636e\u7b2c\u4e00\uff082023\u5e74\u5360\u6bd4\u8d8540%\uff09\u3002 \u8282\u70b9\u6570 \uff1a\u5168\u7403\u7ea61.5\u4e07\u4e2a\u5168\u8282\u70b9\uff0c\u7b97\u529b\u96c6\u4e2d\u5728\u5c11\u6570\u77ff\u6c60\uff08\u5982Foundry USA\u3001Antpool\uff09\u3002 \u4ea4\u6613\u91cf \uff1a\u65e5\u5747\u7ea630\u4e07\u7b14\uff0cTPS\u4f4e\uff087\u7b14/\u79d2\uff09\uff0cLayer2\uff08\u5982\u95ea\u7535\u7f51\u7edc\uff09\u6269\u5c55\u7f13\u6162\u3002 \u529f\u80fd \uff1a \u4e3b\u6253\u4ef7\u503c\u5b58\u50a8\uff08\u201c\u6570\u5b57\u9ec4\u91d1\u201d\uff09\uff0c\u811a\u672c\u8bed\u8a00\u975e\u56fe\u7075\u5b8c\u5907\uff0c\u4ec5\u652f\u6301\u57fa\u7840\u8f6c\u8d26\u548c\u7b80\u5355\u5408\u7ea6\u3002 2. \u4ee5\u592a\u574a\uff08Ethereum\uff09 \u00b6 \u53d1\u5c55\u5386\u7a0b \uff1a 2013\u5e74V\u795e\u63d0\u51fa\uff0c2015\u5e74\u4e3b\u7f51\u4e0a\u7ebf\uff0c2022\u5e74\u5b8c\u6210PoS\u8f6c\u578b\uff08\u5408\u5e76\uff09\u3002 \u8fd0\u8425\u60c5\u51b5 \uff1a \u751f\u6001\u89c4\u6a21 \uff1a3000+ DApps\uff0cTVL\u957f\u671f\u5360DeFi\u768460%\u4ee5\u4e0a\uff082023\u5e74\u7ea6$30B\uff09\u3002 \u6d3b\u8dc3\u5730\u5740 \uff1a\u65e5\u5747\u7ea640\u4e07\uff0cGas\u8d39\u6ce2\u52a8\u5927\uff08\u9ad8\u5cf0\u65f6$50+/\u7b14\uff09\u3002 Layer2 \uff1aArbitrum\u3001Optimism\u7b49\u5360\u636e70%\u4ee5\u4e0a\u94fe\u4e0a\u6d3b\u52a8\u3002 \u529f\u80fd \uff1a \u667a\u80fd\u5408\u7ea6\u5e73\u53f0\uff0c\u652f\u6301NFT\u3001DeFi\u3001DAO\u7b49\u3002ERC-20/721\u6807\u51c6\u6210\u884c\u4e1a\u57fa\u77f3\u3002 3. BNB Chain\uff08\u539f\u5e01\u5b89\u94fe\uff09 \u00b6 \u53d1\u5c55\u5386\u7a0b \uff1a 2019\u5e74\u5e01\u5b89\u63a8\u51fa\uff0c2020\u5e74\u6574\u5408\u667a\u80fd\u94fe\uff08BSC\uff09\uff0c2022\u5e74\u5347\u7ea7\u4e3aBNB Chain\u3002 \u8fd0\u8425\u60c5\u51b5 \uff1a \u4ea4\u6613\u91cf \uff1a\u65e5\u5747\u7ea6300\u4e07\u7b14\uff08\u56e0\u4f4eGas\u8d39\u5438\u5f15\u9ad8\u9891\u4ea4\u6613\uff09\u3002 \u4e2d\u5fc3\u5316\u4e89\u8bae \uff1a21\u4e2a\u9a8c\u8bc1\u8282\u70b9\u4e2d\u5e01\u5b89\u63a7\u5236\u591a\u6570\uff0cMEV\u95ee\u9898\u663e\u8457\u3002 \u751f\u6001 \uff1aPancakeSwap\u7b49DApps\u6d3b\u8dc3\uff0c\u4f46\u4eff\u76d8\u9879\u76ee\u5c45\u591a\u3002 \u529f\u80fd \uff1a \u517c\u5bb9EVM\uff0c\u4fa7\u91cd\u4ea4\u6613\u6240\u751f\u6001\u5ef6\u4f38\uff0cGas\u8d39\u7a33\u5b9a\uff08$0.1\u4ee5\u4e0b\uff09\u3002 4. Solana \u00b6 \u53d1\u5c55\u5386\u7a0b \uff1a 2017\u5e74\u7531Anatoly Yakovenko\u521b\u7acb\uff0c\u4e3b\u6253\u9ad8\u6027\u80fdPoH\u5171\u8bc6\u3002 \u8fd0\u8425\u60c5\u51b5 \uff1a \u6027\u80fd \uff1a\u7406\u8bbaTPS 6.5\u4e07\uff0c\u5b9e\u9645\u65e5\u5747\u7ea62000\u7b14/\u79d2\u3002 \u5b95\u673a\u95ee\u9898 \uff1a2022\u5e74\u7d2f\u8ba1\u5b95\u673a\u8d8510\u6b21\uff0c2023\u5e74\u7a33\u5b9a\u6027\u6539\u5584\u3002 \u751f\u6001 \uff1aNFT\uff08\u5982Tensor\uff09\u548cDeFi\uff08\u5982Jupiter\uff09\u589e\u957f\u5feb\u3002 \u529f\u80fd \uff1a \u9ad8\u541e\u5410\u91cf\u94fe\uff0c\u9002\u5408\u9ad8\u9891\u4ea4\u6613\uff08\u5982DEX\u3001GameFi\uff09\u3002 5. Polygon\uff08\u539fMatic\uff09 \u00b6 \u53d1\u5c55\u5386\u7a0b \uff1a 2017\u5e74\u542f\u52a8\uff0c2020\u5e74\u4e3b\u7f51\u4e0a\u7ebf\uff0c\u4e13\u6ce8\u4ee5\u592a\u574a\u6269\u5bb9\u3002 \u8fd0\u8425\u60c5\u51b5 \uff1a \u91c7\u7528\u7387 \uff1a\u65e5\u5747\u4ea4\u6613\u91cf\u8d85300\u4e07\u7b14\uff08zkEVM\u91c7\u7528\u7387\u4f4e\uff0c\u4ecd\u4f9d\u8d56PoS\u94fe\uff09\u3002 \u5408\u4f5c\u4f19\u4f34 \uff1a\u661f\u5df4\u514b\u3001Reddit\u7b49\u4f20\u7edf\u4f01\u4e1a\u91c7\u7528\u5176NFT\u65b9\u6848\u3002 \u529f\u80fd \uff1a \u63d0\u4f9b\u591a\u79cd\u6269\u5bb9\u65b9\u6848\uff08PoS\u94fe\u3001zkRollup\u7b49\uff09\uff0c\u4e3b\u6253\u4f4e\u6210\u672c\u4ee5\u592a\u574a\u517c\u5bb9\u3002 6. Avalanche \u00b6 \u53d1\u5c55\u5386\u7a0b \uff1a 2020\u5e74\u4e3b\u7f51\u4e0a\u7ebf\uff0c\u91c7\u7528\u4e09\u94fe\u7ed3\u6784\uff08X/P/C\u94fe\uff09\u3002 \u8fd0\u8425\u60c5\u51b5 \uff1a \u5b50\u7f51 \uff1a\u8d8550\u4e2a\u5b50\u7f51\uff08\u5982DeFi Kingdom\u3001GameFi\u9879\u76ee\uff09\u3002 \u6027\u80fd \uff1aTPS\u7ea64500\u7b14\uff0cFinality\u65f6\u95f4<2\u79d2\u3002 \u529f\u80fd \uff1a \u4f01\u4e1a\u7ea7\u5b9a\u5236\u5316\u533a\u5757\u94fe\uff08\u5b50\u7f51\uff09\uff0c\u517c\u5bb9EVM\u3002 7. Cosmos & Polkadot \u00b6 Cosmos \uff1a \u7279\u70b9 \uff1aTendermint\u5171\u8bc6+IBC\u8de8\u94fe\u534f\u8bae\uff0cATOM\u5e02\u503c$30\u4ebf\uff082023\uff09\u3002 \u751f\u6001 \uff1aOsmosis\uff08DEX\uff09\u3001Celestia\uff08\u6a21\u5757\u5316DA\uff09\u7b49\u3002 Polkadot \uff1a \u7279\u70b9 \uff1a\u4e2d\u7ee7\u94fe+\u5e73\u884c\u94fe\u67b6\u6784\uff0cDOT\u5e02\u503c$50\u4ebf\u3002 \u751f\u6001 \uff1aMoonbeam\uff08EVM\u517c\u5bb9\uff09\u3001Acala\uff08DeFi\uff09\u3002 \u529f\u80fd \uff1a \u5747\u4e3b\u6253\u4e92\u64cd\u4f5c\u6027\uff0cCosmos\u66f4\u8f7b\u91cf\uff0cPolkadot\u5f3a\u8c03\u5171\u4eab\u5b89\u5168\u3002 8. \u65b0\u5174\u516c\u94fe\uff082020\u5e74\u540e\uff09 \u00b6 Sui/Aptos \uff08Move\u8bed\u8a00\uff09\uff1a \u4e3b\u6253\u9ad8\u5e76\u53d1\uff08\u5e76\u884c\u6267\u884c\uff09\uff0c\u4f46\u751f\u6001\u89c4\u6a21\u5c0f\uff08TVL<$1B\uff09\u3002 Near \uff1a \u5206\u7247\u6280\u672f\uff0c\u4e3b\u6253AI+\u533a\u5757\u94fe\uff0c\u65e5\u5747\u4ea4\u6613\u7ea6100\u4e07\u7b14\u3002 StarkNet/zkSync \uff1a ZK-Rollup\u65b9\u6848\uff0c\u4ee5\u592a\u574aLayer2\uff0c\u751f\u6001\u589e\u901f\u5feb\uff08\u5982dYdX V4\uff09\u3002 \u529f\u80fd\u5bf9\u6bd4 \u00b6 \u94fe \u6838\u5fc3\u529f\u80fd \u9002\u7528\u573a\u666f \u6bd4\u7279\u5e01 \u4ef7\u503c\u5b58\u50a8 \u652f\u4ed8\u3001\u50a8\u503c \u4ee5\u592a\u574a \u667a\u80fd\u5408\u7ea6\u901a\u7528\u5e73\u53f0 DeFi\u3001NFT\u3001DAO BNB Chain \u4f4eGas\u8d39\u4ea4\u6613 \u4ea4\u6613\u6240\u751f\u6001\u3001\u9ad8\u9891\u4ea4\u6613 Solana \u9ad8\u6027\u80fdDApps GameFi\u3001NFT\u4ea4\u6613 Polygon \u4ee5\u592a\u574a\u6269\u5bb9 \u4f01\u4e1a\u89e3\u51b3\u65b9\u6848\u3001Layer2 Cosmos \u8de8\u94fe\u4e92\u64cd\u4f5c \u72ec\u7acb\u94fe\u4e92\u8054 \u8d8b\u52bf\u89c2\u5bdf \u00b6 \u6a21\u5757\u5316\u533a\u5757\u94fe \uff1aCelestia\uff08\u6570\u636e\u53ef\u7528\u5c42\uff09\u3001EigenLayer\uff08\u518d\u8d28\u62bc\uff09\u5174\u8d77\u3002 ZK\u6280\u672f \uff1azkRollup\u9879\u76ee\uff08\u5982zkSync Era\uff09\u6311\u6218Optimistic Rollup\u3002 \u5408\u89c4\u5316 \uff1aRipple\uff08XRP\uff09\u80dc\u8bc9SEC\u540e\uff0c\u5408\u89c4\u516c\u94fe\uff08\u5982Hedera\uff09\u53d7\u5173\u6ce8\u3002 \u5f53\u524d\u516c\u94fe\u7ade\u4e89\u5df2\u4ece\u6027\u80fd\u8f6c\u5411\u5782\u76f4\u9886\u57df\uff08\u5982\u6e38\u620f\u3001\u793e\u4ea4\uff09\u548c\u7528\u6237\u4f53\u9a8c\uff08\u8d26\u6237\u62bd\u8c61\u3001Gas\u8865\u8d34\uff09\uff0c\u540c\u65f6\u4ee5\u592a\u574a\u4ecd\u5360\u636e\u5f00\u53d1\u8005\u5fc3\u667a\u4efd\u989d\u768470%\u4ee5\u4e0a\uff08Electric Capital\u6570\u636e\uff09\u3002 \u533a\u5757\u94fe\u9886\u57df\u4e4b\u6240\u4ee5\u51fa\u73b0\u591a\u79cd\u4e0d\u540c\u7684\u516c\u94fe\uff0c\u672c\u8d28\u4e0a\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0d\u540c\u573a\u666f\u4e0b\u7684\u9700\u6c42\uff0c\u5e76\u5728\u6280\u672f\u3001\u6cbb\u7406\u3001\u6027\u80fd\u7b49\u65b9\u9762\u8fdb\u884c\u63a2\u7d22\u548c\u521b\u65b0\u3002\u6bcf\u6761\u94fe\u7684\u8bde\u751f\u90fd\u4ee3\u8868\u4e86\u7279\u5b9a\u7684\u8bbe\u8ba1\u54f2\u5b66\u548c\u6280\u672f\u65b9\u5411\uff0c\u800c\u6700\u65b0\u7684\u8d8b\u52bf\u5219\u53cd\u6620\u4e86\u884c\u4e1a\u5bf9\u53ef\u6269\u5c55\u6027\u3001\u4e92\u64cd\u4f5c\u6027\u3001\u9690\u79c1\u548c\u7528\u6237\u4f53\u9a8c\u7684\u6301\u7eed\u8ffd\u6c42\u3002 \u4e00\u3001\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u4e9b\u94fe\uff1f\u5b83\u4eec\u4ee3\u8868\u4e86\u4ec0\u4e48\uff1f \u00b6 1. \u6bd4\u7279\u5e01\uff08BTC\uff09\u2014\u2014 \u53bb\u4e2d\u5fc3\u5316\u6570\u5b57\u9ec4\u91d1 \u00b6 - \u4ee3\u8868 \uff1a \u53bb\u4e2d\u5fc3\u5316\u4ef7\u503c\u5b58\u50a8 - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a \u6bd4\u7279\u5e01\u7684\u8bde\u751f\u662f\u4e3a\u4e86\u521b\u9020\u4e00\u79cd\u4e0d\u53d7\u653f\u5e9c\u6216\u673a\u6784\u63a7\u5236\u7684\u7535\u5b50\u73b0\u91d1\u7cfb\u7edf\uff0c\u4f46\u5176\u4f4e\u541e\u5410\u91cf\uff087 TPS\uff09\u548c\u7b80\u5355\u811a\u672c\u8bed\u8a00\u9650\u5236\u4e86\u529f\u80fd\uff0c\u6700\u7ec8\u6f14\u53d8\u4e3a\u201c\u6570\u5b57\u9ec4\u91d1\u201d\uff0c\u4e3b\u6253\u6297\u5ba1\u67e5\u548c\u4ef7\u503c\u5b58\u50a8\u3002 2. \u4ee5\u592a\u574a\uff08ETH\uff09\u2014\u2014 \u667a\u80fd\u5408\u7ea6\u548c\u53bb\u4e2d\u5fc3\u5316\u5e94\u7528\u5e73\u53f0 \u00b6 - \u4ee3\u8868 \uff1a \u53ef\u7f16\u7a0b\u533a\u5757\u94fe - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a \u6bd4\u7279\u5e01\u65e0\u6cd5\u652f\u6301\u590d\u6742\u5e94\u7528\uff0c\u4ee5\u592a\u574a\u5f15\u5165**\u56fe\u7075\u5b8c\u5907\u7684\u667a\u80fd\u5408\u7ea6**\uff0c\u4f7f\u5f00\u53d1\u8005\u80fd\u6784\u5efaDeFi\u3001NFT\u3001DAO\u7b49\u5e94\u7528\uff0c\u6210\u4e3a\u201c\u4e16\u754c\u8ba1\u7b97\u673a\u201d\u3002 3. BNB Chain\uff08BSC\uff09\u2014\u2014 \u4ea4\u6613\u6240\u751f\u6001\u7684\u9ad8\u6027\u80fd\u94fe \u00b6 - \u4ee3\u8868 \uff1a \u4e2d\u5fc3\u5316\u6548\u7387 vs. \u53bb\u4e2d\u5fc3\u5316 - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a \u4ee5\u592a\u574aGas\u8d39\u9ad8\u6602\uff0c\u5e01\u5b89\u63a8\u51faBSC\uff08\u540e\u5347\u7ea7\u4e3aBNB Chain\uff09\uff0c\u727a\u7272\u90e8\u5206\u53bb\u4e2d\u5fc3\u5316\uff0821\u4e2a\u9a8c\u8bc1\u8282\u70b9\uff09\u6362\u53d6\u4f4e\u8d39\u7528\u548c\u9ad8\u901f\u5ea6\uff0c\u670d\u52a1\u4e8e\u4ea4\u6613\u6240\u7528\u6237\u548c\u4eff\u76d8\u9879\u76ee\u3002 4. Solana\uff08SOL\uff09\u2014\u2014 \u9ad8\u6027\u80fd\u516c\u94fe \u00b6 - \u4ee3\u8868 \uff1a \u727a\u7272\u53bb\u4e2d\u5fc3\u5316\u6362\u6027\u80fd - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a \u4ee5\u592a\u574a\u6269\u5bb9\u7f13\u6162\uff0cSolana\u91c7\u7528**\u5386\u53f2\u8bc1\u660e\uff08PoH\uff09+ PoS**\uff0c\u7406\u8bbaTPS\u53ef\u8fbe6.5\u4e07\uff0c\u4f46\u9891\u7e41\u5b95\u673a\u66b4\u9732\u4e86\u7a33\u5b9a\u6027\u95ee\u9898\uff0c\u9002\u5408\u9ad8\u9891\u4ea4\u6613\u573a\u666f\uff08\u5982GameFi\u3001NFT\uff09\u3002 5. Cosmos & Polkadot \u2014\u2014 \u533a\u5757\u94fe\u4e92\u8054 \u00b6 - \u4ee3\u8868 \uff1a \u8de8\u94fe\u4e92\u64cd\u4f5c\u6027 - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a - Cosmos \uff1a\u901a\u8fc7**IBC\u534f\u8bae**\u8ba9\u72ec\u7acb\u94fe\u4e92\u8054\uff0c\u5f3a\u8c03\u4e3b\u6743\uff08\u6bcf\u6761\u94fe\u53ef\u81ea\u5b9a\u4e49\u5171\u8bc6\uff09\u3002 - Polkadot \uff1a\u901a\u8fc7**\u4e2d\u7ee7\u94fe+\u5e73\u884c\u94fe**\u5171\u4eab\u5b89\u5168\u6027\uff0c\u9002\u5408\u9700\u8981\u5b89\u5168\u4f46\u4e0d\u60f3\u7ef4\u62a4\u9a8c\u8bc1\u8005\u7684\u94fe\u3002 6. Avalanche\uff08AVAX\uff09\u2014\u2014 \u4f01\u4e1a\u7ea7\u5b50\u7f51 \u00b6 - \u4ee3\u8868 \uff1a \u53ef\u5b9a\u5236\u5316\u533a\u5757\u94fe - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a \u4f01\u4e1a\u6216\u6e38\u620f\u9879\u76ee\u5e0c\u671b\u6709\u81ea\u5df1\u7684\u94fe\uff08\u5b50\u7f51\uff09\uff0c\u540c\u65f6\u80fd\u4e0e\u5176\u4ed6\u94fe\u4ea4\u4e92\uff0cAvalanche\u63d0\u4f9b\u9ad8\u6027\u80fd\uff08TPS 4500+\uff09\u548c\u5feb\u901f\u7ec8\u5c40\u6027\uff08<2\u79d2\uff09\u3002 7. Polygon\uff08MATIC\uff09\u2014\u2014 \u4ee5\u592a\u574a\u7684Layer2 \u00b6 - \u4ee3\u8868 \uff1a \u4ee5\u592a\u574a\u6269\u5bb9\u65b9\u6848 - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a \u4ee5\u592a\u574a\u4e3b\u7f51\u62e5\u5835\uff0cPolygon\u63d0\u4f9b\u591a\u79cd\u6269\u5bb9\u65b9\u6848\uff08PoS\u4fa7\u94fe\u3001zkEVM\u7b49\uff09\uff0c\u8ba9\u7528\u6237\u4f4e\u6210\u672c\u4f7f\u7528\u4ee5\u592a\u574a\u751f\u6001\u3002 8. \u65b0\u5174\u94fe\uff08Sui/Aptos/StarkNet\uff09\u2014\u2014 \u4e0b\u4e00\u4ee3\u533a\u5757\u94fe \u00b6 - \u4ee3\u8868 \uff1a \u6280\u672f\u521b\u65b0\uff08\u5e76\u884c\u6267\u884c\u3001ZK\u8bc1\u660e\uff09 - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a - Sui/Aptos \uff1a\u91c7\u7528Move\u8bed\u8a00\uff0c\u4f18\u5316\u667a\u80fd\u5408\u7ea6\u5b89\u5168\u6027\u548c\u5e76\u884c\u5904\u7406\u80fd\u529b\u3002 - StarkNet/zkSync \uff1aZK-Rollup\u6280\u672f\uff0c\u63d0\u5347\u4ee5\u592a\u574a\u6269\u5c55\u6027\uff0c\u540c\u65f6\u4fdd\u6301\u9ad8\u5b89\u5168\u6027\u3002 \u4e8c\u3001\u533a\u5757\u94fe\u7684\u6700\u65b0\u65b9\u5411\uff082024-2025\uff09 \u00b6 1. \u6a21\u5757\u5316\u533a\u5757\u94fe\uff08Modular Blockchain\uff09 \u00b6 - \u6838\u5fc3\u601d\u60f3 \uff1a\u5c06\u533a\u5757\u94fe\u7684\u56db\u5927\u529f\u80fd\uff08\u6267\u884c\u3001\u7ed3\u7b97\u3001\u5171\u8bc6\u3001\u6570\u636e\u53ef\u7528\u6027\uff09\u62c6\u89e3\uff0c\u7531\u4e0d\u540c\u94fe\u5904\u7406\u3002 - \u4ee3\u8868\u9879\u76ee \uff1a - Celestia \uff08\u4e13\u6ce8\u6570\u636e\u53ef\u7528\u6027DA\uff09 - EigenLayer \uff08\u4ee5\u592a\u574a\u518d\u8d28\u62bc\uff0c\u5171\u4eab\u5b89\u5168\u6027\uff09 - Fuel \uff08\u6a21\u5757\u5316\u6267\u884c\u5c42\uff09 - \u610f\u4e49 \uff1a\u63d0\u9ad8\u53ef\u6269\u5c55\u6027\uff0c\u964d\u4f4e\u5f00\u53d1\u6210\u672c\u3002 2. \u96f6\u77e5\u8bc6\u8bc1\u660e\uff08ZK\uff09\u548c\u9690\u79c1\u8ba1\u7b97 \u00b6 - \u6838\u5fc3\u65b9\u5411 \uff1a - ZK-Rollup \uff08StarkNet\u3001zkSync\u3001Scroll\uff09\u63d0\u5347\u4ee5\u592a\u574aTPS\u3002 - \u9690\u79c1\u94fe \uff08Aleo\u3001Zcash\uff09\u652f\u6301\u533f\u540d\u4ea4\u6613\u3002 - \u5168\u540c\u6001\u52a0\u5bc6\uff08FHE\uff09 \uff08\u5982Fhenix\uff09\u5b9e\u73b0\u94fe\u4e0a\u9690\u79c1\u8ba1\u7b97\u3002 - \u5e94\u7528\u573a\u666f \uff1a\u5408\u89c4DeFi\u3001\u673a\u5bc6\u6295\u7968\u3001\u4f01\u4e1a\u533a\u5757\u94fe\u3002 3. \u94fe\u62bd\u8c61\uff08Chain Abstraction\uff09 \u00b6 - \u6838\u5fc3\u95ee\u9898 \uff1a\u7528\u6237\u4e0d\u60f3\u7ba1\u7406\u591a\u94fe\u94b1\u5305\u3001Gas\u8d39\u3001\u8de8\u6865\u3002 - \u89e3\u51b3\u65b9\u6848 \uff1a - \u8d26\u6237\u62bd\u8c61\uff08AA\uff09 \uff08ERC-4337\uff0c\u8ba9\u5408\u7ea6\u7ba1\u7406\u94b1\u5305\uff09\u3002 - \u7edf\u4e00\u6d41\u52a8\u6027\u5c42 \uff08\u5982LayerZero\u3001Axelar\u5b9e\u73b0\u8de8\u94fe\u65e0\u7f1d\u4ea4\u4e92\uff09\u3002 - \u76ee\u6807 \uff1a\u8ba9\u7528\u6237\u65e0\u611f\u77e5\u4f7f\u7528\u591a\u94feDApp\u3002 4. \u53bb\u4e2d\u5fc3\u5316\u7269\u7406\u57fa\u7840\u8bbe\u65bd\uff08DePIN\uff09 \u00b6 - \u6838\u5fc3\u6982\u5ff5 \uff1a\u7528\u4ee3\u5e01\u6fc0\u52b1\u73b0\u5b9e\u4e16\u754c\u8d44\u6e90\uff08\u5b58\u50a8\u3001\u7b97\u529b\u3001\u5e26\u5bbd\u7b49\uff09\u3002 - \u4ee3\u8868\u9879\u76ee \uff1a - Filecoin \uff08\u53bb\u4e2d\u5fc3\u5316\u5b58\u50a8\uff09 - Helium \uff08\u53bb\u4e2d\u5fc3\u5316\u65e0\u7ebf\u7f51\u7edc\uff09 - Render Network \uff08\u5206\u5e03\u5f0fGPU\u6e32\u67d3\uff09 - \u8d8b\u52bf \uff1a\u7ed3\u5408AI+\u533a\u5757\u94fe\uff0c\u5982Bittensor\uff08\u53bb\u4e2d\u5fc3\u5316\u673a\u5668\u5b66\u4e60\uff09\u3002 5. RWA\uff08\u771f\u5b9e\u4e16\u754c\u8d44\u4ea7\u4ee3\u5e01\u5316\uff09 \u00b6 - \u6838\u5fc3\u65b9\u5411 \uff1a\u5c06\u503a\u5238\u3001\u623f\u5730\u4ea7\u3001\u9ec4\u91d1\u7b49\u4e0a\u94fe\u3002 - \u4ee3\u8868\u9879\u76ee \uff1a - Ondo Finance \uff08\u7f8e\u503a\u4ee3\u5e01\u5316\uff09 - MakerDAO \uff08\u62b5\u62bc\u73b0\u5b9e\u8d44\u4ea7\u53d1\u884cDAI\uff09 - Chainlink \uff08\u63d0\u4f9bRWA\u6570\u636e\u9884\u8a00\u673a\uff09 - \u6311\u6218 \uff1a\u5408\u89c4\u3001\u6cd5\u5f8b\u6846\u67b6\u3001\u673a\u6784\u91c7\u7528\u3002 6. \u6bd4\u7279\u5e01\u751f\u6001\u521b\u65b0 \u00b6 - \u65b0\u65b9\u5411 \uff1a - Ordinals\u534f\u8bae \uff08\u6bd4\u7279\u5e01NFT\u548cBRC-20\u4ee3\u5e01\uff09\u3002 - \u95ea\u7535\u7f51\u7edc \uff08\u5c0f\u989d\u652f\u4ed8\uff0c\u4f46\u91c7\u7528\u7387\u4ecd\u4f4e\uff09\u3002 - RGB\u534f\u8bae \uff08\u6bd4\u7279\u5e01\u667a\u80fd\u5408\u7ea6\u6269\u5c55\uff09\u3002 - \u610f\u4e49 \uff1a\u8ba9\u6bd4\u7279\u5e01\u4e0d\u4ec5\u662f\u50a8\u503c\u5de5\u5177\uff0c\u8fd8\u80fd\u652f\u6301\u66f4\u591a\u5e94\u7528\u3002 7. AI + \u533a\u5757\u94fe \u00b6 - \u7ed3\u5408\u65b9\u5f0f \uff1a - \u53bb\u4e2d\u5fc3\u5316AI\u8bad\u7ec3 \uff08\u5982Bittensor\uff09\u3002 - AI\u4ee3\u7406\u81ea\u52a8\u4ea4\u6613 \uff08\u5982Fetch.ai\uff09\u3002 - ZKML\uff08\u96f6\u77e5\u8bc6\u673a\u5668\u5b66\u4e60\uff09 \uff1a\u94fe\u4e0a\u9a8c\u8bc1AI\u6a21\u578b\u8f93\u51fa\u3002 - \u6f5c\u529b \uff1a\u89e3\u51b3AI\u4e2d\u5fc3\u5316\u3001\u6570\u636e\u5784\u65ad\u95ee\u9898\u3002 \u4e09\u3001\u603b\u7ed3\uff1a\u533a\u5757\u94fe\u7684\u6f14\u8fdb\u903b\u8f91 \u00b6 \u9636\u6bb5 \u4ee3\u8868\u94fe \u6838\u5fc3\u521b\u65b0 \u5f53\u524d\u6311\u6218 1.0 \u8d27\u5e01 \u6bd4\u7279\u5e01 \u53bb\u4e2d\u5fc3\u5316P2P\u73b0\u91d1 \u529f\u80fd\u5355\u4e00\uff0c\u6269\u5c55\u6027\u5dee 2.0 \u667a\u80fd\u5408\u7ea6 \u4ee5\u592a\u574a \u53ef\u7f16\u7a0bDApps Gas\u8d39\u9ad8\uff0c\u6027\u80fd\u74f6\u9888 3.0 \u5782\u76f4\u94fe Solana/AVAX \u9ad8\u6027\u80fd\u3001\u5b9a\u5236\u5316\u94fe \u53bb\u4e2d\u5fc3\u5316\u4e0e\u6027\u80fd\u7684\u6743\u8861 4.0 \u6a21\u5757\u5316 Celestia/Eigen \u5206\u5de5\u534f\u4f5c\uff0c\u4e13\u4e1a\u5316\u94fe \u751f\u6001\u788e\u7247\u5316 \u672a\u6765 ZK+AI+RWA \u9690\u79c1\u3001AI\u3001\u73b0\u5b9e\u8d44\u4ea7\u4e0a\u94fe \u5408\u89c4\u3001\u7528\u6237\u4f53\u9a8c\u3001\u5927\u89c4\u6a21\u91c7\u7528 \u672a\u67653-5\u5e74\u7684\u5173\u952e\u95ee\u9898 \uff1a \u5982\u4f55\u5e73\u8861\u53bb\u4e2d\u5fc3\u5316\u4e0e\u6027\u80fd\uff1f \uff08Solana\u5b95\u673a vs \u4ee5\u592a\u574a\u6162\uff09 \u5982\u4f55\u8ba9\u591a\u94fe\u4f53\u9a8c\u65e0\u7f1d\u5316\uff1f \uff08\u94fe\u62bd\u8c61\u3001\u8d26\u6237\u62bd\u8c61\uff09 \u5982\u4f55\u8ba9\u533a\u5757\u94fe\u771f\u6b63\u8fdb\u5165\u4e3b\u6d41\uff1f \uff08RWA\u3001\u5408\u89c4DeFi\u3001AI\u6574\u5408\uff09 \u533a\u5757\u94fe\u6b63\u5728\u4ece\u201c\u91d1\u878d\u5b9e\u9a8c\u201d\u8d70\u5411\u201c\u57fa\u7840\u8bbe\u65bd\u201d\uff0c\u672a\u6765\u7684\u8d62\u5bb6\u53ef\u80fd\u662f\u90a3\u4e9b\u80fd\u89e3\u51b3\u5b9e\u9645\u9700\u6c42\uff08\u5982\u652f\u4ed8\u3001\u6570\u636e\u5b58\u50a8\u3001AI\u8bad\u7ec3\uff09\u800c\u4e0d\u4ec5\u4ec5\u662f\u7092\u4f5c\u7684\u94fe\u3002","title":"Chains"},{"location":"bitcoin/chains/#chains","text":"\u76ee\u524d\u533a\u5757\u94fe\u9886\u57df\u7684\u4e3b\u6d41\u516c\u94fe\u5404\u6709\u7279\u70b9\uff0c\u53d1\u5c55\u8def\u5f84\u548c\u529f\u80fd\u5b9a\u4f4d\u4e5f\u5404\u4e0d\u76f8\u540c\u3002\u4ee5\u4e0b\u662f\u4e3b\u8981\u516c\u94fe\u7684\u6982\u51b5\u3001\u8fd0\u8425\u60c5\u51b5\u3001\u53d1\u5c55\u5386\u7a0b\u53ca\u6838\u5fc3\u529f\u80fd\u5206\u6790\uff1a","title":"Chains"},{"location":"bitcoin/chains/#1-bitcoin","text":"\u53d1\u5c55\u5386\u7a0b \uff1a 2008\u5e74\u4e2d\u672c\u806a\u53d1\u5e03\u767d\u76ae\u4e66\uff0c2009\u5e74\u4e3b\u7f51\u4e0a\u7ebf\uff0c\u4f5c\u4e3a\u9996\u4e2a\u533a\u5757\u94fe\u7f51\u7edc\uff0c\u5b9a\u4f4d\u4e3a\u300c\u70b9\u5bf9\u70b9\u7535\u5b50\u73b0\u91d1\u7cfb\u7edf\u300d\u3002 \u8fd0\u8425\u60c5\u51b5 \uff1a \u5e02\u503c \uff1a\u957f\u671f\u5360\u636e\u7b2c\u4e00\uff082023\u5e74\u5360\u6bd4\u8d8540%\uff09\u3002 \u8282\u70b9\u6570 \uff1a\u5168\u7403\u7ea61.5\u4e07\u4e2a\u5168\u8282\u70b9\uff0c\u7b97\u529b\u96c6\u4e2d\u5728\u5c11\u6570\u77ff\u6c60\uff08\u5982Foundry USA\u3001Antpool\uff09\u3002 \u4ea4\u6613\u91cf \uff1a\u65e5\u5747\u7ea630\u4e07\u7b14\uff0cTPS\u4f4e\uff087\u7b14/\u79d2\uff09\uff0cLayer2\uff08\u5982\u95ea\u7535\u7f51\u7edc\uff09\u6269\u5c55\u7f13\u6162\u3002 \u529f\u80fd \uff1a \u4e3b\u6253\u4ef7\u503c\u5b58\u50a8\uff08\u201c\u6570\u5b57\u9ec4\u91d1\u201d\uff09\uff0c\u811a\u672c\u8bed\u8a00\u975e\u56fe\u7075\u5b8c\u5907\uff0c\u4ec5\u652f\u6301\u57fa\u7840\u8f6c\u8d26\u548c\u7b80\u5355\u5408\u7ea6\u3002","title":"1. \u6bd4\u7279\u5e01\uff08Bitcoin\uff09"},{"location":"bitcoin/chains/#2-ethereum","text":"\u53d1\u5c55\u5386\u7a0b \uff1a 2013\u5e74V\u795e\u63d0\u51fa\uff0c2015\u5e74\u4e3b\u7f51\u4e0a\u7ebf\uff0c2022\u5e74\u5b8c\u6210PoS\u8f6c\u578b\uff08\u5408\u5e76\uff09\u3002 \u8fd0\u8425\u60c5\u51b5 \uff1a \u751f\u6001\u89c4\u6a21 \uff1a3000+ DApps\uff0cTVL\u957f\u671f\u5360DeFi\u768460%\u4ee5\u4e0a\uff082023\u5e74\u7ea6$30B\uff09\u3002 \u6d3b\u8dc3\u5730\u5740 \uff1a\u65e5\u5747\u7ea640\u4e07\uff0cGas\u8d39\u6ce2\u52a8\u5927\uff08\u9ad8\u5cf0\u65f6$50+/\u7b14\uff09\u3002 Layer2 \uff1aArbitrum\u3001Optimism\u7b49\u5360\u636e70%\u4ee5\u4e0a\u94fe\u4e0a\u6d3b\u52a8\u3002 \u529f\u80fd \uff1a \u667a\u80fd\u5408\u7ea6\u5e73\u53f0\uff0c\u652f\u6301NFT\u3001DeFi\u3001DAO\u7b49\u3002ERC-20/721\u6807\u51c6\u6210\u884c\u4e1a\u57fa\u77f3\u3002","title":"2. \u4ee5\u592a\u574a\uff08Ethereum\uff09"},{"location":"bitcoin/chains/#3-bnb-chain","text":"\u53d1\u5c55\u5386\u7a0b \uff1a 2019\u5e74\u5e01\u5b89\u63a8\u51fa\uff0c2020\u5e74\u6574\u5408\u667a\u80fd\u94fe\uff08BSC\uff09\uff0c2022\u5e74\u5347\u7ea7\u4e3aBNB Chain\u3002 \u8fd0\u8425\u60c5\u51b5 \uff1a \u4ea4\u6613\u91cf \uff1a\u65e5\u5747\u7ea6300\u4e07\u7b14\uff08\u56e0\u4f4eGas\u8d39\u5438\u5f15\u9ad8\u9891\u4ea4\u6613\uff09\u3002 \u4e2d\u5fc3\u5316\u4e89\u8bae \uff1a21\u4e2a\u9a8c\u8bc1\u8282\u70b9\u4e2d\u5e01\u5b89\u63a7\u5236\u591a\u6570\uff0cMEV\u95ee\u9898\u663e\u8457\u3002 \u751f\u6001 \uff1aPancakeSwap\u7b49DApps\u6d3b\u8dc3\uff0c\u4f46\u4eff\u76d8\u9879\u76ee\u5c45\u591a\u3002 \u529f\u80fd \uff1a \u517c\u5bb9EVM\uff0c\u4fa7\u91cd\u4ea4\u6613\u6240\u751f\u6001\u5ef6\u4f38\uff0cGas\u8d39\u7a33\u5b9a\uff08$0.1\u4ee5\u4e0b\uff09\u3002","title":"3. BNB Chain\uff08\u539f\u5e01\u5b89\u94fe\uff09"},{"location":"bitcoin/chains/#4-solana","text":"\u53d1\u5c55\u5386\u7a0b \uff1a 2017\u5e74\u7531Anatoly Yakovenko\u521b\u7acb\uff0c\u4e3b\u6253\u9ad8\u6027\u80fdPoH\u5171\u8bc6\u3002 \u8fd0\u8425\u60c5\u51b5 \uff1a \u6027\u80fd \uff1a\u7406\u8bbaTPS 6.5\u4e07\uff0c\u5b9e\u9645\u65e5\u5747\u7ea62000\u7b14/\u79d2\u3002 \u5b95\u673a\u95ee\u9898 \uff1a2022\u5e74\u7d2f\u8ba1\u5b95\u673a\u8d8510\u6b21\uff0c2023\u5e74\u7a33\u5b9a\u6027\u6539\u5584\u3002 \u751f\u6001 \uff1aNFT\uff08\u5982Tensor\uff09\u548cDeFi\uff08\u5982Jupiter\uff09\u589e\u957f\u5feb\u3002 \u529f\u80fd \uff1a \u9ad8\u541e\u5410\u91cf\u94fe\uff0c\u9002\u5408\u9ad8\u9891\u4ea4\u6613\uff08\u5982DEX\u3001GameFi\uff09\u3002","title":"4. Solana"},{"location":"bitcoin/chains/#5-polygonmatic","text":"\u53d1\u5c55\u5386\u7a0b \uff1a 2017\u5e74\u542f\u52a8\uff0c2020\u5e74\u4e3b\u7f51\u4e0a\u7ebf\uff0c\u4e13\u6ce8\u4ee5\u592a\u574a\u6269\u5bb9\u3002 \u8fd0\u8425\u60c5\u51b5 \uff1a \u91c7\u7528\u7387 \uff1a\u65e5\u5747\u4ea4\u6613\u91cf\u8d85300\u4e07\u7b14\uff08zkEVM\u91c7\u7528\u7387\u4f4e\uff0c\u4ecd\u4f9d\u8d56PoS\u94fe\uff09\u3002 \u5408\u4f5c\u4f19\u4f34 \uff1a\u661f\u5df4\u514b\u3001Reddit\u7b49\u4f20\u7edf\u4f01\u4e1a\u91c7\u7528\u5176NFT\u65b9\u6848\u3002 \u529f\u80fd \uff1a \u63d0\u4f9b\u591a\u79cd\u6269\u5bb9\u65b9\u6848\uff08PoS\u94fe\u3001zkRollup\u7b49\uff09\uff0c\u4e3b\u6253\u4f4e\u6210\u672c\u4ee5\u592a\u574a\u517c\u5bb9\u3002","title":"5. Polygon\uff08\u539fMatic\uff09"},{"location":"bitcoin/chains/#6-avalanche","text":"\u53d1\u5c55\u5386\u7a0b \uff1a 2020\u5e74\u4e3b\u7f51\u4e0a\u7ebf\uff0c\u91c7\u7528\u4e09\u94fe\u7ed3\u6784\uff08X/P/C\u94fe\uff09\u3002 \u8fd0\u8425\u60c5\u51b5 \uff1a \u5b50\u7f51 \uff1a\u8d8550\u4e2a\u5b50\u7f51\uff08\u5982DeFi Kingdom\u3001GameFi\u9879\u76ee\uff09\u3002 \u6027\u80fd \uff1aTPS\u7ea64500\u7b14\uff0cFinality\u65f6\u95f4<2\u79d2\u3002 \u529f\u80fd \uff1a \u4f01\u4e1a\u7ea7\u5b9a\u5236\u5316\u533a\u5757\u94fe\uff08\u5b50\u7f51\uff09\uff0c\u517c\u5bb9EVM\u3002","title":"6. Avalanche"},{"location":"bitcoin/chains/#7-cosmos-polkadot","text":"Cosmos \uff1a \u7279\u70b9 \uff1aTendermint\u5171\u8bc6+IBC\u8de8\u94fe\u534f\u8bae\uff0cATOM\u5e02\u503c$30\u4ebf\uff082023\uff09\u3002 \u751f\u6001 \uff1aOsmosis\uff08DEX\uff09\u3001Celestia\uff08\u6a21\u5757\u5316DA\uff09\u7b49\u3002 Polkadot \uff1a \u7279\u70b9 \uff1a\u4e2d\u7ee7\u94fe+\u5e73\u884c\u94fe\u67b6\u6784\uff0cDOT\u5e02\u503c$50\u4ebf\u3002 \u751f\u6001 \uff1aMoonbeam\uff08EVM\u517c\u5bb9\uff09\u3001Acala\uff08DeFi\uff09\u3002 \u529f\u80fd \uff1a \u5747\u4e3b\u6253\u4e92\u64cd\u4f5c\u6027\uff0cCosmos\u66f4\u8f7b\u91cf\uff0cPolkadot\u5f3a\u8c03\u5171\u4eab\u5b89\u5168\u3002","title":"7. Cosmos &amp; Polkadot"},{"location":"bitcoin/chains/#8-2020","text":"Sui/Aptos \uff08Move\u8bed\u8a00\uff09\uff1a \u4e3b\u6253\u9ad8\u5e76\u53d1\uff08\u5e76\u884c\u6267\u884c\uff09\uff0c\u4f46\u751f\u6001\u89c4\u6a21\u5c0f\uff08TVL<$1B\uff09\u3002 Near \uff1a \u5206\u7247\u6280\u672f\uff0c\u4e3b\u6253AI+\u533a\u5757\u94fe\uff0c\u65e5\u5747\u4ea4\u6613\u7ea6100\u4e07\u7b14\u3002 StarkNet/zkSync \uff1a ZK-Rollup\u65b9\u6848\uff0c\u4ee5\u592a\u574aLayer2\uff0c\u751f\u6001\u589e\u901f\u5feb\uff08\u5982dYdX V4\uff09\u3002","title":"8. \u65b0\u5174\u516c\u94fe\uff082020\u5e74\u540e\uff09"},{"location":"bitcoin/chains/#_1","text":"\u94fe \u6838\u5fc3\u529f\u80fd \u9002\u7528\u573a\u666f \u6bd4\u7279\u5e01 \u4ef7\u503c\u5b58\u50a8 \u652f\u4ed8\u3001\u50a8\u503c \u4ee5\u592a\u574a \u667a\u80fd\u5408\u7ea6\u901a\u7528\u5e73\u53f0 DeFi\u3001NFT\u3001DAO BNB Chain \u4f4eGas\u8d39\u4ea4\u6613 \u4ea4\u6613\u6240\u751f\u6001\u3001\u9ad8\u9891\u4ea4\u6613 Solana \u9ad8\u6027\u80fdDApps GameFi\u3001NFT\u4ea4\u6613 Polygon \u4ee5\u592a\u574a\u6269\u5bb9 \u4f01\u4e1a\u89e3\u51b3\u65b9\u6848\u3001Layer2 Cosmos \u8de8\u94fe\u4e92\u64cd\u4f5c \u72ec\u7acb\u94fe\u4e92\u8054","title":"\u529f\u80fd\u5bf9\u6bd4"},{"location":"bitcoin/chains/#_2","text":"\u6a21\u5757\u5316\u533a\u5757\u94fe \uff1aCelestia\uff08\u6570\u636e\u53ef\u7528\u5c42\uff09\u3001EigenLayer\uff08\u518d\u8d28\u62bc\uff09\u5174\u8d77\u3002 ZK\u6280\u672f \uff1azkRollup\u9879\u76ee\uff08\u5982zkSync Era\uff09\u6311\u6218Optimistic Rollup\u3002 \u5408\u89c4\u5316 \uff1aRipple\uff08XRP\uff09\u80dc\u8bc9SEC\u540e\uff0c\u5408\u89c4\u516c\u94fe\uff08\u5982Hedera\uff09\u53d7\u5173\u6ce8\u3002 \u5f53\u524d\u516c\u94fe\u7ade\u4e89\u5df2\u4ece\u6027\u80fd\u8f6c\u5411\u5782\u76f4\u9886\u57df\uff08\u5982\u6e38\u620f\u3001\u793e\u4ea4\uff09\u548c\u7528\u6237\u4f53\u9a8c\uff08\u8d26\u6237\u62bd\u8c61\u3001Gas\u8865\u8d34\uff09\uff0c\u540c\u65f6\u4ee5\u592a\u574a\u4ecd\u5360\u636e\u5f00\u53d1\u8005\u5fc3\u667a\u4efd\u989d\u768470%\u4ee5\u4e0a\uff08Electric Capital\u6570\u636e\uff09\u3002 \u533a\u5757\u94fe\u9886\u57df\u4e4b\u6240\u4ee5\u51fa\u73b0\u591a\u79cd\u4e0d\u540c\u7684\u516c\u94fe\uff0c\u672c\u8d28\u4e0a\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0d\u540c\u573a\u666f\u4e0b\u7684\u9700\u6c42\uff0c\u5e76\u5728\u6280\u672f\u3001\u6cbb\u7406\u3001\u6027\u80fd\u7b49\u65b9\u9762\u8fdb\u884c\u63a2\u7d22\u548c\u521b\u65b0\u3002\u6bcf\u6761\u94fe\u7684\u8bde\u751f\u90fd\u4ee3\u8868\u4e86\u7279\u5b9a\u7684\u8bbe\u8ba1\u54f2\u5b66\u548c\u6280\u672f\u65b9\u5411\uff0c\u800c\u6700\u65b0\u7684\u8d8b\u52bf\u5219\u53cd\u6620\u4e86\u884c\u4e1a\u5bf9\u53ef\u6269\u5c55\u6027\u3001\u4e92\u64cd\u4f5c\u6027\u3001\u9690\u79c1\u548c\u7528\u6237\u4f53\u9a8c\u7684\u6301\u7eed\u8ffd\u6c42\u3002","title":"\u8d8b\u52bf\u89c2\u5bdf"},{"location":"bitcoin/chains/#_3","text":"","title":"\u4e00\u3001\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u4e9b\u94fe\uff1f\u5b83\u4eec\u4ee3\u8868\u4e86\u4ec0\u4e48\uff1f"},{"location":"bitcoin/chains/#1-btc","text":"- \u4ee3\u8868 \uff1a \u53bb\u4e2d\u5fc3\u5316\u4ef7\u503c\u5b58\u50a8 - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a \u6bd4\u7279\u5e01\u7684\u8bde\u751f\u662f\u4e3a\u4e86\u521b\u9020\u4e00\u79cd\u4e0d\u53d7\u653f\u5e9c\u6216\u673a\u6784\u63a7\u5236\u7684\u7535\u5b50\u73b0\u91d1\u7cfb\u7edf\uff0c\u4f46\u5176\u4f4e\u541e\u5410\u91cf\uff087 TPS\uff09\u548c\u7b80\u5355\u811a\u672c\u8bed\u8a00\u9650\u5236\u4e86\u529f\u80fd\uff0c\u6700\u7ec8\u6f14\u53d8\u4e3a\u201c\u6570\u5b57\u9ec4\u91d1\u201d\uff0c\u4e3b\u6253\u6297\u5ba1\u67e5\u548c\u4ef7\u503c\u5b58\u50a8\u3002","title":"1. \u6bd4\u7279\u5e01\uff08BTC\uff09\u2014\u2014 \u53bb\u4e2d\u5fc3\u5316\u6570\u5b57\u9ec4\u91d1"},{"location":"bitcoin/chains/#2-eth","text":"- \u4ee3\u8868 \uff1a \u53ef\u7f16\u7a0b\u533a\u5757\u94fe - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a \u6bd4\u7279\u5e01\u65e0\u6cd5\u652f\u6301\u590d\u6742\u5e94\u7528\uff0c\u4ee5\u592a\u574a\u5f15\u5165**\u56fe\u7075\u5b8c\u5907\u7684\u667a\u80fd\u5408\u7ea6**\uff0c\u4f7f\u5f00\u53d1\u8005\u80fd\u6784\u5efaDeFi\u3001NFT\u3001DAO\u7b49\u5e94\u7528\uff0c\u6210\u4e3a\u201c\u4e16\u754c\u8ba1\u7b97\u673a\u201d\u3002","title":"2. \u4ee5\u592a\u574a\uff08ETH\uff09\u2014\u2014 \u667a\u80fd\u5408\u7ea6\u548c\u53bb\u4e2d\u5fc3\u5316\u5e94\u7528\u5e73\u53f0"},{"location":"bitcoin/chains/#3-bnb-chainbsc","text":"- \u4ee3\u8868 \uff1a \u4e2d\u5fc3\u5316\u6548\u7387 vs. \u53bb\u4e2d\u5fc3\u5316 - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a \u4ee5\u592a\u574aGas\u8d39\u9ad8\u6602\uff0c\u5e01\u5b89\u63a8\u51faBSC\uff08\u540e\u5347\u7ea7\u4e3aBNB Chain\uff09\uff0c\u727a\u7272\u90e8\u5206\u53bb\u4e2d\u5fc3\u5316\uff0821\u4e2a\u9a8c\u8bc1\u8282\u70b9\uff09\u6362\u53d6\u4f4e\u8d39\u7528\u548c\u9ad8\u901f\u5ea6\uff0c\u670d\u52a1\u4e8e\u4ea4\u6613\u6240\u7528\u6237\u548c\u4eff\u76d8\u9879\u76ee\u3002","title":"3. BNB Chain\uff08BSC\uff09\u2014\u2014 \u4ea4\u6613\u6240\u751f\u6001\u7684\u9ad8\u6027\u80fd\u94fe"},{"location":"bitcoin/chains/#4-solanasol","text":"- \u4ee3\u8868 \uff1a \u727a\u7272\u53bb\u4e2d\u5fc3\u5316\u6362\u6027\u80fd - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a \u4ee5\u592a\u574a\u6269\u5bb9\u7f13\u6162\uff0cSolana\u91c7\u7528**\u5386\u53f2\u8bc1\u660e\uff08PoH\uff09+ PoS**\uff0c\u7406\u8bbaTPS\u53ef\u8fbe6.5\u4e07\uff0c\u4f46\u9891\u7e41\u5b95\u673a\u66b4\u9732\u4e86\u7a33\u5b9a\u6027\u95ee\u9898\uff0c\u9002\u5408\u9ad8\u9891\u4ea4\u6613\u573a\u666f\uff08\u5982GameFi\u3001NFT\uff09\u3002","title":"4. Solana\uff08SOL\uff09\u2014\u2014 \u9ad8\u6027\u80fd\u516c\u94fe"},{"location":"bitcoin/chains/#5-cosmos-polkadot","text":"- \u4ee3\u8868 \uff1a \u8de8\u94fe\u4e92\u64cd\u4f5c\u6027 - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a - Cosmos \uff1a\u901a\u8fc7**IBC\u534f\u8bae**\u8ba9\u72ec\u7acb\u94fe\u4e92\u8054\uff0c\u5f3a\u8c03\u4e3b\u6743\uff08\u6bcf\u6761\u94fe\u53ef\u81ea\u5b9a\u4e49\u5171\u8bc6\uff09\u3002 - Polkadot \uff1a\u901a\u8fc7**\u4e2d\u7ee7\u94fe+\u5e73\u884c\u94fe**\u5171\u4eab\u5b89\u5168\u6027\uff0c\u9002\u5408\u9700\u8981\u5b89\u5168\u4f46\u4e0d\u60f3\u7ef4\u62a4\u9a8c\u8bc1\u8005\u7684\u94fe\u3002","title":"5. Cosmos &amp; Polkadot \u2014\u2014 \u533a\u5757\u94fe\u4e92\u8054"},{"location":"bitcoin/chains/#6-avalancheavax","text":"- \u4ee3\u8868 \uff1a \u53ef\u5b9a\u5236\u5316\u533a\u5757\u94fe - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a \u4f01\u4e1a\u6216\u6e38\u620f\u9879\u76ee\u5e0c\u671b\u6709\u81ea\u5df1\u7684\u94fe\uff08\u5b50\u7f51\uff09\uff0c\u540c\u65f6\u80fd\u4e0e\u5176\u4ed6\u94fe\u4ea4\u4e92\uff0cAvalanche\u63d0\u4f9b\u9ad8\u6027\u80fd\uff08TPS 4500+\uff09\u548c\u5feb\u901f\u7ec8\u5c40\u6027\uff08<2\u79d2\uff09\u3002","title":"6. Avalanche\uff08AVAX\uff09\u2014\u2014 \u4f01\u4e1a\u7ea7\u5b50\u7f51"},{"location":"bitcoin/chains/#7-polygonmatic-layer2","text":"- \u4ee3\u8868 \uff1a \u4ee5\u592a\u574a\u6269\u5bb9\u65b9\u6848 - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a \u4ee5\u592a\u574a\u4e3b\u7f51\u62e5\u5835\uff0cPolygon\u63d0\u4f9b\u591a\u79cd\u6269\u5bb9\u65b9\u6848\uff08PoS\u4fa7\u94fe\u3001zkEVM\u7b49\uff09\uff0c\u8ba9\u7528\u6237\u4f4e\u6210\u672c\u4f7f\u7528\u4ee5\u592a\u574a\u751f\u6001\u3002","title":"7. Polygon\uff08MATIC\uff09\u2014\u2014 \u4ee5\u592a\u574a\u7684Layer2"},{"location":"bitcoin/chains/#8-suiaptosstarknet","text":"- \u4ee3\u8868 \uff1a \u6280\u672f\u521b\u65b0\uff08\u5e76\u884c\u6267\u884c\u3001ZK\u8bc1\u660e\uff09 - \u4e3a\u4ec0\u4e48\u5b58\u5728 \uff1a - Sui/Aptos \uff1a\u91c7\u7528Move\u8bed\u8a00\uff0c\u4f18\u5316\u667a\u80fd\u5408\u7ea6\u5b89\u5168\u6027\u548c\u5e76\u884c\u5904\u7406\u80fd\u529b\u3002 - StarkNet/zkSync \uff1aZK-Rollup\u6280\u672f\uff0c\u63d0\u5347\u4ee5\u592a\u574a\u6269\u5c55\u6027\uff0c\u540c\u65f6\u4fdd\u6301\u9ad8\u5b89\u5168\u6027\u3002","title":"8. \u65b0\u5174\u94fe\uff08Sui/Aptos/StarkNet\uff09\u2014\u2014 \u4e0b\u4e00\u4ee3\u533a\u5757\u94fe"},{"location":"bitcoin/chains/#2024-2025","text":"","title":"\u4e8c\u3001\u533a\u5757\u94fe\u7684\u6700\u65b0\u65b9\u5411\uff082024-2025\uff09"},{"location":"bitcoin/chains/#1-modular-blockchain","text":"- \u6838\u5fc3\u601d\u60f3 \uff1a\u5c06\u533a\u5757\u94fe\u7684\u56db\u5927\u529f\u80fd\uff08\u6267\u884c\u3001\u7ed3\u7b97\u3001\u5171\u8bc6\u3001\u6570\u636e\u53ef\u7528\u6027\uff09\u62c6\u89e3\uff0c\u7531\u4e0d\u540c\u94fe\u5904\u7406\u3002 - \u4ee3\u8868\u9879\u76ee \uff1a - Celestia \uff08\u4e13\u6ce8\u6570\u636e\u53ef\u7528\u6027DA\uff09 - EigenLayer \uff08\u4ee5\u592a\u574a\u518d\u8d28\u62bc\uff0c\u5171\u4eab\u5b89\u5168\u6027\uff09 - Fuel \uff08\u6a21\u5757\u5316\u6267\u884c\u5c42\uff09 - \u610f\u4e49 \uff1a\u63d0\u9ad8\u53ef\u6269\u5c55\u6027\uff0c\u964d\u4f4e\u5f00\u53d1\u6210\u672c\u3002","title":"1. \u6a21\u5757\u5316\u533a\u5757\u94fe\uff08Modular Blockchain\uff09"},{"location":"bitcoin/chains/#2-zk","text":"- \u6838\u5fc3\u65b9\u5411 \uff1a - ZK-Rollup \uff08StarkNet\u3001zkSync\u3001Scroll\uff09\u63d0\u5347\u4ee5\u592a\u574aTPS\u3002 - \u9690\u79c1\u94fe \uff08Aleo\u3001Zcash\uff09\u652f\u6301\u533f\u540d\u4ea4\u6613\u3002 - \u5168\u540c\u6001\u52a0\u5bc6\uff08FHE\uff09 \uff08\u5982Fhenix\uff09\u5b9e\u73b0\u94fe\u4e0a\u9690\u79c1\u8ba1\u7b97\u3002 - \u5e94\u7528\u573a\u666f \uff1a\u5408\u89c4DeFi\u3001\u673a\u5bc6\u6295\u7968\u3001\u4f01\u4e1a\u533a\u5757\u94fe\u3002","title":"2. \u96f6\u77e5\u8bc6\u8bc1\u660e\uff08ZK\uff09\u548c\u9690\u79c1\u8ba1\u7b97"},{"location":"bitcoin/chains/#3-chain-abstraction","text":"- \u6838\u5fc3\u95ee\u9898 \uff1a\u7528\u6237\u4e0d\u60f3\u7ba1\u7406\u591a\u94fe\u94b1\u5305\u3001Gas\u8d39\u3001\u8de8\u6865\u3002 - \u89e3\u51b3\u65b9\u6848 \uff1a - \u8d26\u6237\u62bd\u8c61\uff08AA\uff09 \uff08ERC-4337\uff0c\u8ba9\u5408\u7ea6\u7ba1\u7406\u94b1\u5305\uff09\u3002 - \u7edf\u4e00\u6d41\u52a8\u6027\u5c42 \uff08\u5982LayerZero\u3001Axelar\u5b9e\u73b0\u8de8\u94fe\u65e0\u7f1d\u4ea4\u4e92\uff09\u3002 - \u76ee\u6807 \uff1a\u8ba9\u7528\u6237\u65e0\u611f\u77e5\u4f7f\u7528\u591a\u94feDApp\u3002","title":"3. \u94fe\u62bd\u8c61\uff08Chain Abstraction\uff09"},{"location":"bitcoin/chains/#4-depin","text":"- \u6838\u5fc3\u6982\u5ff5 \uff1a\u7528\u4ee3\u5e01\u6fc0\u52b1\u73b0\u5b9e\u4e16\u754c\u8d44\u6e90\uff08\u5b58\u50a8\u3001\u7b97\u529b\u3001\u5e26\u5bbd\u7b49\uff09\u3002 - \u4ee3\u8868\u9879\u76ee \uff1a - Filecoin \uff08\u53bb\u4e2d\u5fc3\u5316\u5b58\u50a8\uff09 - Helium \uff08\u53bb\u4e2d\u5fc3\u5316\u65e0\u7ebf\u7f51\u7edc\uff09 - Render Network \uff08\u5206\u5e03\u5f0fGPU\u6e32\u67d3\uff09 - \u8d8b\u52bf \uff1a\u7ed3\u5408AI+\u533a\u5757\u94fe\uff0c\u5982Bittensor\uff08\u53bb\u4e2d\u5fc3\u5316\u673a\u5668\u5b66\u4e60\uff09\u3002","title":"4. \u53bb\u4e2d\u5fc3\u5316\u7269\u7406\u57fa\u7840\u8bbe\u65bd\uff08DePIN\uff09"},{"location":"bitcoin/chains/#5-rwa","text":"- \u6838\u5fc3\u65b9\u5411 \uff1a\u5c06\u503a\u5238\u3001\u623f\u5730\u4ea7\u3001\u9ec4\u91d1\u7b49\u4e0a\u94fe\u3002 - \u4ee3\u8868\u9879\u76ee \uff1a - Ondo Finance \uff08\u7f8e\u503a\u4ee3\u5e01\u5316\uff09 - MakerDAO \uff08\u62b5\u62bc\u73b0\u5b9e\u8d44\u4ea7\u53d1\u884cDAI\uff09 - Chainlink \uff08\u63d0\u4f9bRWA\u6570\u636e\u9884\u8a00\u673a\uff09 - \u6311\u6218 \uff1a\u5408\u89c4\u3001\u6cd5\u5f8b\u6846\u67b6\u3001\u673a\u6784\u91c7\u7528\u3002","title":"5. RWA\uff08\u771f\u5b9e\u4e16\u754c\u8d44\u4ea7\u4ee3\u5e01\u5316\uff09"},{"location":"bitcoin/chains/#6","text":"- \u65b0\u65b9\u5411 \uff1a - Ordinals\u534f\u8bae \uff08\u6bd4\u7279\u5e01NFT\u548cBRC-20\u4ee3\u5e01\uff09\u3002 - \u95ea\u7535\u7f51\u7edc \uff08\u5c0f\u989d\u652f\u4ed8\uff0c\u4f46\u91c7\u7528\u7387\u4ecd\u4f4e\uff09\u3002 - RGB\u534f\u8bae \uff08\u6bd4\u7279\u5e01\u667a\u80fd\u5408\u7ea6\u6269\u5c55\uff09\u3002 - \u610f\u4e49 \uff1a\u8ba9\u6bd4\u7279\u5e01\u4e0d\u4ec5\u662f\u50a8\u503c\u5de5\u5177\uff0c\u8fd8\u80fd\u652f\u6301\u66f4\u591a\u5e94\u7528\u3002","title":"6. \u6bd4\u7279\u5e01\u751f\u6001\u521b\u65b0"},{"location":"bitcoin/chains/#7-ai","text":"- \u7ed3\u5408\u65b9\u5f0f \uff1a - \u53bb\u4e2d\u5fc3\u5316AI\u8bad\u7ec3 \uff08\u5982Bittensor\uff09\u3002 - AI\u4ee3\u7406\u81ea\u52a8\u4ea4\u6613 \uff08\u5982Fetch.ai\uff09\u3002 - ZKML\uff08\u96f6\u77e5\u8bc6\u673a\u5668\u5b66\u4e60\uff09 \uff1a\u94fe\u4e0a\u9a8c\u8bc1AI\u6a21\u578b\u8f93\u51fa\u3002 - \u6f5c\u529b \uff1a\u89e3\u51b3AI\u4e2d\u5fc3\u5316\u3001\u6570\u636e\u5784\u65ad\u95ee\u9898\u3002","title":"7. AI + \u533a\u5757\u94fe"},{"location":"bitcoin/chains/#_4","text":"\u9636\u6bb5 \u4ee3\u8868\u94fe \u6838\u5fc3\u521b\u65b0 \u5f53\u524d\u6311\u6218 1.0 \u8d27\u5e01 \u6bd4\u7279\u5e01 \u53bb\u4e2d\u5fc3\u5316P2P\u73b0\u91d1 \u529f\u80fd\u5355\u4e00\uff0c\u6269\u5c55\u6027\u5dee 2.0 \u667a\u80fd\u5408\u7ea6 \u4ee5\u592a\u574a \u53ef\u7f16\u7a0bDApps Gas\u8d39\u9ad8\uff0c\u6027\u80fd\u74f6\u9888 3.0 \u5782\u76f4\u94fe Solana/AVAX \u9ad8\u6027\u80fd\u3001\u5b9a\u5236\u5316\u94fe \u53bb\u4e2d\u5fc3\u5316\u4e0e\u6027\u80fd\u7684\u6743\u8861 4.0 \u6a21\u5757\u5316 Celestia/Eigen \u5206\u5de5\u534f\u4f5c\uff0c\u4e13\u4e1a\u5316\u94fe \u751f\u6001\u788e\u7247\u5316 \u672a\u6765 ZK+AI+RWA \u9690\u79c1\u3001AI\u3001\u73b0\u5b9e\u8d44\u4ea7\u4e0a\u94fe \u5408\u89c4\u3001\u7528\u6237\u4f53\u9a8c\u3001\u5927\u89c4\u6a21\u91c7\u7528 \u672a\u67653-5\u5e74\u7684\u5173\u952e\u95ee\u9898 \uff1a \u5982\u4f55\u5e73\u8861\u53bb\u4e2d\u5fc3\u5316\u4e0e\u6027\u80fd\uff1f \uff08Solana\u5b95\u673a vs \u4ee5\u592a\u574a\u6162\uff09 \u5982\u4f55\u8ba9\u591a\u94fe\u4f53\u9a8c\u65e0\u7f1d\u5316\uff1f \uff08\u94fe\u62bd\u8c61\u3001\u8d26\u6237\u62bd\u8c61\uff09 \u5982\u4f55\u8ba9\u533a\u5757\u94fe\u771f\u6b63\u8fdb\u5165\u4e3b\u6d41\uff1f \uff08RWA\u3001\u5408\u89c4DeFi\u3001AI\u6574\u5408\uff09 \u533a\u5757\u94fe\u6b63\u5728\u4ece\u201c\u91d1\u878d\u5b9e\u9a8c\u201d\u8d70\u5411\u201c\u57fa\u7840\u8bbe\u65bd\u201d\uff0c\u672a\u6765\u7684\u8d62\u5bb6\u53ef\u80fd\u662f\u90a3\u4e9b\u80fd\u89e3\u51b3\u5b9e\u9645\u9700\u6c42\uff08\u5982\u652f\u4ed8\u3001\u6570\u636e\u5b58\u50a8\u3001AI\u8bad\u7ec3\uff09\u800c\u4e0d\u4ec5\u4ec5\u662f\u7092\u4f5c\u7684\u94fe\u3002","title":"\u4e09\u3001\u603b\u7ed3\uff1a\u533a\u5757\u94fe\u7684\u6f14\u8fdb\u903b\u8f91"},{"location":"bitcoin/consensus/","text":"consensus \u00b6 \u5171\u8bc6\u7b97\u6cd5\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u786e\u4fdd\u591a\u4e2a\u8282\u70b9\u5c31\u67d0\u4e00\u72b6\u6001\u6216\u51b3\u7b56\u8fbe\u6210\u4e00\u81f4\u7684\u673a\u5236\uff0c\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u6570\u636e\u4e00\u81f4\u6027\u3001\u7cfb\u7edf\u5bb9\u9519\u548c\u534f\u4f5c\u95ee\u9898\u3002\u4ee5\u4e0b\u662f\u4e3b\u8981\u5171\u8bc6\u7b97\u6cd5\u53ca\u5176\u7279\u70b9\u3001\u5e94\u7528\u573a\u666f\u548c\u5c40\u9650\u6027\uff1a 1. Paxos \u00b6 \u76ee\u7684 \uff1a\u89e3\u51b3\u5f02\u6b65\u7f51\u7edc\u4e2d\u8282\u70b9\u6545\u969c\u4e0b\u7684\u5171\u8bc6\u95ee\u9898\uff0c\u4fdd\u8bc1\u4e00\u81f4\u6027\u3002 \u5e94\u7528 \uff1a\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff08\u5982Google Chubby\uff09\u3002 \u539f\u7406 \uff1a \u5206\u4e3a\u63d0\u6848\uff08Propose\uff09\u3001\u627f\u8bfa\uff08Promise\uff09\u3001\u63a5\u53d7\uff08Accept\uff09\u9636\u6bb5\u3002 \u901a\u8fc7\u591a\u6570\u6d3e\uff08Quorum\uff09\u786e\u8ba4\u8fbe\u6210\u4e00\u81f4\u3002 \u95ee\u9898 \uff1a \u96be\u4ee5\u7406\u89e3\u548c\u5b9e\u73b0\u3002 \u6d3b\u9501\u98ce\u9669\uff08\u63d0\u6848\u51b2\u7a81\u65f6\u53ef\u80fd\u65e0\u9650\u91cd\u8bd5\uff09\u3002 2. Raft \u00b6 \u76ee\u7684 \uff1a\u7b80\u5316Paxos\u7684\u7406\u89e3\u4e0e\u5b9e\u73b0\uff0c\u63d0\u4f9b\u5f3a\u4e00\u81f4\u6027\u3002 \u5e94\u7528 \uff1aEtcd\u3001Consul\u3001Kubernetes\u3002 \u539f\u7406 \uff1a \u9886\u5bfc\u8005\uff08Leader\uff09\u9009\u4e3e + \u65e5\u5fd7\u590d\u5236\u3002 \u8282\u70b9\u5206\u4e3aLeader\u3001Follower\u3001Candidate\u4e09\u79cd\u89d2\u8272\u3002 \u95ee\u9898 \uff1a \u4f9d\u8d56\u5f3a\u9886\u5bfc\u8005\uff0c\u6545\u969c\u65f6\u9700\u91cd\u65b0\u9009\u4e3e\u3002 \u7f51\u7edc\u5206\u533a\u53ef\u80fd\u5bfc\u81f4\u8111\u88c2\uff08\u9700\u989d\u5916\u89e3\u51b3\uff09\u3002 3. PBFT\uff08\u5b9e\u7528\u62dc\u5360\u5ead\u5bb9\u9519\uff09 \u00b6 \u76ee\u7684 \uff1a\u5bb9\u5fcd\u62dc\u5360\u5ead\u6545\u969c\uff08\u8282\u70b9\u6076\u610f\u884c\u4e3a\uff09\u3002 \u5e94\u7528 \uff1a\u8054\u76df\u94fe\uff08\u5982Hyperledger Fabric\uff09\u3002 \u539f\u7406 \uff1a \u4e09\u9636\u6bb5\u534f\u8bae\uff08Pre-prepare\u3001Prepare\u3001Commit\uff09\u3002 \u9700\u8981\u81f3\u5c11 \\(3f+1\\) \u4e2a\u8282\u70b9\u5bb9\u9519 \\(f\\) \u4e2a\u6076\u610f\u8282\u70b9\u3002 \u95ee\u9898 \uff1a \u8282\u70b9\u6570\u591a\u65f6\u901a\u4fe1\u5f00\u9500\u5927\uff08 \\(O(n^2)\\) \uff09\u3002 \u4ec5\u9002\u5408\u5c0f\u89c4\u6a21\u7f51\u7edc\u3002 4. PoW\uff08\u5de5\u4f5c\u91cf\u8bc1\u660e\uff09 \u00b6 \u76ee\u7684 \uff1a\u5f00\u653e\u7f51\u7edc\u4e2d\u6297Sybil\u653b\u51fb\uff08\u5982\u516c\u94fe\uff09\u3002 \u5e94\u7528 \uff1a\u6bd4\u7279\u5e01\u3001\u4ee5\u592a\u574a\uff081.0\uff09\u3002 \u539f\u7406 \uff1a \u8282\u70b9\u901a\u8fc7\u8ba1\u7b97\u54c8\u5e0c\u7ade\u4e89\u8bb0\u8d26\u6743\u3002 \u6700\u957f\u94fe\u539f\u5219\u89e3\u51b3\u5206\u53c9\u3002 \u95ee\u9898 \uff1a \u80fd\u6e90\u6d88\u8017\u5de8\u5927\u3002 \u786e\u8ba4\u5ef6\u8fdf\u9ad8\uff08\u6bd4\u7279\u5e01\u97006\u4e2a\u533a\u5757\u786e\u8ba4\uff09\u3002 5. PoS\uff08\u6743\u76ca\u8bc1\u660e\uff09 \u00b6 \u76ee\u7684 \uff1a\u964d\u4f4e\u80fd\u8017\uff0c\u66ff\u4ee3PoW\u3002 \u5e94\u7528 \uff1a\u4ee5\u592a\u574a2.0\u3001Cardano\u3002 \u539f\u7406 \uff1a \u6839\u636e\u6301\u5e01\u91cf\u548c\u65f6\u95f4\u9009\u62e9\u9a8c\u8bc1\u8005\u3002 \u5206\u53c9\u65f6\u901a\u8fc7\"\u60e9\u7f5a\u673a\u5236\"\u6291\u5236\u6076\u610f\u884c\u4e3a\u3002 \u95ee\u9898 \uff1a \u5bcc\u4eba\u66f4\u5bcc\uff08\u9a6c\u592a\u6548\u5e94\uff09\u3002 \u957f\u7a0b\u653b\u51fb\u98ce\u9669\uff08\u9700\u989d\u5916\u9632\u62a4\uff09\u3002 6. DPoS\uff08\u59d4\u6258\u6743\u76ca\u8bc1\u660e\uff09 \u00b6 \u76ee\u7684 \uff1a\u8fdb\u4e00\u6b65\u63d0\u5347PoS\u6548\u7387\u3002 \u5e94\u7528 \uff1aEOS\u3001TRON\u3002 \u539f\u7406 \uff1a \u6301\u5e01\u8005\u6295\u7968\u9009\u51fa\u5c11\u6570\u4ee3\u8868\u8282\u70b9\u8d1f\u8d23\u5171\u8bc6\u3002 \u95ee\u9898 \uff1a \u4e2d\u5fc3\u5316\u98ce\u9669\uff08\u6743\u529b\u96c6\u4e2d\u5728\u5c11\u6570\u8282\u70b9\uff09\u3002 \u9009\u6c11\u53c2\u4e0e\u5ea6\u4f4e\u53ef\u80fd\u5bfc\u81f4\u8150\u8d25\u3002 7. Gossip\u534f\u8bae \u00b6 \u76ee\u7684 \uff1a\u6700\u7ec8\u4e00\u81f4\u6027\uff0c\u9ad8\u5bb9\u9519\u3002 \u5e94\u7528 \uff1aCassandra\u3001Redis Cluster\u3002 \u539f\u7406 \uff1a \u8282\u70b9\u968f\u673a\u4f20\u64ad\u4fe1\u606f\uff0c\u6700\u7ec8\u5168\u7f51\u540c\u6b65\u3002 \u95ee\u9898 \uff1a \u6570\u636e\u4e00\u81f4\u6027\u662f\u5f31\u4fdd\u8bc1\uff08\u53ef\u80fd\u4e34\u65f6\u4e0d\u4e00\u81f4\uff09\u3002 \u4f20\u64ad\u5ef6\u8fdf\u4e0d\u786e\u5b9a\u3002 8. ZAB\uff08ZooKeeper Atomic Broadcast\uff09 \u00b6 \u76ee\u7684 \uff1a\u4e3aZooKeeper\u8bbe\u8ba1\u7684\u5d29\u6e83\u5bb9\u9519\u5171\u8bc6\u3002 \u5e94\u7528 \uff1aApache ZooKeeper\u3002 \u539f\u7406 \uff1a \u7c7b\u4f3cRaft\uff0c\u4f46\u4f18\u5316\u4e86\u6062\u590d\u6d41\u7a0b\u3002 \u95ee\u9898 \uff1a \u5bf9\u9886\u5bfc\u8005\u4f9d\u8d56\u5f3a\u3002 9. \u5176\u4ed6\u53d8\u79cd \u00b6 Tendermint \uff1a\u7ed3\u5408PBFT\u548cPoS\uff0c\u7528\u4e8eCosmos\u3002 HotStuff \uff1aFacebook Libra\uff08Diem\uff09\u4f7f\u7528\uff0c\u7ebf\u6027\u901a\u4fe1\u590d\u6742\u5ea6\u3002 \u4e3a\u4ec0\u4e48\u9700\u8981\u5171\u8bc6\u7b97\u6cd5\uff1f \u00b6 \u5bb9\u9519 \uff1a\u5141\u8bb8\u90e8\u5206\u8282\u70b9\u6545\u969c\u65f6\u7cfb\u7edf\u4ecd\u53ef\u7528\u3002 \u4e00\u81f4\u6027 \uff1a\u907f\u514d\u6570\u636e\u51b2\u7a81\uff08\u5982\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff09\u3002 \u53bb\u4e2d\u5fc3\u5316 \uff1a\u65e0\u5355\u70b9\u63a7\u5236\uff08\u5982\u533a\u5757\u94fe\uff09\u3002 \u534f\u4f5c \uff1a\u591a\u4e2a\u8282\u70b9\u5bf9\u987a\u5e8f\u6216\u72b6\u6001\u8fbe\u6210\u4e00\u81f4\uff08\u5982\u65e5\u5fd7\u590d\u5236\uff09\u3002 \u5171\u8bc6\u7b97\u6cd5\u7684\u6838\u5fc3\u95ee\u9898 \u00b6 CAP\u6743\u8861 \uff1a\u4e00\u81f4\u6027\uff08C\uff09\u3001\u53ef\u7528\u6027\uff08A\uff09\u3001\u5206\u533a\u5bb9\u9519\u6027\uff08P\uff09\u4e0d\u53ef\u517c\u5f97\u3002 \u6027\u80fd\u74f6\u9888 \uff1a\u901a\u4fe1\u5f00\u9500\u3001\u5ef6\u8fdf\u3001\u541e\u5410\u91cf\u3002 \u5b89\u5168\u5047\u8bbe \uff1a\u662f\u5426\u5bb9\u5fcd\u62dc\u5360\u5ead\u6545\u969c\uff08\u6076\u610f\u8282\u70b9\uff09\u3002 \u516c\u5e73\u6027 \uff1a\u5982PoW/PoS\u4e2d\u7684\u8d44\u6e90\u5206\u914d\u95ee\u9898\u3002 \u4e0d\u540c\u573a\u666f\u9700\u6743\u8861\u8fd9\u4e9b\u56e0\u7d20\u9009\u62e9\u5408\u9002\u7684\u7b97\u6cd5\u3002\u4f8b\u5982\uff0c\u91d1\u878d\u7cfb\u7edf\u9700\u8981\u5f3a\u4e00\u81f4\u6027\uff08PBFT\uff09\uff0c\u800c\u516c\u94fe\u66f4\u5173\u6ce8\u53bb\u4e2d\u5fc3\u5316\uff08PoW/PoS\uff09\u3002","title":"consensus"},{"location":"bitcoin/consensus/#consensus","text":"\u5171\u8bc6\u7b97\u6cd5\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u786e\u4fdd\u591a\u4e2a\u8282\u70b9\u5c31\u67d0\u4e00\u72b6\u6001\u6216\u51b3\u7b56\u8fbe\u6210\u4e00\u81f4\u7684\u673a\u5236\uff0c\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u6570\u636e\u4e00\u81f4\u6027\u3001\u7cfb\u7edf\u5bb9\u9519\u548c\u534f\u4f5c\u95ee\u9898\u3002\u4ee5\u4e0b\u662f\u4e3b\u8981\u5171\u8bc6\u7b97\u6cd5\u53ca\u5176\u7279\u70b9\u3001\u5e94\u7528\u573a\u666f\u548c\u5c40\u9650\u6027\uff1a","title":"consensus"},{"location":"bitcoin/consensus/#1-paxos","text":"\u76ee\u7684 \uff1a\u89e3\u51b3\u5f02\u6b65\u7f51\u7edc\u4e2d\u8282\u70b9\u6545\u969c\u4e0b\u7684\u5171\u8bc6\u95ee\u9898\uff0c\u4fdd\u8bc1\u4e00\u81f4\u6027\u3002 \u5e94\u7528 \uff1a\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff08\u5982Google Chubby\uff09\u3002 \u539f\u7406 \uff1a \u5206\u4e3a\u63d0\u6848\uff08Propose\uff09\u3001\u627f\u8bfa\uff08Promise\uff09\u3001\u63a5\u53d7\uff08Accept\uff09\u9636\u6bb5\u3002 \u901a\u8fc7\u591a\u6570\u6d3e\uff08Quorum\uff09\u786e\u8ba4\u8fbe\u6210\u4e00\u81f4\u3002 \u95ee\u9898 \uff1a \u96be\u4ee5\u7406\u89e3\u548c\u5b9e\u73b0\u3002 \u6d3b\u9501\u98ce\u9669\uff08\u63d0\u6848\u51b2\u7a81\u65f6\u53ef\u80fd\u65e0\u9650\u91cd\u8bd5\uff09\u3002","title":"1. Paxos"},{"location":"bitcoin/consensus/#2-raft","text":"\u76ee\u7684 \uff1a\u7b80\u5316Paxos\u7684\u7406\u89e3\u4e0e\u5b9e\u73b0\uff0c\u63d0\u4f9b\u5f3a\u4e00\u81f4\u6027\u3002 \u5e94\u7528 \uff1aEtcd\u3001Consul\u3001Kubernetes\u3002 \u539f\u7406 \uff1a \u9886\u5bfc\u8005\uff08Leader\uff09\u9009\u4e3e + \u65e5\u5fd7\u590d\u5236\u3002 \u8282\u70b9\u5206\u4e3aLeader\u3001Follower\u3001Candidate\u4e09\u79cd\u89d2\u8272\u3002 \u95ee\u9898 \uff1a \u4f9d\u8d56\u5f3a\u9886\u5bfc\u8005\uff0c\u6545\u969c\u65f6\u9700\u91cd\u65b0\u9009\u4e3e\u3002 \u7f51\u7edc\u5206\u533a\u53ef\u80fd\u5bfc\u81f4\u8111\u88c2\uff08\u9700\u989d\u5916\u89e3\u51b3\uff09\u3002","title":"2. Raft"},{"location":"bitcoin/consensus/#3-pbft","text":"\u76ee\u7684 \uff1a\u5bb9\u5fcd\u62dc\u5360\u5ead\u6545\u969c\uff08\u8282\u70b9\u6076\u610f\u884c\u4e3a\uff09\u3002 \u5e94\u7528 \uff1a\u8054\u76df\u94fe\uff08\u5982Hyperledger Fabric\uff09\u3002 \u539f\u7406 \uff1a \u4e09\u9636\u6bb5\u534f\u8bae\uff08Pre-prepare\u3001Prepare\u3001Commit\uff09\u3002 \u9700\u8981\u81f3\u5c11 \\(3f+1\\) \u4e2a\u8282\u70b9\u5bb9\u9519 \\(f\\) \u4e2a\u6076\u610f\u8282\u70b9\u3002 \u95ee\u9898 \uff1a \u8282\u70b9\u6570\u591a\u65f6\u901a\u4fe1\u5f00\u9500\u5927\uff08 \\(O(n^2)\\) \uff09\u3002 \u4ec5\u9002\u5408\u5c0f\u89c4\u6a21\u7f51\u7edc\u3002","title":"3. PBFT\uff08\u5b9e\u7528\u62dc\u5360\u5ead\u5bb9\u9519\uff09"},{"location":"bitcoin/consensus/#4-pow","text":"\u76ee\u7684 \uff1a\u5f00\u653e\u7f51\u7edc\u4e2d\u6297Sybil\u653b\u51fb\uff08\u5982\u516c\u94fe\uff09\u3002 \u5e94\u7528 \uff1a\u6bd4\u7279\u5e01\u3001\u4ee5\u592a\u574a\uff081.0\uff09\u3002 \u539f\u7406 \uff1a \u8282\u70b9\u901a\u8fc7\u8ba1\u7b97\u54c8\u5e0c\u7ade\u4e89\u8bb0\u8d26\u6743\u3002 \u6700\u957f\u94fe\u539f\u5219\u89e3\u51b3\u5206\u53c9\u3002 \u95ee\u9898 \uff1a \u80fd\u6e90\u6d88\u8017\u5de8\u5927\u3002 \u786e\u8ba4\u5ef6\u8fdf\u9ad8\uff08\u6bd4\u7279\u5e01\u97006\u4e2a\u533a\u5757\u786e\u8ba4\uff09\u3002","title":"4. PoW\uff08\u5de5\u4f5c\u91cf\u8bc1\u660e\uff09"},{"location":"bitcoin/consensus/#5-pos","text":"\u76ee\u7684 \uff1a\u964d\u4f4e\u80fd\u8017\uff0c\u66ff\u4ee3PoW\u3002 \u5e94\u7528 \uff1a\u4ee5\u592a\u574a2.0\u3001Cardano\u3002 \u539f\u7406 \uff1a \u6839\u636e\u6301\u5e01\u91cf\u548c\u65f6\u95f4\u9009\u62e9\u9a8c\u8bc1\u8005\u3002 \u5206\u53c9\u65f6\u901a\u8fc7\"\u60e9\u7f5a\u673a\u5236\"\u6291\u5236\u6076\u610f\u884c\u4e3a\u3002 \u95ee\u9898 \uff1a \u5bcc\u4eba\u66f4\u5bcc\uff08\u9a6c\u592a\u6548\u5e94\uff09\u3002 \u957f\u7a0b\u653b\u51fb\u98ce\u9669\uff08\u9700\u989d\u5916\u9632\u62a4\uff09\u3002","title":"5. PoS\uff08\u6743\u76ca\u8bc1\u660e\uff09"},{"location":"bitcoin/consensus/#6-dpos","text":"\u76ee\u7684 \uff1a\u8fdb\u4e00\u6b65\u63d0\u5347PoS\u6548\u7387\u3002 \u5e94\u7528 \uff1aEOS\u3001TRON\u3002 \u539f\u7406 \uff1a \u6301\u5e01\u8005\u6295\u7968\u9009\u51fa\u5c11\u6570\u4ee3\u8868\u8282\u70b9\u8d1f\u8d23\u5171\u8bc6\u3002 \u95ee\u9898 \uff1a \u4e2d\u5fc3\u5316\u98ce\u9669\uff08\u6743\u529b\u96c6\u4e2d\u5728\u5c11\u6570\u8282\u70b9\uff09\u3002 \u9009\u6c11\u53c2\u4e0e\u5ea6\u4f4e\u53ef\u80fd\u5bfc\u81f4\u8150\u8d25\u3002","title":"6. DPoS\uff08\u59d4\u6258\u6743\u76ca\u8bc1\u660e\uff09"},{"location":"bitcoin/consensus/#7-gossip","text":"\u76ee\u7684 \uff1a\u6700\u7ec8\u4e00\u81f4\u6027\uff0c\u9ad8\u5bb9\u9519\u3002 \u5e94\u7528 \uff1aCassandra\u3001Redis Cluster\u3002 \u539f\u7406 \uff1a \u8282\u70b9\u968f\u673a\u4f20\u64ad\u4fe1\u606f\uff0c\u6700\u7ec8\u5168\u7f51\u540c\u6b65\u3002 \u95ee\u9898 \uff1a \u6570\u636e\u4e00\u81f4\u6027\u662f\u5f31\u4fdd\u8bc1\uff08\u53ef\u80fd\u4e34\u65f6\u4e0d\u4e00\u81f4\uff09\u3002 \u4f20\u64ad\u5ef6\u8fdf\u4e0d\u786e\u5b9a\u3002","title":"7. Gossip\u534f\u8bae"},{"location":"bitcoin/consensus/#8-zabzookeeper-atomic-broadcast","text":"\u76ee\u7684 \uff1a\u4e3aZooKeeper\u8bbe\u8ba1\u7684\u5d29\u6e83\u5bb9\u9519\u5171\u8bc6\u3002 \u5e94\u7528 \uff1aApache ZooKeeper\u3002 \u539f\u7406 \uff1a \u7c7b\u4f3cRaft\uff0c\u4f46\u4f18\u5316\u4e86\u6062\u590d\u6d41\u7a0b\u3002 \u95ee\u9898 \uff1a \u5bf9\u9886\u5bfc\u8005\u4f9d\u8d56\u5f3a\u3002","title":"8. ZAB\uff08ZooKeeper Atomic Broadcast\uff09"},{"location":"bitcoin/consensus/#9","text":"Tendermint \uff1a\u7ed3\u5408PBFT\u548cPoS\uff0c\u7528\u4e8eCosmos\u3002 HotStuff \uff1aFacebook Libra\uff08Diem\uff09\u4f7f\u7528\uff0c\u7ebf\u6027\u901a\u4fe1\u590d\u6742\u5ea6\u3002","title":"9. \u5176\u4ed6\u53d8\u79cd"},{"location":"bitcoin/consensus/#_1","text":"\u5bb9\u9519 \uff1a\u5141\u8bb8\u90e8\u5206\u8282\u70b9\u6545\u969c\u65f6\u7cfb\u7edf\u4ecd\u53ef\u7528\u3002 \u4e00\u81f4\u6027 \uff1a\u907f\u514d\u6570\u636e\u51b2\u7a81\uff08\u5982\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff09\u3002 \u53bb\u4e2d\u5fc3\u5316 \uff1a\u65e0\u5355\u70b9\u63a7\u5236\uff08\u5982\u533a\u5757\u94fe\uff09\u3002 \u534f\u4f5c \uff1a\u591a\u4e2a\u8282\u70b9\u5bf9\u987a\u5e8f\u6216\u72b6\u6001\u8fbe\u6210\u4e00\u81f4\uff08\u5982\u65e5\u5fd7\u590d\u5236\uff09\u3002","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u5171\u8bc6\u7b97\u6cd5\uff1f"},{"location":"bitcoin/consensus/#_2","text":"CAP\u6743\u8861 \uff1a\u4e00\u81f4\u6027\uff08C\uff09\u3001\u53ef\u7528\u6027\uff08A\uff09\u3001\u5206\u533a\u5bb9\u9519\u6027\uff08P\uff09\u4e0d\u53ef\u517c\u5f97\u3002 \u6027\u80fd\u74f6\u9888 \uff1a\u901a\u4fe1\u5f00\u9500\u3001\u5ef6\u8fdf\u3001\u541e\u5410\u91cf\u3002 \u5b89\u5168\u5047\u8bbe \uff1a\u662f\u5426\u5bb9\u5fcd\u62dc\u5360\u5ead\u6545\u969c\uff08\u6076\u610f\u8282\u70b9\uff09\u3002 \u516c\u5e73\u6027 \uff1a\u5982PoW/PoS\u4e2d\u7684\u8d44\u6e90\u5206\u914d\u95ee\u9898\u3002 \u4e0d\u540c\u573a\u666f\u9700\u6743\u8861\u8fd9\u4e9b\u56e0\u7d20\u9009\u62e9\u5408\u9002\u7684\u7b97\u6cd5\u3002\u4f8b\u5982\uff0c\u91d1\u878d\u7cfb\u7edf\u9700\u8981\u5f3a\u4e00\u81f4\u6027\uff08PBFT\uff09\uff0c\u800c\u516c\u94fe\u66f4\u5173\u6ce8\u53bb\u4e2d\u5fc3\u5316\uff08PoW/PoS\uff09\u3002","title":"\u5171\u8bc6\u7b97\u6cd5\u7684\u6838\u5fc3\u95ee\u9898"},{"location":"bitcoin/fiamma/","text":"fiamma \u00b6 https://docs.fiammalabs.io/ basic \u00b6 fiamma bridge : trustless BitVM Bitcoin bridges fiamma layer : a BitVM-Powered ZKP (Zero-Knowledge Proofs) Verification Layer EVM\uff08\u4ee5\u592a\u574a\u865a\u62df\u673a\uff09\u548cSVM\uff08Solana\u865a\u62df\u673a\uff09\u662f\u4e24\u79cd\u4e0d\u540c\u533a\u5757\u94fe\u5e73\u53f0\u4e0a\u7684\u865a\u62df\u673a\uff0c\u5b83\u4eec\u5404\u81ea\u8d1f\u8d23\u6267\u884c\u667a\u80fd\u5408\u7ea6\u548c\u5904\u7406\u4ea4\u6613\u3002\u4ee5\u4e0b\u662f\u5bf9\u5b83\u4eec\u7684\u7b80\u8981\u4ecb\u7ecd\uff1a EVM\uff08\u4ee5\u592a\u574a\u865a\u62df\u673a\uff09 \u00b6 \u5b9a\u4e49 \uff1aEVM\u662f\u4ee5\u592a\u574a\u533a\u5757\u94fe\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u6267\u884c\u667a\u80fd\u5408\u7ea6\u7684\u5b57\u8282\u7801\u3002 \u529f\u80fd \uff1a\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u4ee5\u592a\u574a\u7f51\u7edc\u4e0a\u7f16\u5199\u548c\u90e8\u7f72\u53bb\u4e2d\u5fc3\u5316\u5e94\u7528\uff08DApps\uff09\u3002EVM\u63d0\u4f9b\u4e86\u4e00\u79cd\u5b89\u5168\u7684\u73af\u5883\uff0c\u53ef\u4ee5\u5728\u5176\u4e2d\u6267\u884c\u4ee3\u7801\uff0c\u540c\u65f6\u786e\u4fdd\u7f51\u7edc\u7684\u4e00\u81f4\u6027\u548c\u5b89\u5168\u6027\u3002 \u8bed\u8a00 \uff1a\u667a\u80fd\u5408\u7ea6\u901a\u5e38\u4f7f\u7528Solidity\u8bed\u8a00\u7f16\u5199\uff0c\u7f16\u8bd1\u540e\u751f\u6210EVM\u5b57\u8282\u7801\u3002 \u517c\u5bb9\u6027 \uff1a\u8bb8\u591a\u5176\u4ed6\u533a\u5757\u94fe\uff08\u5982Binance Smart Chain\u3001Polygon\u7b49\uff09\u4e5f\u5b9e\u73b0\u4e86EVM\u517c\u5bb9\u6027\uff0c\u4f7f\u5f97\u4ee5\u592a\u574a\u4e0a\u7684DApp\u53ef\u4ee5\u5728\u8fd9\u4e9b\u94fe\u4e0a\u8fd0\u884c\u3002 SVM\uff08Solana\u865a\u62df\u673a\uff09 \u00b6 \u5b9a\u4e49 \uff1aSVM\u662fSolana\u533a\u5757\u94fe\u7684\u865a\u62df\u673a\uff0c\u8d1f\u8d23\u6267\u884c\u5728Solana\u7f51\u7edc\u4e0a\u90e8\u7f72\u7684\u667a\u80fd\u5408\u7ea6\u3002 \u529f\u80fd \uff1aSVM\u8bbe\u8ba1\u7528\u4e8e\u9ad8\u6027\u80fd\u548c\u9ad8\u541e\u5410\u91cf\uff0c\u80fd\u591f\u5904\u7406\u5927\u91cf\u4ea4\u6613\uff0c\u652f\u6301\u5feb\u901f\u7684\u667a\u80fd\u5408\u7ea6\u6267\u884c\u3002 \u8bed\u8a00 \uff1aSolana\u7684\u667a\u80fd\u5408\u7ea6\u901a\u5e38\u4f7f\u7528Rust\u6216C\u8bed\u8a00\u7f16\u5199\uff0cSVM\u80fd\u591f\u9ad8\u6548\u5730\u6267\u884c\u8fd9\u4e9b\u8bed\u8a00\u7f16\u5199\u7684\u4ee3\u7801\u3002 \u7279\u70b9 \uff1aSVM\u91c7\u7528\u4e86\u4e00\u79cd\u72ec\u7279\u7684\u67b6\u6784\uff0c\u5229\u7528\u5e76\u884c\u5904\u7406\u548c\u4f18\u5316\u7684\u5185\u5b58\u7ba1\u7406\u6765\u63d0\u9ad8\u6027\u80fd\uff0c\u76f8\u6bd4\u4e8eEVM\uff0cSVM\u5728\u5904\u7406\u901f\u5ea6\u548c\u53ef\u6269\u5c55\u6027\u65b9\u9762\u6709\u663e\u8457\u4f18\u52bf\u3002 \u603b\u7ed3 \u00b6 EVM\u548cSVM\u90fd\u662f\u533a\u5757\u94fe\u751f\u6001\u7cfb\u7edf\u4e2d\u4e0d\u53ef\u6216\u7f3a\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u4f46\u5b83\u4eec\u5728\u8bbe\u8ba1\u76ee\u6807\u3001\u6027\u80fd\u548c\u517c\u5bb9\u6027\u65b9\u9762\u6709\u6240\u4e0d\u540c\u3002EVM\u6ce8\u91cd\u5b89\u5168\u548c\u5e7f\u6cdb\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u800cSVM\u5219\u5f3a\u8c03\u9ad8\u6027\u80fd\u548c\u9ad8\u541e\u5410\u91cf\u3002 \u667a\u80fd\u5408\u7ea6\u662f\u4e00\u79cd\u81ea\u52a8\u6267\u884c\u3001\u4e0d\u53ef\u7be1\u6539\u7684\u5408\u7ea6\uff0c\u5b58\u50a8\u5728\u533a\u5757\u94fe\u4e0a\uff0c\u80fd\u591f\u5728\u7279\u5b9a\u6761\u4ef6\u6ee1\u8db3\u65f6\u81ea\u52a8\u6267\u884c\u9884\u8bbe\u7684\u6761\u6b3e\u548c\u6761\u4ef6\u3002\u667a\u80fd\u5408\u7ea6\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u7b80\u5316\u548c\u81ea\u52a8\u5316\u5408\u7ea6\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u964d\u4f4e\u4fe1\u4efb\u6210\u672c\uff0c\u63d0\u9ad8\u6548\u7387\u3002\u4ee5\u4e0b\u662f\u667a\u80fd\u5408\u7ea6\u7684\u51e0\u4e2a\u4e3b\u8981\u4f5c\u7528\u53ca\u5b9e\u9645\u4f8b\u5b50\uff1a \u667a\u80fd\u5408\u7ea6\u7684\u4f5c\u7528 \u00b6 \u81ea\u52a8\u5316\u6267\u884c \uff1a \u667a\u80fd\u5408\u7ea6\u53ef\u4ee5\u5728\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u65f6\u81ea\u52a8\u6267\u884c\uff0c\u65e0\u9700\u4e2d\u4ecb\u53c2\u4e0e\u3002\u8fd9\u964d\u4f4e\u4e86\u4ea4\u6613\u6210\u672c\u548c\u65f6\u95f4\u5ef6\u8fdf\u3002 \u900f\u660e\u6027\u548c\u4e0d\u53ef\u7be1\u6539\u6027 \uff1a \u667a\u80fd\u5408\u7ea6\u7684\u4ee3\u7801\u548c\u6267\u884c\u7ed3\u679c\u5b58\u50a8\u5728\u533a\u5757\u94fe\u4e0a\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u67e5\u770b\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u900f\u660e\u5ea6\u3002\u540c\u65f6\uff0c\u4e00\u65e6\u90e8\u7f72\uff0c\u5408\u7ea6\u7684\u6761\u6b3e\u65e0\u6cd5\u88ab\u66f4\u6539\uff0c\u786e\u4fdd\u4e86\u6570\u636e\u7684\u5b89\u5168\u6027\u3002 \u4fe1\u4efb\u673a\u5236 \uff1a \u7531\u4e8e\u667a\u80fd\u5408\u7ea6\u5728\u533a\u5757\u94fe\u4e0a\u8fd0\u884c\uff0c\u53c2\u4e0e\u5404\u65b9\u65e0\u9700\u76f8\u4e92\u4fe1\u4efb\uff0c\u53ea\u9700\u4fe1\u4efb\u4ee3\u7801\u7684\u6267\u884c\u3002\u8fd9\u53ef\u4ee5\u51cf\u5c11\u6b3a\u8bc8\u548c\u4e89\u8bae\u7684\u53d1\u751f\u3002 \u591a\u65b9\u53c2\u4e0e \uff1a \u667a\u80fd\u5408\u7ea6\u80fd\u591f\u5904\u7406\u591a\u65b9\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u4f7f\u5f97\u590d\u6742\u7684\u4ea4\u6613\u548c\u534f\u8bae\u53d8\u5f97\u7b80\u5355\u3002 \u5b9e\u9645\u4f8b\u5b50 \u00b6 \u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\uff08DeFi\uff09 \uff1a \u4f8b\u5b50 \uff1a Uniswap \u662f\u4e00\u4e2a\u53bb\u4e2d\u5fc3\u5316\u4ea4\u6613\u6240\uff08DEX\uff09\uff0c\u5176\u6838\u5fc3\u662f\u667a\u80fd\u5408\u7ea6\u3002\u7528\u6237\u53ef\u4ee5\u5728Uniswap\u4e0a\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u8fdb\u884c\u4ee3\u5e01\u4ea4\u6362\uff0c\u800c\u65e0\u9700\u4f20\u7edf\u7684\u4e2d\u4ecb\u3002\u7528\u6237\u5c06\u4ed6\u4eec\u7684\u4ee3\u5e01\u5b58\u5165\u6d41\u52a8\u6027\u6c60\uff0c\u667a\u80fd\u5408\u7ea6\u81ea\u52a8\u8ba1\u7b97\u4ea4\u6613\u4ef7\u683c\u5e76\u6267\u884c\u4ea4\u6613\u3002 \u4f9b\u5e94\u94fe\u7ba1\u7406 \uff1a \u4f8b\u5b50 \uff1a VeChain \u662f\u4e00\u4e2a\u4e13\u6ce8\u4e8e\u4f9b\u5e94\u94fe\u7ba1\u7406\u7684\u533a\u5757\u94fe\u5e73\u53f0\u3002\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\uff0cVeChain\u53ef\u4ee5\u8ddf\u8e2a\u4ea7\u54c1\u4ece\u751f\u4ea7\u5230\u4ea4\u4ed8\u7684\u6bcf\u4e00\u4e2a\u73af\u8282\u3002\u6bd4\u5982\uff0c\u4e00\u4e2a\u667a\u80fd\u5408\u7ea6\u53ef\u4ee5\u5728\u4ea7\u54c1\u5230\u8fbe\u67d0\u4e2a\u7279\u5b9a\u5730\u70b9\u65f6\u81ea\u52a8\u91ca\u653e\u4ed8\u6b3e\uff0c\u786e\u4fdd\u4f9b\u5e94\u94fe\u5404\u65b9\u7684\u4fe1\u4efb\u548c\u900f\u660e\u3002 \u4fdd\u9669\u7406\u8d54 \uff1a \u4f8b\u5b50 \uff1a Etherisc \u662f\u4e00\u4e2a\u57fa\u4e8e\u4ee5\u592a\u574a\u7684\u4fdd\u9669\u5e73\u53f0\u3002\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\uff0cEtherisc\u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u4fdd\u9669\u7d22\u8d54\u3002\u4f8b\u5982\uff0c\u519c\u6c11\u8d2d\u4e70\u4e86\u4e00\u4efd\u5929\u6c14\u4fdd\u9669\uff0c\u667a\u80fd\u5408\u7ea6\u53ef\u4ee5\u81ea\u52a8\u76d1\u6d4b\u5929\u6c14\u6570\u636e\uff0c\u5982\u679c\u53d1\u751f\u4e86\u9884\u5b9a\u7684\u5929\u6c14\u6761\u4ef6\uff08\u5982\u5e72\u65f1\u6216\u6d2a\u6c34\uff09\uff0c\u667a\u80fd\u5408\u7ea6\u4f1a\u81ea\u52a8\u89e6\u53d1\u8d54\u4ed8\uff0c\u65e0\u9700\u4eba\u5de5\u5e72\u9884\u3002 NFT\u5e02\u573a \uff1a \u4f8b\u5b50 \uff1a OpenSea \u662f\u4e00\u4e2aNFT\u4ea4\u6613\u5e73\u53f0\uff0c\u6240\u6709\u7684NFT\u4ea4\u6613\u90fd\u662f\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u8fdb\u884c\u7684\u3002\u5f53\u7528\u6237\u8d2d\u4e70NFT\u65f6\uff0c\u667a\u80fd\u5408\u7ea6\u4f1a\u81ea\u52a8\u5904\u7406\u6240\u6709\u6743\u8f6c\u79fb\u548c\u652f\u4ed8\uff0c\u786e\u4fdd\u4ea4\u6613\u7684\u5b89\u5168\u548c\u900f\u660e\u3002 \u603b\u7ed3 \u00b6 \u667a\u80fd\u5408\u7ea6\u901a\u8fc7\u81ea\u52a8\u5316\u3001\u900f\u660e\u548c\u5b89\u5168\u7684\u65b9\u5f0f\uff0c\u6539\u53d8\u4e86\u4f20\u7edf\u5408\u7ea6\u7684\u6267\u884c\u65b9\u5f0f\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u91d1\u878d\u3001\u4f9b\u5e94\u94fe\u3001\u4fdd\u9669\u3001\u827a\u672f\u7b49\u591a\u4e2a\u9886\u57df\uff0c\u63a8\u52a8\u4e86\u53bb\u4e2d\u5fc3\u5316\u5e94\u7528\u7684\u53d1\u5c55\u3002 \u4ece\u60a8\u63d0\u4f9b\u7684\u63cf\u8ff0\u6765\u770b\uff0c\u8be5\u9879\u76ee\u7684\u4e3b\u8981\u76ee\u6807\u662f\u5f00\u53d1\u4e00\u7cfb\u5217\u57fa\u7840\u8bbe\u65bd\uff0c\u4ee5\u589e\u5f3a\u6bd4\u7279\u5e01\uff08BTC\uff09\u751f\u6001\u7cfb\u7edf\u7684\u529f\u80fd\u548c\u53ef\u7528\u6027\u3002\u4ee5\u4e0b\u662f\u5bf9\u5404\u4e2a\u7ec4\u4ef6\u7684\u5206\u6790\uff0c\u4ee5\u53ca\u5b83\u4eec\u6240\u4ee3\u8868\u7684\u76ee\u6807\u548c\u529f\u80fd\uff1a \u4e3b\u8981\u7ec4\u4ef6 \u00b6 Fiamma Bridge \uff1a \u529f\u80fd \uff1a\u8fd9\u662f\u4e00\u4e2a\u201c\u5b9e\u7528\u7684\u65e0\u4fe1\u4efb\u201d\u6bd4\u7279\u5e01\u6865\uff0c\u65e8\u5728\u5b9e\u73b0\u6bd4\u7279\u5e01\u4e0e\u5176\u4ed6\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002\u8fd9\u6837\u7684\u6865\u63a5\u6280\u672f\u53ef\u4ee5\u8ba9\u6bd4\u7279\u5e01\u7528\u6237\u5728\u4e0d\u540c\u7684\u533a\u5757\u94fe\u751f\u6001\u7cfb\u7edf\u4e4b\u95f4\u8fdb\u884c\u8d44\u4ea7\u8f6c\u79fb\uff0c\u800c\u65e0\u9700\u4f9d\u8d56\u4e2d\u5fc3\u5316\u7684\u4e2d\u4ecb\u6216\u4fe1\u4efb\u7b2c\u4e09\u65b9\u3002 \u76ee\u6807 \uff1a\u63d0\u9ad8\u6bd4\u7279\u5e01\u7684\u6d41\u52a8\u6027\uff0c\u4f7f\u5176\u80fd\u591f\u4e0e\u5176\u4ed6\u533a\u5757\u94fe\u751f\u6001\u7cfb\u7edf\uff08\u5982\u4ee5\u592a\u574a\u6216Solana\uff09\u4e92\u52a8\uff0c\u4ece\u800c\u62d3\u5c55\u6bd4\u7279\u5e01\u7684\u5e94\u7528\u573a\u666f\u3002 Fiamma Layer \uff1a \u529f\u80fd \uff1a\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e\u6bd4\u7279VM\uff08BitVM\uff09\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\uff08ZKP\uff09\u9a8c\u8bc1\u5c42\u3002\u96f6\u77e5\u8bc6\u8bc1\u660e\u662f\u4e00\u79cd\u52a0\u5bc6\u6280\u672f\uff0c\u5141\u8bb8\u4e00\u65b9\u5411\u53e6\u4e00\u65b9\u8bc1\u660e\u67d0\u4e2a\u58f0\u660e\u662f\u6b63\u786e\u7684\uff0c\u800c\u65e0\u9700\u63d0\u4f9b\u5177\u4f53\u7684\u8bc1\u636e\u3002 \u76ee\u6807 \uff1a\u901a\u8fc7\u63d0\u4f9b\u9690\u79c1\u4fdd\u62a4\u548c\u9a8c\u8bc1\u80fd\u529b\uff0c\u589e\u5f3a\u6bd4\u7279\u5e01\u4ea4\u6613\u7684\u5b89\u5168\u6027\u548c\u9690\u79c1\u6027\uff0c\u4f7f\u5f00\u53d1\u8005\u80fd\u591f\u6784\u5efa\u66f4\u52a0\u590d\u6742\u548c\u5b89\u5168\u7684\u5e94\u7528\u3002 \u5176\u4ed6\u57fa\u7840\u5de5\u5177 \uff1a \u529f\u80fd \uff1a\u8fd9\u4e9b\u5de5\u5177\u65e8\u5728\u652f\u6301\u6bd4\u7279\u5e01\u751f\u6001\u7cfb\u7edf\u7684\u591a\u6837\u6027\u548c\u521b\u65b0\uff0c\u53ef\u80fd\u5305\u62ec\u5f00\u53d1\u8005\u5de5\u5177\u3001API\u3001SDK\u7b49\u3002 \u76ee\u6807 \uff1a\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u5fc5\u8981\u7684\u8d44\u6e90\u548c\u652f\u6301\uff0c\u4ee5\u4fbf\u5728\u6bd4\u7279\u5e01\u4e0a\u6784\u5efa\u65b0\u5e94\u7528\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4f9d\u8d56\u4e8e\u4ee5\u592a\u574a\u865a\u62df\u673a\uff08EVM\uff09\u6216Solana\u865a\u62df\u673a\uff08SVM\uff09\u3002 \u76ee\u6807\u548c\u613f\u666f \u00b6 \u65e0\u4fe1\u4efb\u6536\u76ca \uff1a\u901a\u8fc7\u8fd9\u4e9b\u57fa\u7840\u8bbe\u65bd\uff0cBTC\u6301\u6709\u8005\u80fd\u591f\u83b7\u5f97\u65e0\u4fe1\u4efb\u7684\u6536\u76ca\uff0c\u610f\u5473\u7740\u4ed6\u4eec\u53ef\u4ee5\u5728\u4e0d\u4f9d\u8d56\u4e2d\u5fc3\u5316\u91d1\u878d\uff08CeFi\uff09\u673a\u6784\u7684\u60c5\u51b5\u4e0b\u8d5a\u53d6\u6536\u76ca\u3002 \u65e0\u9650\u751f\u6001\u7cfb\u7edf \uff1a\u9879\u76ee\u65e8\u5728\u4e3a\u6bd4\u7279\u5e01\u521b\u9020\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u4f7f\u5176\u80fd\u591f\u652f\u6301\u5404\u79cd\u65b0\u5e94\u7528\u548c\u670d\u52a1\uff0c\u8d85\u8d8a\u4f20\u7edf\u7684\u6bd4\u7279\u5e01\u4f7f\u7528\u573a\u666f\u3002 \u5f00\u53d1\u8005\u521b\u65b0 \uff1a\u901a\u8fc7\u63d0\u4f9b\u66f4\u5f3a\u5927\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u9f13\u52b1\u5f00\u53d1\u8005\u5728\u6bd4\u7279\u5e01\u4e0a\u81ea\u7531\u521b\u65b0\uff0c\u63a8\u52a8\u6bd4\u7279\u5e01\u4f5c\u4e3a\u57fa\u7840\u8bbe\u65bd\u7684\u6f5c\u529b\u3002 \u603b\u7ed3 \u00b6 \u8be5\u9879\u76ee\u7684\u6838\u5fc3\u76ee\u6807\u662f\u901a\u8fc7\u5f00\u53d1\u5148\u8fdb\u7684\u57fa\u7840\u8bbe\u65bd\uff08\u5982\u6865\u63a5\u6280\u672f\u548c\u96f6\u77e5\u8bc6\u8bc1\u660e\u5c42\uff09\uff0c\u63d0\u5347\u6bd4\u7279\u5e01\u7684\u529f\u80fd\u6027\u548c\u53ef\u7528\u6027\uff0c\u4f7f\u5176\u80fd\u591f\u5728\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\uff08DeFi\uff09\u548c\u5176\u4ed6\u5e94\u7528\u9886\u57df\u4e2d\u53d1\u6325\u66f4\u5927\u7684\u4f5c\u7528\u3002\u5b83\u65e8\u5728\u4e3a\u6bd4\u7279\u5e01\u7528\u6237\u548c\u5f00\u53d1\u8005\u521b\u9020\u66f4\u591a\u7684\u673a\u4f1a\uff0c\u63a8\u52a8\u6bd4\u7279\u5e01\u751f\u6001\u7cfb\u7edf\u7684\u591a\u6837\u6027\u548c\u521b\u65b0\u3002 \u4ee5\u4e0b\u662f\u5bf9\u4ee3\u5e01\u3001\u591a\u91cd\u7b7e\u540d\u548c\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u8be6\u7ec6\u89e3\u91ca\uff0c\u5305\u62ec\u5b83\u4eec\u7684\u5b9a\u4e49\u3001\u5de5\u4f5c\u539f\u7406\u4ee5\u53ca\u5728\u533a\u5757\u94fe\u6280\u672f\u4e2d\u7684\u5e94\u7528\u3002 1. \u4ee3\u5e01 \u00b6 \u5b9a\u4e49 \u00b6 \u4ee3\u5e01\u662f\u57fa\u4e8e\u533a\u5757\u94fe\u6280\u672f\u521b\u5efa\u7684\u6570\u5b57\u8d44\u4ea7\uff0c\u901a\u5e38\u4ee3\u8868\u67d0\u79cd\u4ef7\u503c\u6216\u6743\u5229\u3002\u4ee3\u5e01\u53ef\u4ee5\u5728\u533a\u5757\u94fe\u7f51\u7edc\u4e0a\u8fdb\u884c\u4ea4\u6613\u3001\u5b58\u50a8\u548c\u4f7f\u7528\u3002\u4ee3\u5e01\u53ef\u4ee5\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a \u52a0\u5bc6\u8d27\u5e01 \uff1a\u5982\u6bd4\u7279\u5e01\uff08BTC\uff09\u548c\u4ee5\u592a\u574a\uff08ETH\uff09\uff0c\u5b83\u4eec\u662f\u72ec\u7acb\u7684\u533a\u5757\u94fe\u7f51\u7edc\u7684\u539f\u751f\u8d44\u4ea7\u3002 \u4ee3\u5e01\u5316\u8d44\u4ea7 \uff1a\u5982 ERC-20 \u4ee3\u5e01\uff08\u5728\u4ee5\u592a\u574a\u7f51\u7edc\u4e0a\u521b\u5efa\u7684\u4ee3\u5e01\uff09\uff0c\u5b83\u4eec\u901a\u5e38\u7528\u4e8e\u7279\u5b9a\u7684\u5e94\u7528\u573a\u666f\uff0c\u5982\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\uff08DeFi\uff09\u3001NFT\uff08\u975e\u540c\u8d28\u5316\u4ee3\u5e01\uff09\u7b49\u3002 \u5de5\u4f5c\u539f\u7406 \u00b6 \u4ee3\u5e01\u901a\u5e38\u662f\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u521b\u5efa\u7684\u3002\u667a\u80fd\u5408\u7ea6\u662f\u4e00\u79cd\u81ea\u52a8\u6267\u884c\u7684\u5408\u540c\uff0c\u4ee3\u7801\u8fd0\u884c\u5728\u533a\u5757\u94fe\u4e0a\uff0c\u786e\u4fdd\u4ee3\u5e01\u7684\u521b\u5efa\u3001\u8f6c\u79fb\u548c\u7ba1\u7406\u9075\u5faa\u9884\u8bbe\u7684\u89c4\u5219\u3002\u4f8b\u5982\uff0c\u5728\u4ee5\u592a\u574a\u4e0a\u521b\u5efa\u7684 ERC-20 \u4ee3\u5e01\u9075\u5faa\u7279\u5b9a\u7684\u6807\u51c6\uff0c\u4f7f\u5176\u80fd\u591f\u4e0e\u5176\u4ed6\u667a\u80fd\u5408\u7ea6\u548c\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u4ea4\u4e92\u3002 2. \u591a\u91cd\u7b7e\u540d \u00b6 \u5b9a\u4e49 \u00b6 \u591a\u91cd\u7b7e\u540d\uff08Multisig\uff09\u662f\u4e00\u79cd\u5b89\u5168\u673a\u5236\uff0c\u8981\u6c42\u591a\u4e2a\u5bc6\u94a5\u6301\u6709\u8005\u5171\u540c\u7b7e\u7f72\u4e00\u7b14\u4ea4\u6613\u624d\u80fd\u6267\u884c\u3002\u8fd9\u79cd\u673a\u5236\u5728\u533a\u5757\u94fe\u548c\u52a0\u5bc6\u8d27\u5e01\u7684\u73af\u5883\u4e2d\u7528\u4e8e\u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u9632\u6b62\u5355\u70b9\u6545\u969c\u6216\u5355\u4e00\u5bc6\u94a5\u88ab\u76d7\u7528\u3002 \u5de5\u4f5c\u539f\u7406 \u00b6 \u8bbe\u7f6e \uff1a\u5728\u521b\u5efa\u591a\u91cd\u7b7e\u540d\u5730\u5740\u65f6\uff0c\u8bbe\u5b9a\u9700\u8981\u591a\u5c11\u4e2a\u7b7e\u540d\uff08\u4f8b\u5982\uff0c2-of-3\uff09\uff0c\u8fd9\u610f\u5473\u7740\u9700\u8981\u4e09\u4e2a\u5bc6\u94a5\u4e2d\u7684\u4e24\u4e2a\u6765\u7b7e\u7f72\u4ea4\u6613\u3002 \u4ea4\u6613\u6267\u884c \uff1a\u5f53\u7528\u6237\u5e0c\u671b\u53d1\u9001\u8d44\u91d1\u65f6\uff0c\u5fc5\u987b\u6536\u96c6\u6240\u9700\u6570\u91cf\u7684\u7b7e\u540d\u3002\u53ea\u6709\u5728\u6ee1\u8db3\u7b7e\u540d\u6570\u91cf\u7684\u60c5\u51b5\u4e0b\uff0c\u4ea4\u6613\u624d\u80fd\u88ab\u5e7f\u64ad\u5230\u7f51\u7edc\u5e76\u6267\u884c\u3002 \u5e94\u7528\u573a\u666f \u00b6 \u591a\u91cd\u7b7e\u540d\u5e38\u7528\u4e8e\uff1a - \u4f01\u4e1a\u94b1\u5305 \uff1a\u786e\u4fdd\u591a\u4e2a\u7ba1\u7406\u8005\u5171\u540c\u6388\u6743\u4ea4\u6613\uff0c\u964d\u4f4e\u98ce\u9669\u3002 - \u5b89\u5168\u5b58\u50a8 \uff1a\u4e2a\u4eba\u7528\u6237\u53ef\u4ee5\u5c06\u8d44\u91d1\u5b58\u50a8\u5728\u591a\u91cd\u7b7e\u540d\u94b1\u5305\u4e2d\uff0c\u9632\u6b62\u5355\u4e2a\u5bc6\u94a5\u4e22\u5931\u6216\u88ab\u76d7\u3002 3. \u96f6\u77e5\u8bc6\u8bc1\u660e \u00b6 \u5b9a\u4e49 \u00b6 \u96f6\u77e5\u8bc6\u8bc1\u660e\uff08Zero-Knowledge Proof, ZKP\uff09\u662f\u4e00\u79cd\u52a0\u5bc6\u6280\u672f\uff0c\u5141\u8bb8\u4e00\u65b9\uff08\u8bc1\u660e\u8005\uff09\u5411\u53e6\u4e00\u65b9\uff08\u9a8c\u8bc1\u8005\uff09\u8bc1\u660e\u67d0\u4e2a\u58f0\u660e\u662f\u771f\u5b9e\u7684\uff0c\u800c\u65e0\u9700\u900f\u9732\u4e0e\u8be5\u58f0\u660e\u76f8\u5173\u7684\u4efb\u4f55\u4fe1\u606f\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u9a8c\u8bc1\u8005\u53ef\u4ee5\u786e\u4fe1\u58f0\u660e\u7684\u771f\u5b9e\u6027\uff0c\u4f46\u4e0d\u83b7\u53d6\u4efb\u4f55\u989d\u5916\u4fe1\u606f\u3002 \u53ef\u884c\u6027 \u00b6 \u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u53ef\u884c\u6027\u57fa\u4e8e\u590d\u6742\u7684\u6570\u5b66\u539f\u7406\uff0c\u786e\u4fdd\u5728\u4e0d\u6cc4\u9732\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u9a8c\u8bc1\u3002\u5e38\u89c1\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u5305\u62ec zk-SNARKs \u548c zk-STARKs\u3002 \u5de5\u4f5c\u539f\u7406 \u00b6 \u751f\u6210\u5bc6\u94a5 \uff1a\u8bc1\u660e\u8005\u751f\u6210\u4e00\u5bf9\u5bc6\u94a5\uff0c\u5305\u62ec\u4e00\u4e2a\u516c\u94a5\u548c\u4e00\u4e2a\u79c1\u94a5\u3002 \u751f\u6210\u8bc1\u660e \uff1a\u8bc1\u660e\u8005\u4f7f\u7528\u79c1\u94a5\u751f\u6210\u4e00\u4e2a\u8bc1\u660e\uff0c\u8868\u660e\u4ed6\u4eec\u77e5\u9053\u67d0\u4e2a\u79d8\u5bc6\uff08\u4f8b\u5982\uff0c\u4e00\u4e2a\u5bc6\u7801\u6216\u52a0\u5bc6\u6570\u636e\uff09\uff0c\u800c\u4e0d\u76f4\u63a5\u900f\u9732\u8be5\u79d8\u5bc6\u3002 \u9a8c\u8bc1 \uff1a\u9a8c\u8bc1\u8005\u4f7f\u7528\u516c\u94a5\u548c\u8bc1\u660e\u6765\u9a8c\u8bc1\u58f0\u660e\u7684\u771f\u5b9e\u6027\u3002\u5982\u679c\u8bc1\u660e\u6709\u6548\uff0c\u9a8c\u8bc1\u8005\u5c31\u53ef\u4ee5\u76f8\u4fe1\u58f0\u660e\u662f\u771f\u5b9e\u7684\uff0c\u4f46\u65e0\u6cd5\u83b7\u53d6\u4efb\u4f55\u5173\u4e8e\u79d8\u5bc6\u7684\u4fe1\u606f\u3002 \u5e94\u7528\u573a\u666f \u00b6 \u96f6\u77e5\u8bc6\u8bc1\u660e\u5728\u533a\u5757\u94fe\u4e2d\u7684\u5e94\u7528\u5305\u62ec\uff1a - \u9690\u79c1\u4fdd\u62a4 \uff1a\u5728\u4ea4\u6613\u4e2d\u9690\u85cf\u53d1\u9001\u8005\u3001\u63a5\u6536\u8005\u548c\u4ea4\u6613\u91d1\u989d\u3002\u4f8b\u5982\uff0cZcash \u4f7f\u7528\u96f6\u77e5\u8bc6\u8bc1\u660e\u6765\u5b9e\u73b0\u9690\u79c1\u4ea4\u6613\u3002 - \u8eab\u4efd\u9a8c\u8bc1 \uff1a\u5141\u8bb8\u7528\u6237\u8bc1\u660e\u5176\u8eab\u4efd\u6216\u67d0\u4e9b\u8d44\u683c\uff0c\u800c\u65e0\u9700\u900f\u9732\u4e2a\u4eba\u4fe1\u606f\u3002 \u603b\u7ed3 \u00b6 \u4ee3\u5e01 \u662f\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u6570\u5b57\u8d44\u4ea7\uff0c\u53ef\u4ee5\u4ee3\u8868\u4ef7\u503c\u6216\u6743\u5229\uff0c\u5e76\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u8fdb\u884c\u7ba1\u7406\u3002 \u591a\u91cd\u7b7e\u540d \u63d0\u9ad8\u4e86\u4ea4\u6613\u7684\u5b89\u5168\u6027\uff0c\u8981\u6c42\u591a\u4e2a\u5bc6\u94a5\u6301\u6709\u8005\u5171\u540c\u7b7e\u7f72\u4ea4\u6613\uff0c\u9632\u6b62\u5355\u70b9\u6545\u969c\u3002 \u96f6\u77e5\u8bc6\u8bc1\u660e \u5141\u8bb8\u5728\u4e0d\u6cc4\u9732\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\u9a8c\u8bc1\u58f0\u660e\u7684\u771f\u5b9e\u6027\uff0c\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u9690\u79c1\u4fdd\u62a4\u5de5\u5177\u3002 \u8fd9\u4e9b\u6280\u672f\u5728\u533a\u5757\u94fe\u548c\u52a0\u5bc6\u8d27\u5e01\u9886\u57df\u4e2d\u53d1\u6325\u7740\u91cd\u8981\u4f5c\u7528\uff0c\u63a8\u52a8\u4e86\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\u548c\u9690\u79c1\u4fdd\u62a4\u7684\u521b\u65b0\u3002 \u6570\u5b66\u5316\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e \u5728\u5b9e\u9645\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u4e2d\uff0c\u901a\u5e38\u4f7f\u7528\u590d\u6742\u7684\u6570\u5b66\u7b97\u6cd5\u6765\u5b9e\u73b0\u8fd9\u4e00\u8fc7\u7a0b\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u7684\u7279\u70b9\uff1a zk-SNARKs\uff08Zero-Knowledge Succinct Non-Interactive Argument of Knowledge\uff09\uff1a\u4e00\u79cd\u9ad8\u6548\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\uff0c\u5141\u8bb8\u8bc1\u660e\u8005\u751f\u6210\u4e00\u4e2a\u77ed\u5c0f\u7684\u8bc1\u660e\uff0c\u9a8c\u8bc1\u8005\u53ef\u4ee5\u5feb\u901f\u9a8c\u8bc1\u3002\u5b83\u4e0d\u9700\u8981\u4ea4\u4e92\u8fc7\u7a0b\u3002 zk-STARKs\uff08Zero-Knowledge Scalable Transparent Argument of Knowledge\uff09\uff1a\u4e00\u79cd\u4e0d\u4f9d\u8d56\u4e8e\u53ef\u4fe1\u8bbe\u7f6e\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\uff0c\u5177\u6709\u66f4\u9ad8\u7684\u53ef\u6269\u5c55\u6027\u548c\u900f\u660e\u6027\u3002","title":"fiamma"},{"location":"bitcoin/fiamma/#fiamma","text":"https://docs.fiammalabs.io/","title":"fiamma"},{"location":"bitcoin/fiamma/#basic","text":"fiamma bridge : trustless BitVM Bitcoin bridges fiamma layer : a BitVM-Powered ZKP (Zero-Knowledge Proofs) Verification Layer EVM\uff08\u4ee5\u592a\u574a\u865a\u62df\u673a\uff09\u548cSVM\uff08Solana\u865a\u62df\u673a\uff09\u662f\u4e24\u79cd\u4e0d\u540c\u533a\u5757\u94fe\u5e73\u53f0\u4e0a\u7684\u865a\u62df\u673a\uff0c\u5b83\u4eec\u5404\u81ea\u8d1f\u8d23\u6267\u884c\u667a\u80fd\u5408\u7ea6\u548c\u5904\u7406\u4ea4\u6613\u3002\u4ee5\u4e0b\u662f\u5bf9\u5b83\u4eec\u7684\u7b80\u8981\u4ecb\u7ecd\uff1a","title":"basic"},{"location":"bitcoin/fiamma/#evm","text":"\u5b9a\u4e49 \uff1aEVM\u662f\u4ee5\u592a\u574a\u533a\u5757\u94fe\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u6267\u884c\u667a\u80fd\u5408\u7ea6\u7684\u5b57\u8282\u7801\u3002 \u529f\u80fd \uff1a\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u4ee5\u592a\u574a\u7f51\u7edc\u4e0a\u7f16\u5199\u548c\u90e8\u7f72\u53bb\u4e2d\u5fc3\u5316\u5e94\u7528\uff08DApps\uff09\u3002EVM\u63d0\u4f9b\u4e86\u4e00\u79cd\u5b89\u5168\u7684\u73af\u5883\uff0c\u53ef\u4ee5\u5728\u5176\u4e2d\u6267\u884c\u4ee3\u7801\uff0c\u540c\u65f6\u786e\u4fdd\u7f51\u7edc\u7684\u4e00\u81f4\u6027\u548c\u5b89\u5168\u6027\u3002 \u8bed\u8a00 \uff1a\u667a\u80fd\u5408\u7ea6\u901a\u5e38\u4f7f\u7528Solidity\u8bed\u8a00\u7f16\u5199\uff0c\u7f16\u8bd1\u540e\u751f\u6210EVM\u5b57\u8282\u7801\u3002 \u517c\u5bb9\u6027 \uff1a\u8bb8\u591a\u5176\u4ed6\u533a\u5757\u94fe\uff08\u5982Binance Smart Chain\u3001Polygon\u7b49\uff09\u4e5f\u5b9e\u73b0\u4e86EVM\u517c\u5bb9\u6027\uff0c\u4f7f\u5f97\u4ee5\u592a\u574a\u4e0a\u7684DApp\u53ef\u4ee5\u5728\u8fd9\u4e9b\u94fe\u4e0a\u8fd0\u884c\u3002","title":"EVM\uff08\u4ee5\u592a\u574a\u865a\u62df\u673a\uff09"},{"location":"bitcoin/fiamma/#svmsolana","text":"\u5b9a\u4e49 \uff1aSVM\u662fSolana\u533a\u5757\u94fe\u7684\u865a\u62df\u673a\uff0c\u8d1f\u8d23\u6267\u884c\u5728Solana\u7f51\u7edc\u4e0a\u90e8\u7f72\u7684\u667a\u80fd\u5408\u7ea6\u3002 \u529f\u80fd \uff1aSVM\u8bbe\u8ba1\u7528\u4e8e\u9ad8\u6027\u80fd\u548c\u9ad8\u541e\u5410\u91cf\uff0c\u80fd\u591f\u5904\u7406\u5927\u91cf\u4ea4\u6613\uff0c\u652f\u6301\u5feb\u901f\u7684\u667a\u80fd\u5408\u7ea6\u6267\u884c\u3002 \u8bed\u8a00 \uff1aSolana\u7684\u667a\u80fd\u5408\u7ea6\u901a\u5e38\u4f7f\u7528Rust\u6216C\u8bed\u8a00\u7f16\u5199\uff0cSVM\u80fd\u591f\u9ad8\u6548\u5730\u6267\u884c\u8fd9\u4e9b\u8bed\u8a00\u7f16\u5199\u7684\u4ee3\u7801\u3002 \u7279\u70b9 \uff1aSVM\u91c7\u7528\u4e86\u4e00\u79cd\u72ec\u7279\u7684\u67b6\u6784\uff0c\u5229\u7528\u5e76\u884c\u5904\u7406\u548c\u4f18\u5316\u7684\u5185\u5b58\u7ba1\u7406\u6765\u63d0\u9ad8\u6027\u80fd\uff0c\u76f8\u6bd4\u4e8eEVM\uff0cSVM\u5728\u5904\u7406\u901f\u5ea6\u548c\u53ef\u6269\u5c55\u6027\u65b9\u9762\u6709\u663e\u8457\u4f18\u52bf\u3002","title":"SVM\uff08Solana\u865a\u62df\u673a\uff09"},{"location":"bitcoin/fiamma/#_1","text":"EVM\u548cSVM\u90fd\u662f\u533a\u5757\u94fe\u751f\u6001\u7cfb\u7edf\u4e2d\u4e0d\u53ef\u6216\u7f3a\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u4f46\u5b83\u4eec\u5728\u8bbe\u8ba1\u76ee\u6807\u3001\u6027\u80fd\u548c\u517c\u5bb9\u6027\u65b9\u9762\u6709\u6240\u4e0d\u540c\u3002EVM\u6ce8\u91cd\u5b89\u5168\u548c\u5e7f\u6cdb\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u800cSVM\u5219\u5f3a\u8c03\u9ad8\u6027\u80fd\u548c\u9ad8\u541e\u5410\u91cf\u3002 \u667a\u80fd\u5408\u7ea6\u662f\u4e00\u79cd\u81ea\u52a8\u6267\u884c\u3001\u4e0d\u53ef\u7be1\u6539\u7684\u5408\u7ea6\uff0c\u5b58\u50a8\u5728\u533a\u5757\u94fe\u4e0a\uff0c\u80fd\u591f\u5728\u7279\u5b9a\u6761\u4ef6\u6ee1\u8db3\u65f6\u81ea\u52a8\u6267\u884c\u9884\u8bbe\u7684\u6761\u6b3e\u548c\u6761\u4ef6\u3002\u667a\u80fd\u5408\u7ea6\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u7b80\u5316\u548c\u81ea\u52a8\u5316\u5408\u7ea6\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u964d\u4f4e\u4fe1\u4efb\u6210\u672c\uff0c\u63d0\u9ad8\u6548\u7387\u3002\u4ee5\u4e0b\u662f\u667a\u80fd\u5408\u7ea6\u7684\u51e0\u4e2a\u4e3b\u8981\u4f5c\u7528\u53ca\u5b9e\u9645\u4f8b\u5b50\uff1a","title":"\u603b\u7ed3"},{"location":"bitcoin/fiamma/#_2","text":"\u81ea\u52a8\u5316\u6267\u884c \uff1a \u667a\u80fd\u5408\u7ea6\u53ef\u4ee5\u5728\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u65f6\u81ea\u52a8\u6267\u884c\uff0c\u65e0\u9700\u4e2d\u4ecb\u53c2\u4e0e\u3002\u8fd9\u964d\u4f4e\u4e86\u4ea4\u6613\u6210\u672c\u548c\u65f6\u95f4\u5ef6\u8fdf\u3002 \u900f\u660e\u6027\u548c\u4e0d\u53ef\u7be1\u6539\u6027 \uff1a \u667a\u80fd\u5408\u7ea6\u7684\u4ee3\u7801\u548c\u6267\u884c\u7ed3\u679c\u5b58\u50a8\u5728\u533a\u5757\u94fe\u4e0a\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u67e5\u770b\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u900f\u660e\u5ea6\u3002\u540c\u65f6\uff0c\u4e00\u65e6\u90e8\u7f72\uff0c\u5408\u7ea6\u7684\u6761\u6b3e\u65e0\u6cd5\u88ab\u66f4\u6539\uff0c\u786e\u4fdd\u4e86\u6570\u636e\u7684\u5b89\u5168\u6027\u3002 \u4fe1\u4efb\u673a\u5236 \uff1a \u7531\u4e8e\u667a\u80fd\u5408\u7ea6\u5728\u533a\u5757\u94fe\u4e0a\u8fd0\u884c\uff0c\u53c2\u4e0e\u5404\u65b9\u65e0\u9700\u76f8\u4e92\u4fe1\u4efb\uff0c\u53ea\u9700\u4fe1\u4efb\u4ee3\u7801\u7684\u6267\u884c\u3002\u8fd9\u53ef\u4ee5\u51cf\u5c11\u6b3a\u8bc8\u548c\u4e89\u8bae\u7684\u53d1\u751f\u3002 \u591a\u65b9\u53c2\u4e0e \uff1a \u667a\u80fd\u5408\u7ea6\u80fd\u591f\u5904\u7406\u591a\u65b9\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u4f7f\u5f97\u590d\u6742\u7684\u4ea4\u6613\u548c\u534f\u8bae\u53d8\u5f97\u7b80\u5355\u3002","title":"\u667a\u80fd\u5408\u7ea6\u7684\u4f5c\u7528"},{"location":"bitcoin/fiamma/#_3","text":"\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\uff08DeFi\uff09 \uff1a \u4f8b\u5b50 \uff1a Uniswap \u662f\u4e00\u4e2a\u53bb\u4e2d\u5fc3\u5316\u4ea4\u6613\u6240\uff08DEX\uff09\uff0c\u5176\u6838\u5fc3\u662f\u667a\u80fd\u5408\u7ea6\u3002\u7528\u6237\u53ef\u4ee5\u5728Uniswap\u4e0a\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u8fdb\u884c\u4ee3\u5e01\u4ea4\u6362\uff0c\u800c\u65e0\u9700\u4f20\u7edf\u7684\u4e2d\u4ecb\u3002\u7528\u6237\u5c06\u4ed6\u4eec\u7684\u4ee3\u5e01\u5b58\u5165\u6d41\u52a8\u6027\u6c60\uff0c\u667a\u80fd\u5408\u7ea6\u81ea\u52a8\u8ba1\u7b97\u4ea4\u6613\u4ef7\u683c\u5e76\u6267\u884c\u4ea4\u6613\u3002 \u4f9b\u5e94\u94fe\u7ba1\u7406 \uff1a \u4f8b\u5b50 \uff1a VeChain \u662f\u4e00\u4e2a\u4e13\u6ce8\u4e8e\u4f9b\u5e94\u94fe\u7ba1\u7406\u7684\u533a\u5757\u94fe\u5e73\u53f0\u3002\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\uff0cVeChain\u53ef\u4ee5\u8ddf\u8e2a\u4ea7\u54c1\u4ece\u751f\u4ea7\u5230\u4ea4\u4ed8\u7684\u6bcf\u4e00\u4e2a\u73af\u8282\u3002\u6bd4\u5982\uff0c\u4e00\u4e2a\u667a\u80fd\u5408\u7ea6\u53ef\u4ee5\u5728\u4ea7\u54c1\u5230\u8fbe\u67d0\u4e2a\u7279\u5b9a\u5730\u70b9\u65f6\u81ea\u52a8\u91ca\u653e\u4ed8\u6b3e\uff0c\u786e\u4fdd\u4f9b\u5e94\u94fe\u5404\u65b9\u7684\u4fe1\u4efb\u548c\u900f\u660e\u3002 \u4fdd\u9669\u7406\u8d54 \uff1a \u4f8b\u5b50 \uff1a Etherisc \u662f\u4e00\u4e2a\u57fa\u4e8e\u4ee5\u592a\u574a\u7684\u4fdd\u9669\u5e73\u53f0\u3002\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\uff0cEtherisc\u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u4fdd\u9669\u7d22\u8d54\u3002\u4f8b\u5982\uff0c\u519c\u6c11\u8d2d\u4e70\u4e86\u4e00\u4efd\u5929\u6c14\u4fdd\u9669\uff0c\u667a\u80fd\u5408\u7ea6\u53ef\u4ee5\u81ea\u52a8\u76d1\u6d4b\u5929\u6c14\u6570\u636e\uff0c\u5982\u679c\u53d1\u751f\u4e86\u9884\u5b9a\u7684\u5929\u6c14\u6761\u4ef6\uff08\u5982\u5e72\u65f1\u6216\u6d2a\u6c34\uff09\uff0c\u667a\u80fd\u5408\u7ea6\u4f1a\u81ea\u52a8\u89e6\u53d1\u8d54\u4ed8\uff0c\u65e0\u9700\u4eba\u5de5\u5e72\u9884\u3002 NFT\u5e02\u573a \uff1a \u4f8b\u5b50 \uff1a OpenSea \u662f\u4e00\u4e2aNFT\u4ea4\u6613\u5e73\u53f0\uff0c\u6240\u6709\u7684NFT\u4ea4\u6613\u90fd\u662f\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u8fdb\u884c\u7684\u3002\u5f53\u7528\u6237\u8d2d\u4e70NFT\u65f6\uff0c\u667a\u80fd\u5408\u7ea6\u4f1a\u81ea\u52a8\u5904\u7406\u6240\u6709\u6743\u8f6c\u79fb\u548c\u652f\u4ed8\uff0c\u786e\u4fdd\u4ea4\u6613\u7684\u5b89\u5168\u548c\u900f\u660e\u3002","title":"\u5b9e\u9645\u4f8b\u5b50"},{"location":"bitcoin/fiamma/#_4","text":"\u667a\u80fd\u5408\u7ea6\u901a\u8fc7\u81ea\u52a8\u5316\u3001\u900f\u660e\u548c\u5b89\u5168\u7684\u65b9\u5f0f\uff0c\u6539\u53d8\u4e86\u4f20\u7edf\u5408\u7ea6\u7684\u6267\u884c\u65b9\u5f0f\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u91d1\u878d\u3001\u4f9b\u5e94\u94fe\u3001\u4fdd\u9669\u3001\u827a\u672f\u7b49\u591a\u4e2a\u9886\u57df\uff0c\u63a8\u52a8\u4e86\u53bb\u4e2d\u5fc3\u5316\u5e94\u7528\u7684\u53d1\u5c55\u3002 \u4ece\u60a8\u63d0\u4f9b\u7684\u63cf\u8ff0\u6765\u770b\uff0c\u8be5\u9879\u76ee\u7684\u4e3b\u8981\u76ee\u6807\u662f\u5f00\u53d1\u4e00\u7cfb\u5217\u57fa\u7840\u8bbe\u65bd\uff0c\u4ee5\u589e\u5f3a\u6bd4\u7279\u5e01\uff08BTC\uff09\u751f\u6001\u7cfb\u7edf\u7684\u529f\u80fd\u548c\u53ef\u7528\u6027\u3002\u4ee5\u4e0b\u662f\u5bf9\u5404\u4e2a\u7ec4\u4ef6\u7684\u5206\u6790\uff0c\u4ee5\u53ca\u5b83\u4eec\u6240\u4ee3\u8868\u7684\u76ee\u6807\u548c\u529f\u80fd\uff1a","title":"\u603b\u7ed3"},{"location":"bitcoin/fiamma/#_5","text":"Fiamma Bridge \uff1a \u529f\u80fd \uff1a\u8fd9\u662f\u4e00\u4e2a\u201c\u5b9e\u7528\u7684\u65e0\u4fe1\u4efb\u201d\u6bd4\u7279\u5e01\u6865\uff0c\u65e8\u5728\u5b9e\u73b0\u6bd4\u7279\u5e01\u4e0e\u5176\u4ed6\u533a\u5757\u94fe\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002\u8fd9\u6837\u7684\u6865\u63a5\u6280\u672f\u53ef\u4ee5\u8ba9\u6bd4\u7279\u5e01\u7528\u6237\u5728\u4e0d\u540c\u7684\u533a\u5757\u94fe\u751f\u6001\u7cfb\u7edf\u4e4b\u95f4\u8fdb\u884c\u8d44\u4ea7\u8f6c\u79fb\uff0c\u800c\u65e0\u9700\u4f9d\u8d56\u4e2d\u5fc3\u5316\u7684\u4e2d\u4ecb\u6216\u4fe1\u4efb\u7b2c\u4e09\u65b9\u3002 \u76ee\u6807 \uff1a\u63d0\u9ad8\u6bd4\u7279\u5e01\u7684\u6d41\u52a8\u6027\uff0c\u4f7f\u5176\u80fd\u591f\u4e0e\u5176\u4ed6\u533a\u5757\u94fe\u751f\u6001\u7cfb\u7edf\uff08\u5982\u4ee5\u592a\u574a\u6216Solana\uff09\u4e92\u52a8\uff0c\u4ece\u800c\u62d3\u5c55\u6bd4\u7279\u5e01\u7684\u5e94\u7528\u573a\u666f\u3002 Fiamma Layer \uff1a \u529f\u80fd \uff1a\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e\u6bd4\u7279VM\uff08BitVM\uff09\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\uff08ZKP\uff09\u9a8c\u8bc1\u5c42\u3002\u96f6\u77e5\u8bc6\u8bc1\u660e\u662f\u4e00\u79cd\u52a0\u5bc6\u6280\u672f\uff0c\u5141\u8bb8\u4e00\u65b9\u5411\u53e6\u4e00\u65b9\u8bc1\u660e\u67d0\u4e2a\u58f0\u660e\u662f\u6b63\u786e\u7684\uff0c\u800c\u65e0\u9700\u63d0\u4f9b\u5177\u4f53\u7684\u8bc1\u636e\u3002 \u76ee\u6807 \uff1a\u901a\u8fc7\u63d0\u4f9b\u9690\u79c1\u4fdd\u62a4\u548c\u9a8c\u8bc1\u80fd\u529b\uff0c\u589e\u5f3a\u6bd4\u7279\u5e01\u4ea4\u6613\u7684\u5b89\u5168\u6027\u548c\u9690\u79c1\u6027\uff0c\u4f7f\u5f00\u53d1\u8005\u80fd\u591f\u6784\u5efa\u66f4\u52a0\u590d\u6742\u548c\u5b89\u5168\u7684\u5e94\u7528\u3002 \u5176\u4ed6\u57fa\u7840\u5de5\u5177 \uff1a \u529f\u80fd \uff1a\u8fd9\u4e9b\u5de5\u5177\u65e8\u5728\u652f\u6301\u6bd4\u7279\u5e01\u751f\u6001\u7cfb\u7edf\u7684\u591a\u6837\u6027\u548c\u521b\u65b0\uff0c\u53ef\u80fd\u5305\u62ec\u5f00\u53d1\u8005\u5de5\u5177\u3001API\u3001SDK\u7b49\u3002 \u76ee\u6807 \uff1a\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u5fc5\u8981\u7684\u8d44\u6e90\u548c\u652f\u6301\uff0c\u4ee5\u4fbf\u5728\u6bd4\u7279\u5e01\u4e0a\u6784\u5efa\u65b0\u5e94\u7528\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4f9d\u8d56\u4e8e\u4ee5\u592a\u574a\u865a\u62df\u673a\uff08EVM\uff09\u6216Solana\u865a\u62df\u673a\uff08SVM\uff09\u3002","title":"\u4e3b\u8981\u7ec4\u4ef6"},{"location":"bitcoin/fiamma/#_6","text":"\u65e0\u4fe1\u4efb\u6536\u76ca \uff1a\u901a\u8fc7\u8fd9\u4e9b\u57fa\u7840\u8bbe\u65bd\uff0cBTC\u6301\u6709\u8005\u80fd\u591f\u83b7\u5f97\u65e0\u4fe1\u4efb\u7684\u6536\u76ca\uff0c\u610f\u5473\u7740\u4ed6\u4eec\u53ef\u4ee5\u5728\u4e0d\u4f9d\u8d56\u4e2d\u5fc3\u5316\u91d1\u878d\uff08CeFi\uff09\u673a\u6784\u7684\u60c5\u51b5\u4e0b\u8d5a\u53d6\u6536\u76ca\u3002 \u65e0\u9650\u751f\u6001\u7cfb\u7edf \uff1a\u9879\u76ee\u65e8\u5728\u4e3a\u6bd4\u7279\u5e01\u521b\u9020\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u4f7f\u5176\u80fd\u591f\u652f\u6301\u5404\u79cd\u65b0\u5e94\u7528\u548c\u670d\u52a1\uff0c\u8d85\u8d8a\u4f20\u7edf\u7684\u6bd4\u7279\u5e01\u4f7f\u7528\u573a\u666f\u3002 \u5f00\u53d1\u8005\u521b\u65b0 \uff1a\u901a\u8fc7\u63d0\u4f9b\u66f4\u5f3a\u5927\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u9f13\u52b1\u5f00\u53d1\u8005\u5728\u6bd4\u7279\u5e01\u4e0a\u81ea\u7531\u521b\u65b0\uff0c\u63a8\u52a8\u6bd4\u7279\u5e01\u4f5c\u4e3a\u57fa\u7840\u8bbe\u65bd\u7684\u6f5c\u529b\u3002","title":"\u76ee\u6807\u548c\u613f\u666f"},{"location":"bitcoin/fiamma/#_7","text":"\u8be5\u9879\u76ee\u7684\u6838\u5fc3\u76ee\u6807\u662f\u901a\u8fc7\u5f00\u53d1\u5148\u8fdb\u7684\u57fa\u7840\u8bbe\u65bd\uff08\u5982\u6865\u63a5\u6280\u672f\u548c\u96f6\u77e5\u8bc6\u8bc1\u660e\u5c42\uff09\uff0c\u63d0\u5347\u6bd4\u7279\u5e01\u7684\u529f\u80fd\u6027\u548c\u53ef\u7528\u6027\uff0c\u4f7f\u5176\u80fd\u591f\u5728\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\uff08DeFi\uff09\u548c\u5176\u4ed6\u5e94\u7528\u9886\u57df\u4e2d\u53d1\u6325\u66f4\u5927\u7684\u4f5c\u7528\u3002\u5b83\u65e8\u5728\u4e3a\u6bd4\u7279\u5e01\u7528\u6237\u548c\u5f00\u53d1\u8005\u521b\u9020\u66f4\u591a\u7684\u673a\u4f1a\uff0c\u63a8\u52a8\u6bd4\u7279\u5e01\u751f\u6001\u7cfb\u7edf\u7684\u591a\u6837\u6027\u548c\u521b\u65b0\u3002 \u4ee5\u4e0b\u662f\u5bf9\u4ee3\u5e01\u3001\u591a\u91cd\u7b7e\u540d\u548c\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u8be6\u7ec6\u89e3\u91ca\uff0c\u5305\u62ec\u5b83\u4eec\u7684\u5b9a\u4e49\u3001\u5de5\u4f5c\u539f\u7406\u4ee5\u53ca\u5728\u533a\u5757\u94fe\u6280\u672f\u4e2d\u7684\u5e94\u7528\u3002","title":"\u603b\u7ed3"},{"location":"bitcoin/fiamma/#1","text":"","title":"1. \u4ee3\u5e01"},{"location":"bitcoin/fiamma/#_8","text":"\u4ee3\u5e01\u662f\u57fa\u4e8e\u533a\u5757\u94fe\u6280\u672f\u521b\u5efa\u7684\u6570\u5b57\u8d44\u4ea7\uff0c\u901a\u5e38\u4ee3\u8868\u67d0\u79cd\u4ef7\u503c\u6216\u6743\u5229\u3002\u4ee3\u5e01\u53ef\u4ee5\u5728\u533a\u5757\u94fe\u7f51\u7edc\u4e0a\u8fdb\u884c\u4ea4\u6613\u3001\u5b58\u50a8\u548c\u4f7f\u7528\u3002\u4ee3\u5e01\u53ef\u4ee5\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a \u52a0\u5bc6\u8d27\u5e01 \uff1a\u5982\u6bd4\u7279\u5e01\uff08BTC\uff09\u548c\u4ee5\u592a\u574a\uff08ETH\uff09\uff0c\u5b83\u4eec\u662f\u72ec\u7acb\u7684\u533a\u5757\u94fe\u7f51\u7edc\u7684\u539f\u751f\u8d44\u4ea7\u3002 \u4ee3\u5e01\u5316\u8d44\u4ea7 \uff1a\u5982 ERC-20 \u4ee3\u5e01\uff08\u5728\u4ee5\u592a\u574a\u7f51\u7edc\u4e0a\u521b\u5efa\u7684\u4ee3\u5e01\uff09\uff0c\u5b83\u4eec\u901a\u5e38\u7528\u4e8e\u7279\u5b9a\u7684\u5e94\u7528\u573a\u666f\uff0c\u5982\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\uff08DeFi\uff09\u3001NFT\uff08\u975e\u540c\u8d28\u5316\u4ee3\u5e01\uff09\u7b49\u3002","title":"\u5b9a\u4e49"},{"location":"bitcoin/fiamma/#_9","text":"\u4ee3\u5e01\u901a\u5e38\u662f\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u521b\u5efa\u7684\u3002\u667a\u80fd\u5408\u7ea6\u662f\u4e00\u79cd\u81ea\u52a8\u6267\u884c\u7684\u5408\u540c\uff0c\u4ee3\u7801\u8fd0\u884c\u5728\u533a\u5757\u94fe\u4e0a\uff0c\u786e\u4fdd\u4ee3\u5e01\u7684\u521b\u5efa\u3001\u8f6c\u79fb\u548c\u7ba1\u7406\u9075\u5faa\u9884\u8bbe\u7684\u89c4\u5219\u3002\u4f8b\u5982\uff0c\u5728\u4ee5\u592a\u574a\u4e0a\u521b\u5efa\u7684 ERC-20 \u4ee3\u5e01\u9075\u5faa\u7279\u5b9a\u7684\u6807\u51c6\uff0c\u4f7f\u5176\u80fd\u591f\u4e0e\u5176\u4ed6\u667a\u80fd\u5408\u7ea6\u548c\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u4ea4\u4e92\u3002","title":"\u5de5\u4f5c\u539f\u7406"},{"location":"bitcoin/fiamma/#2","text":"","title":"2. \u591a\u91cd\u7b7e\u540d"},{"location":"bitcoin/fiamma/#_10","text":"\u591a\u91cd\u7b7e\u540d\uff08Multisig\uff09\u662f\u4e00\u79cd\u5b89\u5168\u673a\u5236\uff0c\u8981\u6c42\u591a\u4e2a\u5bc6\u94a5\u6301\u6709\u8005\u5171\u540c\u7b7e\u7f72\u4e00\u7b14\u4ea4\u6613\u624d\u80fd\u6267\u884c\u3002\u8fd9\u79cd\u673a\u5236\u5728\u533a\u5757\u94fe\u548c\u52a0\u5bc6\u8d27\u5e01\u7684\u73af\u5883\u4e2d\u7528\u4e8e\u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u9632\u6b62\u5355\u70b9\u6545\u969c\u6216\u5355\u4e00\u5bc6\u94a5\u88ab\u76d7\u7528\u3002","title":"\u5b9a\u4e49"},{"location":"bitcoin/fiamma/#_11","text":"\u8bbe\u7f6e \uff1a\u5728\u521b\u5efa\u591a\u91cd\u7b7e\u540d\u5730\u5740\u65f6\uff0c\u8bbe\u5b9a\u9700\u8981\u591a\u5c11\u4e2a\u7b7e\u540d\uff08\u4f8b\u5982\uff0c2-of-3\uff09\uff0c\u8fd9\u610f\u5473\u7740\u9700\u8981\u4e09\u4e2a\u5bc6\u94a5\u4e2d\u7684\u4e24\u4e2a\u6765\u7b7e\u7f72\u4ea4\u6613\u3002 \u4ea4\u6613\u6267\u884c \uff1a\u5f53\u7528\u6237\u5e0c\u671b\u53d1\u9001\u8d44\u91d1\u65f6\uff0c\u5fc5\u987b\u6536\u96c6\u6240\u9700\u6570\u91cf\u7684\u7b7e\u540d\u3002\u53ea\u6709\u5728\u6ee1\u8db3\u7b7e\u540d\u6570\u91cf\u7684\u60c5\u51b5\u4e0b\uff0c\u4ea4\u6613\u624d\u80fd\u88ab\u5e7f\u64ad\u5230\u7f51\u7edc\u5e76\u6267\u884c\u3002","title":"\u5de5\u4f5c\u539f\u7406"},{"location":"bitcoin/fiamma/#_12","text":"\u591a\u91cd\u7b7e\u540d\u5e38\u7528\u4e8e\uff1a - \u4f01\u4e1a\u94b1\u5305 \uff1a\u786e\u4fdd\u591a\u4e2a\u7ba1\u7406\u8005\u5171\u540c\u6388\u6743\u4ea4\u6613\uff0c\u964d\u4f4e\u98ce\u9669\u3002 - \u5b89\u5168\u5b58\u50a8 \uff1a\u4e2a\u4eba\u7528\u6237\u53ef\u4ee5\u5c06\u8d44\u91d1\u5b58\u50a8\u5728\u591a\u91cd\u7b7e\u540d\u94b1\u5305\u4e2d\uff0c\u9632\u6b62\u5355\u4e2a\u5bc6\u94a5\u4e22\u5931\u6216\u88ab\u76d7\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"bitcoin/fiamma/#3","text":"","title":"3. \u96f6\u77e5\u8bc6\u8bc1\u660e"},{"location":"bitcoin/fiamma/#_13","text":"\u96f6\u77e5\u8bc6\u8bc1\u660e\uff08Zero-Knowledge Proof, ZKP\uff09\u662f\u4e00\u79cd\u52a0\u5bc6\u6280\u672f\uff0c\u5141\u8bb8\u4e00\u65b9\uff08\u8bc1\u660e\u8005\uff09\u5411\u53e6\u4e00\u65b9\uff08\u9a8c\u8bc1\u8005\uff09\u8bc1\u660e\u67d0\u4e2a\u58f0\u660e\u662f\u771f\u5b9e\u7684\uff0c\u800c\u65e0\u9700\u900f\u9732\u4e0e\u8be5\u58f0\u660e\u76f8\u5173\u7684\u4efb\u4f55\u4fe1\u606f\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u9a8c\u8bc1\u8005\u53ef\u4ee5\u786e\u4fe1\u58f0\u660e\u7684\u771f\u5b9e\u6027\uff0c\u4f46\u4e0d\u83b7\u53d6\u4efb\u4f55\u989d\u5916\u4fe1\u606f\u3002","title":"\u5b9a\u4e49"},{"location":"bitcoin/fiamma/#_14","text":"\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u53ef\u884c\u6027\u57fa\u4e8e\u590d\u6742\u7684\u6570\u5b66\u539f\u7406\uff0c\u786e\u4fdd\u5728\u4e0d\u6cc4\u9732\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u9a8c\u8bc1\u3002\u5e38\u89c1\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u5305\u62ec zk-SNARKs \u548c zk-STARKs\u3002","title":"\u53ef\u884c\u6027"},{"location":"bitcoin/fiamma/#_15","text":"\u751f\u6210\u5bc6\u94a5 \uff1a\u8bc1\u660e\u8005\u751f\u6210\u4e00\u5bf9\u5bc6\u94a5\uff0c\u5305\u62ec\u4e00\u4e2a\u516c\u94a5\u548c\u4e00\u4e2a\u79c1\u94a5\u3002 \u751f\u6210\u8bc1\u660e \uff1a\u8bc1\u660e\u8005\u4f7f\u7528\u79c1\u94a5\u751f\u6210\u4e00\u4e2a\u8bc1\u660e\uff0c\u8868\u660e\u4ed6\u4eec\u77e5\u9053\u67d0\u4e2a\u79d8\u5bc6\uff08\u4f8b\u5982\uff0c\u4e00\u4e2a\u5bc6\u7801\u6216\u52a0\u5bc6\u6570\u636e\uff09\uff0c\u800c\u4e0d\u76f4\u63a5\u900f\u9732\u8be5\u79d8\u5bc6\u3002 \u9a8c\u8bc1 \uff1a\u9a8c\u8bc1\u8005\u4f7f\u7528\u516c\u94a5\u548c\u8bc1\u660e\u6765\u9a8c\u8bc1\u58f0\u660e\u7684\u771f\u5b9e\u6027\u3002\u5982\u679c\u8bc1\u660e\u6709\u6548\uff0c\u9a8c\u8bc1\u8005\u5c31\u53ef\u4ee5\u76f8\u4fe1\u58f0\u660e\u662f\u771f\u5b9e\u7684\uff0c\u4f46\u65e0\u6cd5\u83b7\u53d6\u4efb\u4f55\u5173\u4e8e\u79d8\u5bc6\u7684\u4fe1\u606f\u3002","title":"\u5de5\u4f5c\u539f\u7406"},{"location":"bitcoin/fiamma/#_16","text":"\u96f6\u77e5\u8bc6\u8bc1\u660e\u5728\u533a\u5757\u94fe\u4e2d\u7684\u5e94\u7528\u5305\u62ec\uff1a - \u9690\u79c1\u4fdd\u62a4 \uff1a\u5728\u4ea4\u6613\u4e2d\u9690\u85cf\u53d1\u9001\u8005\u3001\u63a5\u6536\u8005\u548c\u4ea4\u6613\u91d1\u989d\u3002\u4f8b\u5982\uff0cZcash \u4f7f\u7528\u96f6\u77e5\u8bc6\u8bc1\u660e\u6765\u5b9e\u73b0\u9690\u79c1\u4ea4\u6613\u3002 - \u8eab\u4efd\u9a8c\u8bc1 \uff1a\u5141\u8bb8\u7528\u6237\u8bc1\u660e\u5176\u8eab\u4efd\u6216\u67d0\u4e9b\u8d44\u683c\uff0c\u800c\u65e0\u9700\u900f\u9732\u4e2a\u4eba\u4fe1\u606f\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"bitcoin/fiamma/#_17","text":"\u4ee3\u5e01 \u662f\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u6570\u5b57\u8d44\u4ea7\uff0c\u53ef\u4ee5\u4ee3\u8868\u4ef7\u503c\u6216\u6743\u5229\uff0c\u5e76\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u8fdb\u884c\u7ba1\u7406\u3002 \u591a\u91cd\u7b7e\u540d \u63d0\u9ad8\u4e86\u4ea4\u6613\u7684\u5b89\u5168\u6027\uff0c\u8981\u6c42\u591a\u4e2a\u5bc6\u94a5\u6301\u6709\u8005\u5171\u540c\u7b7e\u7f72\u4ea4\u6613\uff0c\u9632\u6b62\u5355\u70b9\u6545\u969c\u3002 \u96f6\u77e5\u8bc6\u8bc1\u660e \u5141\u8bb8\u5728\u4e0d\u6cc4\u9732\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\u9a8c\u8bc1\u58f0\u660e\u7684\u771f\u5b9e\u6027\uff0c\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u9690\u79c1\u4fdd\u62a4\u5de5\u5177\u3002 \u8fd9\u4e9b\u6280\u672f\u5728\u533a\u5757\u94fe\u548c\u52a0\u5bc6\u8d27\u5e01\u9886\u57df\u4e2d\u53d1\u6325\u7740\u91cd\u8981\u4f5c\u7528\uff0c\u63a8\u52a8\u4e86\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\u548c\u9690\u79c1\u4fdd\u62a4\u7684\u521b\u65b0\u3002 \u6570\u5b66\u5316\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e \u5728\u5b9e\u9645\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u4e2d\uff0c\u901a\u5e38\u4f7f\u7528\u590d\u6742\u7684\u6570\u5b66\u7b97\u6cd5\u6765\u5b9e\u73b0\u8fd9\u4e00\u8fc7\u7a0b\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\u534f\u8bae\u7684\u7279\u70b9\uff1a zk-SNARKs\uff08Zero-Knowledge Succinct Non-Interactive Argument of Knowledge\uff09\uff1a\u4e00\u79cd\u9ad8\u6548\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\uff0c\u5141\u8bb8\u8bc1\u660e\u8005\u751f\u6210\u4e00\u4e2a\u77ed\u5c0f\u7684\u8bc1\u660e\uff0c\u9a8c\u8bc1\u8005\u53ef\u4ee5\u5feb\u901f\u9a8c\u8bc1\u3002\u5b83\u4e0d\u9700\u8981\u4ea4\u4e92\u8fc7\u7a0b\u3002 zk-STARKs\uff08Zero-Knowledge Scalable Transparent Argument of Knowledge\uff09\uff1a\u4e00\u79cd\u4e0d\u4f9d\u8d56\u4e8e\u53ef\u4fe1\u8bbe\u7f6e\u7684\u96f6\u77e5\u8bc6\u8bc1\u660e\uff0c\u5177\u6709\u66f4\u9ad8\u7684\u53ef\u6269\u5c55\u6027\u548c\u900f\u660e\u6027\u3002","title":"\u603b\u7ed3"},{"location":"bitcoin/lean_chain/","text":"\u5b66\u4e60\u533a\u5757\u94fe\uff08\u5982 Solana\u3001\u4ee5\u592a\u574a\u3001Cosmos \u7b49\uff09\u9700\u8981\u7cfb\u7edf\u5316\u7684\u8def\u5f84\uff0c\u6db5\u76d6**\u6280\u672f\u539f\u7406\u3001\u5f00\u53d1\u5de5\u5177\u3001\u751f\u6001\u5e94\u7528**\u548c**\u5e02\u573a\u5206\u6790**\u3002\u4ee5\u4e0b\u662f\u5206\u9636\u6bb5\u7684\u5b66\u4e60\u6307\u5357\uff1a \u4e00\u3001\u57fa\u7840\u51c6\u5907\u9636\u6bb5 \u00b6 1. \u7406\u89e3\u533a\u5757\u94fe\u6838\u5fc3\u6982\u5ff5 \u00b6 - \u5fc5\u5b66\u5185\u5bb9 \uff1a - \u533a\u5757\u94fe\u5de5\u4f5c\u539f\u7406\uff08\u53bb\u4e2d\u5fc3\u5316\u3001\u54c8\u5e0c\u3001Merkle \u6811\u3001\u5171\u8bc6\u673a\u5236\uff09\u3002 - \u667a\u80fd\u5408\u7ea6\u4e0e\u865a\u62df\u673a\uff08\u5982 EVM\u3001Solana \u7684 Sealevel\uff09\u3002 - \u94b1\u5305\u4e0e\u4ea4\u6613\uff08\u516c\u79c1\u94a5\u3001Gas \u8d39\u3001\u7b7e\u540d\uff09\u3002 - \u63a8\u8350\u8d44\u6e90 \uff1a - \u4e66\u7c4d\uff1a\u300a\u533a\u5757\u94fe\u6280\u672f\u6307\u5357\u300b\uff08\u90b9\u5747\uff09 - \u89c6\u9891\uff1a IBM Blockchain 101 \uff08\u82f1\u6587\uff09 - \u4ea4\u4e92\u5b66\u4e60\uff1a CryptoZombies \uff08\u5b66 Solidity \u7684\u6e38\u620f\uff09 2. \u9009\u62e9\u4e00\u6761\u94fe\u6df1\u5165 \u00b6 - \u6839\u636e\u5174\u8da3\u9009\u62e9 \uff1a | \u94fe | \u7279\u70b9 | \u9002\u5408\u4eba\u7fa4 | |-------------|-------------------------|--------------------------| | \u4ee5\u592a\u574a | \u751f\u6001\u6700\u5168\uff0c\u5b66\u4e60\u8d44\u6e90\u591a | \u5f00\u53d1\u8005\u3001DeFi \u7528\u6237 | | Solana | \u9ad8\u6027\u80fd\uff0cRust \u5f00\u53d1 | \u4ea4\u6613\u8005\u3001Rust \u7a0b\u5e8f\u5458 | | Cosmos | \u6a21\u5757\u5316\uff0c\u8de8\u94fe\uff08IBC\uff09 | \u8de8\u94fe\u534f\u8bae\u5f00\u53d1\u8005 | | Bitcoin | \u7b80\u5355\u811a\u672c\uff0c\u5b58\u50a8\u4ef7\u503c | \u5bc6\u7801\u5b66\u7231\u597d\u8005\u3001\u957f\u671f\u6295\u8d44\u8005 | \u4e8c\u3001\u6280\u672f\u5b66\u4e60\u9636\u6bb5 \u00b6 1. \u5b66\u4e60\u94fe\u7684\u5f00\u53d1\u5de5\u5177 \u00b6 - \u4ee5\u592a\u574a \uff1a - \u8bed\u8a00\uff1aSolidity/Vyper - \u5de5\u5177\uff1aHardhat\u3001Remix IDE\u3001MetaMask - \u6559\u7a0b\uff1a Ethereum\u5b98\u65b9\u6587\u6863 - Solana \uff1a - \u8bed\u8a00\uff1aRust\uff08\u4e3b\uff09\u3001Anchor \u6846\u67b6\uff08\u7b80\u5316\u5f00\u53d1\uff09 - \u5de5\u5177\uff1aSolana CLI\u3001Phantom \u94b1\u5305 - \u6559\u7a0b\uff1a Solana Cookbook - Cosmos \uff1a - \u8bed\u8a00\uff1aGo\uff08Cosmos SDK\uff09 - \u5de5\u5177\uff1aIgnite CLI\u3001Starport - \u6559\u7a0b\uff1a Cosmos Academy 2. \u52a8\u624b\u5b9e\u8df5 \u00b6 - \u57fa\u7840\u9879\u76ee \uff1a 1. \u53d1\u884c\u4e00\u4e2a\u4ee3\u5e01\uff08ERC-20/SPL \u6807\u51c6\uff09\u3002 2. \u6784\u5efa\u4e00\u4e2a NFT \u5408\u7ea6\uff08ERC-721\uff09\u3002 3. \u5f00\u53d1\u4e00\u4e2a\u7b80\u5355 DEX\uff08\u5982 Uniswap \u514b\u9686\uff09\u3002 - \u8fdb\u9636\u9879\u76ee \uff1a - \u8de8\u94fe\u6865\uff08\u5982\u8fde\u63a5\u4ee5\u592a\u574a\u548c Solana\uff09\u3002 - \u9884\u8a00\u673a\uff08\u5982 Chainlink \u66ff\u4ee3\u65b9\u6848\uff09\u3002 3. \u53c2\u4e0e\u6d4b\u8bd5\u7f51 \u00b6 - \u9886\u53d6\u6d4b\u8bd5\u5e01\uff0c\u90e8\u7f72\u5408\u7ea6\uff0c\u6a21\u62df\u771f\u5b9e\u73af\u5883\uff1a - \u4ee5\u592a\u574a\uff1aGoerli \u6216 Sepolia\uff08\u73b0\u4e3b\u63a8\uff09\u3002 - Solana\uff1aDevnet\u3002 - Cosmos\uff1aTestnet\uff08\u5982 Osmosis \u6d4b\u8bd5\u7f51\uff09\u3002 \u4e09\u3001\u751f\u6001\u53c2\u4e0e\u9636\u6bb5 \u00b6 1. \u4f7f\u7528\u4e3b\u6d41 DApp \u00b6 - DeFi \uff1a - \u4ee5\u592a\u574a\uff1aUniswap\u3001Aave\u3002 - Solana\uff1aRaydium\u3001Jupiter\u3002 - NFT \uff1a - \u4ee5\u592a\u574a\uff1aOpenSea\u3001Blur\u3002 - Solana\uff1aTensor\u3001Magic Eden\u3002 - \u8de8\u94fe \uff1a - Cosmos\uff1aOsmosis\uff08\u8de8\u94fe DEX\uff09\u3002 2. \u52a0\u5165\u793e\u533a \u00b6 - Discord \uff1a\u9879\u76ee\u5b98\u65b9\u9891\u9053\uff08\u5982 Solana\u3001\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\uff09\u3002 - Twitter \uff1a\u5173\u6ce8\u6838\u5fc3\u5f00\u53d1\u8005\uff08\u5982 Vitalik Buterin\u3001Anatoly Yakovenko\uff09\u3002 - \u8bba\u575b \uff1a - \u4ee5\u592a\u574a\uff1a EthResearch - Solana\uff1a Solana Forum 3. \u8d21\u732e\u4e0e\u5956\u52b1 \u00b6 - \u6f0f\u6d1e\u8d4f\u91d1 \uff1a\u5982 Immunefi \u4e0a\u7684\u9879\u76ee\u3002 - \u7a7a\u6295 \uff1a\u4ea4\u4e92\u6d4b\u8bd5\u7f51\u6216\u65e9\u671f\u534f\u8bae\uff08\u5982 Starknet\u3001zkSync\uff09\u3002 - Grant \uff1a\u7533\u8bf7\u5f00\u53d1\u8005\u8d44\u52a9\uff08\u5982\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\u3001Solana Foundation\uff09\u3002 \u56db\u3001\u5e02\u573a\u5206\u6790\u9636\u6bb5 \u00b6 1. \u94fe\u4e0a\u6570\u636e\u5206\u6790 \u00b6 - \u5de5\u5177\uff1a - Dune Analytics \uff08\u770b DeFi \u6570\u636e\uff09\u3002 - Solana FM \uff08Solana \u533a\u5757\u6d4f\u89c8\u5668\uff09\u3002 - \u5173\u952e\u6307\u6807\uff1a - TVL\uff08\u603b\u9501\u4ed3\u91cf\uff09\u3001\u6d3b\u8dc3\u5730\u5740\u6570\u3001Gas \u8d39\u8d8b\u52bf\u3002 2. \u8d5b\u9053\u7814\u7a76 \u00b6 - \u5f53\u524d\u70ed\u70b9\uff1a - Rollup \u6218\u4e89 \uff08Arbitrum vs Optimism vs zkSync\uff09\u3002 - \u6a21\u5757\u5316\u533a\u5757\u94fe \uff08Celestia vs EigenDA\uff09\u3002 - AI + Crypto \uff08Bittensor\u3001Render\uff09\u3002 3. \u6295\u8d44\u903b\u8f91 \u00b6 - \u516c\u94fe\u4f30\u503c \uff1a\u751f\u6001\u89c4\u6a21\u3001\u5f00\u53d1\u8005\u6570\u91cf\u3001\u6536\u5165\uff08\u5982 Gas \u6d88\u8017\uff09\u3002 - \u4ee3\u5e01\u7ecf\u6d4e \uff1a\u901a\u80c0/\u901a\u7f29\u6a21\u578b\u3001\u8d28\u62bc\u6536\u76ca\u3001VC \u89e3\u9501\u3002 \u4e94\u3001\u63a8\u8350\u5b66\u4e60\u8def\u7ebf\uff08\u4ee5 Solana \u4e3a\u4f8b\uff09 \u00b6 \u7b2c1\u5468 \uff1a\u5b66 Rust \u57fa\u7840\uff08 Rustlings \uff09\u3002 \u7b2c2\u5468 \uff1a\u7528 Solana CLI \u53d1\u4e00\u4e2a SPL \u4ee3\u5e01\u3002 \u7b2c3\u5468 \uff1a\u7528 Anchor \u5f00\u53d1\u4e00\u4e2a\u6295\u7968 DApp\u3002 \u7b2c4\u5468 \uff1a\u53c2\u4e0e Solana Hackathon\uff08\u5982 SuperteamEarn\uff09\u3002 \u957f\u671f \uff1a\u8ddf\u8e2a Solana Breakpoint \u5927\u4f1a\u3002 \u516d\u3001\u907f\u5751\u6307\u5357 \u00b6 \u522b\u76f2\u76ee\u7092\u5e01 \uff1a\u5148\u7406\u89e3\u6280\u672f\u518d\u6295\u8d44\u3002 \u5c0f\u5fc3\u8bc8\u9a97 \uff1a\u5b98\u65b9\u94fe\u63a5\u4ece GitHub/Twitter \u9a8c\u8bc1\u3002 \u4fdd\u6301\u66f4\u65b0 \uff1a\u533a\u5757\u94fe\u6280\u672f\u8fed\u4ee3\u6781\u5feb\uff08\u5982 EIP-4844 \u5347\u7ea7\uff09\u3002 \u603b\u7ed3 \u00b6 \u5f00\u53d1\u8005\u8def\u7ebf \uff1a\u5b66\u8bed\u8a00 \u2192 \u5199\u5408\u7ea6 \u2192 \u505a\u9879\u76ee \u2192 \u62ff Grant\u3002 \u4ea4\u6613\u8005\u8def\u7ebf \uff1a\u7814\u7a76\u94fe\u4e0a\u6570\u636e \u2192 \u8ddf\u8e2a\u751f\u6001\u589e\u957f \u2192 \u62e9\u65f6\u6295\u8d44\u3002 \u666e\u901a\u7528\u6237 \uff1a\u4ece\u94b1\u5305\u548c DApp \u5165\u624b\uff0c\u9010\u6b65\u6df1\u5165\u3002 \u5982\u679c\u9700\u8981\u67d0\u4e2a\u94fe\u7684**\u5177\u4f53\u6559\u7a0b**\u6216**\u5de5\u5177\u5305**\uff0c\u53ef\u4ee5\u544a\u8bc9\u6211\u4f60\u7684\u76ee\u6807\uff08\u5982\u201c\u60f3\u5b66 Solana \u5f00\u53d1\u201d\u6216\u201c\u5206\u6790\u4ee5\u592a\u574a Layer2\u201d\uff09\uff0c\u6211\u4f1a\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u8d44\u6e90\uff01","title":"Lean chain"},{"location":"bitcoin/lean_chain/#_1","text":"","title":"\u4e00\u3001\u57fa\u7840\u51c6\u5907\u9636\u6bb5"},{"location":"bitcoin/lean_chain/#1","text":"- \u5fc5\u5b66\u5185\u5bb9 \uff1a - \u533a\u5757\u94fe\u5de5\u4f5c\u539f\u7406\uff08\u53bb\u4e2d\u5fc3\u5316\u3001\u54c8\u5e0c\u3001Merkle \u6811\u3001\u5171\u8bc6\u673a\u5236\uff09\u3002 - \u667a\u80fd\u5408\u7ea6\u4e0e\u865a\u62df\u673a\uff08\u5982 EVM\u3001Solana \u7684 Sealevel\uff09\u3002 - \u94b1\u5305\u4e0e\u4ea4\u6613\uff08\u516c\u79c1\u94a5\u3001Gas \u8d39\u3001\u7b7e\u540d\uff09\u3002 - \u63a8\u8350\u8d44\u6e90 \uff1a - \u4e66\u7c4d\uff1a\u300a\u533a\u5757\u94fe\u6280\u672f\u6307\u5357\u300b\uff08\u90b9\u5747\uff09 - \u89c6\u9891\uff1a IBM Blockchain 101 \uff08\u82f1\u6587\uff09 - \u4ea4\u4e92\u5b66\u4e60\uff1a CryptoZombies \uff08\u5b66 Solidity \u7684\u6e38\u620f\uff09","title":"1. \u7406\u89e3\u533a\u5757\u94fe\u6838\u5fc3\u6982\u5ff5"},{"location":"bitcoin/lean_chain/#2","text":"- \u6839\u636e\u5174\u8da3\u9009\u62e9 \uff1a | \u94fe | \u7279\u70b9 | \u9002\u5408\u4eba\u7fa4 | |-------------|-------------------------|--------------------------| | \u4ee5\u592a\u574a | \u751f\u6001\u6700\u5168\uff0c\u5b66\u4e60\u8d44\u6e90\u591a | \u5f00\u53d1\u8005\u3001DeFi \u7528\u6237 | | Solana | \u9ad8\u6027\u80fd\uff0cRust \u5f00\u53d1 | \u4ea4\u6613\u8005\u3001Rust \u7a0b\u5e8f\u5458 | | Cosmos | \u6a21\u5757\u5316\uff0c\u8de8\u94fe\uff08IBC\uff09 | \u8de8\u94fe\u534f\u8bae\u5f00\u53d1\u8005 | | Bitcoin | \u7b80\u5355\u811a\u672c\uff0c\u5b58\u50a8\u4ef7\u503c | \u5bc6\u7801\u5b66\u7231\u597d\u8005\u3001\u957f\u671f\u6295\u8d44\u8005 |","title":"2. \u9009\u62e9\u4e00\u6761\u94fe\u6df1\u5165"},{"location":"bitcoin/lean_chain/#_2","text":"","title":"\u4e8c\u3001\u6280\u672f\u5b66\u4e60\u9636\u6bb5"},{"location":"bitcoin/lean_chain/#1_1","text":"- \u4ee5\u592a\u574a \uff1a - \u8bed\u8a00\uff1aSolidity/Vyper - \u5de5\u5177\uff1aHardhat\u3001Remix IDE\u3001MetaMask - \u6559\u7a0b\uff1a Ethereum\u5b98\u65b9\u6587\u6863 - Solana \uff1a - \u8bed\u8a00\uff1aRust\uff08\u4e3b\uff09\u3001Anchor \u6846\u67b6\uff08\u7b80\u5316\u5f00\u53d1\uff09 - \u5de5\u5177\uff1aSolana CLI\u3001Phantom \u94b1\u5305 - \u6559\u7a0b\uff1a Solana Cookbook - Cosmos \uff1a - \u8bed\u8a00\uff1aGo\uff08Cosmos SDK\uff09 - \u5de5\u5177\uff1aIgnite CLI\u3001Starport - \u6559\u7a0b\uff1a Cosmos Academy","title":"1. \u5b66\u4e60\u94fe\u7684\u5f00\u53d1\u5de5\u5177"},{"location":"bitcoin/lean_chain/#2_1","text":"- \u57fa\u7840\u9879\u76ee \uff1a 1. \u53d1\u884c\u4e00\u4e2a\u4ee3\u5e01\uff08ERC-20/SPL \u6807\u51c6\uff09\u3002 2. \u6784\u5efa\u4e00\u4e2a NFT \u5408\u7ea6\uff08ERC-721\uff09\u3002 3. \u5f00\u53d1\u4e00\u4e2a\u7b80\u5355 DEX\uff08\u5982 Uniswap \u514b\u9686\uff09\u3002 - \u8fdb\u9636\u9879\u76ee \uff1a - \u8de8\u94fe\u6865\uff08\u5982\u8fde\u63a5\u4ee5\u592a\u574a\u548c Solana\uff09\u3002 - \u9884\u8a00\u673a\uff08\u5982 Chainlink \u66ff\u4ee3\u65b9\u6848\uff09\u3002","title":"2. \u52a8\u624b\u5b9e\u8df5"},{"location":"bitcoin/lean_chain/#3","text":"- \u9886\u53d6\u6d4b\u8bd5\u5e01\uff0c\u90e8\u7f72\u5408\u7ea6\uff0c\u6a21\u62df\u771f\u5b9e\u73af\u5883\uff1a - \u4ee5\u592a\u574a\uff1aGoerli \u6216 Sepolia\uff08\u73b0\u4e3b\u63a8\uff09\u3002 - Solana\uff1aDevnet\u3002 - Cosmos\uff1aTestnet\uff08\u5982 Osmosis \u6d4b\u8bd5\u7f51\uff09\u3002","title":"3. \u53c2\u4e0e\u6d4b\u8bd5\u7f51"},{"location":"bitcoin/lean_chain/#_3","text":"","title":"\u4e09\u3001\u751f\u6001\u53c2\u4e0e\u9636\u6bb5"},{"location":"bitcoin/lean_chain/#1-dapp","text":"- DeFi \uff1a - \u4ee5\u592a\u574a\uff1aUniswap\u3001Aave\u3002 - Solana\uff1aRaydium\u3001Jupiter\u3002 - NFT \uff1a - \u4ee5\u592a\u574a\uff1aOpenSea\u3001Blur\u3002 - Solana\uff1aTensor\u3001Magic Eden\u3002 - \u8de8\u94fe \uff1a - Cosmos\uff1aOsmosis\uff08\u8de8\u94fe DEX\uff09\u3002","title":"1. \u4f7f\u7528\u4e3b\u6d41 DApp"},{"location":"bitcoin/lean_chain/#2_2","text":"- Discord \uff1a\u9879\u76ee\u5b98\u65b9\u9891\u9053\uff08\u5982 Solana\u3001\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\uff09\u3002 - Twitter \uff1a\u5173\u6ce8\u6838\u5fc3\u5f00\u53d1\u8005\uff08\u5982 Vitalik Buterin\u3001Anatoly Yakovenko\uff09\u3002 - \u8bba\u575b \uff1a - \u4ee5\u592a\u574a\uff1a EthResearch - Solana\uff1a Solana Forum","title":"2. \u52a0\u5165\u793e\u533a"},{"location":"bitcoin/lean_chain/#3_1","text":"- \u6f0f\u6d1e\u8d4f\u91d1 \uff1a\u5982 Immunefi \u4e0a\u7684\u9879\u76ee\u3002 - \u7a7a\u6295 \uff1a\u4ea4\u4e92\u6d4b\u8bd5\u7f51\u6216\u65e9\u671f\u534f\u8bae\uff08\u5982 Starknet\u3001zkSync\uff09\u3002 - Grant \uff1a\u7533\u8bf7\u5f00\u53d1\u8005\u8d44\u52a9\uff08\u5982\u4ee5\u592a\u574a\u57fa\u91d1\u4f1a\u3001Solana Foundation\uff09\u3002","title":"3. \u8d21\u732e\u4e0e\u5956\u52b1"},{"location":"bitcoin/lean_chain/#_4","text":"","title":"\u56db\u3001\u5e02\u573a\u5206\u6790\u9636\u6bb5"},{"location":"bitcoin/lean_chain/#1_2","text":"- \u5de5\u5177\uff1a - Dune Analytics \uff08\u770b DeFi \u6570\u636e\uff09\u3002 - Solana FM \uff08Solana \u533a\u5757\u6d4f\u89c8\u5668\uff09\u3002 - \u5173\u952e\u6307\u6807\uff1a - TVL\uff08\u603b\u9501\u4ed3\u91cf\uff09\u3001\u6d3b\u8dc3\u5730\u5740\u6570\u3001Gas \u8d39\u8d8b\u52bf\u3002","title":"1. \u94fe\u4e0a\u6570\u636e\u5206\u6790"},{"location":"bitcoin/lean_chain/#2_3","text":"- \u5f53\u524d\u70ed\u70b9\uff1a - Rollup \u6218\u4e89 \uff08Arbitrum vs Optimism vs zkSync\uff09\u3002 - \u6a21\u5757\u5316\u533a\u5757\u94fe \uff08Celestia vs EigenDA\uff09\u3002 - AI + Crypto \uff08Bittensor\u3001Render\uff09\u3002","title":"2. \u8d5b\u9053\u7814\u7a76"},{"location":"bitcoin/lean_chain/#3_2","text":"- \u516c\u94fe\u4f30\u503c \uff1a\u751f\u6001\u89c4\u6a21\u3001\u5f00\u53d1\u8005\u6570\u91cf\u3001\u6536\u5165\uff08\u5982 Gas \u6d88\u8017\uff09\u3002 - \u4ee3\u5e01\u7ecf\u6d4e \uff1a\u901a\u80c0/\u901a\u7f29\u6a21\u578b\u3001\u8d28\u62bc\u6536\u76ca\u3001VC \u89e3\u9501\u3002","title":"3. \u6295\u8d44\u903b\u8f91"},{"location":"bitcoin/lean_chain/#solana","text":"\u7b2c1\u5468 \uff1a\u5b66 Rust \u57fa\u7840\uff08 Rustlings \uff09\u3002 \u7b2c2\u5468 \uff1a\u7528 Solana CLI \u53d1\u4e00\u4e2a SPL \u4ee3\u5e01\u3002 \u7b2c3\u5468 \uff1a\u7528 Anchor \u5f00\u53d1\u4e00\u4e2a\u6295\u7968 DApp\u3002 \u7b2c4\u5468 \uff1a\u53c2\u4e0e Solana Hackathon\uff08\u5982 SuperteamEarn\uff09\u3002 \u957f\u671f \uff1a\u8ddf\u8e2a Solana Breakpoint \u5927\u4f1a\u3002","title":"\u4e94\u3001\u63a8\u8350\u5b66\u4e60\u8def\u7ebf\uff08\u4ee5 Solana \u4e3a\u4f8b\uff09"},{"location":"bitcoin/lean_chain/#_5","text":"\u522b\u76f2\u76ee\u7092\u5e01 \uff1a\u5148\u7406\u89e3\u6280\u672f\u518d\u6295\u8d44\u3002 \u5c0f\u5fc3\u8bc8\u9a97 \uff1a\u5b98\u65b9\u94fe\u63a5\u4ece GitHub/Twitter \u9a8c\u8bc1\u3002 \u4fdd\u6301\u66f4\u65b0 \uff1a\u533a\u5757\u94fe\u6280\u672f\u8fed\u4ee3\u6781\u5feb\uff08\u5982 EIP-4844 \u5347\u7ea7\uff09\u3002","title":"\u516d\u3001\u907f\u5751\u6307\u5357"},{"location":"bitcoin/lean_chain/#_6","text":"\u5f00\u53d1\u8005\u8def\u7ebf \uff1a\u5b66\u8bed\u8a00 \u2192 \u5199\u5408\u7ea6 \u2192 \u505a\u9879\u76ee \u2192 \u62ff Grant\u3002 \u4ea4\u6613\u8005\u8def\u7ebf \uff1a\u7814\u7a76\u94fe\u4e0a\u6570\u636e \u2192 \u8ddf\u8e2a\u751f\u6001\u589e\u957f \u2192 \u62e9\u65f6\u6295\u8d44\u3002 \u666e\u901a\u7528\u6237 \uff1a\u4ece\u94b1\u5305\u548c DApp \u5165\u624b\uff0c\u9010\u6b65\u6df1\u5165\u3002 \u5982\u679c\u9700\u8981\u67d0\u4e2a\u94fe\u7684**\u5177\u4f53\u6559\u7a0b**\u6216**\u5de5\u5177\u5305**\uff0c\u53ef\u4ee5\u544a\u8bc9\u6211\u4f60\u7684\u76ee\u6807\uff08\u5982\u201c\u60f3\u5b66 Solana \u5f00\u53d1\u201d\u6216\u201c\u5206\u6790\u4ee5\u592a\u574a Layer2\u201d\uff09\uff0c\u6211\u4f1a\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u8d44\u6e90\uff01","title":"\u603b\u7ed3"},{"location":"bitcoin/nft_mint/","text":"NFT Mint 1. OpenSea\u3001Magic Eden\u3001Tensor \u662f\u4ec0\u4e48\uff1f 2. Tensorians\u3001Mad Lads\u3001BONK NFT \u4e3a\u4f55\u706b\u8d77\u6765\uff1f \uff081\uff09Tensorians \uff082\uff09Mad Lads \uff083\uff09BONK NFT 3. \u8fd9\u4e9bNFT\u7684\u73b0\u72b6\uff082024\u5e747\u6708\uff09 4. \u5b83\u4eec\u706b\u8d77\u6765\u7684\u5171\u540c\u539f\u56e0 5. \u5982\u4f55\u53d1\u73b0\u4e0b\u4e00\u4e2a\u7206\u6b3eNFT\uff1f 1. OpenSea\u3001Magic Eden\u3001Tensor \u662f\u4ec0\u4e48\uff1f 2. Tensorians\u3001Mad Lads\u3001BONK NFT \u4e3a\u4f55\u706b\u8d77\u6765\uff1f \uff081\uff09Tensorians \uff082\uff09Mad Lads \uff083\uff09BONK NFT 3. \u8fd9\u4e9bNFT\u7684\u73b0\u72b6\uff082024\u5e747\u6708\uff09 4. \u5b83\u4eec\u706b\u8d77\u6765\u7684\u5171\u540c\u539f\u56e0 5. \u5982\u4f55\u53d1\u73b0\u4e0b\u4e00\u4e2a\u7206\u6b3eNFT\uff1f NFT Mint \u00b6 1. OpenSea\u3001Magic Eden\u3001Tensor \u662f\u4ec0\u4e48\uff1f \u00b6 \u8fd9\u4e09\u4e2a\u662f\u76ee\u524d\u4e3b\u6d41\u7684 NFT\u4ea4\u6613\u5e02\u573a \uff08\u7c7b\u4f3c\u201cNFT\u7248\u6dd8\u5b9d\u201d\uff09\uff0c\u4f46\u9762\u5411\u4e0d\u540c\u533a\u5757\u94fe\u548c\u7528\u6237\u7fa4\u4f53\uff1a \u5e73\u53f0 \u4e3b\u8981\u94fe \u7279\u70b9 \u7528\u6237\u7fa4\u4f53 OpenSea \u4ee5\u592a\u574a\u3001Polygon - \u6700\u5927\u7efc\u5408NFT\u5e02\u573a - \u652f\u6301\u591a\u94fe - \u624b\u7eed\u8d39\uff1a2.5% \u4ee5\u592a\u574a\u4e3b\u6d41NFT\u6536\u85cf\u8005 Magic Eden Solana\u3001\u6bd4\u7279\u5e01Ordinals - Solana\u6700\u5927NFT\u5e02\u573a - \u652f\u6301\u6bd4\u7279\u5e01NFT\uff08Ordinals\uff09 - \u624b\u7eed\u8d39\uff1a2% Solana\u4ea4\u6613\u8005\u3001\u6bd4\u7279\u5e01NFT\u73a9\u5bb6 Tensor Solana - Solana\u4e13\u4e1a\u7ea7NFT\u5e02\u573a - \u4f4e\u624b\u7eed\u8d39\uff080%\u63a8\u5e7f\u671f\uff09 - \u9ad8\u7ea7\u4ea4\u6613\u5de5\u5177\uff08\u6279\u91cf\u6302\u5355\u3001\u72d9\u51fb\u7b49\uff09 \u804c\u4e1aNFT\u7092\u5bb6\u3001\u79d1\u5b66\u5bb6 2. Tensorians\u3001Mad Lads\u3001BONK NFT \u4e3a\u4f55\u706b\u8d77\u6765\uff1f \u00b6 \uff081\uff09Tensorians \u00b6 \u7206\u53d1\u65f6\u95f4 \uff1a2023\u5e74Q2 \u5982\u4f55\u706b\uff1f \u514d\u8d39Mint \uff1a\u7528\u6237\u4ec5\u9700\u652f\u4ed8Gas\u8d39\uff08\u7ea60.01 SOL\uff09\uff0c\u65e0\u6210\u672c\u53c2\u4e0e\u3002 \u5e73\u53f0\u8d4b\u80fd \uff1aTensor\u4ea4\u6613\u5e02\u573a\u7684\u5b98\u65b9NFT\uff0c\u6301\u6709\u8005\u4eab\u53d7\u4ea4\u6613\u624b\u7eed\u8d39\u6298\u6263\u3001\u7a7a\u6295\u9884\u671f\u3002 \u793e\u533a\u5171\u8bc6 \uff1aSolana NFT\u73a9\u5bb6\u96c6\u4f53\u7092\u4f5c\uff0c\u5730\u677f\u4ef7\u4ece\u514d\u8d39\u6da8\u81f3\u6700\u9ad850 SOL\uff08\u7ea6$7,500\uff09\u3002 \uff082\uff09Mad Lads \u00b6 \u7206\u53d1\u65f6\u95f4 \uff1a2023\u5e744\u6708 \u5982\u4f55\u706b\uff1f \u80cc\u666f\u56e2\u961f \uff1a\u7531Solana\u751f\u6001\u77e5\u540d\u5f00\u53d1\u56e2\u961fBackpack\u63a8\u51fa\uff08\u521b\u59cb\u4eba\u66fe\u662fFTX\u9ad8\u7ba1\uff09\u3002 X\uff08\u63a8\u7279\uff09\u8425\u9500 \uff1a\u901a\u8fc7\u201c\u795e\u79d8\u9884\u70ed\u201d\u5438\u5f15\u5173\u6ce8\uff0c\u767d\u540d\u5355Mint\u4ef7\u683c6 SOL\uff08\u7ea6$900\uff09\u3002 \u5b9e\u7528\u4ef7\u503c \uff1a\u6301\u6709\u8005\u53ef\u53c2\u4e0eBackpack\u94b1\u5305\u751f\u6001\uff08\u5982\u7a7a\u6295\u3001\u72ec\u5bb6\u6d3b\u52a8\uff09\uff0c\u5730\u677f\u4ef7\u4e00\u5ea6\u7a81\u7834100 SOL\uff08\u7ea6$15,000\uff09\u3002 \uff083\uff09BONK NFT \u00b6 \u7206\u53d1\u65f6\u95f4 \uff1a2023\u5e7412\u6708 \u5982\u4f55\u706b\uff1f Memecoin\u8054\u52a8 \uff1a\u7ed1\u5b9aSolana\u751f\u6001\u9996\u4e2a\u7206\u706bMemecoin $BONK\uff08\u7a7a\u6295\u7ed9\u793e\u533a\uff09\u3002 \u624b\u673a\u8425\u9500 \uff1a\u8d2d\u4e70Solana Saga\u624b\u673a\u7684\u7528\u6237\u83b7\u8d60BONK NFT\uff0c\u540e\u56e0$BONK\u5e01\u4ef7\u66b4\u6da8\uff0cNFT\u88ab\u7092\u81f3\u9ad8\u6ea2\u4ef7\u3002 FOMO\u60c5\u7eea \uff1a\u90e8\u5206NFT\u552e\u4ef7\u8d851\u4e07\u7f8e\u5143\uff0c\u5438\u5f15\u6295\u673a\u8005\u5165\u573a\u3002 3. \u8fd9\u4e9bNFT\u7684\u73b0\u72b6\uff082024\u5e747\u6708\uff09 \u00b6 NFT \u5730\u677f\u4ef7\uff08SOL\uff09 \u7f8e\u5143\u4ef7\u503c\uff08SOL=$150\uff09 \u70ed\u5ea6\u8d8b\u52bf Tensorians ~5 SOL ~$750 \u5e73\u53f0\u4f9d\u8d56\u6027\u5f3a\uff0c\u4ea4\u6613\u91cf\u4e0b\u6ed1 Mad Lads ~80 SOL ~$12,000 \u84dd\u7b79\u5730\u4f4d\u7a33\u56fa BONK NFT ~0.5 SOL ~$75 \u968f$BONK\u5e01\u4ef7\u6ce2\u52a8 4. \u5b83\u4eec\u706b\u8d77\u6765\u7684\u5171\u540c\u539f\u56e0 \u00b6 \u4f4e\u6210\u672c\u542f\u52a8 \uff1a\u514d\u8d39\u6216\u4f4e\u4ef7Mint\u964d\u4f4e\u53c2\u4e0e\u95e8\u69db\uff08\u5982Tensorians\uff09\u3002 \u5f3a\u793e\u533a\u8fd0\u8425 \uff1a\u63a8\u7279\u3001Discord\u7092\u4f5c\uff08\u5982Mad Lads\u7684\u201c\u795e\u79d8\u611f\u201d\u8425\u9500\uff09\u3002 \u5b9e\u7528\u8d4b\u80fd \uff1a\u7ed1\u5b9a\u751f\u6001\u6743\u76ca\uff08\u4ea4\u6613\u6298\u6263\u3001\u7a7a\u6295\u3001\u624b\u673a\u798f\u5229\uff09\u3002 \u5e02\u573a\u5468\u671f \uff1aSolana\u57282023\u5e74\u590d\u82cf\uff0c\u8d44\u91d1\u6d8c\u5165NFT\u677f\u5757\u3002 5. \u5982\u4f55\u53d1\u73b0\u4e0b\u4e00\u4e2a\u7206\u6b3eNFT\uff1f \u00b6 \u8ddf\u8e2a\u5e73\u53f0\u52a8\u6001 \uff1aTensor\u3001Magic Eden\u7684\u9996\u9875\u63a8\u8350\u548c\u65b0\u9879\u76ee\u9884\u544a\u3002 \u52a0\u5165\u793e\u533a \uff1aDiscord\u3001\u63a8\u7279\u5173\u6ce8\u9879\u76ee\u65b9\u4e92\u52a8\u3002 \u5173\u6ce8\u8d4b\u80fd \uff1a\u662f\u5426\u6709\u4ee3\u5e01\u7a7a\u6295\u3001\u7ebf\u4e0b\u6d3b\u52a8\u7b49\u5b9e\u9645\u4ef7\u503c\u3002 \u614e\u9632\u98ce\u9669 \uff1a\u907f\u514d\u63a5\u76d8\u9ad8\u4ef7\u7092\u4f5c\u9879\u76ee\uff08\u53c2\u80032022\u5e74NFT\u718a\u5e02\u66b4\u8dcc\u6848\u4f8b\uff09\u3002 \u5982\u679c\u9700\u8981\u5177\u4f53\u5e73\u53f0\u7684\u6ce8\u518c/\u4ea4\u6613\u6559\u7a0b\uff08\u5982\u5982\u4f55\u5728Tensor\u72d9\u51fbNFT\uff09\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8bf4\u660e\uff01 \ud83d\ude80 1. OpenSea\u3001Magic Eden\u3001Tensor \u662f\u4ec0\u4e48\uff1f \u00b6 \u8fd9\u4e09\u4e2a\u662f\u76ee\u524d\u4e3b\u6d41\u7684 NFT\u4ea4\u6613\u5e02\u573a \uff08\u7c7b\u4f3c\u201cNFT\u7248\u6dd8\u5b9d\u201d\uff09\uff0c\u4f46\u9762\u5411\u4e0d\u540c\u533a\u5757\u94fe\u548c\u7528\u6237\u7fa4\u4f53\uff1a \u5e73\u53f0 \u4e3b\u8981\u94fe \u7279\u70b9 \u7528\u6237\u7fa4\u4f53 OpenSea \u4ee5\u592a\u574a\u3001Polygon - \u6700\u5927\u7efc\u5408NFT\u5e02\u573a - \u652f\u6301\u591a\u94fe - \u624b\u7eed\u8d39\uff1a2.5% \u4ee5\u592a\u574a\u4e3b\u6d41NFT\u6536\u85cf\u8005 Magic Eden Solana\u3001\u6bd4\u7279\u5e01Ordinals - Solana\u6700\u5927NFT\u5e02\u573a - \u652f\u6301\u6bd4\u7279\u5e01NFT\uff08Ordinals\uff09 - \u624b\u7eed\u8d39\uff1a2% Solana\u4ea4\u6613\u8005\u3001\u6bd4\u7279\u5e01NFT\u73a9\u5bb6 Tensor Solana - Solana\u4e13\u4e1a\u7ea7NFT\u5e02\u573a - \u4f4e\u624b\u7eed\u8d39\uff080%\u63a8\u5e7f\u671f\uff09 - \u9ad8\u7ea7\u4ea4\u6613\u5de5\u5177\uff08\u6279\u91cf\u6302\u5355\u3001\u72d9\u51fb\u7b49\uff09 \u804c\u4e1aNFT\u7092\u5bb6\u3001\u79d1\u5b66\u5bb6 2. Tensorians\u3001Mad Lads\u3001BONK NFT \u4e3a\u4f55\u706b\u8d77\u6765\uff1f \u00b6 \uff081\uff09Tensorians \u00b6 \u7206\u53d1\u65f6\u95f4 \uff1a2023\u5e74Q2 \u5982\u4f55\u706b\uff1f \u514d\u8d39Mint \uff1a\u7528\u6237\u4ec5\u9700\u652f\u4ed8Gas\u8d39\uff08\u7ea60.01 SOL\uff09\uff0c\u65e0\u6210\u672c\u53c2\u4e0e\u3002 \u5e73\u53f0\u8d4b\u80fd \uff1aTensor\u4ea4\u6613\u5e02\u573a\u7684\u5b98\u65b9NFT\uff0c\u6301\u6709\u8005\u4eab\u53d7\u4ea4\u6613\u624b\u7eed\u8d39\u6298\u6263\u3001\u7a7a\u6295\u9884\u671f\u3002 \u793e\u533a\u5171\u8bc6 \uff1aSolana NFT\u73a9\u5bb6\u96c6\u4f53\u7092\u4f5c\uff0c\u5730\u677f\u4ef7\u4ece\u514d\u8d39\u6da8\u81f3\u6700\u9ad850 SOL\uff08\u7ea6$7,500\uff09\u3002 \uff082\uff09Mad Lads \u00b6 \u7206\u53d1\u65f6\u95f4 \uff1a2023\u5e744\u6708 \u5982\u4f55\u706b\uff1f \u80cc\u666f\u56e2\u961f \uff1a\u7531Solana\u751f\u6001\u77e5\u540d\u5f00\u53d1\u56e2\u961fBackpack\u63a8\u51fa\uff08\u521b\u59cb\u4eba\u66fe\u662fFTX\u9ad8\u7ba1\uff09\u3002 X\uff08\u63a8\u7279\uff09\u8425\u9500 \uff1a\u901a\u8fc7\u201c\u795e\u79d8\u9884\u70ed\u201d\u5438\u5f15\u5173\u6ce8\uff0c\u767d\u540d\u5355Mint\u4ef7\u683c6 SOL\uff08\u7ea6$900\uff09\u3002 \u5b9e\u7528\u4ef7\u503c \uff1a\u6301\u6709\u8005\u53ef\u53c2\u4e0eBackpack\u94b1\u5305\u751f\u6001\uff08\u5982\u7a7a\u6295\u3001\u72ec\u5bb6\u6d3b\u52a8\uff09\uff0c\u5730\u677f\u4ef7\u4e00\u5ea6\u7a81\u7834100 SOL\uff08\u7ea6$15,000\uff09\u3002 \uff083\uff09BONK NFT \u00b6 \u7206\u53d1\u65f6\u95f4 \uff1a2023\u5e7412\u6708 \u5982\u4f55\u706b\uff1f Memecoin\u8054\u52a8 \uff1a\u7ed1\u5b9aSolana\u751f\u6001\u9996\u4e2a\u7206\u706bMemecoin $BONK\uff08\u7a7a\u6295\u7ed9\u793e\u533a\uff09\u3002 \u624b\u673a\u8425\u9500 \uff1a\u8d2d\u4e70Solana Saga\u624b\u673a\u7684\u7528\u6237\u83b7\u8d60BONK NFT\uff0c\u540e\u56e0$BONK\u5e01\u4ef7\u66b4\u6da8\uff0cNFT\u88ab\u7092\u81f3\u9ad8\u6ea2\u4ef7\u3002 FOMO\u60c5\u7eea \uff1a\u90e8\u5206NFT\u552e\u4ef7\u8d851\u4e07\u7f8e\u5143\uff0c\u5438\u5f15\u6295\u673a\u8005\u5165\u573a\u3002 3. \u8fd9\u4e9bNFT\u7684\u73b0\u72b6\uff082024\u5e747\u6708\uff09 \u00b6 NFT \u5730\u677f\u4ef7\uff08SOL\uff09 \u7f8e\u5143\u4ef7\u503c\uff08SOL=$150\uff09 \u70ed\u5ea6\u8d8b\u52bf Tensorians ~5 SOL ~$750 \u5e73\u53f0\u4f9d\u8d56\u6027\u5f3a\uff0c\u4ea4\u6613\u91cf\u4e0b\u6ed1 Mad Lads ~80 SOL ~$12,000 \u84dd\u7b79\u5730\u4f4d\u7a33\u56fa BONK NFT ~0.5 SOL ~$75 \u968f$BONK\u5e01\u4ef7\u6ce2\u52a8 4. \u5b83\u4eec\u706b\u8d77\u6765\u7684\u5171\u540c\u539f\u56e0 \u00b6 \u4f4e\u6210\u672c\u542f\u52a8 \uff1a\u514d\u8d39\u6216\u4f4e\u4ef7Mint\u964d\u4f4e\u53c2\u4e0e\u95e8\u69db\uff08\u5982Tensorians\uff09\u3002 \u5f3a\u793e\u533a\u8fd0\u8425 \uff1a\u63a8\u7279\u3001Discord\u7092\u4f5c\uff08\u5982Mad Lads\u7684\u201c\u795e\u79d8\u611f\u201d\u8425\u9500\uff09\u3002 \u5b9e\u7528\u8d4b\u80fd \uff1a\u7ed1\u5b9a\u751f\u6001\u6743\u76ca\uff08\u4ea4\u6613\u6298\u6263\u3001\u7a7a\u6295\u3001\u624b\u673a\u798f\u5229\uff09\u3002 \u5e02\u573a\u5468\u671f \uff1aSolana\u57282023\u5e74\u590d\u82cf\uff0c\u8d44\u91d1\u6d8c\u5165NFT\u677f\u5757\u3002 5. \u5982\u4f55\u53d1\u73b0\u4e0b\u4e00\u4e2a\u7206\u6b3eNFT\uff1f \u00b6 \u8ddf\u8e2a\u5e73\u53f0\u52a8\u6001 \uff1aTensor\u3001Magic Eden\u7684\u9996\u9875\u63a8\u8350\u548c\u65b0\u9879\u76ee\u9884\u544a\u3002 \u52a0\u5165\u793e\u533a \uff1aDiscord\u3001\u63a8\u7279\u5173\u6ce8\u9879\u76ee\u65b9\u4e92\u52a8\u3002 \u5173\u6ce8\u8d4b\u80fd \uff1a\u662f\u5426\u6709\u4ee3\u5e01\u7a7a\u6295\u3001\u7ebf\u4e0b\u6d3b\u52a8\u7b49\u5b9e\u9645\u4ef7\u503c\u3002 \u614e\u9632\u98ce\u9669 \uff1a\u907f\u514d\u63a5\u76d8\u9ad8\u4ef7\u7092\u4f5c\u9879\u76ee\uff08\u53c2\u80032022\u5e74NFT\u718a\u5e02\u66b4\u8dcc\u6848\u4f8b\uff09\u3002 \u5982\u679c\u9700\u8981\u5177\u4f53\u5e73\u53f0\u7684\u6ce8\u518c/\u4ea4\u6613\u6559\u7a0b\uff08\u5982\u5982\u4f55\u5728Tensor\u72d9\u51fbNFT\uff09\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8bf4\u660e\uff01 \ud83d\ude80","title":"Nft mint"},{"location":"bitcoin/nft_mint/#nft-mint","text":"","title":"NFT Mint"},{"location":"bitcoin/nft_mint/#1-openseamagic-edentensor","text":"\u8fd9\u4e09\u4e2a\u662f\u76ee\u524d\u4e3b\u6d41\u7684 NFT\u4ea4\u6613\u5e02\u573a \uff08\u7c7b\u4f3c\u201cNFT\u7248\u6dd8\u5b9d\u201d\uff09\uff0c\u4f46\u9762\u5411\u4e0d\u540c\u533a\u5757\u94fe\u548c\u7528\u6237\u7fa4\u4f53\uff1a \u5e73\u53f0 \u4e3b\u8981\u94fe \u7279\u70b9 \u7528\u6237\u7fa4\u4f53 OpenSea \u4ee5\u592a\u574a\u3001Polygon - \u6700\u5927\u7efc\u5408NFT\u5e02\u573a - \u652f\u6301\u591a\u94fe - \u624b\u7eed\u8d39\uff1a2.5% \u4ee5\u592a\u574a\u4e3b\u6d41NFT\u6536\u85cf\u8005 Magic Eden Solana\u3001\u6bd4\u7279\u5e01Ordinals - Solana\u6700\u5927NFT\u5e02\u573a - \u652f\u6301\u6bd4\u7279\u5e01NFT\uff08Ordinals\uff09 - \u624b\u7eed\u8d39\uff1a2% Solana\u4ea4\u6613\u8005\u3001\u6bd4\u7279\u5e01NFT\u73a9\u5bb6 Tensor Solana - Solana\u4e13\u4e1a\u7ea7NFT\u5e02\u573a - \u4f4e\u624b\u7eed\u8d39\uff080%\u63a8\u5e7f\u671f\uff09 - \u9ad8\u7ea7\u4ea4\u6613\u5de5\u5177\uff08\u6279\u91cf\u6302\u5355\u3001\u72d9\u51fb\u7b49\uff09 \u804c\u4e1aNFT\u7092\u5bb6\u3001\u79d1\u5b66\u5bb6","title":"1. OpenSea\u3001Magic Eden\u3001Tensor \u662f\u4ec0\u4e48\uff1f"},{"location":"bitcoin/nft_mint/#2-tensoriansmad-ladsbonk-nft","text":"","title":"2. Tensorians\u3001Mad Lads\u3001BONK NFT \u4e3a\u4f55\u706b\u8d77\u6765\uff1f"},{"location":"bitcoin/nft_mint/#1tensorians","text":"\u7206\u53d1\u65f6\u95f4 \uff1a2023\u5e74Q2 \u5982\u4f55\u706b\uff1f \u514d\u8d39Mint \uff1a\u7528\u6237\u4ec5\u9700\u652f\u4ed8Gas\u8d39\uff08\u7ea60.01 SOL\uff09\uff0c\u65e0\u6210\u672c\u53c2\u4e0e\u3002 \u5e73\u53f0\u8d4b\u80fd \uff1aTensor\u4ea4\u6613\u5e02\u573a\u7684\u5b98\u65b9NFT\uff0c\u6301\u6709\u8005\u4eab\u53d7\u4ea4\u6613\u624b\u7eed\u8d39\u6298\u6263\u3001\u7a7a\u6295\u9884\u671f\u3002 \u793e\u533a\u5171\u8bc6 \uff1aSolana NFT\u73a9\u5bb6\u96c6\u4f53\u7092\u4f5c\uff0c\u5730\u677f\u4ef7\u4ece\u514d\u8d39\u6da8\u81f3\u6700\u9ad850 SOL\uff08\u7ea6$7,500\uff09\u3002","title":"\uff081\uff09Tensorians"},{"location":"bitcoin/nft_mint/#2mad-lads","text":"\u7206\u53d1\u65f6\u95f4 \uff1a2023\u5e744\u6708 \u5982\u4f55\u706b\uff1f \u80cc\u666f\u56e2\u961f \uff1a\u7531Solana\u751f\u6001\u77e5\u540d\u5f00\u53d1\u56e2\u961fBackpack\u63a8\u51fa\uff08\u521b\u59cb\u4eba\u66fe\u662fFTX\u9ad8\u7ba1\uff09\u3002 X\uff08\u63a8\u7279\uff09\u8425\u9500 \uff1a\u901a\u8fc7\u201c\u795e\u79d8\u9884\u70ed\u201d\u5438\u5f15\u5173\u6ce8\uff0c\u767d\u540d\u5355Mint\u4ef7\u683c6 SOL\uff08\u7ea6$900\uff09\u3002 \u5b9e\u7528\u4ef7\u503c \uff1a\u6301\u6709\u8005\u53ef\u53c2\u4e0eBackpack\u94b1\u5305\u751f\u6001\uff08\u5982\u7a7a\u6295\u3001\u72ec\u5bb6\u6d3b\u52a8\uff09\uff0c\u5730\u677f\u4ef7\u4e00\u5ea6\u7a81\u7834100 SOL\uff08\u7ea6$15,000\uff09\u3002","title":"\uff082\uff09Mad Lads"},{"location":"bitcoin/nft_mint/#3bonk-nft","text":"\u7206\u53d1\u65f6\u95f4 \uff1a2023\u5e7412\u6708 \u5982\u4f55\u706b\uff1f Memecoin\u8054\u52a8 \uff1a\u7ed1\u5b9aSolana\u751f\u6001\u9996\u4e2a\u7206\u706bMemecoin $BONK\uff08\u7a7a\u6295\u7ed9\u793e\u533a\uff09\u3002 \u624b\u673a\u8425\u9500 \uff1a\u8d2d\u4e70Solana Saga\u624b\u673a\u7684\u7528\u6237\u83b7\u8d60BONK NFT\uff0c\u540e\u56e0$BONK\u5e01\u4ef7\u66b4\u6da8\uff0cNFT\u88ab\u7092\u81f3\u9ad8\u6ea2\u4ef7\u3002 FOMO\u60c5\u7eea \uff1a\u90e8\u5206NFT\u552e\u4ef7\u8d851\u4e07\u7f8e\u5143\uff0c\u5438\u5f15\u6295\u673a\u8005\u5165\u573a\u3002","title":"\uff083\uff09BONK NFT"},{"location":"bitcoin/nft_mint/#3-nft20247","text":"NFT \u5730\u677f\u4ef7\uff08SOL\uff09 \u7f8e\u5143\u4ef7\u503c\uff08SOL=$150\uff09 \u70ed\u5ea6\u8d8b\u52bf Tensorians ~5 SOL ~$750 \u5e73\u53f0\u4f9d\u8d56\u6027\u5f3a\uff0c\u4ea4\u6613\u91cf\u4e0b\u6ed1 Mad Lads ~80 SOL ~$12,000 \u84dd\u7b79\u5730\u4f4d\u7a33\u56fa BONK NFT ~0.5 SOL ~$75 \u968f$BONK\u5e01\u4ef7\u6ce2\u52a8","title":"3. \u8fd9\u4e9bNFT\u7684\u73b0\u72b6\uff082024\u5e747\u6708\uff09"},{"location":"bitcoin/nft_mint/#4","text":"\u4f4e\u6210\u672c\u542f\u52a8 \uff1a\u514d\u8d39\u6216\u4f4e\u4ef7Mint\u964d\u4f4e\u53c2\u4e0e\u95e8\u69db\uff08\u5982Tensorians\uff09\u3002 \u5f3a\u793e\u533a\u8fd0\u8425 \uff1a\u63a8\u7279\u3001Discord\u7092\u4f5c\uff08\u5982Mad Lads\u7684\u201c\u795e\u79d8\u611f\u201d\u8425\u9500\uff09\u3002 \u5b9e\u7528\u8d4b\u80fd \uff1a\u7ed1\u5b9a\u751f\u6001\u6743\u76ca\uff08\u4ea4\u6613\u6298\u6263\u3001\u7a7a\u6295\u3001\u624b\u673a\u798f\u5229\uff09\u3002 \u5e02\u573a\u5468\u671f \uff1aSolana\u57282023\u5e74\u590d\u82cf\uff0c\u8d44\u91d1\u6d8c\u5165NFT\u677f\u5757\u3002","title":"4. \u5b83\u4eec\u706b\u8d77\u6765\u7684\u5171\u540c\u539f\u56e0"},{"location":"bitcoin/nft_mint/#5-nft","text":"\u8ddf\u8e2a\u5e73\u53f0\u52a8\u6001 \uff1aTensor\u3001Magic Eden\u7684\u9996\u9875\u63a8\u8350\u548c\u65b0\u9879\u76ee\u9884\u544a\u3002 \u52a0\u5165\u793e\u533a \uff1aDiscord\u3001\u63a8\u7279\u5173\u6ce8\u9879\u76ee\u65b9\u4e92\u52a8\u3002 \u5173\u6ce8\u8d4b\u80fd \uff1a\u662f\u5426\u6709\u4ee3\u5e01\u7a7a\u6295\u3001\u7ebf\u4e0b\u6d3b\u52a8\u7b49\u5b9e\u9645\u4ef7\u503c\u3002 \u614e\u9632\u98ce\u9669 \uff1a\u907f\u514d\u63a5\u76d8\u9ad8\u4ef7\u7092\u4f5c\u9879\u76ee\uff08\u53c2\u80032022\u5e74NFT\u718a\u5e02\u66b4\u8dcc\u6848\u4f8b\uff09\u3002 \u5982\u679c\u9700\u8981\u5177\u4f53\u5e73\u53f0\u7684\u6ce8\u518c/\u4ea4\u6613\u6559\u7a0b\uff08\u5982\u5982\u4f55\u5728Tensor\u72d9\u51fbNFT\uff09\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8bf4\u660e\uff01 \ud83d\ude80","title":"5. \u5982\u4f55\u53d1\u73b0\u4e0b\u4e00\u4e2a\u7206\u6b3eNFT\uff1f"},{"location":"bitcoin/nft_mint/#1-openseamagic-edentensor_1","text":"\u8fd9\u4e09\u4e2a\u662f\u76ee\u524d\u4e3b\u6d41\u7684 NFT\u4ea4\u6613\u5e02\u573a \uff08\u7c7b\u4f3c\u201cNFT\u7248\u6dd8\u5b9d\u201d\uff09\uff0c\u4f46\u9762\u5411\u4e0d\u540c\u533a\u5757\u94fe\u548c\u7528\u6237\u7fa4\u4f53\uff1a \u5e73\u53f0 \u4e3b\u8981\u94fe \u7279\u70b9 \u7528\u6237\u7fa4\u4f53 OpenSea \u4ee5\u592a\u574a\u3001Polygon - \u6700\u5927\u7efc\u5408NFT\u5e02\u573a - \u652f\u6301\u591a\u94fe - \u624b\u7eed\u8d39\uff1a2.5% \u4ee5\u592a\u574a\u4e3b\u6d41NFT\u6536\u85cf\u8005 Magic Eden Solana\u3001\u6bd4\u7279\u5e01Ordinals - Solana\u6700\u5927NFT\u5e02\u573a - \u652f\u6301\u6bd4\u7279\u5e01NFT\uff08Ordinals\uff09 - \u624b\u7eed\u8d39\uff1a2% Solana\u4ea4\u6613\u8005\u3001\u6bd4\u7279\u5e01NFT\u73a9\u5bb6 Tensor Solana - Solana\u4e13\u4e1a\u7ea7NFT\u5e02\u573a - \u4f4e\u624b\u7eed\u8d39\uff080%\u63a8\u5e7f\u671f\uff09 - \u9ad8\u7ea7\u4ea4\u6613\u5de5\u5177\uff08\u6279\u91cf\u6302\u5355\u3001\u72d9\u51fb\u7b49\uff09 \u804c\u4e1aNFT\u7092\u5bb6\u3001\u79d1\u5b66\u5bb6","title":"1. OpenSea\u3001Magic Eden\u3001Tensor \u662f\u4ec0\u4e48\uff1f"},{"location":"bitcoin/nft_mint/#2-tensoriansmad-ladsbonk-nft_1","text":"","title":"2. Tensorians\u3001Mad Lads\u3001BONK NFT \u4e3a\u4f55\u706b\u8d77\u6765\uff1f"},{"location":"bitcoin/nft_mint/#1tensorians_1","text":"\u7206\u53d1\u65f6\u95f4 \uff1a2023\u5e74Q2 \u5982\u4f55\u706b\uff1f \u514d\u8d39Mint \uff1a\u7528\u6237\u4ec5\u9700\u652f\u4ed8Gas\u8d39\uff08\u7ea60.01 SOL\uff09\uff0c\u65e0\u6210\u672c\u53c2\u4e0e\u3002 \u5e73\u53f0\u8d4b\u80fd \uff1aTensor\u4ea4\u6613\u5e02\u573a\u7684\u5b98\u65b9NFT\uff0c\u6301\u6709\u8005\u4eab\u53d7\u4ea4\u6613\u624b\u7eed\u8d39\u6298\u6263\u3001\u7a7a\u6295\u9884\u671f\u3002 \u793e\u533a\u5171\u8bc6 \uff1aSolana NFT\u73a9\u5bb6\u96c6\u4f53\u7092\u4f5c\uff0c\u5730\u677f\u4ef7\u4ece\u514d\u8d39\u6da8\u81f3\u6700\u9ad850 SOL\uff08\u7ea6$7,500\uff09\u3002","title":"\uff081\uff09Tensorians"},{"location":"bitcoin/nft_mint/#2mad-lads_1","text":"\u7206\u53d1\u65f6\u95f4 \uff1a2023\u5e744\u6708 \u5982\u4f55\u706b\uff1f \u80cc\u666f\u56e2\u961f \uff1a\u7531Solana\u751f\u6001\u77e5\u540d\u5f00\u53d1\u56e2\u961fBackpack\u63a8\u51fa\uff08\u521b\u59cb\u4eba\u66fe\u662fFTX\u9ad8\u7ba1\uff09\u3002 X\uff08\u63a8\u7279\uff09\u8425\u9500 \uff1a\u901a\u8fc7\u201c\u795e\u79d8\u9884\u70ed\u201d\u5438\u5f15\u5173\u6ce8\uff0c\u767d\u540d\u5355Mint\u4ef7\u683c6 SOL\uff08\u7ea6$900\uff09\u3002 \u5b9e\u7528\u4ef7\u503c \uff1a\u6301\u6709\u8005\u53ef\u53c2\u4e0eBackpack\u94b1\u5305\u751f\u6001\uff08\u5982\u7a7a\u6295\u3001\u72ec\u5bb6\u6d3b\u52a8\uff09\uff0c\u5730\u677f\u4ef7\u4e00\u5ea6\u7a81\u7834100 SOL\uff08\u7ea6$15,000\uff09\u3002","title":"\uff082\uff09Mad Lads"},{"location":"bitcoin/nft_mint/#3bonk-nft_1","text":"\u7206\u53d1\u65f6\u95f4 \uff1a2023\u5e7412\u6708 \u5982\u4f55\u706b\uff1f Memecoin\u8054\u52a8 \uff1a\u7ed1\u5b9aSolana\u751f\u6001\u9996\u4e2a\u7206\u706bMemecoin $BONK\uff08\u7a7a\u6295\u7ed9\u793e\u533a\uff09\u3002 \u624b\u673a\u8425\u9500 \uff1a\u8d2d\u4e70Solana Saga\u624b\u673a\u7684\u7528\u6237\u83b7\u8d60BONK NFT\uff0c\u540e\u56e0$BONK\u5e01\u4ef7\u66b4\u6da8\uff0cNFT\u88ab\u7092\u81f3\u9ad8\u6ea2\u4ef7\u3002 FOMO\u60c5\u7eea \uff1a\u90e8\u5206NFT\u552e\u4ef7\u8d851\u4e07\u7f8e\u5143\uff0c\u5438\u5f15\u6295\u673a\u8005\u5165\u573a\u3002","title":"\uff083\uff09BONK NFT"},{"location":"bitcoin/nft_mint/#3-nft20247_1","text":"NFT \u5730\u677f\u4ef7\uff08SOL\uff09 \u7f8e\u5143\u4ef7\u503c\uff08SOL=$150\uff09 \u70ed\u5ea6\u8d8b\u52bf Tensorians ~5 SOL ~$750 \u5e73\u53f0\u4f9d\u8d56\u6027\u5f3a\uff0c\u4ea4\u6613\u91cf\u4e0b\u6ed1 Mad Lads ~80 SOL ~$12,000 \u84dd\u7b79\u5730\u4f4d\u7a33\u56fa BONK NFT ~0.5 SOL ~$75 \u968f$BONK\u5e01\u4ef7\u6ce2\u52a8","title":"3. \u8fd9\u4e9bNFT\u7684\u73b0\u72b6\uff082024\u5e747\u6708\uff09"},{"location":"bitcoin/nft_mint/#4_1","text":"\u4f4e\u6210\u672c\u542f\u52a8 \uff1a\u514d\u8d39\u6216\u4f4e\u4ef7Mint\u964d\u4f4e\u53c2\u4e0e\u95e8\u69db\uff08\u5982Tensorians\uff09\u3002 \u5f3a\u793e\u533a\u8fd0\u8425 \uff1a\u63a8\u7279\u3001Discord\u7092\u4f5c\uff08\u5982Mad Lads\u7684\u201c\u795e\u79d8\u611f\u201d\u8425\u9500\uff09\u3002 \u5b9e\u7528\u8d4b\u80fd \uff1a\u7ed1\u5b9a\u751f\u6001\u6743\u76ca\uff08\u4ea4\u6613\u6298\u6263\u3001\u7a7a\u6295\u3001\u624b\u673a\u798f\u5229\uff09\u3002 \u5e02\u573a\u5468\u671f \uff1aSolana\u57282023\u5e74\u590d\u82cf\uff0c\u8d44\u91d1\u6d8c\u5165NFT\u677f\u5757\u3002","title":"4. \u5b83\u4eec\u706b\u8d77\u6765\u7684\u5171\u540c\u539f\u56e0"},{"location":"bitcoin/nft_mint/#5-nft_1","text":"\u8ddf\u8e2a\u5e73\u53f0\u52a8\u6001 \uff1aTensor\u3001Magic Eden\u7684\u9996\u9875\u63a8\u8350\u548c\u65b0\u9879\u76ee\u9884\u544a\u3002 \u52a0\u5165\u793e\u533a \uff1aDiscord\u3001\u63a8\u7279\u5173\u6ce8\u9879\u76ee\u65b9\u4e92\u52a8\u3002 \u5173\u6ce8\u8d4b\u80fd \uff1a\u662f\u5426\u6709\u4ee3\u5e01\u7a7a\u6295\u3001\u7ebf\u4e0b\u6d3b\u52a8\u7b49\u5b9e\u9645\u4ef7\u503c\u3002 \u614e\u9632\u98ce\u9669 \uff1a\u907f\u514d\u63a5\u76d8\u9ad8\u4ef7\u7092\u4f5c\u9879\u76ee\uff08\u53c2\u80032022\u5e74NFT\u718a\u5e02\u66b4\u8dcc\u6848\u4f8b\uff09\u3002 \u5982\u679c\u9700\u8981\u5177\u4f53\u5e73\u53f0\u7684\u6ce8\u518c/\u4ea4\u6613\u6559\u7a0b\uff08\u5982\u5982\u4f55\u5728Tensor\u72d9\u51fbNFT\uff09\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8bf4\u660e\uff01 \ud83d\ude80","title":"5. \u5982\u4f55\u53d1\u73b0\u4e0b\u4e00\u4e2a\u7206\u6b3eNFT\uff1f"},{"location":"bitcoin/norms/","text":"self financial wallet : Self Financial\uff08\u4e00\u5bb6\u7f8e\u56fd\u91d1\u878d\u79d1\u6280\u516c\u53f8\uff09\u63d0\u4f9b\u7684\u6570\u5b57\u94b1\u5305\u6216\u91d1\u878d\u8d26\u6237\u670d\u52a1 block wallet : \u57fa\u4e8e\u533a\u5757\u94fe\u7684 \u53bb\u4e2d\u5fc3\u5316\u52a0\u5bc6\u8d27\u5e01\u94b1\u5305\uff08Decentralized Wallet\uff09 Binance : \u5e01\u5b89\uff08Binance\uff09\u662f\u4e00\u5bb6\u5168\u7403\u9886\u5148\u7684\u52a0\u5bc6\u8d27\u5e01\u4ea4\u6613\u6240\uff0c\u63d0\u4f9b\u6bd4\u7279\u5e01\u3001\u4ee5\u592a\u574a\u7b49\u591a\u79cd\u52a0\u5bc6\u8d27\u5e01\u7684\u4ea4\u6613\u670d\u52a1\u3002 ultimus : \u4f18\u7c73\uff08UltiMUS\uff09\u662f\u4e00\u5bb6\u4e13\u6ce8\u4e8e\u63d0\u4f9b\u6570\u5b57\u94b1\u5305\u670d\u52a1\u7684\u516c\u53f8\u3002 poolin : \u6c60\u94f6\uff08Poolin\uff09\u662f\u4e00\u5bb6\u63d0\u4f9b\u6570\u5b57\u94b1\u5305\u670d\u52a1\u7684\u516c\u53f8\u3002 \u7b26\u6587 : \u7b26\u6587\uff08Rune\uff09\u662f\u6bd4\u7279\u5e01\u751f\u6001\u4e2d\u7684\u4e00\u79cd \u65b0\u578b\u4ee3\u5e01\u534f\u8bae\uff0c\u7531\u6bd4\u7279\u5e01\u5f00\u53d1\u8005 Casey Rodarmor \u63d0\u51fa\uff082023\u5e74\uff09\u3002\u57fa\u4e8e\u6bd4\u7279\u5e01 UTXO \u6a21\u578b\uff08\u7c7b\u4f3cOrdinals\uff0c\u4f46\u66f4\u9ad8\u6548\uff09,\u8f7b\u91cf\u7ea7\u4ee3\u5e01\u6807\u51c6\uff1a\u6bd4 BRC-20 \u66f4\u8282\u7701\u533a\u5757\u7a7a\u95f4,\u65e0\u9884\u6316\u3001\u516c\u5e73\u53d1\u884c\uff1a\u907f\u514d\u5927\u91cf\u4ee3\u5e01\u88ab\u65e9\u671f\u73a9\u5bb6\u5784\u65ad. Poolin\uff08\u5e01\u5370\uff09\u548c Antpool\uff08\u8682\u8681\u77ff\u6c60\uff09\u7684\u5173\u7cfb: \u65e0\u76f4\u63a5\u80a1\u6743\u5173\u7cfb\uff1aPoolin \u662f\u72ec\u7acb\u516c\u53f8\uff0c\u4e0d\u5c5e\u4e8e\u6bd4\u7279\u5927\u9646\u6216 Antpool\u3002\u7ade\u4e89\u5173\u7cfb\uff1a\u4e24\u8005\u5728\u77ff\u6c60\u5e02\u573a\u76f4\u63a5\u7ade\u4e89\uff0c\u4f46 Antpool \u6709\u6bd4\u7279\u5927\u9646\u7684\u7b97\u529b\u4f18\u52bf\u3002 PoS \u4ee3\u5e01 : PoS\uff08Proof of Stake\uff0c\u6743\u76ca\u8bc1\u660e\uff09\u4ee3\u5e01 \u662f\u6307\u91c7\u7528 \u6743\u76ca\u8bc1\u660e\u673a\u5236 \u7684\u533a\u5757\u94fe\u7f51\u7edc\u53d1\u884c\u7684\u52a0\u5bc6\u8d27\u5e01\u3002 PoW \u4ee3\u5e01 : PoW\uff08Proof of Work\uff0c\u5de5\u4f5c\u91cf\u8bc1\u660e\uff09\u4ee3\u5e01 \u662f\u6307\u91c7\u7528 \u5de5\u4f5c\u91cf\u8bc1\u660e\u673a\u5236 \u7684\u533a\u5757\u94fe\u7f51\u7edc\u53d1\u884c\u7684\u52a0\u5bc6\u8d27\u5e01\u3002 PoS \u7684\u6838\u5fc3\u673a\u5236 \uff081\uff09\u5982\u4f55\u8fd0\u4f5c\uff1f \u8d28\u62bc\uff08Staking\uff09\uff1a\u7528\u6237\u5c06\u4ee3\u5e01\u9501\u5b9a\u5728\u94b1\u5305\u6216\u667a\u80fd\u5408\u7ea6\u4e2d\uff0c\u6210\u4e3a\u7f51\u7edc\u9a8c\u8bc1\u8005\uff08Validator\uff09\u3002 \u51fa\u5757\u4e0e\u9a8c\u8bc1\uff1a\u7cfb\u7edf\u6309\u8d28\u62bc\u6bd4\u4f8b\u9009\u62e9\u9a8c\u8bc1\u8005\uff0c\u8d1f\u8d23\u6253\u5305\u4ea4\u6613\u5e76\u786e\u8ba4\u65b0\u533a\u5757\u3002 \u6536\u76ca\u5956\u52b1\uff1a\u9a8c\u8bc1\u8005\u83b7\u5f97\u65b0\u4ee3\u5e01\uff08\u901a\u80c0\u5956\u52b1\uff09\u548c\u4ea4\u6613\u624b\u7eed\u8d39\u3002 DAO \u6cbb\u7406 DAO\uff08Decentralized Autonomous Organization\uff0c\u53bb\u4e2d\u5fc3\u5316\u81ea\u6cbb\u7ec4\u7ec7\uff09 \u662f\u4e00\u79cd\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u6cbb\u7406\u6a21\u5f0f\uff0c\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u548c\u4ee3\u5e01\u6295\u7968\u5b9e\u73b0 \u65e0\u9700\u4e2d\u5fc3\u5316\u7ba1\u7406\u7684\u96c6\u4f53\u51b3\u7b56\u3002 pledge lending Pledge Lending \u662f\u4e00\u79cd \u52a0\u5bc6\u8d27\u5e01\u501f\u8d37\u6a21\u5f0f\uff0c\u7528\u6237\u901a\u8fc7\u8d28\u62bc\uff08\u9501\u5b9a\uff09\u6570\u5b57\u8d44\u4ea7\u4f5c\u4e3a\u62b5\u62bc\u54c1\uff0c\u501f\u51fa\u5176\u4ed6\u52a0\u5bc6\u8d27\u5e01\u6216\u6cd5\u5e01\u3002\u8fd9\u79cd\u6a21\u5f0f\u5728 DeFi\uff08\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\uff09\u548c CeFi\uff08\u4e2d\u5fc3\u5316\u91d1\u878d\uff09\u5e73\u53f0\u4e2d\u5e7f\u6cdb\u5e94\u7528\uff0c\u6838\u5fc3\u903b\u8f91\u662f \u201c\u62b5\u62bc\u501f\u6b3e\uff0c\u6e05\u7b97\u4fdd\u5b89\u5168\u201d\u3002","title":"Norms"},{"location":"bitcoin/pos/","text":"pos \u00b6 \u6743\u76ca\u8bc1\u660e\uff08Proof of Stake, PoS\uff09 \u662f\u533a\u5757\u94fe\u4e2d\u4e00\u79cd\u66ff\u4ee3 \u5de5\u4f5c\u91cf\u8bc1\u660e\uff08PoW\uff09 \u7684\u5171\u8bc6\u673a\u5236\uff0c\u65e8\u5728\u89e3\u51b3 PoW \u7684\u9ad8\u80fd\u8017\u95ee\u9898\uff0c\u540c\u65f6\u4fdd\u6301\u53bb\u4e2d\u5fc3\u5316\u548c\u5b89\u5168\u6027\u3002\u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f \u201c\u6301\u5e01\u8005\u6709\u6743\u53c2\u4e0e\u8bb0\u8d26\uff0c\u6301\u5e01\u8d8a\u591a\u3001\u6301\u6709\u65f6\u95f4\u8d8a\u957f\uff0c\u88ab\u9009\u4e3a\u9a8c\u8bc1\u8005\u7684\u6982\u7387\u8d8a\u9ad8\u201d \u3002 1. PoS \u7684\u57fa\u672c\u539f\u7406 \u00b6 (1) \u5982\u4f55\u9009\u62e9\u8bb0\u8d26\u8282\u70b9\uff1f \u00b6 \u5728 PoS \u4e2d\uff0c\u533a\u5757\u94fe\u7f51\u7edc\u4e0d\u518d\u4f9d\u8d56\u7b97\u529b\u7ade\u4e89\uff08\u5982 PoW \u7684\u6316\u77ff\uff09\uff0c\u800c\u662f\u6839\u636e \u6301\u5e01\u6570\u91cf\uff08Stake\uff09 \u548c \u6301\u5e01\u65f6\u95f4\uff08Coin Age\uff09 \u6765 \u968f\u673a\u9009\u62e9 \u4e00\u4e2a\u8282\u70b9\uff08\u6216\u4e00\u7ec4\u8282\u70b9\uff09\u6765\u751f\u6210\u65b0\u533a\u5757\u3002 \u6301\u5e01\u6570\u91cf\uff08Stake\uff09 \uff1a\u6301\u6709\u7684\u4ee3\u5e01\u8d8a\u591a\uff0c\u88ab\u9009\u4e2d\u7684\u6982\u7387\u8d8a\u9ad8\u3002 \u6301\u5e01\u65f6\u95f4\uff08Coin Age\uff09 \uff1a\u4ee3\u5e01\u5b58\u653e\u65f6\u95f4\u8d8a\u957f\uff0c\u6743\u91cd\u53ef\u80fd\u8d8a\u9ad8\uff08\u67d0\u4e9b PoS \u53d8\u79cd\u4f1a\u8003\u8651\uff09\u3002 \u4e3e\u4f8b \uff1a\u5047\u8bbe Alice \u6301\u6709 1000 \u4e2a\u4ee3\u5e01\uff0cBob \u6301\u6709 100 \u4e2a\u4ee3\u5e01\uff0c\u90a3\u4e48 Alice \u88ab\u9009\u4e3a\u533a\u5757\u751f\u4ea7\u8005\u7684\u6982\u7387\u662f Bob \u7684 10 \u500d\u3002 (2) \u5982\u4f55\u9632\u6b62\u6076\u610f\u884c\u4e3a\uff1f \u00b6 PoS \u901a\u8fc7 \u7ecf\u6d4e\u60e9\u7f5a\uff08Slashing\uff09 \u6765\u9632\u6b62\u8282\u70b9\u4f5c\u6076\uff1a - \u53cc\u82b1\u653b\u51fb \uff1a\u5982\u679c\u9a8c\u8bc1\u8005\u5c1d\u8bd5\u540c\u65f6\u7b7e\u7f72\u4e24\u4e2a\u51b2\u7a81\u7684\u533a\u5757\uff0c\u7cfb\u7edf\u4f1a \u7f5a\u6ca1\uff08Slash\uff09 \u5176\u62b5\u62bc\u7684\u4ee3\u5e01\u3002 - \u957f\u671f\u4e0d\u53c2\u4e0e \uff1a\u67d0\u4e9b PoS \u94fe\u4f1a\u60e9\u7f5a\u957f\u671f\u79bb\u7ebf\u7684\u8282\u70b9\u3002 \u8fd9\u6837\uff0c\u4f5c\u6076\u7684\u6210\u672c\u8fdc\u9ad8\u4e8e\u6536\u76ca\uff0c\u8282\u70b9\u6709\u52a8\u529b\u8bda\u5b9e\u8fd0\u884c\u3002 2. PoS \u7684\u5178\u578b\u6d41\u7a0b \u00b6 \u4ee5 \u4ee5\u592a\u574a 2.0\uff08Eth2\uff09 \u4e3a\u4f8b\uff1a 1. \u8d28\u62bc\uff08Staking\uff09 \uff1a\u7528\u6237\u9501\u5b9a\u4e00\u5b9a\u6570\u91cf\u7684 ETH\uff08\u5982 32 ETH\uff09\u6210\u4e3a\u9a8c\u8bc1\u8005\uff08Validator\uff09\u3002 2. \u968f\u673a\u9009\u62e9\u51fa\u5757\u8005 \uff1a\u7cfb\u7edf\u901a\u8fc7\u7b97\u6cd5\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u9a8c\u8bc1\u8005\u6765\u63d0\u8bae\u65b0\u533a\u5757\u3002 3. \u5176\u4ed6\u9a8c\u8bc1\u8005\u6295\u7968 \uff1a\u5176\u4ed6\u9a8c\u8bc1\u8005\u9a8c\u8bc1\u8be5\u533a\u5757\uff0c\u5e76\u6295\u7968\u786e\u8ba4\u5176\u6709\u6548\u6027\u3002 4. \u5956\u52b1\u4e0e\u60e9\u7f5a \uff1a - \u8bda\u5b9e\u8282\u70b9 \uff1a\u83b7\u5f97\u533a\u5757\u5956\u52b1\u548c\u4ea4\u6613\u624b\u7eed\u8d39\u3002 - \u6076\u610f\u8282\u70b9 \uff1a\u62b5\u62bc\u7684\u4ee3\u5e01\u88ab\u7f5a\u6ca1\u3002 3. \u4e3a\u4ec0\u4e48\u9700\u8981 PoS\uff1f\uff08\u76f8\u6bd4 PoW \u7684\u4f18\u52bf\uff09 \u00b6 \u5bf9\u6bd4\u9879 PoW\uff08\u6bd4\u7279\u5e01\uff09 PoS\uff08\u4ee5\u592a\u574a 2.0\uff09 \u80fd\u8017 \u6781\u9ad8\uff08\u4f9d\u8d56\u7b97\u529b\u7ade\u4e89\uff09 \u6781\u4f4e\uff08\u65e0\u9700\u6316\u77ff\uff09 \u51fa\u5757\u901f\u5ea6 \u6162\uff08\u6bd4\u7279\u5e01 10 \u5206\u949f/\u5757\uff09 \u5feb\uff08\u4ee5\u592a\u574a 2.0 \u7ea6 12 \u79d2/\u5757\uff09 \u53bb\u4e2d\u5fc3\u5316 \u77ff\u6c60\u53ef\u80fd\u5bfc\u81f4\u4e2d\u5fc3\u5316 \u6301\u5e01\u8005\u5747\u53ef\u53c2\u4e0e\uff0c\u66f4\u5206\u6563 \u5b89\u5168\u6027 \u4f9d\u8d56\u7b97\u529b\uff0c51% \u653b\u51fb\u53ef\u884c \u4f9d\u8d56\u7ecf\u6d4e\u62b5\u62bc\uff0c\u653b\u51fb\u6210\u672c\u9ad8 \u521d\u59cb\u5206\u914d \u77ff\u5de5\u4e3b\u5bfc\uff0c\u65e9\u671f\u5bb9\u6613\u96c6\u4e2d \u4ee3\u5e01\u5206\u914d\u66f4\u4f9d\u8d56\u5e02\u573a PoS \u7684\u6838\u5fc3\u4f18\u52bf \uff1a \u2705 \u8282\u80fd\u73af\u4fdd \uff1a\u65e0\u9700 ASIC \u77ff\u673a\uff0c\u51cf\u5c11\u7535\u529b\u6d6a\u8d39\u3002 \u2705 \u66f4\u5feb\u7684\u4ea4\u6613\u786e\u8ba4 \uff1a\u51fa\u5757\u901f\u5ea6\u63d0\u9ad8\uff0c\u9002\u5408\u667a\u80fd\u5408\u7ea6\u5e73\u53f0\u3002 \u2705 \u66f4\u9ad8\u7684\u5b89\u5168\u6027 \uff1a\u653b\u51fb\u8005\u9700\u8981\u63a7\u5236\u5927\u91cf\u4ee3\u5e01\uff0c\u6210\u672c\u6781\u9ad8\u3002 4. PoS \u7684\u6f5c\u5728\u95ee\u9898 \u00b6 \u5c3d\u7ba1 PoS \u6bd4 PoW \u66f4\u9ad8\u6548\uff0c\u4f46\u4ecd\u6709\u4e00\u4e9b\u4e89\u8bae\uff1a (1) \u5bcc\u4eba\u66f4\u5bcc\uff08\u9a6c\u592a\u6548\u5e94\uff09 \u00b6 \u6301\u5e01\u591a\u7684\u4eba\u66f4\u5bb9\u6613\u88ab\u9009\u4e2d\uff0c\u83b7\u5f97\u66f4\u591a\u5956\u52b1\uff0c\u5bfc\u81f4\u4ee3\u5e01\u8fdb\u4e00\u6b65\u96c6\u4e2d\u3002 \u53ef\u80fd\u5f62\u6210\u201c\u5be1\u5934\u5784\u65ad\u201d\uff0c\u5f71\u54cd\u53bb\u4e2d\u5fc3\u5316\u3002 (2) \u957f\u7a0b\u653b\u51fb\uff08Long-Range Attack\uff09 \u00b6 \u653b\u51fb\u8005\u53ef\u4ee5\u8d2d\u4e70\u65e7\u79c1\u94a5\uff0c\u4f2a\u9020\u4e00\u6761\u66f4\u957f\u7684\u94fe\uff08\u56e0\u4e3a PoS \u6ca1\u6709 PoW \u7684\u7b97\u529b\u6210\u672c\u9650\u5236\uff09\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a\u5f15\u5165 \u68c0\u67e5\u70b9\uff08Checkpointing\uff09 \u6216 \u7f5a\u6ca1\u673a\u5236 \u3002 (3) \u521d\u59cb\u4ee3\u5e01\u5206\u914d\u95ee\u9898 \u00b6 \u5982\u679c\u65e9\u671f\u4ee3\u5e01\u96c6\u4e2d\u5728\u5c11\u6570\u4eba\u624b\u4e2d\uff08\u5982 ICO \u5de8\u9cb8\uff09\uff0c\u53ef\u80fd\u5bfc\u81f4\u4e2d\u5fc3\u5316\u3002 (4) \u51b7\u542f\u52a8\u95ee\u9898 \u00b6 \u65b0\u94fe\u5982\u4f55\u516c\u5e73\u5206\u914d\u521d\u59cb\u4ee3\u5e01\uff1f\u5982\u679c\u91c7\u7528\u9884\u6316\u77ff\uff08Pre-mining\uff09\uff0c\u53ef\u80fd\u88ab\u8d28\u7591\u4e0d\u516c\u5e73\u3002 5. PoS \u7684\u53d8\u79cd \u00b6 \u53d8\u79cd \u7279\u70b9 \u5e94\u7528\u6848\u4f8b \u7eaf PoS \u6301\u5e01\u91cf\u51b3\u5b9a\u51fa\u5757\u6743 Peercoin\uff08\u9996\u4e2a PoS \u5e01\uff09 DPoS\uff08\u59d4\u6258 PoS\uff09 \u6301\u5e01\u8005\u6295\u7968\u9009\u4ee3\u8868\u51fa\u5757 EOS\u3001TRON LPoS\uff08\u79df\u8d41 PoS\uff09 \u5c0f\u6301\u5e01\u8005\u53ef\u79df\u501f\u4ee3\u5e01\u7ed9\u5927\u8282\u70b9 Waves PoS+PBFT \u7ed3\u5408 PoS \u548c\u62dc\u5360\u5ead\u5bb9\u9519 Cosmos (Tendermint) 6. \u603b\u7ed3 \u00b6 PoS \u662f\u4ec0\u4e48 \uff1a\u901a\u8fc7\u6301\u5e01\u91cf\u548c\u6301\u5e01\u65f6\u95f4\u9009\u62e9\u533a\u5757\u751f\u4ea7\u8005\uff0c\u53d6\u4ee3 PoW \u7684\u7b97\u529b\u7ade\u4e89\u3002 \u4e3a\u4ec0\u4e48\u7528 PoS \uff1a\u66f4\u8282\u80fd\u3001\u66f4\u5feb\u3001\u66f4\u9002\u5408\u667a\u80fd\u5408\u7ea6\u5e73\u53f0\uff08\u5982\u4ee5\u592a\u574a 2.0\uff09\u3002 PoS \u7684\u95ee\u9898 \uff1a\u5bcc\u4eba\u66f4\u5bcc\u3001\u957f\u7a0b\u653b\u51fb\u3001\u521d\u59cb\u5206\u914d\u53ef\u80fd\u4e0d\u516c\u5e73\u3002 PoS \u7684\u672a\u6765 \uff1a\u968f\u7740\u4ee5\u592a\u574a 2.0 \u7684\u63a8\u8fdb\uff0cPoS \u53ef\u80fd\u6210\u4e3a\u4e3b\u6d41\u5171\u8bc6\u673a\u5236\u4e4b\u4e00\u3002 \u5728 PoS\uff08\u6743\u76ca\u8bc1\u660e\uff09 \u548c DPoS\uff08\u59d4\u6258\u6743\u76ca\u8bc1\u660e\uff09 \u7b49\u5171\u8bc6\u673a\u5236\u4e2d\uff0c Slashing\uff08\u7f5a\u6ca1\uff09 \u662f\u6307\u5bf9\u6076\u610f\u6216\u4e0d\u5f53\u884c\u4e3a\u7684\u9a8c\u8bc1\u8005\uff08Validator\uff09\u8fdb\u884c\u60e9\u7f5a\uff0c\u901a\u5e38\u901a\u8fc7 \u9500\u6bc1\u6216\u51bb\u7ed3\u5176\u62b5\u62bc\u7684\u90e8\u5206\u6216\u5168\u90e8\u4ee3\u5e01 \u6765\u5b9e\u73b0\u3002 1. \u8c01\u8d1f\u8d23\u6267\u884c Slashing\uff1f \u00b6 Slashing \u901a\u5e38\u7531 \u533a\u5757\u94fe\u534f\u8bae\u672c\u8eab\u81ea\u52a8\u6267\u884c \uff0c\u800c\u4e0d\u662f\u7531\u67d0\u4e2a\u4e2d\u5fc3\u5316\u673a\u6784\u6216\u4e2a\u4eba\u51b3\u5b9a\u3002\u5177\u4f53\u6765\u8bf4\uff1a (1) \u534f\u8bae\u5185\u7f6e\u7684\u667a\u80fd\u5408\u7ea6/\u89c4\u5219 \u00b6 \u533a\u5757\u94fe\u7684\u5e95\u5c42\u4ee3\u7801\uff08\u5982\u4ee5\u592a\u574a 2.0 \u7684\u5171\u8bc6\u534f\u8bae\uff09\u4f1a \u81ea\u52a8\u68c0\u6d4b \u9a8c\u8bc1\u8005\u7684\u8fdd\u89c4\u884c\u4e3a\uff08\u5982\u53cc\u7b7e\u3001\u957f\u65f6\u95f4\u79bb\u7ebf\uff09\u3002 \u4e00\u65e6\u53d1\u73b0\u8fdd\u89c4\uff0c\u7cfb\u7edf\u4f1a \u81ea\u52a8\u6263\u9664 \u5176\u62b5\u62bc\u7684\u4ee3\u5e01\uff0c\u5e76\u53ef\u80fd\u5c06\u5176\u8e22\u51fa\u9a8c\u8bc1\u8005\u961f\u4f0d\u3002 \u4f8b\u5b50 \uff1a - \u4ee5\u592a\u574a 2.0 \uff1a\u5982\u679c\u9a8c\u8bc1\u8005\u540c\u65f6\u7b7e\u7f72\u4e24\u4e2a\u51b2\u7a81\u7684\u533a\u5757\uff08\u8bd5\u56fe\u53cc\u82b1\uff09\uff0c\u534f\u8bae\u4f1a\u81ea\u52a8\u7f5a\u6ca1\u5176\u90e8\u5206\u6216\u5168\u90e8\u62b5\u62bc\u7684 ETH\u3002 - Cosmos\uff08Tendermint\uff09 \uff1a\u5982\u679c\u9a8c\u8bc1\u8005\u53cc\u91cd\u7b7e\u540d\uff08Double Signing\uff09\uff0c\u7cfb\u7edf\u4f1a\u7f5a\u6ca1\u5176\u62b5\u62bc\u7684 ATOM \u4ee3\u5e01\u3002 (2) \u5176\u4ed6\u9a8c\u8bc1\u8005\u6216\u6cbb\u7406\u673a\u5236 \u00b6 \u5728\u67d0\u4e9b\u94fe\uff08\u5982 Polkadot\u3001Tezos\uff09\u4e2d\uff0c \u5176\u4ed6\u9a8c\u8bc1\u8005\u53ef\u4ee5\u4e3e\u62a5 \u6076\u610f\u884c\u4e3a\uff0c\u5e76\u7531\u6cbb\u7406\u673a\u5236\u6295\u7968\u51b3\u5b9a\u662f\u5426\u7f5a\u6ca1\u3002 \u5728 DPoS\uff08\u5982 EOS\uff09 \u4e2d\uff0c\u6301\u5e01\u8005\u53ef\u4ee5\u901a\u8fc7\u6295\u7968\u7f62\u514d\u4f5c\u6076\u7684\u533a\u5757\u751f\u4ea7\u8005\uff08BP\uff09\u3002 2. \u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u88ab Slashing\uff1f \u00b6 \u4e0d\u540c\u533a\u5757\u94fe\u7684 Slashing \u89c4\u5219\u4e0d\u540c\uff0c\u4f46\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u60c5\u51b5\uff1a | \u8fdd\u89c4\u884c\u4e3a | \u5904\u7f5a\u65b9\u5f0f | \u5178\u578b\u94fe | |-------------|-------------|-----------| | \u53cc\u91cd\u7b7e\u540d\uff08Double Signing\uff09 | \u7f5a\u6ca1\u5168\u90e8\u6216\u90e8\u5206\u62b5\u62bc\u4ee3\u5e01 | \u4ee5\u592a\u574a 2.0\u3001Cosmos | | \u957f\u65f6\u95f4\u79bb\u7ebf\uff08Inactivity\uff09 | \u7f5a\u6ca1\u5c11\u91cf\u4ee3\u5e01 | \u4ee5\u592a\u574a 2.0 | | \u6076\u610f\u5206\u53c9\uff08Fork Attack\uff09 | \u7f5a\u6ca1\u62b5\u62bc\u4ee3\u5e01 | Polkadot | | \u8fdd\u53cd\u6cbb\u7406\u89c4\u5219 | \u6295\u7968\u51b3\u5b9a\u7f5a\u6ca1 | Tezos | 3. Slashing \u7684\u8d44\u91d1\u53bb\u4e86\u54ea\u91cc\uff1f \u00b6 \u88ab\u7f5a\u6ca1\u7684\u4ee3\u5e01\u901a\u5e38\u6709\u4ee5\u4e0b\u51e0\u79cd\u53bb\u5411\uff1a 1. \u76f4\u63a5\u9500\u6bc1 \uff08\u5982\u4ee5\u592a\u574a 2.0\uff09\uff1a\u51cf\u5c11\u603b\u4f9b\u5e94\u91cf\uff0c\u901a\u7f29\u6a21\u578b\u3002 2. \u5206\u914d\u7ed9\u5176\u4ed6\u8bda\u5b9e\u8282\u70b9 \uff08\u5982 Cosmos\uff09\uff1a\u4f5c\u4e3a\u5956\u52b1\u6fc0\u52b1\u826f\u597d\u884c\u4e3a\u3002 3. \u8fdb\u5165\u6cbb\u7406\u91d1\u5e93 \uff08\u5982 Polkadot\uff09\uff1a\u7528\u4e8e\u751f\u6001\u53d1\u5c55\u6216\u793e\u533a\u6cbb\u7406\u3002 4. Slashing \u5982\u4f55\u9632\u6b62\u8bef\u4f24\uff1f \u00b6 \u7531\u4e8e Slashing \u662f\u81ea\u52a8\u6267\u884c\u7684\uff0c\u53ef\u80fd\u4f1a\u8bef\u7f5a \u7f51\u7edc\u95ee\u9898\u5bfc\u81f4\u7684\u77ed\u6682\u79bb\u7ebf \u8282\u70b9\u3002\u56e0\u6b64\uff0c\u8bb8\u591a PoS \u94fe\u91c7\u7528 \u6e10\u8fdb\u5f0f\u60e9\u7f5a \uff1a - \u8f7b\u5fae\u8fdd\u89c4 \uff08\u5982\u77ed\u65f6\u95f4\u79bb\u7ebf\uff09\uff1a\u4ec5\u6263\u9664\u5c11\u91cf\u4ee3\u5e01\u3002 - \u4e25\u91cd\u8fdd\u89c4 \uff08\u5982\u53cc\u7b7e\uff09\uff1a\u7f5a\u6ca1\u5168\u90e8\u62b5\u62bc\u4ee3\u5e01\uff0c\u5e76\u8e22\u51fa\u9a8c\u8bc1\u8005\u961f\u4f0d\u3002 5. \u603b\u7ed3 \u00b6 Slashing \u7531\u534f\u8bae\u81ea\u52a8\u6267\u884c \uff0c\u65e0\u9700\u4eba\u4e3a\u5e72\u9884\u3002 \u4e3b\u8981\u9488\u5bf9\u53cc\u7b7e\u3001\u79bb\u7ebf\u7b49\u6076\u610f\u6216\u5931\u804c\u884c\u4e3a \u3002 \u7f5a\u6ca1\u7684\u4ee3\u5e01\u53ef\u80fd\u88ab\u9500\u6bc1\u3001\u5206\u914d\u7ed9\u5176\u4ed6\u8282\u70b9\u6216\u8fdb\u5165\u91d1\u5e93 \u3002 \u9632\u6b62\u8bef\u4f24 \uff1a\u901a\u5e38\u91c7\u7528\u5206\u7ea7\u60e9\u7f5a\u673a\u5236\u3002 Slashing \u662f PoS \u5b89\u5168\u6027\u7684\u6838\u5fc3\u673a\u5236\uff0c\u901a\u8fc7\u7ecf\u6d4e\u60e9\u7f5a\u786e\u4fdd\u9a8c\u8bc1\u8005\u8bda\u5b9e\u8fd0\u884c\u3002\u5982\u679c\u4f60\u5bf9\u67d0\u4e2a\u94fe\u7684 Slashing \u7ec6\u8282\uff08\u5982\u4ee5\u592a\u574a 2.0 \u6216 Cosmos\uff09\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u7ee7\u7eed\u63d0\u95ee\uff01 \ud83d\ude0a","title":"pos"},{"location":"bitcoin/pos/#pos","text":"\u6743\u76ca\u8bc1\u660e\uff08Proof of Stake, PoS\uff09 \u662f\u533a\u5757\u94fe\u4e2d\u4e00\u79cd\u66ff\u4ee3 \u5de5\u4f5c\u91cf\u8bc1\u660e\uff08PoW\uff09 \u7684\u5171\u8bc6\u673a\u5236\uff0c\u65e8\u5728\u89e3\u51b3 PoW \u7684\u9ad8\u80fd\u8017\u95ee\u9898\uff0c\u540c\u65f6\u4fdd\u6301\u53bb\u4e2d\u5fc3\u5316\u548c\u5b89\u5168\u6027\u3002\u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f \u201c\u6301\u5e01\u8005\u6709\u6743\u53c2\u4e0e\u8bb0\u8d26\uff0c\u6301\u5e01\u8d8a\u591a\u3001\u6301\u6709\u65f6\u95f4\u8d8a\u957f\uff0c\u88ab\u9009\u4e3a\u9a8c\u8bc1\u8005\u7684\u6982\u7387\u8d8a\u9ad8\u201d \u3002","title":"pos"},{"location":"bitcoin/pos/#1-pos","text":"","title":"1. PoS \u7684\u57fa\u672c\u539f\u7406"},{"location":"bitcoin/pos/#1","text":"\u5728 PoS \u4e2d\uff0c\u533a\u5757\u94fe\u7f51\u7edc\u4e0d\u518d\u4f9d\u8d56\u7b97\u529b\u7ade\u4e89\uff08\u5982 PoW \u7684\u6316\u77ff\uff09\uff0c\u800c\u662f\u6839\u636e \u6301\u5e01\u6570\u91cf\uff08Stake\uff09 \u548c \u6301\u5e01\u65f6\u95f4\uff08Coin Age\uff09 \u6765 \u968f\u673a\u9009\u62e9 \u4e00\u4e2a\u8282\u70b9\uff08\u6216\u4e00\u7ec4\u8282\u70b9\uff09\u6765\u751f\u6210\u65b0\u533a\u5757\u3002 \u6301\u5e01\u6570\u91cf\uff08Stake\uff09 \uff1a\u6301\u6709\u7684\u4ee3\u5e01\u8d8a\u591a\uff0c\u88ab\u9009\u4e2d\u7684\u6982\u7387\u8d8a\u9ad8\u3002 \u6301\u5e01\u65f6\u95f4\uff08Coin Age\uff09 \uff1a\u4ee3\u5e01\u5b58\u653e\u65f6\u95f4\u8d8a\u957f\uff0c\u6743\u91cd\u53ef\u80fd\u8d8a\u9ad8\uff08\u67d0\u4e9b PoS \u53d8\u79cd\u4f1a\u8003\u8651\uff09\u3002 \u4e3e\u4f8b \uff1a\u5047\u8bbe Alice \u6301\u6709 1000 \u4e2a\u4ee3\u5e01\uff0cBob \u6301\u6709 100 \u4e2a\u4ee3\u5e01\uff0c\u90a3\u4e48 Alice \u88ab\u9009\u4e3a\u533a\u5757\u751f\u4ea7\u8005\u7684\u6982\u7387\u662f Bob \u7684 10 \u500d\u3002","title":"(1) \u5982\u4f55\u9009\u62e9\u8bb0\u8d26\u8282\u70b9\uff1f"},{"location":"bitcoin/pos/#2","text":"PoS \u901a\u8fc7 \u7ecf\u6d4e\u60e9\u7f5a\uff08Slashing\uff09 \u6765\u9632\u6b62\u8282\u70b9\u4f5c\u6076\uff1a - \u53cc\u82b1\u653b\u51fb \uff1a\u5982\u679c\u9a8c\u8bc1\u8005\u5c1d\u8bd5\u540c\u65f6\u7b7e\u7f72\u4e24\u4e2a\u51b2\u7a81\u7684\u533a\u5757\uff0c\u7cfb\u7edf\u4f1a \u7f5a\u6ca1\uff08Slash\uff09 \u5176\u62b5\u62bc\u7684\u4ee3\u5e01\u3002 - \u957f\u671f\u4e0d\u53c2\u4e0e \uff1a\u67d0\u4e9b PoS \u94fe\u4f1a\u60e9\u7f5a\u957f\u671f\u79bb\u7ebf\u7684\u8282\u70b9\u3002 \u8fd9\u6837\uff0c\u4f5c\u6076\u7684\u6210\u672c\u8fdc\u9ad8\u4e8e\u6536\u76ca\uff0c\u8282\u70b9\u6709\u52a8\u529b\u8bda\u5b9e\u8fd0\u884c\u3002","title":"(2) \u5982\u4f55\u9632\u6b62\u6076\u610f\u884c\u4e3a\uff1f"},{"location":"bitcoin/pos/#2-pos","text":"\u4ee5 \u4ee5\u592a\u574a 2.0\uff08Eth2\uff09 \u4e3a\u4f8b\uff1a 1. \u8d28\u62bc\uff08Staking\uff09 \uff1a\u7528\u6237\u9501\u5b9a\u4e00\u5b9a\u6570\u91cf\u7684 ETH\uff08\u5982 32 ETH\uff09\u6210\u4e3a\u9a8c\u8bc1\u8005\uff08Validator\uff09\u3002 2. \u968f\u673a\u9009\u62e9\u51fa\u5757\u8005 \uff1a\u7cfb\u7edf\u901a\u8fc7\u7b97\u6cd5\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u9a8c\u8bc1\u8005\u6765\u63d0\u8bae\u65b0\u533a\u5757\u3002 3. \u5176\u4ed6\u9a8c\u8bc1\u8005\u6295\u7968 \uff1a\u5176\u4ed6\u9a8c\u8bc1\u8005\u9a8c\u8bc1\u8be5\u533a\u5757\uff0c\u5e76\u6295\u7968\u786e\u8ba4\u5176\u6709\u6548\u6027\u3002 4. \u5956\u52b1\u4e0e\u60e9\u7f5a \uff1a - \u8bda\u5b9e\u8282\u70b9 \uff1a\u83b7\u5f97\u533a\u5757\u5956\u52b1\u548c\u4ea4\u6613\u624b\u7eed\u8d39\u3002 - \u6076\u610f\u8282\u70b9 \uff1a\u62b5\u62bc\u7684\u4ee3\u5e01\u88ab\u7f5a\u6ca1\u3002","title":"2. PoS \u7684\u5178\u578b\u6d41\u7a0b"},{"location":"bitcoin/pos/#3-pos-pow","text":"\u5bf9\u6bd4\u9879 PoW\uff08\u6bd4\u7279\u5e01\uff09 PoS\uff08\u4ee5\u592a\u574a 2.0\uff09 \u80fd\u8017 \u6781\u9ad8\uff08\u4f9d\u8d56\u7b97\u529b\u7ade\u4e89\uff09 \u6781\u4f4e\uff08\u65e0\u9700\u6316\u77ff\uff09 \u51fa\u5757\u901f\u5ea6 \u6162\uff08\u6bd4\u7279\u5e01 10 \u5206\u949f/\u5757\uff09 \u5feb\uff08\u4ee5\u592a\u574a 2.0 \u7ea6 12 \u79d2/\u5757\uff09 \u53bb\u4e2d\u5fc3\u5316 \u77ff\u6c60\u53ef\u80fd\u5bfc\u81f4\u4e2d\u5fc3\u5316 \u6301\u5e01\u8005\u5747\u53ef\u53c2\u4e0e\uff0c\u66f4\u5206\u6563 \u5b89\u5168\u6027 \u4f9d\u8d56\u7b97\u529b\uff0c51% \u653b\u51fb\u53ef\u884c \u4f9d\u8d56\u7ecf\u6d4e\u62b5\u62bc\uff0c\u653b\u51fb\u6210\u672c\u9ad8 \u521d\u59cb\u5206\u914d \u77ff\u5de5\u4e3b\u5bfc\uff0c\u65e9\u671f\u5bb9\u6613\u96c6\u4e2d \u4ee3\u5e01\u5206\u914d\u66f4\u4f9d\u8d56\u5e02\u573a PoS \u7684\u6838\u5fc3\u4f18\u52bf \uff1a \u2705 \u8282\u80fd\u73af\u4fdd \uff1a\u65e0\u9700 ASIC \u77ff\u673a\uff0c\u51cf\u5c11\u7535\u529b\u6d6a\u8d39\u3002 \u2705 \u66f4\u5feb\u7684\u4ea4\u6613\u786e\u8ba4 \uff1a\u51fa\u5757\u901f\u5ea6\u63d0\u9ad8\uff0c\u9002\u5408\u667a\u80fd\u5408\u7ea6\u5e73\u53f0\u3002 \u2705 \u66f4\u9ad8\u7684\u5b89\u5168\u6027 \uff1a\u653b\u51fb\u8005\u9700\u8981\u63a7\u5236\u5927\u91cf\u4ee3\u5e01\uff0c\u6210\u672c\u6781\u9ad8\u3002","title":"3. \u4e3a\u4ec0\u4e48\u9700\u8981 PoS\uff1f\uff08\u76f8\u6bd4 PoW \u7684\u4f18\u52bf\uff09"},{"location":"bitcoin/pos/#4-pos","text":"\u5c3d\u7ba1 PoS \u6bd4 PoW \u66f4\u9ad8\u6548\uff0c\u4f46\u4ecd\u6709\u4e00\u4e9b\u4e89\u8bae\uff1a","title":"4. PoS \u7684\u6f5c\u5728\u95ee\u9898"},{"location":"bitcoin/pos/#1_1","text":"\u6301\u5e01\u591a\u7684\u4eba\u66f4\u5bb9\u6613\u88ab\u9009\u4e2d\uff0c\u83b7\u5f97\u66f4\u591a\u5956\u52b1\uff0c\u5bfc\u81f4\u4ee3\u5e01\u8fdb\u4e00\u6b65\u96c6\u4e2d\u3002 \u53ef\u80fd\u5f62\u6210\u201c\u5be1\u5934\u5784\u65ad\u201d\uff0c\u5f71\u54cd\u53bb\u4e2d\u5fc3\u5316\u3002","title":"(1) \u5bcc\u4eba\u66f4\u5bcc\uff08\u9a6c\u592a\u6548\u5e94\uff09"},{"location":"bitcoin/pos/#2-long-range-attack","text":"\u653b\u51fb\u8005\u53ef\u4ee5\u8d2d\u4e70\u65e7\u79c1\u94a5\uff0c\u4f2a\u9020\u4e00\u6761\u66f4\u957f\u7684\u94fe\uff08\u56e0\u4e3a PoS \u6ca1\u6709 PoW \u7684\u7b97\u529b\u6210\u672c\u9650\u5236\uff09\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a\u5f15\u5165 \u68c0\u67e5\u70b9\uff08Checkpointing\uff09 \u6216 \u7f5a\u6ca1\u673a\u5236 \u3002","title":"(2) \u957f\u7a0b\u653b\u51fb\uff08Long-Range Attack\uff09"},{"location":"bitcoin/pos/#3","text":"\u5982\u679c\u65e9\u671f\u4ee3\u5e01\u96c6\u4e2d\u5728\u5c11\u6570\u4eba\u624b\u4e2d\uff08\u5982 ICO \u5de8\u9cb8\uff09\uff0c\u53ef\u80fd\u5bfc\u81f4\u4e2d\u5fc3\u5316\u3002","title":"(3) \u521d\u59cb\u4ee3\u5e01\u5206\u914d\u95ee\u9898"},{"location":"bitcoin/pos/#4","text":"\u65b0\u94fe\u5982\u4f55\u516c\u5e73\u5206\u914d\u521d\u59cb\u4ee3\u5e01\uff1f\u5982\u679c\u91c7\u7528\u9884\u6316\u77ff\uff08Pre-mining\uff09\uff0c\u53ef\u80fd\u88ab\u8d28\u7591\u4e0d\u516c\u5e73\u3002","title":"(4) \u51b7\u542f\u52a8\u95ee\u9898"},{"location":"bitcoin/pos/#5-pos","text":"\u53d8\u79cd \u7279\u70b9 \u5e94\u7528\u6848\u4f8b \u7eaf PoS \u6301\u5e01\u91cf\u51b3\u5b9a\u51fa\u5757\u6743 Peercoin\uff08\u9996\u4e2a PoS \u5e01\uff09 DPoS\uff08\u59d4\u6258 PoS\uff09 \u6301\u5e01\u8005\u6295\u7968\u9009\u4ee3\u8868\u51fa\u5757 EOS\u3001TRON LPoS\uff08\u79df\u8d41 PoS\uff09 \u5c0f\u6301\u5e01\u8005\u53ef\u79df\u501f\u4ee3\u5e01\u7ed9\u5927\u8282\u70b9 Waves PoS+PBFT \u7ed3\u5408 PoS \u548c\u62dc\u5360\u5ead\u5bb9\u9519 Cosmos (Tendermint)","title":"5. PoS \u7684\u53d8\u79cd"},{"location":"bitcoin/pos/#6","text":"PoS \u662f\u4ec0\u4e48 \uff1a\u901a\u8fc7\u6301\u5e01\u91cf\u548c\u6301\u5e01\u65f6\u95f4\u9009\u62e9\u533a\u5757\u751f\u4ea7\u8005\uff0c\u53d6\u4ee3 PoW \u7684\u7b97\u529b\u7ade\u4e89\u3002 \u4e3a\u4ec0\u4e48\u7528 PoS \uff1a\u66f4\u8282\u80fd\u3001\u66f4\u5feb\u3001\u66f4\u9002\u5408\u667a\u80fd\u5408\u7ea6\u5e73\u53f0\uff08\u5982\u4ee5\u592a\u574a 2.0\uff09\u3002 PoS \u7684\u95ee\u9898 \uff1a\u5bcc\u4eba\u66f4\u5bcc\u3001\u957f\u7a0b\u653b\u51fb\u3001\u521d\u59cb\u5206\u914d\u53ef\u80fd\u4e0d\u516c\u5e73\u3002 PoS \u7684\u672a\u6765 \uff1a\u968f\u7740\u4ee5\u592a\u574a 2.0 \u7684\u63a8\u8fdb\uff0cPoS \u53ef\u80fd\u6210\u4e3a\u4e3b\u6d41\u5171\u8bc6\u673a\u5236\u4e4b\u4e00\u3002 \u5728 PoS\uff08\u6743\u76ca\u8bc1\u660e\uff09 \u548c DPoS\uff08\u59d4\u6258\u6743\u76ca\u8bc1\u660e\uff09 \u7b49\u5171\u8bc6\u673a\u5236\u4e2d\uff0c Slashing\uff08\u7f5a\u6ca1\uff09 \u662f\u6307\u5bf9\u6076\u610f\u6216\u4e0d\u5f53\u884c\u4e3a\u7684\u9a8c\u8bc1\u8005\uff08Validator\uff09\u8fdb\u884c\u60e9\u7f5a\uff0c\u901a\u5e38\u901a\u8fc7 \u9500\u6bc1\u6216\u51bb\u7ed3\u5176\u62b5\u62bc\u7684\u90e8\u5206\u6216\u5168\u90e8\u4ee3\u5e01 \u6765\u5b9e\u73b0\u3002","title":"6. \u603b\u7ed3"},{"location":"bitcoin/pos/#1-slashing","text":"Slashing \u901a\u5e38\u7531 \u533a\u5757\u94fe\u534f\u8bae\u672c\u8eab\u81ea\u52a8\u6267\u884c \uff0c\u800c\u4e0d\u662f\u7531\u67d0\u4e2a\u4e2d\u5fc3\u5316\u673a\u6784\u6216\u4e2a\u4eba\u51b3\u5b9a\u3002\u5177\u4f53\u6765\u8bf4\uff1a","title":"1. \u8c01\u8d1f\u8d23\u6267\u884c Slashing\uff1f"},{"location":"bitcoin/pos/#1_2","text":"\u533a\u5757\u94fe\u7684\u5e95\u5c42\u4ee3\u7801\uff08\u5982\u4ee5\u592a\u574a 2.0 \u7684\u5171\u8bc6\u534f\u8bae\uff09\u4f1a \u81ea\u52a8\u68c0\u6d4b \u9a8c\u8bc1\u8005\u7684\u8fdd\u89c4\u884c\u4e3a\uff08\u5982\u53cc\u7b7e\u3001\u957f\u65f6\u95f4\u79bb\u7ebf\uff09\u3002 \u4e00\u65e6\u53d1\u73b0\u8fdd\u89c4\uff0c\u7cfb\u7edf\u4f1a \u81ea\u52a8\u6263\u9664 \u5176\u62b5\u62bc\u7684\u4ee3\u5e01\uff0c\u5e76\u53ef\u80fd\u5c06\u5176\u8e22\u51fa\u9a8c\u8bc1\u8005\u961f\u4f0d\u3002 \u4f8b\u5b50 \uff1a - \u4ee5\u592a\u574a 2.0 \uff1a\u5982\u679c\u9a8c\u8bc1\u8005\u540c\u65f6\u7b7e\u7f72\u4e24\u4e2a\u51b2\u7a81\u7684\u533a\u5757\uff08\u8bd5\u56fe\u53cc\u82b1\uff09\uff0c\u534f\u8bae\u4f1a\u81ea\u52a8\u7f5a\u6ca1\u5176\u90e8\u5206\u6216\u5168\u90e8\u62b5\u62bc\u7684 ETH\u3002 - Cosmos\uff08Tendermint\uff09 \uff1a\u5982\u679c\u9a8c\u8bc1\u8005\u53cc\u91cd\u7b7e\u540d\uff08Double Signing\uff09\uff0c\u7cfb\u7edf\u4f1a\u7f5a\u6ca1\u5176\u62b5\u62bc\u7684 ATOM \u4ee3\u5e01\u3002","title":"(1) \u534f\u8bae\u5185\u7f6e\u7684\u667a\u80fd\u5408\u7ea6/\u89c4\u5219"},{"location":"bitcoin/pos/#2_1","text":"\u5728\u67d0\u4e9b\u94fe\uff08\u5982 Polkadot\u3001Tezos\uff09\u4e2d\uff0c \u5176\u4ed6\u9a8c\u8bc1\u8005\u53ef\u4ee5\u4e3e\u62a5 \u6076\u610f\u884c\u4e3a\uff0c\u5e76\u7531\u6cbb\u7406\u673a\u5236\u6295\u7968\u51b3\u5b9a\u662f\u5426\u7f5a\u6ca1\u3002 \u5728 DPoS\uff08\u5982 EOS\uff09 \u4e2d\uff0c\u6301\u5e01\u8005\u53ef\u4ee5\u901a\u8fc7\u6295\u7968\u7f62\u514d\u4f5c\u6076\u7684\u533a\u5757\u751f\u4ea7\u8005\uff08BP\uff09\u3002","title":"(2) \u5176\u4ed6\u9a8c\u8bc1\u8005\u6216\u6cbb\u7406\u673a\u5236"},{"location":"bitcoin/pos/#2-slashing","text":"\u4e0d\u540c\u533a\u5757\u94fe\u7684 Slashing \u89c4\u5219\u4e0d\u540c\uff0c\u4f46\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u60c5\u51b5\uff1a | \u8fdd\u89c4\u884c\u4e3a | \u5904\u7f5a\u65b9\u5f0f | \u5178\u578b\u94fe | |-------------|-------------|-----------| | \u53cc\u91cd\u7b7e\u540d\uff08Double Signing\uff09 | \u7f5a\u6ca1\u5168\u90e8\u6216\u90e8\u5206\u62b5\u62bc\u4ee3\u5e01 | \u4ee5\u592a\u574a 2.0\u3001Cosmos | | \u957f\u65f6\u95f4\u79bb\u7ebf\uff08Inactivity\uff09 | \u7f5a\u6ca1\u5c11\u91cf\u4ee3\u5e01 | \u4ee5\u592a\u574a 2.0 | | \u6076\u610f\u5206\u53c9\uff08Fork Attack\uff09 | \u7f5a\u6ca1\u62b5\u62bc\u4ee3\u5e01 | Polkadot | | \u8fdd\u53cd\u6cbb\u7406\u89c4\u5219 | \u6295\u7968\u51b3\u5b9a\u7f5a\u6ca1 | Tezos |","title":"2. \u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u88ab Slashing\uff1f"},{"location":"bitcoin/pos/#3-slashing","text":"\u88ab\u7f5a\u6ca1\u7684\u4ee3\u5e01\u901a\u5e38\u6709\u4ee5\u4e0b\u51e0\u79cd\u53bb\u5411\uff1a 1. \u76f4\u63a5\u9500\u6bc1 \uff08\u5982\u4ee5\u592a\u574a 2.0\uff09\uff1a\u51cf\u5c11\u603b\u4f9b\u5e94\u91cf\uff0c\u901a\u7f29\u6a21\u578b\u3002 2. \u5206\u914d\u7ed9\u5176\u4ed6\u8bda\u5b9e\u8282\u70b9 \uff08\u5982 Cosmos\uff09\uff1a\u4f5c\u4e3a\u5956\u52b1\u6fc0\u52b1\u826f\u597d\u884c\u4e3a\u3002 3. \u8fdb\u5165\u6cbb\u7406\u91d1\u5e93 \uff08\u5982 Polkadot\uff09\uff1a\u7528\u4e8e\u751f\u6001\u53d1\u5c55\u6216\u793e\u533a\u6cbb\u7406\u3002","title":"3. Slashing \u7684\u8d44\u91d1\u53bb\u4e86\u54ea\u91cc\uff1f"},{"location":"bitcoin/pos/#4-slashing","text":"\u7531\u4e8e Slashing \u662f\u81ea\u52a8\u6267\u884c\u7684\uff0c\u53ef\u80fd\u4f1a\u8bef\u7f5a \u7f51\u7edc\u95ee\u9898\u5bfc\u81f4\u7684\u77ed\u6682\u79bb\u7ebf \u8282\u70b9\u3002\u56e0\u6b64\uff0c\u8bb8\u591a PoS \u94fe\u91c7\u7528 \u6e10\u8fdb\u5f0f\u60e9\u7f5a \uff1a - \u8f7b\u5fae\u8fdd\u89c4 \uff08\u5982\u77ed\u65f6\u95f4\u79bb\u7ebf\uff09\uff1a\u4ec5\u6263\u9664\u5c11\u91cf\u4ee3\u5e01\u3002 - \u4e25\u91cd\u8fdd\u89c4 \uff08\u5982\u53cc\u7b7e\uff09\uff1a\u7f5a\u6ca1\u5168\u90e8\u62b5\u62bc\u4ee3\u5e01\uff0c\u5e76\u8e22\u51fa\u9a8c\u8bc1\u8005\u961f\u4f0d\u3002","title":"4. Slashing \u5982\u4f55\u9632\u6b62\u8bef\u4f24\uff1f"},{"location":"bitcoin/pos/#5","text":"Slashing \u7531\u534f\u8bae\u81ea\u52a8\u6267\u884c \uff0c\u65e0\u9700\u4eba\u4e3a\u5e72\u9884\u3002 \u4e3b\u8981\u9488\u5bf9\u53cc\u7b7e\u3001\u79bb\u7ebf\u7b49\u6076\u610f\u6216\u5931\u804c\u884c\u4e3a \u3002 \u7f5a\u6ca1\u7684\u4ee3\u5e01\u53ef\u80fd\u88ab\u9500\u6bc1\u3001\u5206\u914d\u7ed9\u5176\u4ed6\u8282\u70b9\u6216\u8fdb\u5165\u91d1\u5e93 \u3002 \u9632\u6b62\u8bef\u4f24 \uff1a\u901a\u5e38\u91c7\u7528\u5206\u7ea7\u60e9\u7f5a\u673a\u5236\u3002 Slashing \u662f PoS \u5b89\u5168\u6027\u7684\u6838\u5fc3\u673a\u5236\uff0c\u901a\u8fc7\u7ecf\u6d4e\u60e9\u7f5a\u786e\u4fdd\u9a8c\u8bc1\u8005\u8bda\u5b9e\u8fd0\u884c\u3002\u5982\u679c\u4f60\u5bf9\u67d0\u4e2a\u94fe\u7684 Slashing \u7ec6\u8282\uff08\u5982\u4ee5\u592a\u574a 2.0 \u6216 Cosmos\uff09\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u7ee7\u7eed\u63d0\u95ee\uff01 \ud83d\ude0a","title":"5. \u603b\u7ed3"},{"location":"bitcoin/problem/","text":"\u533a\u5757\u94fe\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5 \u00b6 \u6700\u8fd1\u52a0\u5bc6\u8d27\u5e01\u5e02\u573a\u6d8c\u73b0\u4e86\u8bb8\u591a\u65b0\u9879\u76ee\uff0c\u8986\u76d6\u4e86**Layer1\u516c\u94fe\u3001Layer2\u6269\u5c55\u3001DeFi\u3001AI+\u533a\u5757\u94fe\u3001Memecoin**\u7b49\u591a\u4e2a\u9886\u57df\u3002\u4ee5\u4e0b\u662f2023-2024\u5e74\u70ed\u5ea6\u8f83\u9ad8\u7684\u65b0\u5e01\u79cd\u53ca\u5176\u80cc\u540e\u7684\u903b\u8f91\uff1a \u4e00\u3001 \u65b0\u516c\u94fe\uff1a\u9ad8\u6027\u80fd\u4e0e\u6a21\u5757\u5316 \u00b6 Sui (SUI) & Aptos (APT) - \u5b9a\u4f4d \uff1a\u9ad8\u6027\u80fdLayer1\uff0c\u4e3b\u6253Move\u8bed\u8a00\uff08\u539fFacebook Diem\u56e2\u961f\u5f00\u53d1\uff09\u3002 - \u6280\u672f\u4eae\u70b9 \uff1a\u5e76\u884c\u6267\u884c\u4ea4\u6613\uff08\u7c7b\u4f3cSolana\uff09\uff0cTPS\u53ef\u8fbe\u6570\u5343\u3002 - \u7206\u706b\u539f\u56e0 \uff1a\u8d44\u672c\u80cc\u4e66\uff08a16z\u3001Binance Labs\u6295\u8d44\uff09\uff0c\u5bf9\u6807Solana\u4f46\u66f4\u5f3a\u8c03\u5b89\u5168\u6027\u3002 Celestia (TIA) - \u5b9a\u4f4d \uff1a\u9996\u4e2a\u6a21\u5757\u5316\u533a\u5757\u94fe\uff0c\u4e13\u6ce8\u201c\u6570\u636e\u53ef\u7528\u6027\u5c42\u201d\uff08DA\uff09\u3002 - \u6280\u672f\u4eae\u70b9 \uff1a\u5176\u4ed6\u94fe\uff08\u5982Rollups\uff09\u53ef\u5c06\u6570\u636e\u5b58\u50a8\u5728Celestia\u4e0a\uff0c\u964d\u4f4e\u5b58\u50a8\u6210\u672c\u3002 - \u7206\u706b\u539f\u56e0 \uff1a\u6a21\u5757\u5316\u662f2024\u5e74\u6838\u5fc3\u53d9\u4e8b\uff0c\u4ee5\u592a\u574aEIP-4844\uff08Proto-Danksharding\uff09\u7684\u76f4\u63a5\u53d7\u76ca\u8005\u3002 Sei (SEI) \u5b9a\u4f4d \uff1a\u4e3a\u4ea4\u6613\u4f18\u5316\u7684\u516c\u94fe\uff08DeFi\u4e13\u7528\u94fe\uff09\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u5185\u7f6e\u8ba2\u5355\u7c3f\u6a21\u5757\uff0c\u4ea4\u6613\u7ed3\u7b97\u901f\u5ea6\u6781\u5feb\uff08TPS 20,000+\uff09\u3002 \u7206\u706b\u539f\u56e0 \uff1a\u6293\u4f4f\u201c\u4ea4\u6613\u4e13\u7528\u94fe\u201d\u9700\u6c42\uff0c\u7a7a\u6295\u9884\u671f\u5e26\u52a8\u65e9\u671f\u70ed\u5ea6\u3002 \u4e8c\u3001 Layer2\u6269\u5c55\uff1a\u4ee5\u592a\u574a\u751f\u6001\u7684\u7a81\u56f4\u8005 \u00b6 Blast (BLAST) \u5b9a\u4f4d \uff1a\u81ea\u5e26\u539f\u751f\u6536\u76ca\u7684Layer2\uff08\u7531Blur\u56e2\u961f\u5f00\u53d1\uff09\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u7528\u6237\u5b58\u5165\u7684ETH\u81ea\u52a8\u751f\u606f\uff08\u901a\u8fc7Lido\u7b49\u534f\u8bae\uff09\u3002 \u7206\u706b\u539f\u56e0 \uff1a\u7a7a\u6295\u9884\u671f+\u521b\u65b0\u6027\u6536\u76ca\u6a21\u578b\uff0cTVL\uff08\u9501\u4ed3\u91cf\uff09\u77ed\u671f\u5185\u7a81\u783420\u4ebf\u7f8e\u5143\u3002 Starknet (STRK) & zkSync (ZK) \u5b9a\u4f4d \uff1aZK-Rollup Layer2\uff0c\u4e3b\u6253\u9ad8\u6027\u80fd\u548c\u4f4e\u6210\u672c\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u96f6\u77e5\u8bc6\u8bc1\u660e\uff08ZKP\uff09\u6280\u672f\u4fdd\u969c\u9690\u79c1\u548c\u6269\u5c55\u6027\u3002 \u7206\u706b\u539f\u56e0 \uff1a2024\u5e74\u5927\u989d\u7a7a\u6295\uff08Starknet\u7a7a\u629512\u4ebf\u679a\u4ee3\u5e01\uff09\uff0cZK\u6280\u672f\u53d9\u4e8b\u5f3a\u52b2\u3002 \u4e09\u3001 DeFi 2.0\uff1a\u521b\u65b0\u91d1\u878d\u534f\u8bae \u00b6 Pendle (PENDLE) \u5b9a\u4f4d \uff1a\u6536\u76ca\u4ee3\u5e01\u5316\u534f\u8bae\uff08\u5c06\u672a\u6765\u6536\u76ca\u53d8\u4e3a\u53ef\u4ea4\u6613\u8d44\u4ea7\uff09\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u7528\u6237\u53ef\u62c6\u5206LSDFi\uff08\u5982Lido\u7684stETH\uff09\u7684\u6536\u76ca\u6743\u5e76\u4ea4\u6613\u3002 \u7206\u706b\u539f\u56e0 \uff1a2023\u5e74LSDFi\uff08\u6d41\u52a8\u6027\u8d28\u62bc\u884d\u751f\u54c1\uff09\u7206\u53d1\uff0cPendle\u6210\u4e3a\u6838\u5fc3\u5de5\u5177\u3002 Ethena (ENA) \u5b9a\u4f4d \uff1a\u5408\u6210\u7f8e\u5143\u7a33\u5b9a\u5e01\u534f\u8bae\uff08\u7c7b\u4f3c\u201c\u52a0\u5bc6\u7248\u7f8e\u5143\u201d\uff09\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u901a\u8fc7\u62b5\u62bcETH\u671f\u8d27\u5bf9\u51b2\u98ce\u9669\uff0c\u63d0\u4f9b\u9ad8\u5e74\u5316\u6536\u76ca\uff08\u4e00\u5ea6\u8fbe30%+\uff09\u3002 \u7206\u706b\u539f\u56e0 \uff1aUSDT/BUSD\u76d1\u7ba1\u538b\u529b\u4e0b\uff0c\u5e02\u573a\u5bf9\u53bb\u4e2d\u5fc3\u5316\u7a33\u5b9a\u5e01\u9700\u6c42\u6fc0\u589e\u3002 \u56db\u3001 AI+\u533a\u5757\u94fe\uff1a2024\u5e74\u6700\u5f3a\u53d9\u4e8b \u00b6 Bittensor (TAO) \u5b9a\u4f4d \uff1a\u53bb\u4e2d\u5fc3\u5316\u673a\u5668\u5b66\u4e60\u7f51\u7edc\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u8282\u70b9\u8d21\u732e\u7b97\u529b\u8bad\u7ec3AI\u6a21\u578b\uff0c\u6309\u8d21\u732e\u5206\u914d\u4ee3\u5e01\u5956\u52b1\u3002 \u7206\u706b\u539f\u56e0 \uff1aAI\u8d5b\u9053\u70ed\u5ea6\u5916\u6ea2\uff0c\u88ab\u79f0\u4f5c\u201c\u52a0\u5bc6\u7248\u7684AWS\u201d\u3002 Render (RNDR) & Akash (AKT) \u5b9a\u4f4d \uff1a\u53bb\u4e2d\u5fc3\u5316GPU\u7b97\u529b\u5e02\u573a\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u7528\u6237\u51fa\u79df\u95f2\u7f6e\u7b97\u529b\uff08\u5982\u663e\u5361\uff09\u6362\u53d6\u4ee3\u5e01\u3002 \u7206\u706b\u539f\u56e0 \uff1aAI\u7b97\u529b\u77ed\u7f3a\uff0c\u4f4e\u6210\u672c\u66ff\u4ee3\u65b9\u6848\u53d7\u8ffd\u6367\u3002 \u4e94\u3001 Memecoin\uff1a\u793e\u533a\u4e0e\u6295\u673a\u9a71\u52a8 \u00b6 Dogwifhat (WIF) \u5b9a\u4f4d \uff1aSolana\u751f\u6001\u7684\u201c\u72d7\u5e3d meme \u5e01\u201d\u3002 \u7206\u706b\u539f\u56e0 \uff1a\u793e\u533a\u7092\u4f5c+\u4ea4\u6613\u6240\u4e0a\u7ebf\uff08\u5982Binance\uff09\uff0c\u5e02\u503c\u4e00\u5ea6\u8d8530\u4ebf\u7f8e\u5143\u3002 Book of Meme (BOME) \u5b9a\u4f4d \uff1aSolana\u4e0a\u7684\u201cMeme\u6587\u5316\u5b58\u50a8\u534f\u8bae\u201d\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u7ed3\u5408Meme\u56fe\u7247\u3001\u53bb\u4e2d\u5fc3\u5316\u5b58\u50a8\uff08IPFS\uff09\u548c\u4ee3\u5e01\u3002 \u7206\u706b\u539f\u56e0 \uff1a\u827a\u672f\u5bb6+\u793e\u533a\u8054\u5408\u63a8\u52a8\uff0c3\u5929\u6da8\u5e45\u8d851000\u500d\u3002 \u516d\u3001 \u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u5e01\u80fd\u706b\uff1f \u00b6 \u6280\u672f\u53d9\u4e8b \uff1a \u6a21\u5757\u5316\uff08Celestia\uff09\u3001ZK\u6280\u672f\uff08Starknet\uff09\u3001AI\u7b97\u529b\uff08Bittensor\uff09\u7b49\u7b26\u5408\u957f\u671f\u8d8b\u52bf\u3002 \u7a7a\u6295\u6548\u5e94 \uff1a \u5927\u91cf\u9879\u76ee\u901a\u8fc7\u7a7a\u6295\u5438\u5f15\u7528\u6237\uff08\u5982Starknet\u3001zkSync\uff09\u3002 \u8d44\u672c\u63a8\u52a8 \uff1a \u9876\u7ea7VC\uff08\u5982a16z\u3001Paradigm\uff09\u80cc\u4e66\u9879\u76ee\u66f4\u6613\u83b7\u5f97\u5173\u6ce8\u3002 \u793e\u533a\u6587\u5316 \uff1a Memecoin\u4f9d\u8d56\u75c5\u6bd2\u4f20\u64ad\uff08\u5982WIF\u7684\u201c\u72d7\u5e3d\u201d\u8868\u60c5\u5305\uff09\u3002 \u6536\u76ca\u673a\u4f1a \uff1a \u9ad8APY\uff08\u5982Ethena\uff09\u3001\u5957\u5229\u7a7a\u95f4\uff08\u5982Pendle\uff09\u5438\u5f15\u8d44\u91d1\u6d8c\u5165\u3002 \u4e03\u3001 \u98ce\u9669\u63d0\u793a \u00b6 \u9ad8\u6ce2\u52a8\u6027 \uff1a\u65b0\u5e01\u79cd\u53ef\u80fd\u66b4\u6da8\u66b4\u8dcc\uff08\u5982BOME\u66fe\u5355\u65e5\u8170\u65a9\uff09\u3002 \u76d1\u7ba1\u98ce\u9669 \uff1a\u9690\u79c1\u5e01\u3001Memecoin\u6613\u88ab\u4ea4\u6613\u6240\u4e0b\u67b6\u3002 \u6280\u672f\u672a\u843d\u5730 \uff1a\u90e8\u5206\u9879\u76ee\u767d\u76ae\u4e66\u534e\u4e3d\uff0c\u4f46\u5b9e\u9645\u8fdb\u5c55\u7f13\u6162\uff08\u5982\u67d0\u4e9bAI\u9879\u76ee\uff09\u3002 \u603b\u7ed3 \u00b6 \u65b0\u5e01\u79cd\u7684\u7206\u53d1\u5f80\u5f80\u7531**\u6280\u672f\u7a81\u7834+\u8d44\u672c\u52a9\u63a8+\u793e\u533a\u5171\u8bc6**\u5171\u540c\u9a71\u52a8\u3002\u5982\u679c\u60f3\u53c2\u4e0e\uff1a - \u6280\u672f\u6d3e \uff1a\u5173\u6ce8\u6a21\u5757\u5316\u3001ZK\u3001AI\u7b49\u5e95\u5c42\u521b\u65b0\uff08\u5982Celestia\u3001Bittensor\uff09\u3002 - \u6295\u673a\u6d3e \uff1a\u7d27\u76efMemecoin\u548c\u7a7a\u6295\u673a\u4f1a\uff08\u5982Solana\u751f\u6001\u5c0f\u5e01\uff09\u3002 - \u7a33\u5065\u6d3e \uff1a\u9009\u62e9\u5934\u90e8Layer2\uff08\u5982Starknet\uff09\u6216\u7a33\u5b9a\u5e01\u534f\u8bae\uff08\u5982Ethena\uff09\u3002 \u5982\u679c\u9700\u8981\u67d0\u4e2a\u8d5b\u9053\u7684\u6df1\u5ea6\u5206\u6790\uff08\u5982\u5982\u4f55\u53c2\u4e0eZK-Rollup\u7a7a\u6295\uff09\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63a2\u8ba8\uff01","title":"\u533a\u5757\u94fe\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5"},{"location":"bitcoin/problem/#_1","text":"\u6700\u8fd1\u52a0\u5bc6\u8d27\u5e01\u5e02\u573a\u6d8c\u73b0\u4e86\u8bb8\u591a\u65b0\u9879\u76ee\uff0c\u8986\u76d6\u4e86**Layer1\u516c\u94fe\u3001Layer2\u6269\u5c55\u3001DeFi\u3001AI+\u533a\u5757\u94fe\u3001Memecoin**\u7b49\u591a\u4e2a\u9886\u57df\u3002\u4ee5\u4e0b\u662f2023-2024\u5e74\u70ed\u5ea6\u8f83\u9ad8\u7684\u65b0\u5e01\u79cd\u53ca\u5176\u80cc\u540e\u7684\u903b\u8f91\uff1a","title":"\u533a\u5757\u94fe\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5"},{"location":"bitcoin/problem/#_2","text":"Sui (SUI) & Aptos (APT) - \u5b9a\u4f4d \uff1a\u9ad8\u6027\u80fdLayer1\uff0c\u4e3b\u6253Move\u8bed\u8a00\uff08\u539fFacebook Diem\u56e2\u961f\u5f00\u53d1\uff09\u3002 - \u6280\u672f\u4eae\u70b9 \uff1a\u5e76\u884c\u6267\u884c\u4ea4\u6613\uff08\u7c7b\u4f3cSolana\uff09\uff0cTPS\u53ef\u8fbe\u6570\u5343\u3002 - \u7206\u706b\u539f\u56e0 \uff1a\u8d44\u672c\u80cc\u4e66\uff08a16z\u3001Binance Labs\u6295\u8d44\uff09\uff0c\u5bf9\u6807Solana\u4f46\u66f4\u5f3a\u8c03\u5b89\u5168\u6027\u3002 Celestia (TIA) - \u5b9a\u4f4d \uff1a\u9996\u4e2a\u6a21\u5757\u5316\u533a\u5757\u94fe\uff0c\u4e13\u6ce8\u201c\u6570\u636e\u53ef\u7528\u6027\u5c42\u201d\uff08DA\uff09\u3002 - \u6280\u672f\u4eae\u70b9 \uff1a\u5176\u4ed6\u94fe\uff08\u5982Rollups\uff09\u53ef\u5c06\u6570\u636e\u5b58\u50a8\u5728Celestia\u4e0a\uff0c\u964d\u4f4e\u5b58\u50a8\u6210\u672c\u3002 - \u7206\u706b\u539f\u56e0 \uff1a\u6a21\u5757\u5316\u662f2024\u5e74\u6838\u5fc3\u53d9\u4e8b\uff0c\u4ee5\u592a\u574aEIP-4844\uff08Proto-Danksharding\uff09\u7684\u76f4\u63a5\u53d7\u76ca\u8005\u3002 Sei (SEI) \u5b9a\u4f4d \uff1a\u4e3a\u4ea4\u6613\u4f18\u5316\u7684\u516c\u94fe\uff08DeFi\u4e13\u7528\u94fe\uff09\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u5185\u7f6e\u8ba2\u5355\u7c3f\u6a21\u5757\uff0c\u4ea4\u6613\u7ed3\u7b97\u901f\u5ea6\u6781\u5feb\uff08TPS 20,000+\uff09\u3002 \u7206\u706b\u539f\u56e0 \uff1a\u6293\u4f4f\u201c\u4ea4\u6613\u4e13\u7528\u94fe\u201d\u9700\u6c42\uff0c\u7a7a\u6295\u9884\u671f\u5e26\u52a8\u65e9\u671f\u70ed\u5ea6\u3002","title":"\u4e00\u3001\u65b0\u516c\u94fe\uff1a\u9ad8\u6027\u80fd\u4e0e\u6a21\u5757\u5316"},{"location":"bitcoin/problem/#layer2","text":"Blast (BLAST) \u5b9a\u4f4d \uff1a\u81ea\u5e26\u539f\u751f\u6536\u76ca\u7684Layer2\uff08\u7531Blur\u56e2\u961f\u5f00\u53d1\uff09\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u7528\u6237\u5b58\u5165\u7684ETH\u81ea\u52a8\u751f\u606f\uff08\u901a\u8fc7Lido\u7b49\u534f\u8bae\uff09\u3002 \u7206\u706b\u539f\u56e0 \uff1a\u7a7a\u6295\u9884\u671f+\u521b\u65b0\u6027\u6536\u76ca\u6a21\u578b\uff0cTVL\uff08\u9501\u4ed3\u91cf\uff09\u77ed\u671f\u5185\u7a81\u783420\u4ebf\u7f8e\u5143\u3002 Starknet (STRK) & zkSync (ZK) \u5b9a\u4f4d \uff1aZK-Rollup Layer2\uff0c\u4e3b\u6253\u9ad8\u6027\u80fd\u548c\u4f4e\u6210\u672c\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u96f6\u77e5\u8bc6\u8bc1\u660e\uff08ZKP\uff09\u6280\u672f\u4fdd\u969c\u9690\u79c1\u548c\u6269\u5c55\u6027\u3002 \u7206\u706b\u539f\u56e0 \uff1a2024\u5e74\u5927\u989d\u7a7a\u6295\uff08Starknet\u7a7a\u629512\u4ebf\u679a\u4ee3\u5e01\uff09\uff0cZK\u6280\u672f\u53d9\u4e8b\u5f3a\u52b2\u3002","title":"\u4e8c\u3001Layer2\u6269\u5c55\uff1a\u4ee5\u592a\u574a\u751f\u6001\u7684\u7a81\u56f4\u8005"},{"location":"bitcoin/problem/#defi-20","text":"Pendle (PENDLE) \u5b9a\u4f4d \uff1a\u6536\u76ca\u4ee3\u5e01\u5316\u534f\u8bae\uff08\u5c06\u672a\u6765\u6536\u76ca\u53d8\u4e3a\u53ef\u4ea4\u6613\u8d44\u4ea7\uff09\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u7528\u6237\u53ef\u62c6\u5206LSDFi\uff08\u5982Lido\u7684stETH\uff09\u7684\u6536\u76ca\u6743\u5e76\u4ea4\u6613\u3002 \u7206\u706b\u539f\u56e0 \uff1a2023\u5e74LSDFi\uff08\u6d41\u52a8\u6027\u8d28\u62bc\u884d\u751f\u54c1\uff09\u7206\u53d1\uff0cPendle\u6210\u4e3a\u6838\u5fc3\u5de5\u5177\u3002 Ethena (ENA) \u5b9a\u4f4d \uff1a\u5408\u6210\u7f8e\u5143\u7a33\u5b9a\u5e01\u534f\u8bae\uff08\u7c7b\u4f3c\u201c\u52a0\u5bc6\u7248\u7f8e\u5143\u201d\uff09\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u901a\u8fc7\u62b5\u62bcETH\u671f\u8d27\u5bf9\u51b2\u98ce\u9669\uff0c\u63d0\u4f9b\u9ad8\u5e74\u5316\u6536\u76ca\uff08\u4e00\u5ea6\u8fbe30%+\uff09\u3002 \u7206\u706b\u539f\u56e0 \uff1aUSDT/BUSD\u76d1\u7ba1\u538b\u529b\u4e0b\uff0c\u5e02\u573a\u5bf9\u53bb\u4e2d\u5fc3\u5316\u7a33\u5b9a\u5e01\u9700\u6c42\u6fc0\u589e\u3002","title":"\u4e09\u3001DeFi 2.0\uff1a\u521b\u65b0\u91d1\u878d\u534f\u8bae"},{"location":"bitcoin/problem/#ai2024","text":"Bittensor (TAO) \u5b9a\u4f4d \uff1a\u53bb\u4e2d\u5fc3\u5316\u673a\u5668\u5b66\u4e60\u7f51\u7edc\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u8282\u70b9\u8d21\u732e\u7b97\u529b\u8bad\u7ec3AI\u6a21\u578b\uff0c\u6309\u8d21\u732e\u5206\u914d\u4ee3\u5e01\u5956\u52b1\u3002 \u7206\u706b\u539f\u56e0 \uff1aAI\u8d5b\u9053\u70ed\u5ea6\u5916\u6ea2\uff0c\u88ab\u79f0\u4f5c\u201c\u52a0\u5bc6\u7248\u7684AWS\u201d\u3002 Render (RNDR) & Akash (AKT) \u5b9a\u4f4d \uff1a\u53bb\u4e2d\u5fc3\u5316GPU\u7b97\u529b\u5e02\u573a\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u7528\u6237\u51fa\u79df\u95f2\u7f6e\u7b97\u529b\uff08\u5982\u663e\u5361\uff09\u6362\u53d6\u4ee3\u5e01\u3002 \u7206\u706b\u539f\u56e0 \uff1aAI\u7b97\u529b\u77ed\u7f3a\uff0c\u4f4e\u6210\u672c\u66ff\u4ee3\u65b9\u6848\u53d7\u8ffd\u6367\u3002","title":"\u56db\u3001AI+\u533a\u5757\u94fe\uff1a2024\u5e74\u6700\u5f3a\u53d9\u4e8b"},{"location":"bitcoin/problem/#memecoin","text":"Dogwifhat (WIF) \u5b9a\u4f4d \uff1aSolana\u751f\u6001\u7684\u201c\u72d7\u5e3d meme \u5e01\u201d\u3002 \u7206\u706b\u539f\u56e0 \uff1a\u793e\u533a\u7092\u4f5c+\u4ea4\u6613\u6240\u4e0a\u7ebf\uff08\u5982Binance\uff09\uff0c\u5e02\u503c\u4e00\u5ea6\u8d8530\u4ebf\u7f8e\u5143\u3002 Book of Meme (BOME) \u5b9a\u4f4d \uff1aSolana\u4e0a\u7684\u201cMeme\u6587\u5316\u5b58\u50a8\u534f\u8bae\u201d\u3002 \u6280\u672f\u4eae\u70b9 \uff1a\u7ed3\u5408Meme\u56fe\u7247\u3001\u53bb\u4e2d\u5fc3\u5316\u5b58\u50a8\uff08IPFS\uff09\u548c\u4ee3\u5e01\u3002 \u7206\u706b\u539f\u56e0 \uff1a\u827a\u672f\u5bb6+\u793e\u533a\u8054\u5408\u63a8\u52a8\uff0c3\u5929\u6da8\u5e45\u8d851000\u500d\u3002","title":"\u4e94\u3001Memecoin\uff1a\u793e\u533a\u4e0e\u6295\u673a\u9a71\u52a8"},{"location":"bitcoin/problem/#_3","text":"\u6280\u672f\u53d9\u4e8b \uff1a \u6a21\u5757\u5316\uff08Celestia\uff09\u3001ZK\u6280\u672f\uff08Starknet\uff09\u3001AI\u7b97\u529b\uff08Bittensor\uff09\u7b49\u7b26\u5408\u957f\u671f\u8d8b\u52bf\u3002 \u7a7a\u6295\u6548\u5e94 \uff1a \u5927\u91cf\u9879\u76ee\u901a\u8fc7\u7a7a\u6295\u5438\u5f15\u7528\u6237\uff08\u5982Starknet\u3001zkSync\uff09\u3002 \u8d44\u672c\u63a8\u52a8 \uff1a \u9876\u7ea7VC\uff08\u5982a16z\u3001Paradigm\uff09\u80cc\u4e66\u9879\u76ee\u66f4\u6613\u83b7\u5f97\u5173\u6ce8\u3002 \u793e\u533a\u6587\u5316 \uff1a Memecoin\u4f9d\u8d56\u75c5\u6bd2\u4f20\u64ad\uff08\u5982WIF\u7684\u201c\u72d7\u5e3d\u201d\u8868\u60c5\u5305\uff09\u3002 \u6536\u76ca\u673a\u4f1a \uff1a \u9ad8APY\uff08\u5982Ethena\uff09\u3001\u5957\u5229\u7a7a\u95f4\uff08\u5982Pendle\uff09\u5438\u5f15\u8d44\u91d1\u6d8c\u5165\u3002","title":"\u516d\u3001\u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u5e01\u80fd\u706b\uff1f"},{"location":"bitcoin/problem/#_4","text":"\u9ad8\u6ce2\u52a8\u6027 \uff1a\u65b0\u5e01\u79cd\u53ef\u80fd\u66b4\u6da8\u66b4\u8dcc\uff08\u5982BOME\u66fe\u5355\u65e5\u8170\u65a9\uff09\u3002 \u76d1\u7ba1\u98ce\u9669 \uff1a\u9690\u79c1\u5e01\u3001Memecoin\u6613\u88ab\u4ea4\u6613\u6240\u4e0b\u67b6\u3002 \u6280\u672f\u672a\u843d\u5730 \uff1a\u90e8\u5206\u9879\u76ee\u767d\u76ae\u4e66\u534e\u4e3d\uff0c\u4f46\u5b9e\u9645\u8fdb\u5c55\u7f13\u6162\uff08\u5982\u67d0\u4e9bAI\u9879\u76ee\uff09\u3002","title":"\u4e03\u3001\u98ce\u9669\u63d0\u793a"},{"location":"bitcoin/problem/#_5","text":"\u65b0\u5e01\u79cd\u7684\u7206\u53d1\u5f80\u5f80\u7531**\u6280\u672f\u7a81\u7834+\u8d44\u672c\u52a9\u63a8+\u793e\u533a\u5171\u8bc6**\u5171\u540c\u9a71\u52a8\u3002\u5982\u679c\u60f3\u53c2\u4e0e\uff1a - \u6280\u672f\u6d3e \uff1a\u5173\u6ce8\u6a21\u5757\u5316\u3001ZK\u3001AI\u7b49\u5e95\u5c42\u521b\u65b0\uff08\u5982Celestia\u3001Bittensor\uff09\u3002 - \u6295\u673a\u6d3e \uff1a\u7d27\u76efMemecoin\u548c\u7a7a\u6295\u673a\u4f1a\uff08\u5982Solana\u751f\u6001\u5c0f\u5e01\uff09\u3002 - \u7a33\u5065\u6d3e \uff1a\u9009\u62e9\u5934\u90e8Layer2\uff08\u5982Starknet\uff09\u6216\u7a33\u5b9a\u5e01\u534f\u8bae\uff08\u5982Ethena\uff09\u3002 \u5982\u679c\u9700\u8981\u67d0\u4e2a\u8d5b\u9053\u7684\u6df1\u5ea6\u5206\u6790\uff08\u5982\u5982\u4f55\u53c2\u4e0eZK-Rollup\u7a7a\u6295\uff09\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63a2\u8ba8\uff01","title":"\u603b\u7ed3"},{"location":"bitcoin/req_method/","text":"\u67e5\u5bf9\u5916ip bitcoind \u8bf7\u6c42\u65b9\u6cd5 \u8bf7\u6c42\u7ec4\u6210\u90e8\u5206\uff1a \u5e38\u7528 JSON-RPC \u53c2\u6570\uff1a \u5e38\u7528\u7684 Bitcoin Core RPC \u65b9\u6cd5\uff08\u66ff\u6362 getmempoolinfo\uff09\uff1a \u5e38\u7528 curl \u9009\u9879\uff1a demo 1. \u83b7\u53d6\u533a\u5757\u94fe\u4fe1\u606f 2. \u83b7\u53d6\u5f53\u524d\u533a\u5757\u9ad8\u5ea6 3. \u901a\u8fc7\u9ad8\u5ea6\u83b7\u53d6\u533a\u5757\u54c8\u5e0c\uff08\u4f8b\u5982\u83b7\u53d6\u9ad8\u5ea6 100 \u7684\u533a\u5757\u54c8\u5e0c\uff09 4. \u83b7\u53d6\u533a\u5757\u8be6\u7ec6\u4fe1\u606f\uff08\u9700\u8981\u533a\u5757\u54c8\u5e0c\uff09 5. \u83b7\u53d6\u5185\u5b58\u6c60\u4fe1\u606f 6. \u83b7\u53d6\u5185\u5b58\u6c60\u4e2d\u7684\u4ea4\u6613\u5217\u8868 7. \u83b7\u53d6\u539f\u59cb\u4ea4\u6613\u6570\u636e\uff08\u9700\u8981\u4ea4\u6613ID\uff09 8. \u53d1\u9001\u539f\u59cb\u4ea4\u6613\uff08\u9700\u8981\u539f\u59cb\u4ea4\u6613\u5341\u516d\u8fdb\u5236\uff09 9. \u83b7\u53d6\u94b1\u5305\u4f59\u989d 10. \u5217\u51fa\u672a\u82b1\u8d39\u7684\u8f93\u51fa 11. \u53d1\u9001\u6bd4\u7279\u5e01\u5230\u5730\u5740\uff08\u9700\u8981\u5730\u5740\u548c\u91d1\u989d\uff09 12. \u4f30\u7b97\u4ea4\u6613\u8d39\u7528\uff08\u4f8b\u5982\u4f30\u7b97 6 \u4e2a\u533a\u5757\u786e\u8ba4\u7684\u8d39\u7528\uff09 13. \u9a8c\u8bc1\u5730\u5740\u6709\u6548\u6027 14. \u83b7\u53d6\u7f51\u7edc\u4fe1\u606f 15. \u83b7\u53d6\u5e2e\u52a9\u4fe1\u606f \u5b8c\u6574 curl \u793a\u4f8b\uff08\u4ee5 getblockcount \u4e3a\u4f8b\uff09\uff1a \u603b\u7ed3 \u67e5\u5bf9\u5916ip \u00b6 curl ifconfig.me bitcoind \u8bf7\u6c42\u65b9\u6cd5 \u00b6 \u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528 curl \u5411 Bitcoin Core \u8282\u70b9\u7684 JSON-RPC \u63a5\u53e3\u53d1\u9001\u7684 POST \u8bf7\u6c42\u3002\u4ee5\u4e0b\u662f\u8fd9\u4e2a\u8bf7\u6c42\u7684\u7ec4\u6210\u90e8\u5206\u548c\u5e38\u7528\u53c2\u6570\uff1a \u8bf7\u6c42\u7ec4\u6210\u90e8\u5206\uff1a \u00b6 curl - \u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7528\u4e8e\u4f20\u8f93\u6570\u636e -X POST - \u6307\u5b9a\u4f7f\u7528 POST \u65b9\u6cd5 127.0.0.1:18443 - Bitcoin Core \u8282\u70b9\u7684 RPC \u63a5\u53e3\u5730\u5740\u548c\u7aef\u53e3\uff0818443 \u662f\u6d4b\u8bd5\u7f51\u7684\u9ed8\u8ba4\u7aef\u53e3\uff09 --user xxx:xxxx - RPC \u7528\u6237\u540d\u548c\u5bc6\u7801\u8ba4\u8bc1 --data - \u540e\u9762\u8ddf\u7740\u8981\u53d1\u9001\u7684 JSON-RPC \u6570\u636e -H \"Content-Type:application/json\" - \u8bbe\u7f6e\u8bf7\u6c42\u5934\uff0c\u6307\u5b9a\u5185\u5bb9\u7c7b\u578b\u4e3a JSON \u5e38\u7528 JSON-RPC \u53c2\u6570\uff1a \u00b6 { \"jsonrpc\" : \"2.0\" , // JSON-RPC \u7248\u672c \"method\" : \"getmempoolinfo\" , // \u8c03\u7528\u7684\u65b9\u6cd5 \"params\" : [], // \u65b9\u6cd5\u53c2\u6570\uff08\u7a7a\u6570\u7ec4\u8868\u793a\u65e0\u53c2\u6570\uff09 \"id\" : 83 // \u8bf7\u6c42ID\uff08\u4efb\u610f\u6570\u5b57\uff0c\u7528\u4e8e\u5339\u914d\u54cd\u5e94\uff09 } \u5e38\u7528\u7684 Bitcoin Core RPC \u65b9\u6cd5\uff08\u66ff\u6362 getmempoolinfo \uff09\uff1a \u00b6 \u533a\u5757\u94fe\u4fe1\u606f : getblockchaininfo - \u83b7\u53d6\u533a\u5757\u94fe\u57fa\u672c\u4fe1\u606f getblockcount - \u83b7\u53d6\u5f53\u524d\u533a\u5757\u9ad8\u5ea6 getblockhash [height] - \u901a\u8fc7\u9ad8\u5ea6\u83b7\u53d6\u533a\u5757\u54c8\u5e0c getblock \"hash\" - \u83b7\u53d6\u533a\u5757\u8be6\u7ec6\u4fe1\u606f \u5185\u5b58\u6c60\u4fe1\u606f : getmempoolinfo - \u83b7\u53d6\u5185\u5b58\u6c60\u4fe1\u606f getrawmempool - \u83b7\u53d6\u5185\u5b58\u6c60\u4e2d\u6240\u6709\u4ea4\u6613ID \u4ea4\u6613\u76f8\u5173 : getrawtransaction \"txid\" - \u83b7\u53d6\u539f\u59cb\u4ea4\u6613\u6570\u636e sendrawtransaction \"hex\" - \u5e7f\u64ad\u539f\u59cb\u4ea4\u6613 estimatesmartfee nblocks - \u4f30\u7b97\u4ea4\u6613\u8d39\u7528 \u94b1\u5305\u76f8\u5173 : getbalance - \u83b7\u53d6\u94b1\u5305\u4f59\u989d listunspent - \u5217\u51fa\u672a\u82b1\u8d39\u7684\u8f93\u51fa sendtoaddress \"address\" amount - \u53d1\u9001\u6bd4\u7279\u5e01\u5230\u5730\u5740 \u7f51\u7edc\u4fe1\u606f : getnetworkinfo - \u83b7\u53d6\u7f51\u7edc\u4fe1\u606f getpeerinfo - \u83b7\u53d6\u8282\u70b9\u8fde\u63a5\u4fe1\u606f \u5b9e\u7528\u547d\u4ee4 : help - \u83b7\u53d6\u547d\u4ee4\u5e2e\u52a9 validateaddress \"address\" - \u9a8c\u8bc1\u5730\u5740\u6709\u6548\u6027 \u5e38\u7528 curl \u9009\u9879\uff1a \u00b6 -v - \u663e\u793a\u8be6\u7ec6\u8f93\u51fa\uff08\u8c03\u8bd5\u7528\uff09 --silent - \u9759\u9ed8\u6a21\u5f0f\uff08\u4e0d\u663e\u793a\u8fdb\u5ea6\u4fe1\u606f\uff09 --output FILE - \u5c06\u8f93\u51fa\u4fdd\u5b58\u5230\u6587\u4ef6 --cacert FILE - \u6307\u5b9a CA \u8bc1\u4e66\uff08\u7528\u4e8e HTTPS\uff09 \u6ce8\u610f\uff1a\u5b9e\u9645\u4f7f\u7528\u65f6\u9700\u8981\u66ff\u6362 xxx:xxxx \u4e3a Bitcoin Core \u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u7684 rpcuser \u548c rpcpassword \uff0c\u5e76\u786e\u4fdd\u7aef\u53e3\u4e0e\u914d\u7f6e\u4e00\u81f4\uff08\u4e3b\u7f51\u9ed8\u8ba4 8332\uff0c\u6d4b\u8bd5\u7f51\u9ed8\u8ba4 18332\uff0cregtest \u9ed8\u8ba4 18443\uff09\u3002 demo \u00b6 \u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684 Bitcoin Core JSON-RPC \u8bf7\u6c42\u7684 --data \u793a\u4f8b\uff0c\u6bcf\u4e2a\u65b9\u6cd5\u90fd\u63d0\u4f9b\u4e00\u4e2a\u6700\u7b80\u5355\u7684 demo\uff1a 1. \u83b7\u53d6\u533a\u5757\u94fe\u4fe1\u606f \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"getblockchaininfo\",\"params\":[],\"id\":1}' 2. \u83b7\u53d6\u5f53\u524d\u533a\u5757\u9ad8\u5ea6 \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"getblockcount\",\"params\":[],\"id\":2}' 3. \u901a\u8fc7\u9ad8\u5ea6\u83b7\u53d6\u533a\u5757\u54c8\u5e0c\uff08\u4f8b\u5982\u83b7\u53d6\u9ad8\u5ea6 100 \u7684\u533a\u5757\u54c8\u5e0c\uff09 \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"getblockhash\",\"params\":[100],\"id\":3}' 4. \u83b7\u53d6\u533a\u5757\u8be6\u7ec6\u4fe1\u606f\uff08\u9700\u8981\u533a\u5757\u54c8\u5e0c\uff09 \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"getblock\",\"params\":[\"000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"],\"id\":4}' 5. \u83b7\u53d6\u5185\u5b58\u6c60\u4fe1\u606f \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"getmempoolinfo\",\"params\":[],\"id\":5}' 6. \u83b7\u53d6\u5185\u5b58\u6c60\u4e2d\u7684\u4ea4\u6613\u5217\u8868 \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"getrawmempool\",\"params\":[],\"id\":6}' 7. \u83b7\u53d6\u539f\u59cb\u4ea4\u6613\u6570\u636e\uff08\u9700\u8981\u4ea4\u6613ID\uff09 \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"getrawtransaction\",\"params\":[\"txid_here\"],\"id\":7}' 8. \u53d1\u9001\u539f\u59cb\u4ea4\u6613\uff08\u9700\u8981\u539f\u59cb\u4ea4\u6613\u5341\u516d\u8fdb\u5236\uff09 \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"sendrawtransaction\",\"params\":[\"raw_hex_here\"],\"id\":8}' 9. \u83b7\u53d6\u94b1\u5305\u4f59\u989d \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"getbalance\",\"params\":[],\"id\":9}' 10. \u5217\u51fa\u672a\u82b1\u8d39\u7684\u8f93\u51fa \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"listunspent\",\"params\":[],\"id\":10}' 11. \u53d1\u9001\u6bd4\u7279\u5e01\u5230\u5730\u5740\uff08\u9700\u8981\u5730\u5740\u548c\u91d1\u989d\uff09 \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"sendtoaddress\",\"params\":[\"tb1qaddress...\", 0.01],\"id\":11}' 12. \u4f30\u7b97\u4ea4\u6613\u8d39\u7528\uff08\u4f8b\u5982\u4f30\u7b97 6 \u4e2a\u533a\u5757\u786e\u8ba4\u7684\u8d39\u7528\uff09 \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"estimatesmartfee\",\"params\":[6],\"id\":12}' 13. \u9a8c\u8bc1\u5730\u5740\u6709\u6548\u6027 \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"validateaddress\",\"params\":[\"tb1qaddress...\"],\"id\":13}' 14. \u83b7\u53d6\u7f51\u7edc\u4fe1\u606f \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"getnetworkinfo\",\"params\":[],\"id\":14}' 15. \u83b7\u53d6\u5e2e\u52a9\u4fe1\u606f \u00b6 --data '{\"jsonrpc\":\"2.0\",\"method\":\"help\",\"params\":[],\"id\":15}' \u5b8c\u6574 curl \u793a\u4f8b\uff08\u4ee5 getblockcount \u4e3a\u4f8b\uff09\uff1a \u00b6 curl -X POST http://127.0.0.1:18443 \\ --user your_rpcuser:your_rpcpassword \\ --data '{\"jsonrpc\":\"2.0\",\"method\":\"getblockcount\",\"params\":[],\"id\":1}' \\ -H \"Content-Type: application/json\" \u6ce8\u610f\uff1a 1. \u66ff\u6362 your_rpcuser:your_rpcpassword \u4e3a\u4f60\u7684 Bitcoin Core \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 rpcuser \u548c rpcpassword 2. \u66ff\u6362 127.0.0.1:18443 \u4e3a\u4f60\u7684\u8282\u70b9\u5730\u5740\u548c RPC \u7aef\u53e3\uff08\u4e3b\u7f51\u9ed8\u8ba4 8332\uff0c\u6d4b\u8bd5\u7f51 18332\uff0cregtest 18443\uff09 3. txid_here / raw_hex_here / tb1qaddress... \u7b49\u9700\u8981\u66ff\u6362\u4e3a\u5b9e\u9645\u503c \u603b\u7ed3 \u00b6 123","title":"Req method"},{"location":"bitcoin/req_method/#ip","text":"curl ifconfig.me","title":"\u67e5\u5bf9\u5916ip"},{"location":"bitcoin/req_method/#bitcoind","text":"\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528 curl \u5411 Bitcoin Core \u8282\u70b9\u7684 JSON-RPC \u63a5\u53e3\u53d1\u9001\u7684 POST \u8bf7\u6c42\u3002\u4ee5\u4e0b\u662f\u8fd9\u4e2a\u8bf7\u6c42\u7684\u7ec4\u6210\u90e8\u5206\u548c\u5e38\u7528\u53c2\u6570\uff1a","title":"bitcoind \u8bf7\u6c42\u65b9\u6cd5"},{"location":"bitcoin/req_method/#_1","text":"curl - \u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7528\u4e8e\u4f20\u8f93\u6570\u636e -X POST - \u6307\u5b9a\u4f7f\u7528 POST \u65b9\u6cd5 127.0.0.1:18443 - Bitcoin Core \u8282\u70b9\u7684 RPC \u63a5\u53e3\u5730\u5740\u548c\u7aef\u53e3\uff0818443 \u662f\u6d4b\u8bd5\u7f51\u7684\u9ed8\u8ba4\u7aef\u53e3\uff09 --user xxx:xxxx - RPC \u7528\u6237\u540d\u548c\u5bc6\u7801\u8ba4\u8bc1 --data - \u540e\u9762\u8ddf\u7740\u8981\u53d1\u9001\u7684 JSON-RPC \u6570\u636e -H \"Content-Type:application/json\" - \u8bbe\u7f6e\u8bf7\u6c42\u5934\uff0c\u6307\u5b9a\u5185\u5bb9\u7c7b\u578b\u4e3a JSON","title":"\u8bf7\u6c42\u7ec4\u6210\u90e8\u5206\uff1a"},{"location":"bitcoin/req_method/#json-rpc","text":"{ \"jsonrpc\" : \"2.0\" , // JSON-RPC \u7248\u672c \"method\" : \"getmempoolinfo\" , // \u8c03\u7528\u7684\u65b9\u6cd5 \"params\" : [], // \u65b9\u6cd5\u53c2\u6570\uff08\u7a7a\u6570\u7ec4\u8868\u793a\u65e0\u53c2\u6570\uff09 \"id\" : 83 // \u8bf7\u6c42ID\uff08\u4efb\u610f\u6570\u5b57\uff0c\u7528\u4e8e\u5339\u914d\u54cd\u5e94\uff09 }","title":"\u5e38\u7528 JSON-RPC \u53c2\u6570\uff1a"},{"location":"bitcoin/req_method/#bitcoin-core-rpc-getmempoolinfo","text":"\u533a\u5757\u94fe\u4fe1\u606f : getblockchaininfo - \u83b7\u53d6\u533a\u5757\u94fe\u57fa\u672c\u4fe1\u606f getblockcount - \u83b7\u53d6\u5f53\u524d\u533a\u5757\u9ad8\u5ea6 getblockhash [height] - \u901a\u8fc7\u9ad8\u5ea6\u83b7\u53d6\u533a\u5757\u54c8\u5e0c getblock \"hash\" - \u83b7\u53d6\u533a\u5757\u8be6\u7ec6\u4fe1\u606f \u5185\u5b58\u6c60\u4fe1\u606f : getmempoolinfo - \u83b7\u53d6\u5185\u5b58\u6c60\u4fe1\u606f getrawmempool - \u83b7\u53d6\u5185\u5b58\u6c60\u4e2d\u6240\u6709\u4ea4\u6613ID \u4ea4\u6613\u76f8\u5173 : getrawtransaction \"txid\" - \u83b7\u53d6\u539f\u59cb\u4ea4\u6613\u6570\u636e sendrawtransaction \"hex\" - \u5e7f\u64ad\u539f\u59cb\u4ea4\u6613 estimatesmartfee nblocks - \u4f30\u7b97\u4ea4\u6613\u8d39\u7528 \u94b1\u5305\u76f8\u5173 : getbalance - \u83b7\u53d6\u94b1\u5305\u4f59\u989d listunspent - \u5217\u51fa\u672a\u82b1\u8d39\u7684\u8f93\u51fa sendtoaddress \"address\" amount - \u53d1\u9001\u6bd4\u7279\u5e01\u5230\u5730\u5740 \u7f51\u7edc\u4fe1\u606f : getnetworkinfo - \u83b7\u53d6\u7f51\u7edc\u4fe1\u606f getpeerinfo - \u83b7\u53d6\u8282\u70b9\u8fde\u63a5\u4fe1\u606f \u5b9e\u7528\u547d\u4ee4 : help - \u83b7\u53d6\u547d\u4ee4\u5e2e\u52a9 validateaddress \"address\" - \u9a8c\u8bc1\u5730\u5740\u6709\u6548\u6027","title":"\u5e38\u7528\u7684 Bitcoin Core RPC \u65b9\u6cd5\uff08\u66ff\u6362 getmempoolinfo\uff09\uff1a"},{"location":"bitcoin/req_method/#curl","text":"-v - \u663e\u793a\u8be6\u7ec6\u8f93\u51fa\uff08\u8c03\u8bd5\u7528\uff09 --silent - \u9759\u9ed8\u6a21\u5f0f\uff08\u4e0d\u663e\u793a\u8fdb\u5ea6\u4fe1\u606f\uff09 --output FILE - \u5c06\u8f93\u51fa\u4fdd\u5b58\u5230\u6587\u4ef6 --cacert FILE - \u6307\u5b9a CA \u8bc1\u4e66\uff08\u7528\u4e8e HTTPS\uff09 \u6ce8\u610f\uff1a\u5b9e\u9645\u4f7f\u7528\u65f6\u9700\u8981\u66ff\u6362 xxx:xxxx \u4e3a Bitcoin Core \u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u7684 rpcuser \u548c rpcpassword \uff0c\u5e76\u786e\u4fdd\u7aef\u53e3\u4e0e\u914d\u7f6e\u4e00\u81f4\uff08\u4e3b\u7f51\u9ed8\u8ba4 8332\uff0c\u6d4b\u8bd5\u7f51\u9ed8\u8ba4 18332\uff0cregtest \u9ed8\u8ba4 18443\uff09\u3002","title":"\u5e38\u7528 curl \u9009\u9879\uff1a"},{"location":"bitcoin/req_method/#demo","text":"\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684 Bitcoin Core JSON-RPC \u8bf7\u6c42\u7684 --data \u793a\u4f8b\uff0c\u6bcf\u4e2a\u65b9\u6cd5\u90fd\u63d0\u4f9b\u4e00\u4e2a\u6700\u7b80\u5355\u7684 demo\uff1a","title":"demo"},{"location":"bitcoin/req_method/#1","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"getblockchaininfo\",\"params\":[],\"id\":1}'","title":"1. \u83b7\u53d6\u533a\u5757\u94fe\u4fe1\u606f"},{"location":"bitcoin/req_method/#2","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"getblockcount\",\"params\":[],\"id\":2}'","title":"2. \u83b7\u53d6\u5f53\u524d\u533a\u5757\u9ad8\u5ea6"},{"location":"bitcoin/req_method/#3-100","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"getblockhash\",\"params\":[100],\"id\":3}'","title":"3. \u901a\u8fc7\u9ad8\u5ea6\u83b7\u53d6\u533a\u5757\u54c8\u5e0c\uff08\u4f8b\u5982\u83b7\u53d6\u9ad8\u5ea6 100 \u7684\u533a\u5757\u54c8\u5e0c\uff09"},{"location":"bitcoin/req_method/#4","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"getblock\",\"params\":[\"000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"],\"id\":4}'","title":"4. \u83b7\u53d6\u533a\u5757\u8be6\u7ec6\u4fe1\u606f\uff08\u9700\u8981\u533a\u5757\u54c8\u5e0c\uff09"},{"location":"bitcoin/req_method/#5","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"getmempoolinfo\",\"params\":[],\"id\":5}'","title":"5. \u83b7\u53d6\u5185\u5b58\u6c60\u4fe1\u606f"},{"location":"bitcoin/req_method/#6","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"getrawmempool\",\"params\":[],\"id\":6}'","title":"6. \u83b7\u53d6\u5185\u5b58\u6c60\u4e2d\u7684\u4ea4\u6613\u5217\u8868"},{"location":"bitcoin/req_method/#7-id","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"getrawtransaction\",\"params\":[\"txid_here\"],\"id\":7}'","title":"7. \u83b7\u53d6\u539f\u59cb\u4ea4\u6613\u6570\u636e\uff08\u9700\u8981\u4ea4\u6613ID\uff09"},{"location":"bitcoin/req_method/#8","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"sendrawtransaction\",\"params\":[\"raw_hex_here\"],\"id\":8}'","title":"8. \u53d1\u9001\u539f\u59cb\u4ea4\u6613\uff08\u9700\u8981\u539f\u59cb\u4ea4\u6613\u5341\u516d\u8fdb\u5236\uff09"},{"location":"bitcoin/req_method/#9","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"getbalance\",\"params\":[],\"id\":9}'","title":"9. \u83b7\u53d6\u94b1\u5305\u4f59\u989d"},{"location":"bitcoin/req_method/#10","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"listunspent\",\"params\":[],\"id\":10}'","title":"10. \u5217\u51fa\u672a\u82b1\u8d39\u7684\u8f93\u51fa"},{"location":"bitcoin/req_method/#11","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"sendtoaddress\",\"params\":[\"tb1qaddress...\", 0.01],\"id\":11}'","title":"11. \u53d1\u9001\u6bd4\u7279\u5e01\u5230\u5730\u5740\uff08\u9700\u8981\u5730\u5740\u548c\u91d1\u989d\uff09"},{"location":"bitcoin/req_method/#12-6","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"estimatesmartfee\",\"params\":[6],\"id\":12}'","title":"12. \u4f30\u7b97\u4ea4\u6613\u8d39\u7528\uff08\u4f8b\u5982\u4f30\u7b97 6 \u4e2a\u533a\u5757\u786e\u8ba4\u7684\u8d39\u7528\uff09"},{"location":"bitcoin/req_method/#13","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"validateaddress\",\"params\":[\"tb1qaddress...\"],\"id\":13}'","title":"13. \u9a8c\u8bc1\u5730\u5740\u6709\u6548\u6027"},{"location":"bitcoin/req_method/#14","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"getnetworkinfo\",\"params\":[],\"id\":14}'","title":"14. \u83b7\u53d6\u7f51\u7edc\u4fe1\u606f"},{"location":"bitcoin/req_method/#15","text":"--data '{\"jsonrpc\":\"2.0\",\"method\":\"help\",\"params\":[],\"id\":15}'","title":"15. \u83b7\u53d6\u5e2e\u52a9\u4fe1\u606f"},{"location":"bitcoin/req_method/#curl-getblockcount","text":"curl -X POST http://127.0.0.1:18443 \\ --user your_rpcuser:your_rpcpassword \\ --data '{\"jsonrpc\":\"2.0\",\"method\":\"getblockcount\",\"params\":[],\"id\":1}' \\ -H \"Content-Type: application/json\" \u6ce8\u610f\uff1a 1. \u66ff\u6362 your_rpcuser:your_rpcpassword \u4e3a\u4f60\u7684 Bitcoin Core \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 rpcuser \u548c rpcpassword 2. \u66ff\u6362 127.0.0.1:18443 \u4e3a\u4f60\u7684\u8282\u70b9\u5730\u5740\u548c RPC \u7aef\u53e3\uff08\u4e3b\u7f51\u9ed8\u8ba4 8332\uff0c\u6d4b\u8bd5\u7f51 18332\uff0cregtest 18443\uff09 3. txid_here / raw_hex_here / tb1qaddress... \u7b49\u9700\u8981\u66ff\u6362\u4e3a\u5b9e\u9645\u503c","title":"\u5b8c\u6574 curl \u793a\u4f8b\uff08\u4ee5 getblockcount \u4e3a\u4f8b\uff09\uff1a"},{"location":"bitcoin/req_method/#_2","text":"123","title":"\u603b\u7ed3"},{"location":"bitcoin/solana/","text":"Solana \u5168\u9762\u89e3\u6790 1. Solana \u7684\u6838\u5fc3\u7279\u70b9 \uff081\uff09\u8d85\u9ad8 TPS\uff08\u6bcf\u79d2\u4ea4\u6613\u6570\uff09 \uff082\uff09\u6781\u4f4e Gas \u8d39 \uff083\uff09\u72ec\u7279\u7684\u5171\u8bc6\u673a\u5236\uff1aPoH + PoS 2. Solana \u4e3a\u4ec0\u4e48\u706b\uff1f \uff081\uff092021 \u5e74 DeFi & NFT \u7206\u53d1 \uff082\uff092023-2024 \u5e74 Memecoin \u72c2\u6f6e \uff083\uff09\u8d44\u672c & \u751f\u6001\u652f\u6301 3. Solana \u7684\u4e89\u8bae\u4e0e\u6311\u6218 \uff081\uff09\u7f51\u7edc\u5b95\u673a\u95ee\u9898 \uff082\uff09\u4e2d\u5fc3\u5316\u4e89\u8bae \uff083\uff09\u7ade\u4e89\u5bf9\u624b\u5d1b\u8d77 4. Solana \u751f\u6001\u91cd\u70b9\u9879\u76ee 5. Solana\uff08SOL\uff09\u9002\u5408\u6295\u8d44\u5417\uff1f \u2705 \u4f18\u52bf \u274c \u98ce\u9669 \ud83d\udcc8 \u5e02\u573a\u8868\u73b0\uff082024 \u5e74\uff09 6. \u5982\u4f55\u53c2\u4e0e Solana \u751f\u6001\uff1f \u603b\u7ed3 1. Solana \u9ad8 TPS \u7684\u539f\u7406 \uff081\uff09\u5386\u53f2\u8bc1\u660e\uff08Proof of History, PoH\uff09 \uff082\uff09\u5e76\u884c\u6267\u884c\uff08Sealevel\uff09 \uff083\uff09\u6da1\u8f6e\uff08Turbine\uff09\u533a\u5757\u4f20\u64ad \uff084\uff09\u5176\u4ed6\u4f18\u5316 2. \u6838\u5fc3\u6982\u5ff5\u89e3\u91ca \uff081\uff09DeFi\uff08\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\uff09 \uff082\uff09NFT\uff08\u975e\u540c\u8d28\u5316\u4ee3\u5e01\uff09 \uff083\uff09Memecoin\uff08 meme \u5e01\uff09 3. Solana \u5f53\u524d\u70ed\u95e8\u5e94\u7528\uff082024\u5e74\uff09 \uff081\uff09DeFi \u5e94\u7528 \uff082\uff09NFT \u751f\u6001 \uff083\uff09Memecoin \u72c2\u6b22 \uff084\uff09\u57fa\u7840\u8bbe\u65bd & \u5de5\u5177 4. \u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u5e94\u7528\u9009\u62e9 Solana\uff1f 5. \u98ce\u9669\u4e0e\u6311\u6218 \u603b\u7ed3 Solana \u5168\u9762\u89e3\u6790 \u00b6 Solana \u662f\u4e00\u4e2a\u9ad8\u6027\u80fd Layer1 \u533a\u5757\u94fe \uff0c\u4e3b\u6253\u9ad8\u541e\u5410\u91cf\u3001\u4f4e\u4ea4\u6613\u8d39\u7528\uff0c\u76ee\u6807\u662f\u6210\u4e3a\u201c\u4ee5\u592a\u574a\u6740\u624b\u201d\u3002\u5b83\u7531\u524d\u9ad8\u901a\u5de5\u7a0b\u5e08 Anatoly Yakovenko \u4e8e 2017 \u5e74\u63d0\u51fa\uff0c2020 \u5e74\u4e3b\u7f51\u4e0a\u7ebf\uff0c2021 \u5e74\u56e0 NFT \u548c DeFi \u7206\u53d1\u800c\u8d70\u7ea2\u3002 1. Solana \u7684\u6838\u5fc3\u7279\u70b9 \u00b6 \uff081\uff09\u8d85\u9ad8 TPS\uff08\u6bcf\u79d2\u4ea4\u6613\u6570\uff09 \u00b6 \u7406\u8bba\u5cf0\u503c \uff1a65,000 TPS\uff08\u5b9e\u9645\u65e5\u5e38\u7ea6 2,000-4,000 TPS\uff09\u3002 \u5bf9\u6bd4 \uff1a\u4ee5\u592a\u574a 15-30 TPS\uff0c\u6bd4\u7279\u5e01 7 TPS\u3002 \u5982\u4f55\u505a\u5230\uff1f \u5386\u53f2\u8bc1\u660e\uff08PoH\uff09 \uff1a\u7c7b\u4f3c\u201c\u533a\u5757\u94fe\u65f6\u949f\u201d\uff0c\u4f18\u5316\u4ea4\u6613\u6392\u5e8f\uff0c\u51cf\u5c11\u8282\u70b9\u95f4\u540c\u6b65\u65f6\u95f4\u3002 \u5e76\u884c\u6267\u884c\uff08Sealevel\uff09 \uff1a\u7c7b\u4f3c\u591a\u7ebf\u7a0b\u5904\u7406\u4ea4\u6613\uff0c\u63d0\u5347\u6548\u7387\u3002 \uff082\uff09\u6781\u4f4e Gas \u8d39 \u00b6 \u5e73\u5747\u4ea4\u6613\u8d39 \uff1a0.00001-0.001 SOL\uff08\u7ea6 \\(0.001-\\) 0.1\uff09\u3002 \u5bf9\u6bd4 \uff1a\u4ee5\u592a\u574a\u4e3b\u7f51 Gas \u8d39\u53ef\u80fd\u9ad8\u8fbe \\(10-\\) 100\u3002 \uff083\uff09\u72ec\u7279\u7684\u5171\u8bc6\u673a\u5236\uff1aPoH + PoS \u00b6 PoS\uff08\u6743\u76ca\u8bc1\u660e\uff09 \uff1a\u9a8c\u8bc1\u8005\u8d28\u62bc SOL \u53c2\u4e0e\u51fa\u5757\u3002 PoH\uff08\u5386\u53f2\u8bc1\u660e\uff09 \uff1a\u65f6\u95f4\u6233\u673a\u5236\uff0c\u51cf\u5c11\u5171\u8bc6\u5f00\u9500\uff0c\u63d0\u9ad8\u901f\u5ea6\u3002 2. Solana \u4e3a\u4ec0\u4e48\u706b\uff1f \u00b6 \uff081\uff092021 \u5e74 DeFi & NFT \u7206\u53d1 \u00b6 Serum\uff08DEX\uff09 \u3001 Raydium\uff08AMM\uff09 \u7b49 DeFi \u9879\u76ee\u5d1b\u8d77\u3002 Degenerate Ape Academy \u3001 Solana Monkey Business \u7b49 NFT \u9879\u76ee\u7206\u706b\u3002 \uff082\uff092023-2024 \u5e74 Memecoin \u72c2\u6f6e \u00b6 $BONK \uff08Solana \u9996\u4e2a Memecoin\uff0c2023 \u5e74\u6da8\u5e45 1000x+\uff09\u3002 $WIF \uff08Dogwifhat\uff0c\u5e02\u503c\u4e00\u5ea6\u8d85 30 \u4ebf\u7f8e\u5143\uff09\u3002 $BOME \uff08Book of Meme\uff0c3 \u5929\u6da8 1000 \u500d\uff09\u3002 \uff083\uff09\u8d44\u672c & \u751f\u6001\u652f\u6301 \u00b6 a16z\u3001Multicoin Capital \u7b49\u9876\u7ea7 VC \u6295\u8d44\u3002 Solana Mobile\uff08Saga \u624b\u673a\uff09 \u63a8\u52a8\u79fb\u52a8\u7aef Web3 \u91c7\u7528\u3002 Solana Pay \u652f\u6301\u4f4e\u6210\u672c\u52a0\u5bc6\u8d27\u5e01\u652f\u4ed8\uff08\u5982 Shopify \u5546\u5bb6\u53ef\u7528\uff09\u3002 3. Solana \u7684\u4e89\u8bae\u4e0e\u6311\u6218 \u00b6 \uff081\uff09\u7f51\u7edc\u5b95\u673a\u95ee\u9898 \u00b6 2022 \u5e74\u591a\u6b21\u5b95\u673a \uff08\u6700\u957f\u4e00\u6b21 18 \u5c0f\u65f6\uff09\uff0c\u539f\u56e0\uff1a \u5783\u573e\u4ea4\u6613\u62e5\u5835\uff08\u5982 NFT mint \u9ad8\u5cf0\u671f\uff09\u3002 \u9a8c\u8bc1\u8005\u8282\u70b9\u914d\u7f6e\u4e0d\u8db3\u3002 \u6539\u8fdb\u65b9\u6848 \uff1a QUIC \u534f\u8bae \uff08\u4f18\u5316\u7f51\u7edc\u901a\u4fe1\uff09\u3002 \u8d39\u7528\u5e02\u573a \uff08\u4f18\u5148\u5904\u7406\u9ad8 Gas \u4ea4\u6613\uff09\u3002 \uff082\uff09\u4e2d\u5fc3\u5316\u4e89\u8bae \u00b6 \u9a8c\u8bc1\u8005\u6570\u91cf \uff1a\u7ea6 2,000 \u4e2a\uff08\u4ee5\u592a\u574a 90 \u4e07+\uff0c\u6bd4\u7279\u5e01 10 \u4e07+\uff09\u3002 \u524d 10 \u540d\u9a8c\u8bc1\u8005\u63a7\u5236 35% \u8d28\u62bc \uff0c\u5b58\u5728\u4e2d\u5fc3\u5316\u98ce\u9669\u3002 \uff083\uff09\u7ade\u4e89\u5bf9\u624b\u5d1b\u8d77 \u00b6 \u4ee5\u592a\u574a Layer2\uff08Arbitrum\u3001Optimism\uff09 \u62a2\u8d70\u90e8\u5206\u7528\u6237\u3002 Sui\u3001Aptos \u7b49\u65b0\u516c\u94fe\u7ade\u4e89\u9ad8\u6027\u80fd\u5e02\u573a\u3002 4. Solana \u751f\u6001\u91cd\u70b9\u9879\u76ee \u00b6 \u7c7b\u522b \u4ee3\u8868\u9879\u76ee \u529f\u80fd DeFi Jupiter\uff08JUP\uff09 Solana \u6700\u5927 DEX \u805a\u5408\u5668\uff08\u7c7b\u4f3c 1inch\uff09\u3002 NFT Tensor Solana \u7248 Blur\uff08NFT \u4ea4\u6613\u5e02\u573a\uff09\u3002 Memecoin \\(WIF\u3001\\) BONK \u793e\u533a\u9a71\u52a8\u7684 Meme \u5e01\u3002 \u652f\u4ed8 Solana Pay \u5546\u5bb6\u52a0\u5bc6\u8d27\u5e01\u652f\u4ed8\u89e3\u51b3\u65b9\u6848\u3002 \u57fa\u7840\u8bbe\u65bd Pyth Network\uff08PYTH\uff09 \u53bb\u4e2d\u5fc3\u5316\u9884\u8a00\u673a\uff08\u5582\u4ef7\u6570\u636e\uff09\u3002 5. Solana\uff08SOL\uff09\u9002\u5408\u6295\u8d44\u5417\uff1f \u00b6 \u2705 \u4f18\u52bf \u00b6 \u9ad8\u6027\u80fd & \u4f4e\u8d39\u7528 \uff1a\u9002\u5408\u9ad8\u9891\u4ea4\u6613\u3001NFT\u3001GameFi\u3002 \u5f3a\u5927\u751f\u6001 \uff1aDeFi\u3001NFT\u3001Memecoin \u5168\u9762\u7206\u53d1\u3002 \u8d44\u672c\u652f\u6301 \uff1a\u957f\u671f\u6709 a16z\u3001FTX\uff08\u5df2\u7834\u4ea7\u4f46\u5f71\u54cd\u51cf\u5f31\uff09\u7b49\u80cc\u4e66\u3002 \u274c \u98ce\u9669 \u00b6 \u5b95\u673a\u5386\u53f2 \uff1a\u4ecd\u9700\u89c2\u5bdf\u7a33\u5b9a\u6027\u6539\u8fdb\u3002 Memecoin \u6ce1\u6cab \uff1a\u90e8\u5206\u9879\u76ee\u7eaf\u7092\u4f5c\uff0c\u53ef\u80fd\u5d29\u76d8\u3002 \u7ade\u4e89\u6fc0\u70c8 \uff1a\u4ee5\u592a\u574a Layer2\u3001Sui \u7b49\u5bf9\u624b\u864e\u89c6\u7708\u7708\u3002 \ud83d\udcc8 \u5e02\u573a\u8868\u73b0\uff082024 \u5e74\uff09 \u00b6 \u4ef7\u683c \uff1a \\(100-\\) 200 \u6ce2\u52a8\uff08\u5386\u53f2\u6700\u9ad8 $260\uff0c2021 \u5e74\uff09\u3002 \u5e02\u503c \uff1aTop 5 \u52a0\u5bc6\u8d27\u5e01\uff08\u4ec5\u6b21\u4e8e BTC\u3001ETH\u3001BNB\uff09\u3002 6. \u5982\u4f55\u53c2\u4e0e Solana \u751f\u6001\uff1f \u00b6 \u8d2d\u4e70 SOL \uff08\u5e01\u5b89\u3001OKX\u3001Coinbase \u7b49\u4ea4\u6613\u6240\uff09\u3002 \u73a9 Memecoin \uff08\u5982 \\(WIF\u3001\\) BOME\uff0c\u4f46\u9ad8\u98ce\u9669\uff09\u3002 \u4ea4\u4e92 DeFi \uff08Jupiter\u3001Raydium \u7b49\uff0c\u53ef\u80fd\u6709\u7a7a\u6295\uff09\u3002 \u5173\u6ce8 Solana Mobile \uff08Saga \u624b\u673a\u672a\u6765\u53ef\u80fd\u53d1\u65b0\u4ee3\u5e01\uff09\u3002 \u603b\u7ed3 \u00b6 Solana \u662f**\u9ad8\u6027\u80fd\u3001\u4f4e\u8d39\u7528\u3001\u751f\u6001\u6d3b\u8dc3**\u7684\u516c\u94fe\uff0c\u9002\u5408\uff1a - \u4ea4\u6613\u8005 \uff08\u4f4e Gas \u8d39+\u9ad8 TPS\uff09\u3002 - Memecoin \u6295\u673a\u8005 \uff08\u9ad8\u6ce2\u52a8\u673a\u4f1a\uff09\u3002 - \u5f00\u53d1\u8005 \uff08Rust \u667a\u80fd\u5408\u7ea6\uff0c\u751f\u6001\u6276\u6301\u591a\uff09\u3002 \u4f46\u9700\u6ce8\u610f \u5b95\u673a\u98ce\u9669\u3001\u4e2d\u5fc3\u5316\u95ee\u9898\u3001\u7ade\u4e89\u538b\u529b \u3002 1. Solana \u9ad8 TPS \u7684\u539f\u7406 \u00b6 Solana \u7684\u9ad8\u6027\u80fd\uff08\u7406\u8bba\u5cf0\u503c 65,000 TPS \uff0c\u5b9e\u9645 2,000-4,000 TPS \uff09\u4e3b\u8981\u4f9d\u8d56\u4ee5\u4e0b\u6280\u672f\u521b\u65b0\uff1a \uff081\uff09\u5386\u53f2\u8bc1\u660e\uff08Proof of History, PoH\uff09 \u00b6 \u4f5c\u7528 \uff1a\u89e3\u51b3\u533a\u5757\u94fe\u7684\u201c\u65f6\u95f4\u540c\u6b65\u201d\u95ee\u9898\uff0c\u907f\u514d\u8282\u70b9\u95f4\u9891\u7e41\u901a\u4fe1\u786e\u8ba4\u4ea4\u6613\u987a\u5e8f\u3002 \u539f\u7406 \uff1a \u7c7b\u4f3c\u4e00\u4e2a**\u52a0\u5bc6\u65f6\u949f**\uff0c\u6bcf\u4e2a\u4ea4\u6613\u88ab\u6253\u4e0a\u53ef\u9a8c\u8bc1\u7684\u65f6\u95f4\u6233\u3002 \u8282\u70b9\u65e0\u9700\u7b49\u5f85\u5168\u7f51\u786e\u8ba4\uff0c\u76f4\u63a5\u6309\u65f6\u95f4\u6233\u5904\u7406\u4ea4\u6613\uff0c\u51cf\u5c11\u5171\u8bc6\u5ef6\u8fdf\u3002 \uff082\uff09\u5e76\u884c\u6267\u884c\uff08Sealevel\uff09 \u00b6 \u4f5c\u7528 \uff1a\u540c\u65f6\u5904\u7406\u591a\u4e2a\u4ea4\u6613\uff0c\u800c\u975e\u50cf\u4ee5\u592a\u574a\u4e00\u6837\u4e32\u884c\u6267\u884c\u3002 \u539f\u7406 \uff1a \u4ea4\u6613\u6309\u4f9d\u8d56\u5173\u7cfb\u5206\u7ec4\uff0c\u65e0\u51b2\u7a81\u7684\u4ea4\u6613**\u5e76\u884c\u5904\u7406**\uff08\u7c7b\u4f3c\u591a\u7ebf\u7a0b\uff09\u3002 \u4f8b\u5982\uff1aA\u2192B \u8f6c\u8d26\u548c C\u2192D \u8f6c\u8d26\u4e92\u4e0d\u5f71\u54cd\uff0c\u53ef\u540c\u65f6\u6267\u884c\u3002 \uff083\uff09\u6da1\u8f6e\uff08Turbine\uff09\u533a\u5757\u4f20\u64ad \u00b6 \u4f5c\u7528 \uff1a\u5feb\u901f\u5c06\u533a\u5757\u6570\u636e\u5206\u53d1\u7ed9\u5168\u7f51\u8282\u70b9\u3002 \u539f\u7406 \uff1a \u5c06\u533a\u5757\u62c6\u5206\u6210\u5c0f\u6570\u636e\u5305\uff0c\u901a\u8fc7**P2P\u7f51\u7edc\u5206\u5c42\u5e7f\u64ad**\uff08\u7c7b\u4f3cBitTorrent\uff09\u3002 \uff084\uff09\u5176\u4ed6\u4f18\u5316 \u00b6 Gulf Stream \uff1a\u63d0\u524d\u7f13\u5b58\u672a\u786e\u8ba4\u4ea4\u6613\uff0c\u51cf\u5c11\u5185\u5b58\u6c60\u62e5\u5835\u3002 Cloudbreak \uff1a\u6c34\u5e73\u6269\u5c55\u7684\u8d26\u6237\u6570\u636e\u5e93\uff0c\u652f\u6301\u9ad8\u5e76\u53d1\u8bfb\u5199\u3002 2. \u6838\u5fc3\u6982\u5ff5\u89e3\u91ca \u00b6 \uff081\uff09DeFi\uff08\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\uff09 \u00b6 \u5b9a\u4e49 \uff1a\u65e0\u9700\u94f6\u884c\uff0c\u7528\u667a\u80fd\u5408\u7ea6\u5b9e\u73b0\u7684\u91d1\u878d\u670d\u52a1\uff08\u501f\u8d37\u3001\u4ea4\u6613\u3001\u884d\u751f\u54c1\u7b49\uff09\u3002 Solana \u4ee3\u8868\u5e94\u7528 \uff1a Jupiter\uff08JUP\uff09 \uff1a\u6700\u5927DEX\u805a\u5408\u5668\uff08\u627e\u6700\u4f18\u4ea4\u6613\u8def\u5f84\uff09\u3002 Raydium \uff1aAMM\u4ea4\u6613\u6240\uff08\u81ea\u52a8\u505a\u5e02\u5546\uff09\u3002 MarginFi \uff1a\u501f\u8d37\u534f\u8bae\uff08\u5b58\u5e01\u8d5a\u5229\u606f\uff09\u3002 \uff082\uff09NFT\uff08\u975e\u540c\u8d28\u5316\u4ee3\u5e01\uff09 \u00b6 \u5b9a\u4e49 \uff1a\u72ec\u4e00\u65e0\u4e8c\u7684\u6570\u5b57\u8d44\u4ea7\uff08\u5982\u827a\u672f\u54c1\u3001\u6e38\u620f\u9053\u5177\uff09\u3002 Solana \u4ee3\u8868\u5e94\u7528 \uff1a Tensor \uff1aNFT\u4ea4\u6613\u5e02\u573a\uff08\u7c7b\u4f3cOpenSea\uff09\u3002 Mad Lads \uff1a\u77e5\u540dNFT\u7cfb\u5217\uff08Solana\u7248\u201c\u65e0\u804a\u733f\u201d\uff09\u3002 \uff083\uff09Memecoin\uff08 meme \u5e01\uff09 \u00b6 \u5b9a\u4e49 \uff1a\u65e0\u5b9e\u9645\u7528\u9014\uff0c\u9760\u793e\u533a\u6587\u5316\u9a71\u52a8\u7684\u52a0\u5bc6\u8d27\u5e01\uff08\u5982\u72d7\u72d7\u5e01\uff09\u3002 Solana \u7206\u706b\u6848\u4f8b \uff1a $WIF \uff08Dogwifhat\uff09\uff1a\u4e00\u53ea\u6234\u5e3d\u5b50\u7684\u72d7\uff0c\u5e02\u503c\u8d8510\u4ebf\u7f8e\u5143\u3002 $BONK \uff1aSolana\u9996\u4e2a\u51fa\u5708\u7684Memecoin\uff0c\u7a7a\u6295\u5e26\u52a8\u751f\u6001\u590d\u82cf\u3002 3. Solana \u5f53\u524d\u70ed\u95e8\u5e94\u7528\uff082024\u5e74\uff09 \u00b6 \uff081\uff09DeFi \u5e94\u7528 \u00b6 \u9879\u76ee \u529f\u80fd \u4ee3\u5e01 Jupiter DEX\u805a\u5408\u5668\uff08\u6700\u4f18\u4ea4\u6613\u8def\u5f84\uff09 JUP Raydium AMM\u4ea4\u6613\u6240\uff08\u6d41\u52a8\u6027\u6316\u77ff\uff09 RAY Drift \u53bb\u4e2d\u5fc3\u5316\u6c38\u7eed\u5408\u7ea6\u4ea4\u6613 \u5f85\u53d1\u5e01 MarginFi \u501f\u8d37\u534f\u8bae MFI \uff082\uff09NFT \u751f\u6001 \u00b6 \u9879\u76ee \u529f\u80fd Tensor Solana\u6700\u5927NFT\u5e02\u573a\uff08\u4f4e\u624b\u7eed\u8d39\uff09 Magic Eden \u591a\u94feNFT\u5e02\u573a\uff08\u652f\u6301\u6bd4\u7279\u5e01Ordinals\uff09 Mad Lads \u84dd\u7b79NFT\u7cfb\u5217\uff08\u793e\u533a\u6d3b\u8dc3\uff09 \uff083\uff09Memecoin \u72c2\u6b22 \u00b6 \u4ee3\u5e01 \u7279\u70b9 \u5e02\u503c\uff082024\uff09 $WIF \u6234\u5e3d\u5b50\u7684\u72d7\uff08Solana\u6700\u706bMeme\uff09 $3B+ $BOME \u201cMeme\u4e4b\u4e66\u201d\u6587\u5316\uff083\u5929\u6da81000\u500d\uff09 $1B+ $BONK Solana\u9996\u4e2a\u7834\u5708Meme\uff08\u7a7a\u6295\u9a71\u52a8\uff09 $1.5B+ \uff084\uff09\u57fa\u7840\u8bbe\u65bd & \u5de5\u5177 \u00b6 Pyth Network\uff08PYTH\uff09 \uff1a\u53bb\u4e2d\u5fc3\u5316\u9884\u8a00\u673a\uff08\u63d0\u4f9b\u5b9e\u65f6\u4ef7\u683c\u6570\u636e\uff09\u3002 Helium\uff08HNT\uff09 \uff1a\u53bb\u4e2d\u5fc3\u5316\u65e0\u7ebf\u7f51\u7edc\uff08\u8fc1\u79fb\u81f3Solana\u540e\u7206\u53d1\uff09\u3002 Solana Mobile \uff1aWeb3\u624b\u673a\uff08Saga\u624b\u673a\u66fe\u56e0BONK\u7a7a\u6295\u66b4\u6da8\uff09\u3002 4. \u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u5e94\u7528\u9009\u62e9 Solana\uff1f \u00b6 \u4f4e\u8d39\u7528 \uff1aNFT mint \u6210\u672c\u4ec5\u9700 $0.01\uff0c\u4ee5\u592a\u574a\u9700 $50+\u3002 \u9ad8\u901f\u4ea4\u6613 \uff1aDeFi \u5957\u5229\u3001Memecoin \u7092\u4f5c\u4f9d\u8d56\u5feb\u901f\u786e\u8ba4\u3002 \u5f00\u53d1\u8005\u53cb\u597d \uff1aRust \u8bed\u8a00\u652f\u6301\uff0cSolana Labs \u5f3a\u751f\u6001\u6276\u6301\u3002 5. \u98ce\u9669\u4e0e\u6311\u6218 \u00b6 \u5b95\u673a\u5386\u53f2 \uff1a\u9700\u89c2\u5bdf\u7f51\u7edc\u7a33\u5b9a\u6027\u662f\u5426\u6539\u5584\u3002 Memecoin \u6ce1\u6cab \uff1a\u591a\u6570\u9879\u76ee\u65e0\u5b9e\u9645\u4ef7\u503c\uff0c\u9ad8\u6ce2\u52a8\u9ad8\u98ce\u9669\u3002 \u4ee5\u592a\u574a\u7ade\u4e89 \uff1aLayer2\uff08\u5982Base\u3001Blast\uff09\u62a2\u8d70\u90e8\u5206\u7528\u6237\u3002 \u603b\u7ed3 \u00b6 Solana \u9ad8TPS \uff1a\u9760 PoH + \u5e76\u884c\u6267\u884c + \u4f18\u5316\u7f51\u7edc \u3002 DeFi/NFT/Memecoin \uff1a\u5206\u522b\u5bf9\u5e94\u91d1\u878d\u3001\u6570\u5b57\u8d44\u4ea7\u3001\u793e\u533a\u6587\u5316\u3002 \u70ed\u95e8\u5e94\u7528 \uff1aJupiter\uff08DeFi\uff09\u3001Tensor\uff08NFT\uff09\u3001$WIF\uff08Meme\uff09\u3002","title":"Solana"},{"location":"bitcoin/solana/#solana","text":"Solana \u662f\u4e00\u4e2a\u9ad8\u6027\u80fd Layer1 \u533a\u5757\u94fe \uff0c\u4e3b\u6253\u9ad8\u541e\u5410\u91cf\u3001\u4f4e\u4ea4\u6613\u8d39\u7528\uff0c\u76ee\u6807\u662f\u6210\u4e3a\u201c\u4ee5\u592a\u574a\u6740\u624b\u201d\u3002\u5b83\u7531\u524d\u9ad8\u901a\u5de5\u7a0b\u5e08 Anatoly Yakovenko \u4e8e 2017 \u5e74\u63d0\u51fa\uff0c2020 \u5e74\u4e3b\u7f51\u4e0a\u7ebf\uff0c2021 \u5e74\u56e0 NFT \u548c DeFi \u7206\u53d1\u800c\u8d70\u7ea2\u3002","title":"Solana \u5168\u9762\u89e3\u6790"},{"location":"bitcoin/solana/#1-solana","text":"","title":"1. Solana \u7684\u6838\u5fc3\u7279\u70b9"},{"location":"bitcoin/solana/#1-tps","text":"\u7406\u8bba\u5cf0\u503c \uff1a65,000 TPS\uff08\u5b9e\u9645\u65e5\u5e38\u7ea6 2,000-4,000 TPS\uff09\u3002 \u5bf9\u6bd4 \uff1a\u4ee5\u592a\u574a 15-30 TPS\uff0c\u6bd4\u7279\u5e01 7 TPS\u3002 \u5982\u4f55\u505a\u5230\uff1f \u5386\u53f2\u8bc1\u660e\uff08PoH\uff09 \uff1a\u7c7b\u4f3c\u201c\u533a\u5757\u94fe\u65f6\u949f\u201d\uff0c\u4f18\u5316\u4ea4\u6613\u6392\u5e8f\uff0c\u51cf\u5c11\u8282\u70b9\u95f4\u540c\u6b65\u65f6\u95f4\u3002 \u5e76\u884c\u6267\u884c\uff08Sealevel\uff09 \uff1a\u7c7b\u4f3c\u591a\u7ebf\u7a0b\u5904\u7406\u4ea4\u6613\uff0c\u63d0\u5347\u6548\u7387\u3002","title":"\uff081\uff09\u8d85\u9ad8 TPS\uff08\u6bcf\u79d2\u4ea4\u6613\u6570\uff09"},{"location":"bitcoin/solana/#2-gas","text":"\u5e73\u5747\u4ea4\u6613\u8d39 \uff1a0.00001-0.001 SOL\uff08\u7ea6 \\(0.001-\\) 0.1\uff09\u3002 \u5bf9\u6bd4 \uff1a\u4ee5\u592a\u574a\u4e3b\u7f51 Gas \u8d39\u53ef\u80fd\u9ad8\u8fbe \\(10-\\) 100\u3002","title":"\uff082\uff09\u6781\u4f4e Gas \u8d39"},{"location":"bitcoin/solana/#3poh-pos","text":"PoS\uff08\u6743\u76ca\u8bc1\u660e\uff09 \uff1a\u9a8c\u8bc1\u8005\u8d28\u62bc SOL \u53c2\u4e0e\u51fa\u5757\u3002 PoH\uff08\u5386\u53f2\u8bc1\u660e\uff09 \uff1a\u65f6\u95f4\u6233\u673a\u5236\uff0c\u51cf\u5c11\u5171\u8bc6\u5f00\u9500\uff0c\u63d0\u9ad8\u901f\u5ea6\u3002","title":"\uff083\uff09\u72ec\u7279\u7684\u5171\u8bc6\u673a\u5236\uff1aPoH + PoS"},{"location":"bitcoin/solana/#2-solana","text":"","title":"2. Solana \u4e3a\u4ec0\u4e48\u706b\uff1f"},{"location":"bitcoin/solana/#12021-defi-nft","text":"Serum\uff08DEX\uff09 \u3001 Raydium\uff08AMM\uff09 \u7b49 DeFi \u9879\u76ee\u5d1b\u8d77\u3002 Degenerate Ape Academy \u3001 Solana Monkey Business \u7b49 NFT \u9879\u76ee\u7206\u706b\u3002","title":"\uff081\uff092021 \u5e74 DeFi &amp; NFT \u7206\u53d1"},{"location":"bitcoin/solana/#22023-2024-memecoin","text":"$BONK \uff08Solana \u9996\u4e2a Memecoin\uff0c2023 \u5e74\u6da8\u5e45 1000x+\uff09\u3002 $WIF \uff08Dogwifhat\uff0c\u5e02\u503c\u4e00\u5ea6\u8d85 30 \u4ebf\u7f8e\u5143\uff09\u3002 $BOME \uff08Book of Meme\uff0c3 \u5929\u6da8 1000 \u500d\uff09\u3002","title":"\uff082\uff092023-2024 \u5e74 Memecoin \u72c2\u6f6e"},{"location":"bitcoin/solana/#3","text":"a16z\u3001Multicoin Capital \u7b49\u9876\u7ea7 VC \u6295\u8d44\u3002 Solana Mobile\uff08Saga \u624b\u673a\uff09 \u63a8\u52a8\u79fb\u52a8\u7aef Web3 \u91c7\u7528\u3002 Solana Pay \u652f\u6301\u4f4e\u6210\u672c\u52a0\u5bc6\u8d27\u5e01\u652f\u4ed8\uff08\u5982 Shopify \u5546\u5bb6\u53ef\u7528\uff09\u3002","title":"\uff083\uff09\u8d44\u672c &amp; \u751f\u6001\u652f\u6301"},{"location":"bitcoin/solana/#3-solana","text":"","title":"3. Solana \u7684\u4e89\u8bae\u4e0e\u6311\u6218"},{"location":"bitcoin/solana/#1","text":"2022 \u5e74\u591a\u6b21\u5b95\u673a \uff08\u6700\u957f\u4e00\u6b21 18 \u5c0f\u65f6\uff09\uff0c\u539f\u56e0\uff1a \u5783\u573e\u4ea4\u6613\u62e5\u5835\uff08\u5982 NFT mint \u9ad8\u5cf0\u671f\uff09\u3002 \u9a8c\u8bc1\u8005\u8282\u70b9\u914d\u7f6e\u4e0d\u8db3\u3002 \u6539\u8fdb\u65b9\u6848 \uff1a QUIC \u534f\u8bae \uff08\u4f18\u5316\u7f51\u7edc\u901a\u4fe1\uff09\u3002 \u8d39\u7528\u5e02\u573a \uff08\u4f18\u5148\u5904\u7406\u9ad8 Gas \u4ea4\u6613\uff09\u3002","title":"\uff081\uff09\u7f51\u7edc\u5b95\u673a\u95ee\u9898"},{"location":"bitcoin/solana/#2","text":"\u9a8c\u8bc1\u8005\u6570\u91cf \uff1a\u7ea6 2,000 \u4e2a\uff08\u4ee5\u592a\u574a 90 \u4e07+\uff0c\u6bd4\u7279\u5e01 10 \u4e07+\uff09\u3002 \u524d 10 \u540d\u9a8c\u8bc1\u8005\u63a7\u5236 35% \u8d28\u62bc \uff0c\u5b58\u5728\u4e2d\u5fc3\u5316\u98ce\u9669\u3002","title":"\uff082\uff09\u4e2d\u5fc3\u5316\u4e89\u8bae"},{"location":"bitcoin/solana/#3_1","text":"\u4ee5\u592a\u574a Layer2\uff08Arbitrum\u3001Optimism\uff09 \u62a2\u8d70\u90e8\u5206\u7528\u6237\u3002 Sui\u3001Aptos \u7b49\u65b0\u516c\u94fe\u7ade\u4e89\u9ad8\u6027\u80fd\u5e02\u573a\u3002","title":"\uff083\uff09\u7ade\u4e89\u5bf9\u624b\u5d1b\u8d77"},{"location":"bitcoin/solana/#4-solana","text":"\u7c7b\u522b \u4ee3\u8868\u9879\u76ee \u529f\u80fd DeFi Jupiter\uff08JUP\uff09 Solana \u6700\u5927 DEX \u805a\u5408\u5668\uff08\u7c7b\u4f3c 1inch\uff09\u3002 NFT Tensor Solana \u7248 Blur\uff08NFT \u4ea4\u6613\u5e02\u573a\uff09\u3002 Memecoin \\(WIF\u3001\\) BONK \u793e\u533a\u9a71\u52a8\u7684 Meme \u5e01\u3002 \u652f\u4ed8 Solana Pay \u5546\u5bb6\u52a0\u5bc6\u8d27\u5e01\u652f\u4ed8\u89e3\u51b3\u65b9\u6848\u3002 \u57fa\u7840\u8bbe\u65bd Pyth Network\uff08PYTH\uff09 \u53bb\u4e2d\u5fc3\u5316\u9884\u8a00\u673a\uff08\u5582\u4ef7\u6570\u636e\uff09\u3002","title":"4. Solana \u751f\u6001\u91cd\u70b9\u9879\u76ee"},{"location":"bitcoin/solana/#5-solanasol","text":"","title":"5. Solana\uff08SOL\uff09\u9002\u5408\u6295\u8d44\u5417\uff1f"},{"location":"bitcoin/solana/#_1","text":"\u9ad8\u6027\u80fd & \u4f4e\u8d39\u7528 \uff1a\u9002\u5408\u9ad8\u9891\u4ea4\u6613\u3001NFT\u3001GameFi\u3002 \u5f3a\u5927\u751f\u6001 \uff1aDeFi\u3001NFT\u3001Memecoin \u5168\u9762\u7206\u53d1\u3002 \u8d44\u672c\u652f\u6301 \uff1a\u957f\u671f\u6709 a16z\u3001FTX\uff08\u5df2\u7834\u4ea7\u4f46\u5f71\u54cd\u51cf\u5f31\uff09\u7b49\u80cc\u4e66\u3002","title":"\u2705 \u4f18\u52bf"},{"location":"bitcoin/solana/#_2","text":"\u5b95\u673a\u5386\u53f2 \uff1a\u4ecd\u9700\u89c2\u5bdf\u7a33\u5b9a\u6027\u6539\u8fdb\u3002 Memecoin \u6ce1\u6cab \uff1a\u90e8\u5206\u9879\u76ee\u7eaf\u7092\u4f5c\uff0c\u53ef\u80fd\u5d29\u76d8\u3002 \u7ade\u4e89\u6fc0\u70c8 \uff1a\u4ee5\u592a\u574a Layer2\u3001Sui \u7b49\u5bf9\u624b\u864e\u89c6\u7708\u7708\u3002","title":"\u274c \u98ce\u9669"},{"location":"bitcoin/solana/#2024","text":"\u4ef7\u683c \uff1a \\(100-\\) 200 \u6ce2\u52a8\uff08\u5386\u53f2\u6700\u9ad8 $260\uff0c2021 \u5e74\uff09\u3002 \u5e02\u503c \uff1aTop 5 \u52a0\u5bc6\u8d27\u5e01\uff08\u4ec5\u6b21\u4e8e BTC\u3001ETH\u3001BNB\uff09\u3002","title":"\ud83d\udcc8 \u5e02\u573a\u8868\u73b0\uff082024 \u5e74\uff09"},{"location":"bitcoin/solana/#6-solana","text":"\u8d2d\u4e70 SOL \uff08\u5e01\u5b89\u3001OKX\u3001Coinbase \u7b49\u4ea4\u6613\u6240\uff09\u3002 \u73a9 Memecoin \uff08\u5982 \\(WIF\u3001\\) BOME\uff0c\u4f46\u9ad8\u98ce\u9669\uff09\u3002 \u4ea4\u4e92 DeFi \uff08Jupiter\u3001Raydium \u7b49\uff0c\u53ef\u80fd\u6709\u7a7a\u6295\uff09\u3002 \u5173\u6ce8 Solana Mobile \uff08Saga \u624b\u673a\u672a\u6765\u53ef\u80fd\u53d1\u65b0\u4ee3\u5e01\uff09\u3002","title":"6. \u5982\u4f55\u53c2\u4e0e Solana \u751f\u6001\uff1f"},{"location":"bitcoin/solana/#_3","text":"Solana \u662f**\u9ad8\u6027\u80fd\u3001\u4f4e\u8d39\u7528\u3001\u751f\u6001\u6d3b\u8dc3**\u7684\u516c\u94fe\uff0c\u9002\u5408\uff1a - \u4ea4\u6613\u8005 \uff08\u4f4e Gas \u8d39+\u9ad8 TPS\uff09\u3002 - Memecoin \u6295\u673a\u8005 \uff08\u9ad8\u6ce2\u52a8\u673a\u4f1a\uff09\u3002 - \u5f00\u53d1\u8005 \uff08Rust \u667a\u80fd\u5408\u7ea6\uff0c\u751f\u6001\u6276\u6301\u591a\uff09\u3002 \u4f46\u9700\u6ce8\u610f \u5b95\u673a\u98ce\u9669\u3001\u4e2d\u5fc3\u5316\u95ee\u9898\u3001\u7ade\u4e89\u538b\u529b \u3002","title":"\u603b\u7ed3"},{"location":"bitcoin/solana/#1-solana-tps","text":"Solana \u7684\u9ad8\u6027\u80fd\uff08\u7406\u8bba\u5cf0\u503c 65,000 TPS \uff0c\u5b9e\u9645 2,000-4,000 TPS \uff09\u4e3b\u8981\u4f9d\u8d56\u4ee5\u4e0b\u6280\u672f\u521b\u65b0\uff1a","title":"1. Solana \u9ad8 TPS \u7684\u539f\u7406"},{"location":"bitcoin/solana/#1proof-of-history-poh","text":"\u4f5c\u7528 \uff1a\u89e3\u51b3\u533a\u5757\u94fe\u7684\u201c\u65f6\u95f4\u540c\u6b65\u201d\u95ee\u9898\uff0c\u907f\u514d\u8282\u70b9\u95f4\u9891\u7e41\u901a\u4fe1\u786e\u8ba4\u4ea4\u6613\u987a\u5e8f\u3002 \u539f\u7406 \uff1a \u7c7b\u4f3c\u4e00\u4e2a**\u52a0\u5bc6\u65f6\u949f**\uff0c\u6bcf\u4e2a\u4ea4\u6613\u88ab\u6253\u4e0a\u53ef\u9a8c\u8bc1\u7684\u65f6\u95f4\u6233\u3002 \u8282\u70b9\u65e0\u9700\u7b49\u5f85\u5168\u7f51\u786e\u8ba4\uff0c\u76f4\u63a5\u6309\u65f6\u95f4\u6233\u5904\u7406\u4ea4\u6613\uff0c\u51cf\u5c11\u5171\u8bc6\u5ef6\u8fdf\u3002","title":"\uff081\uff09\u5386\u53f2\u8bc1\u660e\uff08Proof of History, PoH\uff09"},{"location":"bitcoin/solana/#2sealevel","text":"\u4f5c\u7528 \uff1a\u540c\u65f6\u5904\u7406\u591a\u4e2a\u4ea4\u6613\uff0c\u800c\u975e\u50cf\u4ee5\u592a\u574a\u4e00\u6837\u4e32\u884c\u6267\u884c\u3002 \u539f\u7406 \uff1a \u4ea4\u6613\u6309\u4f9d\u8d56\u5173\u7cfb\u5206\u7ec4\uff0c\u65e0\u51b2\u7a81\u7684\u4ea4\u6613**\u5e76\u884c\u5904\u7406**\uff08\u7c7b\u4f3c\u591a\u7ebf\u7a0b\uff09\u3002 \u4f8b\u5982\uff1aA\u2192B \u8f6c\u8d26\u548c C\u2192D \u8f6c\u8d26\u4e92\u4e0d\u5f71\u54cd\uff0c\u53ef\u540c\u65f6\u6267\u884c\u3002","title":"\uff082\uff09\u5e76\u884c\u6267\u884c\uff08Sealevel\uff09"},{"location":"bitcoin/solana/#3turbine","text":"\u4f5c\u7528 \uff1a\u5feb\u901f\u5c06\u533a\u5757\u6570\u636e\u5206\u53d1\u7ed9\u5168\u7f51\u8282\u70b9\u3002 \u539f\u7406 \uff1a \u5c06\u533a\u5757\u62c6\u5206\u6210\u5c0f\u6570\u636e\u5305\uff0c\u901a\u8fc7**P2P\u7f51\u7edc\u5206\u5c42\u5e7f\u64ad**\uff08\u7c7b\u4f3cBitTorrent\uff09\u3002","title":"\uff083\uff09\u6da1\u8f6e\uff08Turbine\uff09\u533a\u5757\u4f20\u64ad"},{"location":"bitcoin/solana/#4","text":"Gulf Stream \uff1a\u63d0\u524d\u7f13\u5b58\u672a\u786e\u8ba4\u4ea4\u6613\uff0c\u51cf\u5c11\u5185\u5b58\u6c60\u62e5\u5835\u3002 Cloudbreak \uff1a\u6c34\u5e73\u6269\u5c55\u7684\u8d26\u6237\u6570\u636e\u5e93\uff0c\u652f\u6301\u9ad8\u5e76\u53d1\u8bfb\u5199\u3002","title":"\uff084\uff09\u5176\u4ed6\u4f18\u5316"},{"location":"bitcoin/solana/#2_1","text":"","title":"2. \u6838\u5fc3\u6982\u5ff5\u89e3\u91ca"},{"location":"bitcoin/solana/#1defi","text":"\u5b9a\u4e49 \uff1a\u65e0\u9700\u94f6\u884c\uff0c\u7528\u667a\u80fd\u5408\u7ea6\u5b9e\u73b0\u7684\u91d1\u878d\u670d\u52a1\uff08\u501f\u8d37\u3001\u4ea4\u6613\u3001\u884d\u751f\u54c1\u7b49\uff09\u3002 Solana \u4ee3\u8868\u5e94\u7528 \uff1a Jupiter\uff08JUP\uff09 \uff1a\u6700\u5927DEX\u805a\u5408\u5668\uff08\u627e\u6700\u4f18\u4ea4\u6613\u8def\u5f84\uff09\u3002 Raydium \uff1aAMM\u4ea4\u6613\u6240\uff08\u81ea\u52a8\u505a\u5e02\u5546\uff09\u3002 MarginFi \uff1a\u501f\u8d37\u534f\u8bae\uff08\u5b58\u5e01\u8d5a\u5229\u606f\uff09\u3002","title":"\uff081\uff09DeFi\uff08\u53bb\u4e2d\u5fc3\u5316\u91d1\u878d\uff09"},{"location":"bitcoin/solana/#2nft","text":"\u5b9a\u4e49 \uff1a\u72ec\u4e00\u65e0\u4e8c\u7684\u6570\u5b57\u8d44\u4ea7\uff08\u5982\u827a\u672f\u54c1\u3001\u6e38\u620f\u9053\u5177\uff09\u3002 Solana \u4ee3\u8868\u5e94\u7528 \uff1a Tensor \uff1aNFT\u4ea4\u6613\u5e02\u573a\uff08\u7c7b\u4f3cOpenSea\uff09\u3002 Mad Lads \uff1a\u77e5\u540dNFT\u7cfb\u5217\uff08Solana\u7248\u201c\u65e0\u804a\u733f\u201d\uff09\u3002","title":"\uff082\uff09NFT\uff08\u975e\u540c\u8d28\u5316\u4ee3\u5e01\uff09"},{"location":"bitcoin/solana/#3memecoin-meme","text":"\u5b9a\u4e49 \uff1a\u65e0\u5b9e\u9645\u7528\u9014\uff0c\u9760\u793e\u533a\u6587\u5316\u9a71\u52a8\u7684\u52a0\u5bc6\u8d27\u5e01\uff08\u5982\u72d7\u72d7\u5e01\uff09\u3002 Solana \u7206\u706b\u6848\u4f8b \uff1a $WIF \uff08Dogwifhat\uff09\uff1a\u4e00\u53ea\u6234\u5e3d\u5b50\u7684\u72d7\uff0c\u5e02\u503c\u8d8510\u4ebf\u7f8e\u5143\u3002 $BONK \uff1aSolana\u9996\u4e2a\u51fa\u5708\u7684Memecoin\uff0c\u7a7a\u6295\u5e26\u52a8\u751f\u6001\u590d\u82cf\u3002","title":"\uff083\uff09Memecoin\uff08 meme \u5e01\uff09"},{"location":"bitcoin/solana/#3-solana-2024","text":"","title":"3. Solana \u5f53\u524d\u70ed\u95e8\u5e94\u7528\uff082024\u5e74\uff09"},{"location":"bitcoin/solana/#1defi_1","text":"\u9879\u76ee \u529f\u80fd \u4ee3\u5e01 Jupiter DEX\u805a\u5408\u5668\uff08\u6700\u4f18\u4ea4\u6613\u8def\u5f84\uff09 JUP Raydium AMM\u4ea4\u6613\u6240\uff08\u6d41\u52a8\u6027\u6316\u77ff\uff09 RAY Drift \u53bb\u4e2d\u5fc3\u5316\u6c38\u7eed\u5408\u7ea6\u4ea4\u6613 \u5f85\u53d1\u5e01 MarginFi \u501f\u8d37\u534f\u8bae MFI","title":"\uff081\uff09DeFi \u5e94\u7528"},{"location":"bitcoin/solana/#2nft_1","text":"\u9879\u76ee \u529f\u80fd Tensor Solana\u6700\u5927NFT\u5e02\u573a\uff08\u4f4e\u624b\u7eed\u8d39\uff09 Magic Eden \u591a\u94feNFT\u5e02\u573a\uff08\u652f\u6301\u6bd4\u7279\u5e01Ordinals\uff09 Mad Lads \u84dd\u7b79NFT\u7cfb\u5217\uff08\u793e\u533a\u6d3b\u8dc3\uff09","title":"\uff082\uff09NFT \u751f\u6001"},{"location":"bitcoin/solana/#3memecoin","text":"\u4ee3\u5e01 \u7279\u70b9 \u5e02\u503c\uff082024\uff09 $WIF \u6234\u5e3d\u5b50\u7684\u72d7\uff08Solana\u6700\u706bMeme\uff09 $3B+ $BOME \u201cMeme\u4e4b\u4e66\u201d\u6587\u5316\uff083\u5929\u6da81000\u500d\uff09 $1B+ $BONK Solana\u9996\u4e2a\u7834\u5708Meme\uff08\u7a7a\u6295\u9a71\u52a8\uff09 $1.5B+","title":"\uff083\uff09Memecoin \u72c2\u6b22"},{"location":"bitcoin/solana/#4_1","text":"Pyth Network\uff08PYTH\uff09 \uff1a\u53bb\u4e2d\u5fc3\u5316\u9884\u8a00\u673a\uff08\u63d0\u4f9b\u5b9e\u65f6\u4ef7\u683c\u6570\u636e\uff09\u3002 Helium\uff08HNT\uff09 \uff1a\u53bb\u4e2d\u5fc3\u5316\u65e0\u7ebf\u7f51\u7edc\uff08\u8fc1\u79fb\u81f3Solana\u540e\u7206\u53d1\uff09\u3002 Solana Mobile \uff1aWeb3\u624b\u673a\uff08Saga\u624b\u673a\u66fe\u56e0BONK\u7a7a\u6295\u66b4\u6da8\uff09\u3002","title":"\uff084\uff09\u57fa\u7840\u8bbe\u65bd &amp; \u5de5\u5177"},{"location":"bitcoin/solana/#4-solana_1","text":"\u4f4e\u8d39\u7528 \uff1aNFT mint \u6210\u672c\u4ec5\u9700 $0.01\uff0c\u4ee5\u592a\u574a\u9700 $50+\u3002 \u9ad8\u901f\u4ea4\u6613 \uff1aDeFi \u5957\u5229\u3001Memecoin \u7092\u4f5c\u4f9d\u8d56\u5feb\u901f\u786e\u8ba4\u3002 \u5f00\u53d1\u8005\u53cb\u597d \uff1aRust \u8bed\u8a00\u652f\u6301\uff0cSolana Labs \u5f3a\u751f\u6001\u6276\u6301\u3002","title":"4. \u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u5e94\u7528\u9009\u62e9 Solana\uff1f"},{"location":"bitcoin/solana/#5","text":"\u5b95\u673a\u5386\u53f2 \uff1a\u9700\u89c2\u5bdf\u7f51\u7edc\u7a33\u5b9a\u6027\u662f\u5426\u6539\u5584\u3002 Memecoin \u6ce1\u6cab \uff1a\u591a\u6570\u9879\u76ee\u65e0\u5b9e\u9645\u4ef7\u503c\uff0c\u9ad8\u6ce2\u52a8\u9ad8\u98ce\u9669\u3002 \u4ee5\u592a\u574a\u7ade\u4e89 \uff1aLayer2\uff08\u5982Base\u3001Blast\uff09\u62a2\u8d70\u90e8\u5206\u7528\u6237\u3002","title":"5. \u98ce\u9669\u4e0e\u6311\u6218"},{"location":"bitcoin/solana/#_4","text":"Solana \u9ad8TPS \uff1a\u9760 PoH + \u5e76\u884c\u6267\u884c + \u4f18\u5316\u7f51\u7edc \u3002 DeFi/NFT/Memecoin \uff1a\u5206\u522b\u5bf9\u5e94\u91d1\u878d\u3001\u6570\u5b57\u8d44\u4ea7\u3001\u793e\u533a\u6587\u5316\u3002 \u70ed\u95e8\u5e94\u7528 \uff1aJupiter\uff08DeFi\uff09\u3001Tensor\uff08NFT\uff09\u3001$WIF\uff08Meme\uff09\u3002","title":"\u603b\u7ed3"},{"location":"bitcoin/story/","text":"\u57fa\u672c\u6d41\u7a0b \u00b6 \u4ece\u5934\u68b3\u7406\u6574\u4e2a\u6d41\u7a0b\uff0c\u4ece**\u4ea4\u6613\u65b9**\u3001**\u77ff\u5de5**\u548c**\u533a\u5757\u94fe\u7f51\u7edc**\u4e09\u4e2a\u89d2\u5ea6\uff0c\u9010\u6b65\u62c6\u89e3\u4ea4\u6613\u7684\u5b8c\u6574\u751f\u547d\u5468\u671f\u3002 \u7b2c\u4e00\u6b65\uff1a\u4ea4\u6613\u53d1\u8d77\uff08\u7528\u6237\u89c6\u89d2\uff09 \u00b6 \u7528\u6237\u521b\u5efa\u4ea4\u6613 \u4f60\u901a\u8fc7\u94b1\u5305\uff08\u5982\u6bd4\u7279\u5e01\u94b1\u5305\uff09\u53d1\u8d77\u4e00\u7b14\u8f6c\u8d26\uff0c\u586b\u5199\uff1a \u6536\u6b3e\u5730\u5740\u3001\u91d1\u989d\u3001\u624b\u7eed\u8d39\uff08\u53ef\u9009\uff09 \u3002 \u624b\u7eed\u8d39\u662f\u4f60\u4e3b\u52a8\u8bbe\u7f6e\u7684\u201c\u77ff\u5de5\u8d39\u201d\uff0c\u7528\u4e8e\u6fc0\u52b1\u77ff\u5de5\u4f18\u5148\u6253\u5305\u4f60\u7684\u4ea4\u6613\u3002\u624b\u7eed\u8d39\u8d8a\u9ad8\uff0c\u4ea4\u6613\u8d8a\u5feb\u88ab\u5904\u7406\u3002 \u5e7f\u64ad\u4ea4\u6613\u5230\u7f51\u7edc \u4f60\u7684\u94b1\u5305\u5c06\u4ea4\u6613\u5e7f\u64ad\u5230\u6bd4\u7279\u5e01\u7f51\u7edc\u7684\u8282\u70b9\uff08\u8282\u70b9\u662f\u7f51\u7edc\u4e2d\u7684\u8ba1\u7b97\u673a\uff0c\u8d1f\u8d23\u4f20\u64ad\u4ea4\u6613\u548c\u533a\u5757\uff09\u3002 \u4ea4\u6613\u8fdb\u5165**\u5185\u5b58\u6c60\uff08Mempool\uff09**\u2014\u2014\u8fd9\u662f\u4e00\u4e2a\u5168\u7f51\u5171\u4eab\u7684\u201c\u5f85\u5904\u7406\u4ea4\u6613\u6c60\u201d\uff0c\u6240\u6709\u672a\u786e\u8ba4\u4ea4\u6613\u90fd\u5728\u8fd9\u91cc\u6392\u961f\u3002 \u7b2c\u4e8c\u6b65\uff1a\u4ea4\u6613\u7b49\u5f85\u6253\u5305\uff08\u77ff\u5de5\u89c6\u89d2\uff09 \u00b6 \u77ff\u5de5\u7b5b\u9009\u4ea4\u6613 \u77ff\u5de5\u4ece\u5185\u5b58\u6c60\u4e2d\u9009\u62e9\u4ea4\u6613\u6253\u5305\u5230\u4e0b\u4e00\u4e2a\u533a\u5757\u3002\u9009\u62e9\u7b56\u7565\uff1a \u6309\u624b\u7eed\u8d39\u7387\uff08sat/vByte\uff09\u6392\u5e8f \uff1a\u4f18\u5148\u6253\u5305\u624b\u7eed\u8d39\u9ad8\u7684\u4ea4\u6613\u3002 \u586b\u6ee1\u533a\u5757 \uff1a\u5728\u533a\u5757\u5bb9\u91cf\uff081MB~4MB\uff09\u5185\u5c3d\u53ef\u80fd\u591a\u6253\u5305\u4ea4\u6613\uff0c\u6700\u5927\u5316\u6536\u76ca\u3002 \uff08\u5982\u679c\u4f60\u7684\u624b\u7eed\u8d39\u8bbe\u5f97\u592a\u4f4e\uff0c\u4ea4\u6613\u53ef\u80fd\u957f\u65f6\u95f4\u6ede\u7559\u5728\u5185\u5b58\u6c60\u4e2d\uff01\uff09 \u6316\u77ff\u7ade\u4e89 \u77ff\u5de5\u5c06\u9009\u4e2d\u7684\u4ea4\u6613\u6253\u5305\u6210\u4e00\u4e2a\u5019\u9009\u533a\u5757\uff0c\u5f00\u59cb\u8fdb\u884c\u5de5\u4f5c\u91cf\u8bc1\u660e\uff08PoW\uff09\u8ba1\u7b97\uff08\u5373\u201c\u6316\u77ff\u201d\uff09\u3002 \u5168\u7f51\u77ff\u5de5\u7ade\u4e89 \uff1a\u8c01\u5148\u7b97\u51fa\u7b26\u5408\u96be\u5ea6\u7684\u54c8\u5e0c\u503c\uff0c\u8c01\u5c31\u6709\u6743\u5c06\u533a\u5757\u6dfb\u52a0\u5230\u533a\u5757\u94fe\u3002 \u7b2c\u4e09\u6b65\uff1a\u4ea4\u6613\u786e\u8ba4\uff08\u533a\u5757\u94fe\u7f51\u7edc\u89c6\u89d2\uff09 \u00b6 \u9996\u6b21\u786e\u8ba4\uff081\u4e2a\u533a\u5757\uff09 \u5f53\u67d0\u4e2a\u77ff\u5de5\u6210\u529f\u6316\u51fa\u533a\u5757\uff0c\u4f60\u7684\u4ea4\u6613\u88ab\u5305\u542b\u5728\u5176\u4e2d\uff0c\u6b64\u65f6\u83b7\u5f97**1\u6b21\u786e\u8ba4**\u3002 \u4f46\u6b64\u65f6\u4ea4\u6613\u8fd8\u4e0d\u7b97\u6700\u7ec8\u5b8c\u6210\uff01\u56e0\u4e3a\u53ef\u80fd\u51fa\u73b0**\u4e34\u65f6\u5206\u53c9**\uff08\u5176\u4ed6\u77ff\u5de5\u53ef\u80fd\u540c\u65f6\u6316\u51fa\u7ade\u4e89\u533a\u5757\uff09\u3002 6\u6b21\u786e\u8ba4\u89c4\u5219 \u6bd4\u7279\u5e01\u7f51\u7edc\u7ea6\u5b9a\u4fd7\u6210\u7684\u5b89\u5168\u6807\u51c6\u662f\u7b49\u5f85**6\u4e2a\u533a\u5757\u786e\u8ba4**\uff08\u7ea61\u5c0f\u65f6\uff09\u3002 \u6bcf\u65b0\u589e\u4e00\u4e2a\u533a\u5757\uff0c\u4f60\u7684\u4ea4\u6613\u786e\u8ba4\u6570+1\u3002 6\u6b21\u786e\u8ba4\u540e\uff0c\u4ea4\u6613\u88ab\u9006\u8f6c\u7684\u6982\u7387\u6781\u4f4e\uff08\u9700\u653b\u51fb\u8005\u638c\u63e1\u5168\u7f5151%\u7b97\u529b\u624d\u80fd\u7be1\u6539\uff09\u3002 \uff08\u4ea4\u6613\u6240\u6216\u5927\u989d\u8f6c\u8d26\u901a\u5e38\u8981\u6c426\u786e\u8ba4\uff0c\u5c0f\u989d\u4ea4\u6613\u53ef\u80fd1\u786e\u8ba4\u5373\u53ef\u3002\uff09 \u4e3a\u4ec0\u4e48\u662f6\u6b21\uff1f \u7edf\u8ba1\u5b66\u5b89\u5168\u6a21\u578b\uff1a\u968f\u7740\u786e\u8ba4\u6570\u589e\u52a0\uff0c\u4ea4\u6613\u88ab\u63a8\u7ffb\u7684\u6982\u7387\u5448\u6307\u6570\u7ea7\u4e0b\u964d\u3002 6\u6b21\u786e\u8ba4\u540e\uff0c\u653b\u51fb\u6210\u672c\u8fdc\u8d85\u6536\u76ca\uff0c\u7f51\u7edc\u89c6\u4e3a\u201c\u6700\u7ec8\u786e\u5b9a\u201d\u3002 \u5173\u952e\u95ee\u9898\u56de\u7b54 \u00b6 Q\uff1a\u6211\u7684\u4ea4\u6613\u67096\u4e2a\u533a\u5757\u786e\u8ba4\u4e86\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u5b8c\u6210\u4e86\u5417\uff1f \u2705 \u662f\u7684\uff01 \u4ece\u6bd4\u7279\u5e01\u7f51\u7edc\u5b89\u5168\u89d2\u5ea6\uff0c6\u6b21\u786e\u8ba4\u540e\u4ea4\u6613\u53ef\u89c6\u4e3a\u4e0d\u53ef\u9006\u3002\u6b64\u65f6\uff1a - \u4f60\u7684\u4ea4\u6613\u5df2\u88ab\u5168\u7f51\u7edd\u5927\u591a\u6570\u8282\u70b9\u8ba4\u53ef\u3002 - \u6536\u6b3e\u65b9\u53ef\u4ee5\u5b89\u5168\u4f7f\u7528\u8fd9\u7b14\u8d44\u91d1\uff08\u5982\u4ea4\u6613\u6240\u5141\u8bb8\u63d0\u73b0\uff09\u3002 \u8865\u5145\u6ce8\u610f\u4e8b\u9879 \u00b6 \u624b\u7eed\u8d39\u4f18\u5316 \u5982\u679c\u4f60\u60f3\u52a0\u5feb\u4ea4\u6613\uff0c\u9700\u8bbe\u7f6e\u8db3\u591f\u9ad8\u7684\u624b\u7eed\u8d39\uff08\u53c2\u8003\u5b9e\u65f6\u6570\u636e\u5982 mempool.space \uff09\u3002 \u4f4e\u624b\u7eed\u8d39\u4ea4\u6613\u53ef\u80fd\u5728\u62e5\u5835\u65f6\u5ef6\u8fdf\u6570\u5c0f\u65f6\u751a\u81f3\u51e0\u5929\u3002 \u4ea4\u6613\u4e22\u5f03\u98ce\u9669 \u5982\u679c\u4ea4\u6613\u957f\u65f6\u95f4\u672a\u6253\u5305\uff08\u5982\u624b\u7eed\u8d39\u8fc7\u4f4e\uff09\uff0c\u8282\u70b9\u53ef\u80fd\u5c06\u5176\u4ece\u5185\u5b58\u6c60\u4e2d\u6e05\u9664\u3002\u6b64\u65f6\u9700\u91cd\u65b0\u53d1\u8d77\u4ea4\u6613\u3002 \u5206\u53c9\u65f6\u7684\u7279\u6b8a\u60c5\u51b5 \u5982\u679c\u4ea4\u6613\u88ab\u6253\u5305\u5728\u5206\u53c9\u94fe\u4e0a\uff0c\u4e14\u8be5\u94fe\u6700\u7ec8\u88ab\u629b\u5f03\uff0c\u4ea4\u6613\u4f1a\u8fd4\u56de\u5185\u5b58\u6c60\u91cd\u65b0\u7b49\u5f85\u6253\u5305\u3002 \u603b\u7ed3\u6d41\u7a0b\u56fe \u00b6 \u7528\u6237\u53d1\u8d77\u4ea4\u6613 \u2192 \u5e7f\u64ad\u5230\u5185\u5b58\u6c60 \u2192 \u77ff\u5de5\u6309\u624b\u7eed\u8d39\u7b5b\u9009 \u2192 \u6253\u5305\u8fdb\u533a\u5757 \u2192 1\u6b21\u786e\u8ba4 \u2192 \u540e\u7eed\u533a\u5757\u53e0\u52a0 \u2192 6\u6b21\u786e\u8ba4 \u2192 \u4ea4\u6613\u6700\u7ec8\u5b8c\u6210 \u901a\u8fc7\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u533a\u5757\u94fe\u5728\u53bb\u4e2d\u5fc3\u5316\u73af\u5883\u4e0b\u5b9e\u73b0\u4e86**\u5b89\u5168**\u3001**\u6297\u7be1\u6539**\u7684\u4ea4\u6613\u9a8c\u8bc1\u3002\u4f5c\u4e3a\u7528\u6237\uff0c\u4f60\u53ea\u9700\u8bbe\u7f6e\u5408\u7406\u624b\u7eed\u8d39\u5e76\u8010\u5fc3\u7b49\u5f85\u786e\u8ba4\u5373\u53ef\uff01","title":"\u57fa\u672c\u6d41\u7a0b"},{"location":"bitcoin/story/#_1","text":"\u4ece\u5934\u68b3\u7406\u6574\u4e2a\u6d41\u7a0b\uff0c\u4ece**\u4ea4\u6613\u65b9**\u3001**\u77ff\u5de5**\u548c**\u533a\u5757\u94fe\u7f51\u7edc**\u4e09\u4e2a\u89d2\u5ea6\uff0c\u9010\u6b65\u62c6\u89e3\u4ea4\u6613\u7684\u5b8c\u6574\u751f\u547d\u5468\u671f\u3002","title":"\u57fa\u672c\u6d41\u7a0b"},{"location":"bitcoin/story/#_2","text":"\u7528\u6237\u521b\u5efa\u4ea4\u6613 \u4f60\u901a\u8fc7\u94b1\u5305\uff08\u5982\u6bd4\u7279\u5e01\u94b1\u5305\uff09\u53d1\u8d77\u4e00\u7b14\u8f6c\u8d26\uff0c\u586b\u5199\uff1a \u6536\u6b3e\u5730\u5740\u3001\u91d1\u989d\u3001\u624b\u7eed\u8d39\uff08\u53ef\u9009\uff09 \u3002 \u624b\u7eed\u8d39\u662f\u4f60\u4e3b\u52a8\u8bbe\u7f6e\u7684\u201c\u77ff\u5de5\u8d39\u201d\uff0c\u7528\u4e8e\u6fc0\u52b1\u77ff\u5de5\u4f18\u5148\u6253\u5305\u4f60\u7684\u4ea4\u6613\u3002\u624b\u7eed\u8d39\u8d8a\u9ad8\uff0c\u4ea4\u6613\u8d8a\u5feb\u88ab\u5904\u7406\u3002 \u5e7f\u64ad\u4ea4\u6613\u5230\u7f51\u7edc \u4f60\u7684\u94b1\u5305\u5c06\u4ea4\u6613\u5e7f\u64ad\u5230\u6bd4\u7279\u5e01\u7f51\u7edc\u7684\u8282\u70b9\uff08\u8282\u70b9\u662f\u7f51\u7edc\u4e2d\u7684\u8ba1\u7b97\u673a\uff0c\u8d1f\u8d23\u4f20\u64ad\u4ea4\u6613\u548c\u533a\u5757\uff09\u3002 \u4ea4\u6613\u8fdb\u5165**\u5185\u5b58\u6c60\uff08Mempool\uff09**\u2014\u2014\u8fd9\u662f\u4e00\u4e2a\u5168\u7f51\u5171\u4eab\u7684\u201c\u5f85\u5904\u7406\u4ea4\u6613\u6c60\u201d\uff0c\u6240\u6709\u672a\u786e\u8ba4\u4ea4\u6613\u90fd\u5728\u8fd9\u91cc\u6392\u961f\u3002","title":"\u7b2c\u4e00\u6b65\uff1a\u4ea4\u6613\u53d1\u8d77\uff08\u7528\u6237\u89c6\u89d2\uff09"},{"location":"bitcoin/story/#_3","text":"\u77ff\u5de5\u7b5b\u9009\u4ea4\u6613 \u77ff\u5de5\u4ece\u5185\u5b58\u6c60\u4e2d\u9009\u62e9\u4ea4\u6613\u6253\u5305\u5230\u4e0b\u4e00\u4e2a\u533a\u5757\u3002\u9009\u62e9\u7b56\u7565\uff1a \u6309\u624b\u7eed\u8d39\u7387\uff08sat/vByte\uff09\u6392\u5e8f \uff1a\u4f18\u5148\u6253\u5305\u624b\u7eed\u8d39\u9ad8\u7684\u4ea4\u6613\u3002 \u586b\u6ee1\u533a\u5757 \uff1a\u5728\u533a\u5757\u5bb9\u91cf\uff081MB~4MB\uff09\u5185\u5c3d\u53ef\u80fd\u591a\u6253\u5305\u4ea4\u6613\uff0c\u6700\u5927\u5316\u6536\u76ca\u3002 \uff08\u5982\u679c\u4f60\u7684\u624b\u7eed\u8d39\u8bbe\u5f97\u592a\u4f4e\uff0c\u4ea4\u6613\u53ef\u80fd\u957f\u65f6\u95f4\u6ede\u7559\u5728\u5185\u5b58\u6c60\u4e2d\uff01\uff09 \u6316\u77ff\u7ade\u4e89 \u77ff\u5de5\u5c06\u9009\u4e2d\u7684\u4ea4\u6613\u6253\u5305\u6210\u4e00\u4e2a\u5019\u9009\u533a\u5757\uff0c\u5f00\u59cb\u8fdb\u884c\u5de5\u4f5c\u91cf\u8bc1\u660e\uff08PoW\uff09\u8ba1\u7b97\uff08\u5373\u201c\u6316\u77ff\u201d\uff09\u3002 \u5168\u7f51\u77ff\u5de5\u7ade\u4e89 \uff1a\u8c01\u5148\u7b97\u51fa\u7b26\u5408\u96be\u5ea6\u7684\u54c8\u5e0c\u503c\uff0c\u8c01\u5c31\u6709\u6743\u5c06\u533a\u5757\u6dfb\u52a0\u5230\u533a\u5757\u94fe\u3002","title":"\u7b2c\u4e8c\u6b65\uff1a\u4ea4\u6613\u7b49\u5f85\u6253\u5305\uff08\u77ff\u5de5\u89c6\u89d2\uff09"},{"location":"bitcoin/story/#_4","text":"\u9996\u6b21\u786e\u8ba4\uff081\u4e2a\u533a\u5757\uff09 \u5f53\u67d0\u4e2a\u77ff\u5de5\u6210\u529f\u6316\u51fa\u533a\u5757\uff0c\u4f60\u7684\u4ea4\u6613\u88ab\u5305\u542b\u5728\u5176\u4e2d\uff0c\u6b64\u65f6\u83b7\u5f97**1\u6b21\u786e\u8ba4**\u3002 \u4f46\u6b64\u65f6\u4ea4\u6613\u8fd8\u4e0d\u7b97\u6700\u7ec8\u5b8c\u6210\uff01\u56e0\u4e3a\u53ef\u80fd\u51fa\u73b0**\u4e34\u65f6\u5206\u53c9**\uff08\u5176\u4ed6\u77ff\u5de5\u53ef\u80fd\u540c\u65f6\u6316\u51fa\u7ade\u4e89\u533a\u5757\uff09\u3002 6\u6b21\u786e\u8ba4\u89c4\u5219 \u6bd4\u7279\u5e01\u7f51\u7edc\u7ea6\u5b9a\u4fd7\u6210\u7684\u5b89\u5168\u6807\u51c6\u662f\u7b49\u5f85**6\u4e2a\u533a\u5757\u786e\u8ba4**\uff08\u7ea61\u5c0f\u65f6\uff09\u3002 \u6bcf\u65b0\u589e\u4e00\u4e2a\u533a\u5757\uff0c\u4f60\u7684\u4ea4\u6613\u786e\u8ba4\u6570+1\u3002 6\u6b21\u786e\u8ba4\u540e\uff0c\u4ea4\u6613\u88ab\u9006\u8f6c\u7684\u6982\u7387\u6781\u4f4e\uff08\u9700\u653b\u51fb\u8005\u638c\u63e1\u5168\u7f5151%\u7b97\u529b\u624d\u80fd\u7be1\u6539\uff09\u3002 \uff08\u4ea4\u6613\u6240\u6216\u5927\u989d\u8f6c\u8d26\u901a\u5e38\u8981\u6c426\u786e\u8ba4\uff0c\u5c0f\u989d\u4ea4\u6613\u53ef\u80fd1\u786e\u8ba4\u5373\u53ef\u3002\uff09 \u4e3a\u4ec0\u4e48\u662f6\u6b21\uff1f \u7edf\u8ba1\u5b66\u5b89\u5168\u6a21\u578b\uff1a\u968f\u7740\u786e\u8ba4\u6570\u589e\u52a0\uff0c\u4ea4\u6613\u88ab\u63a8\u7ffb\u7684\u6982\u7387\u5448\u6307\u6570\u7ea7\u4e0b\u964d\u3002 6\u6b21\u786e\u8ba4\u540e\uff0c\u653b\u51fb\u6210\u672c\u8fdc\u8d85\u6536\u76ca\uff0c\u7f51\u7edc\u89c6\u4e3a\u201c\u6700\u7ec8\u786e\u5b9a\u201d\u3002","title":"\u7b2c\u4e09\u6b65\uff1a\u4ea4\u6613\u786e\u8ba4\uff08\u533a\u5757\u94fe\u7f51\u7edc\u89c6\u89d2\uff09"},{"location":"bitcoin/story/#_5","text":"Q\uff1a\u6211\u7684\u4ea4\u6613\u67096\u4e2a\u533a\u5757\u786e\u8ba4\u4e86\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u5b8c\u6210\u4e86\u5417\uff1f \u2705 \u662f\u7684\uff01 \u4ece\u6bd4\u7279\u5e01\u7f51\u7edc\u5b89\u5168\u89d2\u5ea6\uff0c6\u6b21\u786e\u8ba4\u540e\u4ea4\u6613\u53ef\u89c6\u4e3a\u4e0d\u53ef\u9006\u3002\u6b64\u65f6\uff1a - \u4f60\u7684\u4ea4\u6613\u5df2\u88ab\u5168\u7f51\u7edd\u5927\u591a\u6570\u8282\u70b9\u8ba4\u53ef\u3002 - \u6536\u6b3e\u65b9\u53ef\u4ee5\u5b89\u5168\u4f7f\u7528\u8fd9\u7b14\u8d44\u91d1\uff08\u5982\u4ea4\u6613\u6240\u5141\u8bb8\u63d0\u73b0\uff09\u3002","title":"\u5173\u952e\u95ee\u9898\u56de\u7b54"},{"location":"bitcoin/story/#_6","text":"\u624b\u7eed\u8d39\u4f18\u5316 \u5982\u679c\u4f60\u60f3\u52a0\u5feb\u4ea4\u6613\uff0c\u9700\u8bbe\u7f6e\u8db3\u591f\u9ad8\u7684\u624b\u7eed\u8d39\uff08\u53c2\u8003\u5b9e\u65f6\u6570\u636e\u5982 mempool.space \uff09\u3002 \u4f4e\u624b\u7eed\u8d39\u4ea4\u6613\u53ef\u80fd\u5728\u62e5\u5835\u65f6\u5ef6\u8fdf\u6570\u5c0f\u65f6\u751a\u81f3\u51e0\u5929\u3002 \u4ea4\u6613\u4e22\u5f03\u98ce\u9669 \u5982\u679c\u4ea4\u6613\u957f\u65f6\u95f4\u672a\u6253\u5305\uff08\u5982\u624b\u7eed\u8d39\u8fc7\u4f4e\uff09\uff0c\u8282\u70b9\u53ef\u80fd\u5c06\u5176\u4ece\u5185\u5b58\u6c60\u4e2d\u6e05\u9664\u3002\u6b64\u65f6\u9700\u91cd\u65b0\u53d1\u8d77\u4ea4\u6613\u3002 \u5206\u53c9\u65f6\u7684\u7279\u6b8a\u60c5\u51b5 \u5982\u679c\u4ea4\u6613\u88ab\u6253\u5305\u5728\u5206\u53c9\u94fe\u4e0a\uff0c\u4e14\u8be5\u94fe\u6700\u7ec8\u88ab\u629b\u5f03\uff0c\u4ea4\u6613\u4f1a\u8fd4\u56de\u5185\u5b58\u6c60\u91cd\u65b0\u7b49\u5f85\u6253\u5305\u3002","title":"\u8865\u5145\u6ce8\u610f\u4e8b\u9879"},{"location":"bitcoin/story/#_7","text":"\u7528\u6237\u53d1\u8d77\u4ea4\u6613 \u2192 \u5e7f\u64ad\u5230\u5185\u5b58\u6c60 \u2192 \u77ff\u5de5\u6309\u624b\u7eed\u8d39\u7b5b\u9009 \u2192 \u6253\u5305\u8fdb\u533a\u5757 \u2192 1\u6b21\u786e\u8ba4 \u2192 \u540e\u7eed\u533a\u5757\u53e0\u52a0 \u2192 6\u6b21\u786e\u8ba4 \u2192 \u4ea4\u6613\u6700\u7ec8\u5b8c\u6210 \u901a\u8fc7\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u533a\u5757\u94fe\u5728\u53bb\u4e2d\u5fc3\u5316\u73af\u5883\u4e0b\u5b9e\u73b0\u4e86**\u5b89\u5168**\u3001**\u6297\u7be1\u6539**\u7684\u4ea4\u6613\u9a8c\u8bc1\u3002\u4f5c\u4e3a\u7528\u6237\uff0c\u4f60\u53ea\u9700\u8bbe\u7f6e\u5408\u7406\u624b\u7eed\u8d39\u5e76\u8010\u5fc3\u7b49\u5f85\u786e\u8ba4\u5373\u53ef\uff01","title":"\u603b\u7ed3\u6d41\u7a0b\u56fe"},{"location":"bitcoin/theory/","text":"6\u6b21\u786e\u8ba4\u80cc\u540e\u7684\u6570\u5b66\u8ba1\u7b97\uff08\u8be6\u7ec6\u63a8\u5bfc\uff09 \u00b6 \u8981\u7406\u89e3\u4e3a\u4ec0\u4e486\u6b21\u786e\u8ba4\u540e\u4ea4\u6613\u51e0\u4e4e\u4e0d\u53ef\u9006\uff0c\u6211\u4eec\u9700\u8981\u7528 \u6982\u7387\u8bba \u548c \u6cca\u677e\u8fc7\u7a0b \u6765\u5efa\u6a21\u6bd4\u7279\u5e01\u7684\u533a\u5757\u751f\u6210\u7ade\u4e89\u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u8ba1\u7b97\u6b65\u9aa4\uff1a 1. \u5047\u8bbe\u4e0e\u5b9a\u4e49 \u00b6 \u8bda\u5b9e\u77ff\u5de5\u7b97\u529b\u5360\u6bd4 \uff1a \\( p \\) \uff08\u4f8b\u5982 \\( p = 0.7 \\) \u8868\u793a70%\u7b97\u529b\uff09\u3002 \u653b\u51fb\u8005\u7b97\u529b\u5360\u6bd4 \uff1a \\( q \\) \uff08\u4f8b\u5982 \\( q = 0.3 \\) \uff0c\u4e14 \\( p + q = 1 \\) \uff09\u3002 \u786e\u8ba4\u6570\uff08n\uff09 \uff1a\u653b\u51fb\u8005\u9700\u8981\u4ece\u4ea4\u6613\u6240\u5728\u533a\u5757\u4e4b\u524d\u91cd\u65b0\u6316\u51fa \\( n+1 \\) \u4e2a\u533a\u5757\uff0c\u624d\u80fd\u8986\u76d6\u539f\u94fe\u3002 \u533a\u5757\u751f\u6210\u901f\u7387 \uff1a\u6bd4\u7279\u5e01\u5e73\u574710\u5206\u949f\u4e00\u4e2a\u533a\u5757\uff0c\u4f46\u653b\u51fb\u8005\u548c\u8bda\u5b9e\u7f51\u7edc\u662f\u5e76\u884c\u6316\u77ff\uff0c\u9075\u5faa \u6cca\u677e\u5206\u5e03 \u3002 2. \u653b\u51fb\u8005\u6210\u529f\u9006\u8f6c\u4ea4\u6613\u7684\u6982\u7387 \u00b6 \u653b\u51fb\u8005\u9700\u8981\u6bd4\u8bda\u5b9e\u7f51\u7edc\u66f4\u5feb\u6316\u51fa \\( n+1 \\) \u4e2a\u533a\u5757\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a \u201c\u8d4c\u5f92\u7834\u4ea7\u95ee\u9898\u201d \uff08Gambler's Ruin Problem\uff09\uff0c\u5176\u89e3\u4e3a\uff1a \\[ P_{\\text{\u9006\u8f6c}} = \\begin{cases} \\left( \\frac{q}{p} \\right)^{n+1} & \\text{if } q < p \\quad (\\text{\u653b\u51fb\u8005\u7b97\u529b < 50%}) \\\\ 1 & \\text{if } q \\geq p \\quad (\\text{51%\u653b\u51fb}) \\end{cases} \\] \u5173\u952e\u7ed3\u8bba \uff1a \u00b6 \u5982\u679c\u653b\u51fb\u8005\u7b97\u529b \\( q < 50\\% \\) \uff0c\u9006\u8f6c\u6982\u7387\u968f \\( n \\) \u6307\u6570\u7ea7\u4e0b\u964d \u3002 \u5982\u679c \\( q \\geq 50\\% \\) \uff0c\u653b\u51fb\u8005\u6700\u7ec8\u4e00\u5b9a\u80fd\u9006\u8f6c\u4ea4\u6613\uff0851%\u653b\u51fb\uff09\u3002 3. \u5177\u4f53\u8ba1\u7b97\u793a\u4f8b \u00b6 \u5047\u8bbe\uff1a \u8bda\u5b9e\u7b97\u529b \\( p = 0.8 \\) \uff0880%\uff09\uff0c\u653b\u51fb\u8005\u7b97\u529b \\( q = 0.2 \\) \uff0820%\uff09\u3002 \u6211\u4eec\u8ba1\u7b97\u4e0d\u540c\u786e\u8ba4\u6570 \\( n \\) \u4e0b\u7684\u9006\u8f6c\u6982\u7387\uff1a \u786e\u8ba4\u6570 \\( n \\) \u9006\u8f6c\u6982\u7387 \\( P = \\left( \\frac{0.2}{0.8} \\right)^{n+1} \\) \u5b89\u5168\u7ea7\u522b 1 \\( (0.25)^2 = 6.25\\% \\) \u9ad8\u98ce\u9669 3 \\( (0.25)^4 = 0.39\\% \\) \u4e2d\u7b49\u98ce\u9669 6 \\( (0.25)^7 \\approx 0.006\\% \\) \u6781\u4f4e\u98ce\u9669 12 \\( (0.25)^{13} \\approx 1.5 \\times 10^{-8}\\% \\) \u8fd1\u4e4e\u4e0d\u53ef\u80fd \u89e3\u8bfb \uff1a \u00b6 6\u6b21\u786e\u8ba4\u540e\uff0c\u653b\u51fb\u8005\u4ec5\u6709 0.006% \u7684\u6210\u529f\u6982\u7387\uff08\u7ea61/15,000\uff09\u3002 12\u6b21\u786e\u8ba4\u540e\uff0c\u6982\u7387\u4f4e\u81f3\u53ef\u5ffd\u7565\u4e0d\u8ba1\uff08 \\( 1.5 \\times 10^{-8}\\% \\) \uff09\u3002 4. \u4e3a\u4ec0\u4e48\u6307\u6570\u7ea7\u4e0b\u964d\uff1f \u00b6 \u6bcf\u6b21\u65b0\u589e\u786e\u8ba4\uff0c\u653b\u51fb\u8005\u9700\u8981\u591a\u6316\u4e00\u4e2a\u533a\u5757\uff0c\u800c\u8bda\u5b9e\u7f51\u7edc\u4e5f\u5728\u540c\u6b65\u589e\u957f\u3002 \u653b\u51fb\u8005\u7684\u52a3\u52bf\u662f\u7d2f\u79ef\u7684\uff0c\u56e0\u4e3a \\( \\frac{q}{p} < 1 \\) \uff0c\u6240\u4ee5 \\( \\left( \\frac{q}{p} \\right)^{n+1} \\) \u4f1a\u6025\u901f\u8d8b\u8fd1\u4e8e0\u3002 5. \u5982\u679c\u653b\u51fb\u8005\u7b97\u529b\u63a5\u8fd150%\uff1f \u00b6 \u82e5 \\( q = 0.4 \\) \uff0840%\u7b97\u529b\uff09\uff0c\u5219\uff1a \\[ P_{\\text{\u9006\u8f6c}} = \\left( \\frac{0.4}{0.6} \\right)^{n+1} = \\left( \\frac{2}{3} \\right)^{n+1} \\] \u786e\u8ba4\u6570 \\( n \\) \u9006\u8f6c\u6982\u7387 1 \\( \\left( \\frac{2}{3} \\right)^2 \\approx 44.4\\% \\) 6 \\( \\left( \\frac{2}{3} \\right)^7 \\approx 5.8\\% \\) 12 \\( \\left( \\frac{2}{3} \\right)^{13} \\approx 0.5\\% \\) \u5373\u4f7f\u653b\u51fb\u8005\u62e5\u670940%\u7b97\u529b\uff0c6\u6b21\u786e\u8ba4\u540e\u9006\u8f6c\u6982\u7387\u4ecd\u4ec5 5.8% \uff0c12\u6b21\u540e\u964d\u81f3 0.5% \u3002 \u4f46\u73b0\u5b9e\u4e2d\uff0c\u653b\u51fb\u8005\u5f88\u96be\u957f\u671f\u7ef4\u6301\u9ad8\u7b97\u529b\uff08\u6210\u672c\u8fc7\u9ad8\uff09\u3002 6. \u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u201c6\u6b21\u786e\u8ba4\u201d \u00b6 \u6bd4\u7279\u5e01\u9009\u62e96\u6b21\u786e\u8ba4\uff0c\u662f\u56e0\u4e3a\u5b83\u5728**\u5b89\u5168\u6027\u4e0e\u7b49\u5f85\u65f6\u95f4**\u4e4b\u95f4\u53d6\u5f97\u4e86\u5e73\u8861\uff1a 3\u6b21\u786e\u8ba4 \uff1a\u9006\u8f6c\u6982\u7387\u7ea60.39%\uff08\u9002\u5408\u5c0f\u989d\u4ea4\u6613\uff09\u3002 6\u6b21\u786e\u8ba4 \uff1a\u9006\u8f6c\u6982\u7387\u7ea60.006%\uff08\u9002\u5408\u5927\u989d\u4ea4\u6613\uff09\u3002 12\u6b21\u786e\u8ba4 \uff1a\u8fd1\u4e4e\u7edd\u5bf9\u5b89\u5168\uff08\u673a\u6784\u7ea7\u9700\u6c42\uff09\u3002 \u6700\u7ec8\u7ed3\u8bba \u00b6 6\u6b21\u786e\u8ba4\u7684\u5b89\u5168\u6027\u662f\u6570\u5b66\u4fdd\u8bc1\u7684 \uff0c\u9006\u8f6c\u6982\u7387\u6781\u4f4e\uff08\u9664\u975e51%\u653b\u51fb\uff09\u3002 \u6838\u5fc3\u516c\u5f0f\uff1a \\(P_{\\text{\u9006\u8f6c}} = \\left( \\frac{\\text{\u653b\u51fb\u8005\u7b97\u529b\u5360\u6bd4}}{\\text{\u8bda\u5b9e\u7b97\u529b\u5360\u6bd4}} \\right)^{\\text{\u786e\u8ba4\u6570}+1}\\) \u7528\u6237\u5efa\u8bae \uff1a \u5c0f\u989d\u4ea4\u6613\uff1a1-3\u6b21\u786e\u8ba4\u5373\u53ef\u3002 \u5927\u989d\u4ea4\u6613\uff1a\u7b49\u5f856\u6b21\u786e\u8ba4\u3002 \u8d85\u9ad8\u5b89\u5168\u9700\u6c42\uff1a12+\u6b21\u786e\u8ba4\u3002 \u8fd9\u79cd\u6a21\u578b\u786e\u4fdd\u4e86\u6bd4\u7279\u5e01\u5728\u53bb\u4e2d\u5fc3\u5316\u73af\u5883\u4e0b\uff0c\u65e2\u80fd\u62b5\u6297\u653b\u51fb\uff0c\u53c8\u80fd\u4fdd\u6301\u5408\u7406\u7684\u4ea4\u6613\u786e\u8ba4\u901f\u5ea6\u3002","title":"Theory"},{"location":"bitcoin/theory/#6","text":"\u8981\u7406\u89e3\u4e3a\u4ec0\u4e486\u6b21\u786e\u8ba4\u540e\u4ea4\u6613\u51e0\u4e4e\u4e0d\u53ef\u9006\uff0c\u6211\u4eec\u9700\u8981\u7528 \u6982\u7387\u8bba \u548c \u6cca\u677e\u8fc7\u7a0b \u6765\u5efa\u6a21\u6bd4\u7279\u5e01\u7684\u533a\u5757\u751f\u6210\u7ade\u4e89\u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u8ba1\u7b97\u6b65\u9aa4\uff1a","title":"6\u6b21\u786e\u8ba4\u80cc\u540e\u7684\u6570\u5b66\u8ba1\u7b97\uff08\u8be6\u7ec6\u63a8\u5bfc\uff09"},{"location":"bitcoin/theory/#1","text":"\u8bda\u5b9e\u77ff\u5de5\u7b97\u529b\u5360\u6bd4 \uff1a \\( p \\) \uff08\u4f8b\u5982 \\( p = 0.7 \\) \u8868\u793a70%\u7b97\u529b\uff09\u3002 \u653b\u51fb\u8005\u7b97\u529b\u5360\u6bd4 \uff1a \\( q \\) \uff08\u4f8b\u5982 \\( q = 0.3 \\) \uff0c\u4e14 \\( p + q = 1 \\) \uff09\u3002 \u786e\u8ba4\u6570\uff08n\uff09 \uff1a\u653b\u51fb\u8005\u9700\u8981\u4ece\u4ea4\u6613\u6240\u5728\u533a\u5757\u4e4b\u524d\u91cd\u65b0\u6316\u51fa \\( n+1 \\) \u4e2a\u533a\u5757\uff0c\u624d\u80fd\u8986\u76d6\u539f\u94fe\u3002 \u533a\u5757\u751f\u6210\u901f\u7387 \uff1a\u6bd4\u7279\u5e01\u5e73\u574710\u5206\u949f\u4e00\u4e2a\u533a\u5757\uff0c\u4f46\u653b\u51fb\u8005\u548c\u8bda\u5b9e\u7f51\u7edc\u662f\u5e76\u884c\u6316\u77ff\uff0c\u9075\u5faa \u6cca\u677e\u5206\u5e03 \u3002","title":"1. \u5047\u8bbe\u4e0e\u5b9a\u4e49"},{"location":"bitcoin/theory/#2","text":"\u653b\u51fb\u8005\u9700\u8981\u6bd4\u8bda\u5b9e\u7f51\u7edc\u66f4\u5feb\u6316\u51fa \\( n+1 \\) \u4e2a\u533a\u5757\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a \u201c\u8d4c\u5f92\u7834\u4ea7\u95ee\u9898\u201d \uff08Gambler's Ruin Problem\uff09\uff0c\u5176\u89e3\u4e3a\uff1a \\[ P_{\\text{\u9006\u8f6c}} = \\begin{cases} \\left( \\frac{q}{p} \\right)^{n+1} & \\text{if } q < p \\quad (\\text{\u653b\u51fb\u8005\u7b97\u529b < 50%}) \\\\ 1 & \\text{if } q \\geq p \\quad (\\text{51%\u653b\u51fb}) \\end{cases} \\]","title":"2. \u653b\u51fb\u8005\u6210\u529f\u9006\u8f6c\u4ea4\u6613\u7684\u6982\u7387"},{"location":"bitcoin/theory/#_1","text":"\u5982\u679c\u653b\u51fb\u8005\u7b97\u529b \\( q < 50\\% \\) \uff0c\u9006\u8f6c\u6982\u7387\u968f \\( n \\) \u6307\u6570\u7ea7\u4e0b\u964d \u3002 \u5982\u679c \\( q \\geq 50\\% \\) \uff0c\u653b\u51fb\u8005\u6700\u7ec8\u4e00\u5b9a\u80fd\u9006\u8f6c\u4ea4\u6613\uff0851%\u653b\u51fb\uff09\u3002","title":"\u5173\u952e\u7ed3\u8bba\uff1a"},{"location":"bitcoin/theory/#3","text":"\u5047\u8bbe\uff1a \u8bda\u5b9e\u7b97\u529b \\( p = 0.8 \\) \uff0880%\uff09\uff0c\u653b\u51fb\u8005\u7b97\u529b \\( q = 0.2 \\) \uff0820%\uff09\u3002 \u6211\u4eec\u8ba1\u7b97\u4e0d\u540c\u786e\u8ba4\u6570 \\( n \\) \u4e0b\u7684\u9006\u8f6c\u6982\u7387\uff1a \u786e\u8ba4\u6570 \\( n \\) \u9006\u8f6c\u6982\u7387 \\( P = \\left( \\frac{0.2}{0.8} \\right)^{n+1} \\) \u5b89\u5168\u7ea7\u522b 1 \\( (0.25)^2 = 6.25\\% \\) \u9ad8\u98ce\u9669 3 \\( (0.25)^4 = 0.39\\% \\) \u4e2d\u7b49\u98ce\u9669 6 \\( (0.25)^7 \\approx 0.006\\% \\) \u6781\u4f4e\u98ce\u9669 12 \\( (0.25)^{13} \\approx 1.5 \\times 10^{-8}\\% \\) \u8fd1\u4e4e\u4e0d\u53ef\u80fd","title":"3. \u5177\u4f53\u8ba1\u7b97\u793a\u4f8b"},{"location":"bitcoin/theory/#_2","text":"6\u6b21\u786e\u8ba4\u540e\uff0c\u653b\u51fb\u8005\u4ec5\u6709 0.006% \u7684\u6210\u529f\u6982\u7387\uff08\u7ea61/15,000\uff09\u3002 12\u6b21\u786e\u8ba4\u540e\uff0c\u6982\u7387\u4f4e\u81f3\u53ef\u5ffd\u7565\u4e0d\u8ba1\uff08 \\( 1.5 \\times 10^{-8}\\% \\) \uff09\u3002","title":"\u89e3\u8bfb\uff1a"},{"location":"bitcoin/theory/#4","text":"\u6bcf\u6b21\u65b0\u589e\u786e\u8ba4\uff0c\u653b\u51fb\u8005\u9700\u8981\u591a\u6316\u4e00\u4e2a\u533a\u5757\uff0c\u800c\u8bda\u5b9e\u7f51\u7edc\u4e5f\u5728\u540c\u6b65\u589e\u957f\u3002 \u653b\u51fb\u8005\u7684\u52a3\u52bf\u662f\u7d2f\u79ef\u7684\uff0c\u56e0\u4e3a \\( \\frac{q}{p} < 1 \\) \uff0c\u6240\u4ee5 \\( \\left( \\frac{q}{p} \\right)^{n+1} \\) \u4f1a\u6025\u901f\u8d8b\u8fd1\u4e8e0\u3002","title":"4. \u4e3a\u4ec0\u4e48\u6307\u6570\u7ea7\u4e0b\u964d\uff1f"},{"location":"bitcoin/theory/#5-50","text":"\u82e5 \\( q = 0.4 \\) \uff0840%\u7b97\u529b\uff09\uff0c\u5219\uff1a \\[ P_{\\text{\u9006\u8f6c}} = \\left( \\frac{0.4}{0.6} \\right)^{n+1} = \\left( \\frac{2}{3} \\right)^{n+1} \\] \u786e\u8ba4\u6570 \\( n \\) \u9006\u8f6c\u6982\u7387 1 \\( \\left( \\frac{2}{3} \\right)^2 \\approx 44.4\\% \\) 6 \\( \\left( \\frac{2}{3} \\right)^7 \\approx 5.8\\% \\) 12 \\( \\left( \\frac{2}{3} \\right)^{13} \\approx 0.5\\% \\) \u5373\u4f7f\u653b\u51fb\u8005\u62e5\u670940%\u7b97\u529b\uff0c6\u6b21\u786e\u8ba4\u540e\u9006\u8f6c\u6982\u7387\u4ecd\u4ec5 5.8% \uff0c12\u6b21\u540e\u964d\u81f3 0.5% \u3002 \u4f46\u73b0\u5b9e\u4e2d\uff0c\u653b\u51fb\u8005\u5f88\u96be\u957f\u671f\u7ef4\u6301\u9ad8\u7b97\u529b\uff08\u6210\u672c\u8fc7\u9ad8\uff09\u3002","title":"5. \u5982\u679c\u653b\u51fb\u8005\u7b97\u529b\u63a5\u8fd150%\uff1f"},{"location":"bitcoin/theory/#6-6","text":"\u6bd4\u7279\u5e01\u9009\u62e96\u6b21\u786e\u8ba4\uff0c\u662f\u56e0\u4e3a\u5b83\u5728**\u5b89\u5168\u6027\u4e0e\u7b49\u5f85\u65f6\u95f4**\u4e4b\u95f4\u53d6\u5f97\u4e86\u5e73\u8861\uff1a 3\u6b21\u786e\u8ba4 \uff1a\u9006\u8f6c\u6982\u7387\u7ea60.39%\uff08\u9002\u5408\u5c0f\u989d\u4ea4\u6613\uff09\u3002 6\u6b21\u786e\u8ba4 \uff1a\u9006\u8f6c\u6982\u7387\u7ea60.006%\uff08\u9002\u5408\u5927\u989d\u4ea4\u6613\uff09\u3002 12\u6b21\u786e\u8ba4 \uff1a\u8fd1\u4e4e\u7edd\u5bf9\u5b89\u5168\uff08\u673a\u6784\u7ea7\u9700\u6c42\uff09\u3002","title":"6. \u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u201c6\u6b21\u786e\u8ba4\u201d"},{"location":"bitcoin/theory/#_3","text":"6\u6b21\u786e\u8ba4\u7684\u5b89\u5168\u6027\u662f\u6570\u5b66\u4fdd\u8bc1\u7684 \uff0c\u9006\u8f6c\u6982\u7387\u6781\u4f4e\uff08\u9664\u975e51%\u653b\u51fb\uff09\u3002 \u6838\u5fc3\u516c\u5f0f\uff1a \\(P_{\\text{\u9006\u8f6c}} = \\left( \\frac{\\text{\u653b\u51fb\u8005\u7b97\u529b\u5360\u6bd4}}{\\text{\u8bda\u5b9e\u7b97\u529b\u5360\u6bd4}} \\right)^{\\text{\u786e\u8ba4\u6570}+1}\\) \u7528\u6237\u5efa\u8bae \uff1a \u5c0f\u989d\u4ea4\u6613\uff1a1-3\u6b21\u786e\u8ba4\u5373\u53ef\u3002 \u5927\u989d\u4ea4\u6613\uff1a\u7b49\u5f856\u6b21\u786e\u8ba4\u3002 \u8d85\u9ad8\u5b89\u5168\u9700\u6c42\uff1a12+\u6b21\u786e\u8ba4\u3002 \u8fd9\u79cd\u6a21\u578b\u786e\u4fdd\u4e86\u6bd4\u7279\u5e01\u5728\u53bb\u4e2d\u5fc3\u5316\u73af\u5883\u4e0b\uff0c\u65e2\u80fd\u62b5\u6297\u653b\u51fb\uff0c\u53c8\u80fd\u4fdd\u6301\u5408\u7406\u7684\u4ea4\u6613\u786e\u8ba4\u901f\u5ea6\u3002","title":"\u6700\u7ec8\u7ed3\u8bba"},{"location":"bitcoin/tps/","text":"tps \u00b6 tps\u6307\u7684\u662f\u7406\u8bbatps\uff0c\u800c\u975e\u5b9e\u9645 1. \u6bd4\u7279\u5e01\u7684\u533a\u5757\u65f6\u95f4\u4e0eTPS\u8ba1\u7b97 \u00b6 \u533a\u5757\u65f6\u95f4 \uff1a\u6bd4\u7279\u5e01\u5e73\u5747\u6bcf 10\u5206\u949f \u51fa\u4e00\u4e2a\u533a\u5757\uff08600\u79d2\uff09\uff0c\u4f46\u8fd9\u662f**\u51fa\u5757\u95f4\u9694**\uff0c\u800c\u975e\u4ea4\u6613\u5904\u7406\u901f\u5ea6\u7684\u76f4\u63a5\u9650\u5236\u3002 \u533a\u5757\u5bb9\u91cf \uff1a\u6bcf\u4e2a\u533a\u5757\u5927\u5c0f\u4e0a\u9650\u4e3a 1MB~4MB \uff08SegWit\u540e\uff09\uff0c\u5b9e\u9645\u5e73\u5747\u6bcf\u533a\u5757\u5305\u542b\u7ea6 2000~3000\u7b14\u4ea4\u6613 \uff08\u53d6\u51b3\u4e8e\u4ea4\u6613\u7c7b\u578b\uff09\u3002 TPS\u8ba1\u7b97\u516c\u5f0f \uff1a [ \\text{TPS} = \\frac{\\text{\u5355\u4e2a\u533a\u5757\u4ea4\u6613\u6570}}{\\text{\u51fa\u5757\u65f6\u95f4\uff08\u79d2\uff09}} = \\frac{2500 \\text{\u7b14}}{600 \\text{\u79d2}} \\approx 4.17 \\text{\u7b14/\u79d2} ] \uff08\u82e5\u533a\u5757\u542b3000\u7b14\u4ea4\u6613\uff0c\u5219TPS\u22485\u7b14/\u79d2\uff1b\u901a\u5e38\u4fdd\u5b88\u4f30\u8ba1\u4e3a 3~7\u7b14/\u79d2 \uff09 2. \u4e3a\u4ec0\u4e48\u201c\u65e5\u574730\u4e07\u7b14\u201d\u4e0e\u201cTPS\u4f4e\u201d\u4e0d\u77db\u76fe\uff1f \u00b6 \u65e5\u574730\u4e07\u7b14 \uff1a [ 30\u4e07\u7b14/\u65e5 = \\frac{300,000}{24\\times3600} \\approx 3.47 \\text{\u7b14/\u79d2\uff08\u65e5\u5747TPS\uff09} ] \u8fd9\u4e0e\u5b9e\u9645\u533a\u5757\u6253\u5305\u7684TPS\uff084~7\u7b14/\u79d2\uff09\u5339\u914d\uff0c\u56e0\u4e3a\u5e76\u975e\u6240\u6709\u533a\u5757\u90fd\u6ee1\u8f7d\uff0c\u4e14\u7f51\u7edc\u62e5\u5835\u65f6\u4ea4\u6613\u9700\u6392\u961f\u3002 10\u5206\u949f\u4e00\u4e2a\u533a\u5757 \uff1a \u51fa\u5757\u95f4\u9694\u957f\u786e\u5b9e\u9650\u5236\u4e86\u4ea4\u6613\u786e\u8ba4\u901f\u5ea6\uff0c\u4f46TPS\u53d6\u51b3\u4e8e**\u5355\u4f4d\u65f6\u95f4\u5185\u5904\u7406\u7684\u4ea4\u6613\u603b\u6570**\uff08\u5373\u533a\u5757\u5bb9\u91cf/\u51fa\u5757\u65f6\u95f4\uff09\uff0c\u800c\u975e\u5355\u7eaf\u51fa\u5757\u9891\u7387\u3002 3. \u5bf9\u6bd4\u5176\u4ed6\u94fe\u7684TPS \u00b6 \u4ee5\u592a\u574a \uff1a15~30\u7b14/\u79d2\uff08PoS\u540e\uff09 Solana \uff1a2000~4000\u7b14/\u79d2\uff08\u5b9e\u9645\uff09 Visa \uff1a\u7ea624,000\u7b14/\u79d2 \u6bd4\u7279\u5e01\u7684\u4f4eTPS\u662f\u8bbe\u8ba1\u6743\u8861\u7684\u7ed3\u679c\uff1a - \u53bb\u4e2d\u5fc3\u5316\u4f18\u5148 \uff1a\u957f\u51fa\u5757\u65f6\u95f4\u964d\u4f4e\u5206\u53c9\u6982\u7387\uff0c\u5c0f\u533a\u5757\u51cf\u5c11\u8282\u70b9\u5b58\u50a8\u538b\u529b\u3002 - \u5b89\u5168\u6027 \uff1a10\u5206\u949f\u95f4\u9694\u4f7f\u653b\u51fb\u8005\u66f4\u96be\u91cd\u7ec4\u94fe\uff08\u970051%\u7b97\u529b\u6301\u7eed\u653b\u51fb\uff09\u3002 4. \u7528\u6237\u5b9e\u9645\u4f53\u9a8c \u00b6 \u4ea4\u6613\u5ef6\u8fdf \uff1a\u666e\u901a\u8f6c\u8d26\u9700\u7b49\u5f85 1\u4e2a\u533a\u5757\u786e\u8ba4 \uff0810\u5206\u949f\uff09\uff0c\u4f46\u4ea4\u6613\u6240\u901a\u5e38\u8981\u6c42 6\u786e\u8ba4 \uff08\u7ea61\u5c0f\u65f6\uff09\u3002 \u62e5\u5835\u65f6 \uff1a\u82e5\u672a\u652f\u4ed8\u8db3\u591fGas\u8d39\uff0c\u4ea4\u6613\u53ef\u80fd\u6ede\u7559\u6570\u5c0f\u65f6\uff08\u59822017\u5e74\u725b\u5e02\u65f6\u79ef\u538b\u8d8520\u4e07\u7b14\uff09\u3002 \u603b\u7ed3 \u00b6 \u201c10\u5206\u949f\u4e00\u4e2a\u533a\u5757\u201d \u662f\u6307\u4ea4\u6613\u786e\u8ba4\u7684\u5ef6\u8fdf\uff0c\u800c \u201cTPS=7\u7b14/\u79d2\u201d \u662f\u7406\u8bba\u541e\u5410\u91cf\u4e0a\u9650\u3002 \u201c\u65e5\u574730\u4e07\u7b14\u201d \u662f\u5b9e\u9645\u7f51\u7edc\u8d1f\u8f7d\uff0c\u4e24\u8005\u901a\u8fc7\u533a\u5757\u5bb9\u91cf\u548c\u51fa\u5757\u65f6\u95f4\u52a8\u6001\u5e73\u8861\u3002 \u6bd4\u7279\u5e01\u901a\u8fc7Layer2\uff08\u5982\u95ea\u7535\u7f51\u7edc\uff09\u63d0\u5347\u5b9e\u9645\u541e\u5410\u91cf\uff08\u94fe\u4e0b\u901a\u9053\u53ef\u8fbe\u767e\u4e07TPS\uff09\uff0c\u4f46\u4e3b\u94fe\u4ecd\u4fdd\u6301\u4f4eTPS\u4ee5\u786e\u4fdd\u5b89\u5168\u3002","title":"tps"},{"location":"bitcoin/tps/#tps","text":"tps\u6307\u7684\u662f\u7406\u8bbatps\uff0c\u800c\u975e\u5b9e\u9645","title":"tps"},{"location":"bitcoin/tps/#1-tps","text":"\u533a\u5757\u65f6\u95f4 \uff1a\u6bd4\u7279\u5e01\u5e73\u5747\u6bcf 10\u5206\u949f \u51fa\u4e00\u4e2a\u533a\u5757\uff08600\u79d2\uff09\uff0c\u4f46\u8fd9\u662f**\u51fa\u5757\u95f4\u9694**\uff0c\u800c\u975e\u4ea4\u6613\u5904\u7406\u901f\u5ea6\u7684\u76f4\u63a5\u9650\u5236\u3002 \u533a\u5757\u5bb9\u91cf \uff1a\u6bcf\u4e2a\u533a\u5757\u5927\u5c0f\u4e0a\u9650\u4e3a 1MB~4MB \uff08SegWit\u540e\uff09\uff0c\u5b9e\u9645\u5e73\u5747\u6bcf\u533a\u5757\u5305\u542b\u7ea6 2000~3000\u7b14\u4ea4\u6613 \uff08\u53d6\u51b3\u4e8e\u4ea4\u6613\u7c7b\u578b\uff09\u3002 TPS\u8ba1\u7b97\u516c\u5f0f \uff1a [ \\text{TPS} = \\frac{\\text{\u5355\u4e2a\u533a\u5757\u4ea4\u6613\u6570}}{\\text{\u51fa\u5757\u65f6\u95f4\uff08\u79d2\uff09}} = \\frac{2500 \\text{\u7b14}}{600 \\text{\u79d2}} \\approx 4.17 \\text{\u7b14/\u79d2} ] \uff08\u82e5\u533a\u5757\u542b3000\u7b14\u4ea4\u6613\uff0c\u5219TPS\u22485\u7b14/\u79d2\uff1b\u901a\u5e38\u4fdd\u5b88\u4f30\u8ba1\u4e3a 3~7\u7b14/\u79d2 \uff09","title":"1. \u6bd4\u7279\u5e01\u7684\u533a\u5757\u65f6\u95f4\u4e0eTPS\u8ba1\u7b97"},{"location":"bitcoin/tps/#2-30tps","text":"\u65e5\u574730\u4e07\u7b14 \uff1a [ 30\u4e07\u7b14/\u65e5 = \\frac{300,000}{24\\times3600} \\approx 3.47 \\text{\u7b14/\u79d2\uff08\u65e5\u5747TPS\uff09} ] \u8fd9\u4e0e\u5b9e\u9645\u533a\u5757\u6253\u5305\u7684TPS\uff084~7\u7b14/\u79d2\uff09\u5339\u914d\uff0c\u56e0\u4e3a\u5e76\u975e\u6240\u6709\u533a\u5757\u90fd\u6ee1\u8f7d\uff0c\u4e14\u7f51\u7edc\u62e5\u5835\u65f6\u4ea4\u6613\u9700\u6392\u961f\u3002 10\u5206\u949f\u4e00\u4e2a\u533a\u5757 \uff1a \u51fa\u5757\u95f4\u9694\u957f\u786e\u5b9e\u9650\u5236\u4e86\u4ea4\u6613\u786e\u8ba4\u901f\u5ea6\uff0c\u4f46TPS\u53d6\u51b3\u4e8e**\u5355\u4f4d\u65f6\u95f4\u5185\u5904\u7406\u7684\u4ea4\u6613\u603b\u6570**\uff08\u5373\u533a\u5757\u5bb9\u91cf/\u51fa\u5757\u65f6\u95f4\uff09\uff0c\u800c\u975e\u5355\u7eaf\u51fa\u5757\u9891\u7387\u3002","title":"2. \u4e3a\u4ec0\u4e48\u201c\u65e5\u574730\u4e07\u7b14\u201d\u4e0e\u201cTPS\u4f4e\u201d\u4e0d\u77db\u76fe\uff1f"},{"location":"bitcoin/tps/#3-tps","text":"\u4ee5\u592a\u574a \uff1a15~30\u7b14/\u79d2\uff08PoS\u540e\uff09 Solana \uff1a2000~4000\u7b14/\u79d2\uff08\u5b9e\u9645\uff09 Visa \uff1a\u7ea624,000\u7b14/\u79d2 \u6bd4\u7279\u5e01\u7684\u4f4eTPS\u662f\u8bbe\u8ba1\u6743\u8861\u7684\u7ed3\u679c\uff1a - \u53bb\u4e2d\u5fc3\u5316\u4f18\u5148 \uff1a\u957f\u51fa\u5757\u65f6\u95f4\u964d\u4f4e\u5206\u53c9\u6982\u7387\uff0c\u5c0f\u533a\u5757\u51cf\u5c11\u8282\u70b9\u5b58\u50a8\u538b\u529b\u3002 - \u5b89\u5168\u6027 \uff1a10\u5206\u949f\u95f4\u9694\u4f7f\u653b\u51fb\u8005\u66f4\u96be\u91cd\u7ec4\u94fe\uff08\u970051%\u7b97\u529b\u6301\u7eed\u653b\u51fb\uff09\u3002","title":"3. \u5bf9\u6bd4\u5176\u4ed6\u94fe\u7684TPS"},{"location":"bitcoin/tps/#4","text":"\u4ea4\u6613\u5ef6\u8fdf \uff1a\u666e\u901a\u8f6c\u8d26\u9700\u7b49\u5f85 1\u4e2a\u533a\u5757\u786e\u8ba4 \uff0810\u5206\u949f\uff09\uff0c\u4f46\u4ea4\u6613\u6240\u901a\u5e38\u8981\u6c42 6\u786e\u8ba4 \uff08\u7ea61\u5c0f\u65f6\uff09\u3002 \u62e5\u5835\u65f6 \uff1a\u82e5\u672a\u652f\u4ed8\u8db3\u591fGas\u8d39\uff0c\u4ea4\u6613\u53ef\u80fd\u6ede\u7559\u6570\u5c0f\u65f6\uff08\u59822017\u5e74\u725b\u5e02\u65f6\u79ef\u538b\u8d8520\u4e07\u7b14\uff09\u3002","title":"4. \u7528\u6237\u5b9e\u9645\u4f53\u9a8c"},{"location":"bitcoin/tps/#_1","text":"\u201c10\u5206\u949f\u4e00\u4e2a\u533a\u5757\u201d \u662f\u6307\u4ea4\u6613\u786e\u8ba4\u7684\u5ef6\u8fdf\uff0c\u800c \u201cTPS=7\u7b14/\u79d2\u201d \u662f\u7406\u8bba\u541e\u5410\u91cf\u4e0a\u9650\u3002 \u201c\u65e5\u574730\u4e07\u7b14\u201d \u662f\u5b9e\u9645\u7f51\u7edc\u8d1f\u8f7d\uff0c\u4e24\u8005\u901a\u8fc7\u533a\u5757\u5bb9\u91cf\u548c\u51fa\u5757\u65f6\u95f4\u52a8\u6001\u5e73\u8861\u3002 \u6bd4\u7279\u5e01\u901a\u8fc7Layer2\uff08\u5982\u95ea\u7535\u7f51\u7edc\uff09\u63d0\u5347\u5b9e\u9645\u541e\u5410\u91cf\uff08\u94fe\u4e0b\u901a\u9053\u53ef\u8fbe\u767e\u4e07TPS\uff09\uff0c\u4f46\u4e3b\u94fe\u4ecd\u4fdd\u6301\u4f4eTPS\u4ee5\u786e\u4fdd\u5b89\u5168\u3002","title":"\u603b\u7ed3"},{"location":"bitcoin/nft/qa/","text":"\u4e3a\u4ec0\u4e48 NFT \u4f1a\u706b\u8d77\u6765\uff0c\u6709\u4ec0\u4e48\u5b9e\u9645\u7684\u610f\u4e49\u5417\uff1f\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\u5417\uff1f \u4e00\u3001NFT \u89e3\u51b3\u4e86\u54ea\u4e9b\u771f\u5b9e\u95ee\u9898\uff1f 1. \u6570\u5b57\u6240\u6709\u6743\u4e0e\u9632\u4f2a 2. \u521b\u4f5c\u8005\u7ecf\u6d4e 3. \u865a\u62df\u8d44\u4ea7\u786e\u6743 4. \u793e\u533a\u4e0e\u8eab\u4efd \u4e8c\u3001NFT \u7684\u5b9e\u9645\u5e94\u7528\u573a\u666f\uff08\u975e\u7092\u4f5c\u90e8\u5206\uff09 \u4e09\u3001\u4e3a\u4ec0\u4e48NFT\u770b\u8d77\u6765\u50cf\u7092\u4f5c\uff1f 1. \u6295\u673a\u6ce1\u6cab 2. \u6280\u672f\u5c40\u9650\u6027 3. \u4f2a\u9700\u6c42\u9879\u76ee \u56db\u3001NFT \u7684\u672a\u6765\uff1a\u54ea\u4e9b\u4f1a\u7559\u5b58\uff1f\u54ea\u4e9b\u4f1a\u6dd8\u6c70\uff1f \u2705 \u53ef\u80fd\u6301\u7eed\u53d1\u5c55\u7684\u65b9\u5411 \u274c \u53ef\u80fd\u88ab\u6dd8\u6c70\u7684\u65b9\u5411 \u4e94\u3001\u666e\u901a\u4eba\u5982\u4f55\u7406\u6027\u53c2\u4e0eNFT\uff1f \u603b\u7ed3 \u4e3a\u4ec0\u4e48 NFT \u4f1a\u706b\u8d77\u6765\uff0c\u6709\u4ec0\u4e48\u5b9e\u9645\u7684\u610f\u4e49\u5417\uff1f\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\u5417\uff1f \u00b6 NFT \u7684\u7206\u53d1\u770b\u4f3c\u662f\u7092\u4f5c\uff0c\u4f46\u80cc\u540e\u786e\u5b9e\u6709**\u5b9e\u9645\u9700\u6c42**\u548c**\u6280\u672f\u9769\u65b0**\u7684\u903b\u8f91\u3002\u5b83\u89e3\u51b3\u4e86\u4f20\u7edf\u4e92\u8054\u7f51\u548c\u827a\u672f\u5e02\u573a\u7684\u51e0\u4e2a\u6838\u5fc3\u95ee\u9898\uff0c\u4f46\u4e5f\u5b58\u5728\u5927\u91cf\u6ce1\u6cab\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u5206\u6790\uff1a \u4e00\u3001NFT \u89e3\u51b3\u4e86\u54ea\u4e9b\u771f\u5b9e\u95ee\u9898\uff1f \u00b6 1. \u6570\u5b57\u6240\u6709\u6743\u4e0e\u9632\u4f2a \u00b6 - \u95ee\u9898 \uff1a\u4e92\u8054\u7f51\u65f6\u4ee3\uff0c\u56fe\u7247\u3001\u97f3\u4e50\u7b49\u6570\u5b57\u5185\u5bb9\u53ef\u4ee5\u88ab\u65e0\u9650\u590d\u5236\uff0c\u521b\u4f5c\u8005\u65e0\u6cd5\u8bc1\u660e\u201c\u539f\u4ef6\u201d\u5f52\u5c5e\u3002 - NFT \u65b9\u6848 \uff1a - \u901a\u8fc7\u533a\u5757\u94fe\u8bb0\u5f55\u552f\u4e00\u6240\u6709\u6743\uff08\u5982\u4f60\u4e70\u7684 CryptoPunks #3100 \u662f\u94fe\u4e0a\u516c\u8ba4\u7684\u201c\u6b63\u7248\u201d\uff09\u3002 - \u89e3\u51b3\u827a\u672f\u54c1\u7684**\u771f\u4f2a\u9a8c\u8bc1**\u95ee\u9898\uff08\u6bd4\u5982\u6bd5\u52a0\u7d22\u753b\u4f5c\u7684\u6570\u5b57\u8bc1\u4e66\uff09\u3002 2. \u521b\u4f5c\u8005\u7ecf\u6d4e \u00b6 - \u95ee\u9898 \uff1a\u4f20\u7edf\u5e73\u53f0\uff08\u5982Instagram\u3001Spotify\uff09\u62bd\u6210\u9ad8\uff0830-50%\uff09\uff0c\u521b\u4f5c\u8005\u6536\u76ca\u4f4e\u3002 - NFT \u65b9\u6848 \uff1a - \u76f4\u63a5\u9500\u552e\u7ed9\u7c89\u4e1d\uff0c\u62bd\u6210\u4ec55-10%\uff08\u5982OpenSea\uff09\u3002 - \u7248\u7a0e\u81ea\u52a8\u5316 \uff1a\u6bcf\u6b21\u8f6c\u552e\uff0c\u667a\u80fd\u5408\u7ea6\u81ea\u52a8\u7ed9\u521b\u4f5c\u8005\u5206\u6da6\uff08\u4f20\u7edf\u827a\u672f\u5e02\u573a\u65e0\u6cd5\u5b9e\u73b0\uff09\u3002 3. \u865a\u62df\u8d44\u4ea7\u786e\u6743 \u00b6 - \u95ee\u9898 \uff1a\u6e38\u620f\u4e2d\u7684\u76ae\u80a4\u3001\u9053\u5177\u5f52\u516c\u53f8\u6240\u6709\uff08\u5982\u817e\u8baf\u5c01\u53f7\u4f1a\u6ca1\u6536\u4f60\u7684\u88c5\u5907\uff09\u3002 - NFT \u65b9\u6848 \uff1a - \u9053\u5177\u53d8\u6210NFT\u540e\uff0c\u73a9\u5bb6\u771f\u6b63\u62e5\u6709\uff08\u53ef\u8de8\u6e38\u620f\u4ea4\u6613\uff0c\u5982STEPN\u7684\u8dd1\u978b\uff09\u3002 4. \u793e\u533a\u4e0e\u8eab\u4efd \u00b6 - \u95ee\u9898 \uff1a\u4e92\u8054\u7f51\u793e\u7fa4\u7f3a\u4e4f\u9ad8\u7c98\u6027\u6210\u5458\u7b5b\u9009\u673a\u5236\u3002 - NFT \u65b9\u6848 \uff1a - \u6301\u6709NFT=\u4f1a\u5458\u5361\uff08\u5982\u65e0\u804a\u733fBAYC\u7684\u6e38\u8247\u6d3e\u5bf9\u3001\u7a7a\u6295\u4ee3\u5e01\uff09\u3002 - \u4f8b\u5b50\uff1a Proof Collective \uff08NFT\u6301\u6709\u8005\u624d\u80fd\u53c2\u4e0e\u9876\u7ea7VC\u9879\u76ee\u6295\u8d44\uff09\u3002 \u4e8c\u3001NFT \u7684\u5b9e\u9645\u5e94\u7528\u573a\u666f\uff08\u975e\u7092\u4f5c\u90e8\u5206\uff09 \u00b6 \u9886\u57df \u6848\u4f8b \u610f\u4e49 \u6570\u5b57\u827a\u672f Beeple\u7684\u300aEverydays\u300b\u62cd\u53566900\u4e07\u7f8e\u5143 \u8bc1\u660e\u6570\u5b57\u827a\u672f\u53ef\u5177\u6709\u6536\u85cf\u4ef7\u503c\u3002 \u97f3\u4e50 \u6b4c\u624bSnoop Dogg\u53d1\u884cNFT\u4e13\u8f91 \u7c89\u4e1d\u76f4\u63a5\u652f\u6301\u5076\u50cf\uff0c\u7ed5\u8fc7\u5531\u7247\u516c\u53f8\u62bd\u6210\u3002 \u6e38\u620f Axie Infinity\u7684\u5ba0\u7269NFT\uff08\u73a9\u5bb6\u9760\u4ea4\u6613/\u7e41\u6b96\u8d5a\u94b1\uff09 \u73a9\u5bb6\u771f\u6b63\u62e5\u6709\u6e38\u620f\u8d44\u4ea7\uff0c\u5f62\u6210Play-to-Earn\u7ecf\u6d4e\u3002 \u5b9e\u4f53\u6743\u76ca \u8010\u514b\u7684NFT\u8fd0\u52a8\u978b\uff08\u51edNFT\u5151\u6362\u5b9e\u7269+\u72ec\u5bb6\u6d3b\u52a8\uff09 \u6253\u901a\u6570\u5b57\u4e0e\u5b9e\u4f53\u4e16\u754c\u7684\u6743\u76ca\u8ba4\u8bc1\u3002 \u8eab\u4efd\u8ba4\u8bc1 \u65b0\u52a0\u5761\u661f\u5c55\u94f6\u884c\u7528NFT\u9a8c\u8bc1\u9ad8\u51c0\u503c\u5ba2\u6237\u8eab\u4efd \u66ff\u4ee3\u4f20\u7edfKYC\u6d41\u7a0b\uff0c\u9690\u79c1\u6027\u66f4\u5f3a\u3002 \u4e09\u3001\u4e3a\u4ec0\u4e48NFT\u770b\u8d77\u6765\u50cf\u7092\u4f5c\uff1f \u00b6 1. \u6295\u673a\u6ce1\u6cab \u00b6 - Meme\u9a71\u52a8\uff1a\u5982\u201c\u7334\u5b50\u5934\u50cf\u201dBAYC\u7092\u5230\u767e\u4e07\u7f8e\u5143\uff0c\u591a\u6570\u4e70\u5bb6\u53ea\u4e3a\u77ed\u671f\u83b7\u5229\u3002 - \u4f4e\u6d41\u52a8\u6027\uff1a90%\u7684NFT\u4ea4\u6613\u91cf\u96c6\u4e2d\u5728\u5934\u90e8\u9879\u76ee\uff0c\u957f\u5c3e\u8d44\u4ea7\u65e0\u4eba\u63a5\u76d8\u3002 2. \u6280\u672f\u5c40\u9650\u6027 \u00b6 - \u5b58\u50a8\u95ee\u9898 \uff1a\u591a\u6570NFT\u7684\u56fe\u7247\u5b9e\u9645\u5b58\u5728\u4e2d\u5fc3\u5316\u670d\u52a1\u5668\uff08\u5982AWS\uff09\uff0c\u82e5\u5173\u95ed\u5219\u201cNFT\u53d8\u5e9f\u7eb8\u201d\u3002 - \u7528\u6237\u4f53\u9a8c \uff1a\u79c1\u94a5\u7ba1\u7406\u590d\u6742\uff0c\u666e\u901a\u7528\u6237\u6613\u88ab\u76d7\u6216\u8bef\u64cd\u4f5c\u3002 3. \u4f2a\u9700\u6c42\u9879\u76ee \u00b6 - \u8bb8\u591aNFT\u7f3a\u4e4f\u5b9e\u7528\u4ef7\u503c\uff08\u5982\u968f\u4fbf\u751f\u621010,000\u5f20\u52a8\u7269\u5934\u50cf\uff09\uff0c\u7eaf\u9760\u8425\u9500\u7092\u4f5c\u3002 \u56db\u3001NFT \u7684\u672a\u6765\uff1a\u54ea\u4e9b\u4f1a\u7559\u5b58\uff1f\u54ea\u4e9b\u4f1a\u6dd8\u6c70\uff1f \u00b6 \u2705 \u53ef\u80fd\u6301\u7eed\u53d1\u5c55\u7684\u65b9\u5411 \u00b6 \u9ad8\u4ef7\u503c\u6570\u5b57\u827a\u672f \uff1a\u5982\u535a\u7269\u9986\u7ea7\u4f5c\u54c1\u3001\u52a0\u5bc6\u539f\u751fIP\uff08\u5982CryptoPunks\uff09\u3002 \u5b9e\u7528\u578bNFT \uff1a\u95e8\u7968\u3001\u4f1a\u5458\u5361\u3001\u6e38\u620f\u8d44\u4ea7\uff08\u9700\u7ed1\u5b9a\u771f\u5b9e\u6743\u76ca\uff09\u3002 \u8eab\u4efd\u534f\u8bae \uff1a\u53bb\u4e2d\u5fc3\u5316\u793e\u4ea4\uff08DID\uff09\u3001\u94fe\u4e0a\u7b80\u5386\uff08\u5982ENS\u57df\u540d\uff09\u3002 \u274c \u53ef\u80fd\u88ab\u6dd8\u6c70\u7684\u65b9\u5411 \u00b6 \u4f4e\u8d28\u91cfPFP\u5934\u50cf \uff1a\u65e0\u793e\u533a\u8fd0\u8425\u7684\u201c\u52a8\u7269\u5934\u50cf\u201d\u9879\u76ee\u3002 \u5e9e\u6c0f\u6a21\u578bNFT \uff1a\u9760\u62c9\u4eba\u5934\u7ef4\u6301\u4ef7\u683c\u7684\u8d44\u91d1\u76d8\uff08\u5982\u67d0\u4e9b\u201c\u6316\u77ffNFT\u201d\uff09\u3002 \u4e2d\u5fc3\u5316\u5b58\u50a8NFT \uff1a\u56fe\u7247\u5b58\u670d\u52a1\u5668\u800c\u975eIPFS/Arweave\u7684\u9879\u76ee\u3002 \u4e94\u3001\u666e\u901a\u4eba\u5982\u4f55\u7406\u6027\u53c2\u4e0eNFT\uff1f \u00b6 \u660e\u786e\u76ee\u7684 \uff1a \u6295\u8d44\uff1f\u5173\u6ce8**\u84dd\u7b79NFT**\uff08\u5982BAYC\u3001Punks\uff09\u3002 \u5b9e\u7528\uff1f\u9009\u62e9**\u8d4b\u80fd\u5f3a\u7684\u9879\u76ee**\uff08\u5982\u94fe\u6e38\u8d44\u4ea7\u3001\u97f3\u4e50NFT\uff09\u3002 \u98ce\u9669\u63a7\u5236 \uff1a \u53ea\u7528\u95f2\u94b1\uff0c\u907f\u514dFOMO\uff08\u59822022\u5e74NFT\u5e02\u573a\u66b4\u8dcc80%\uff09\u3002 \u5b66\u4e60\u6280\u672f \uff1a \u786e\u8ba4NFT\u662f\u5426**\u53bb\u4e2d\u5fc3\u5316\u5b58\u50a8**\uff08\u68c0\u67e5IPFS\u54c8\u5e0c\uff09\u3002 \u4f7f\u7528\u51b7\u94b1\u5305\u4fdd\u7ba1\uff08\u9632\u9493\u9c7c\uff09\u3002 \u603b\u7ed3 \u00b6 NFT\u7684\u610f\u4e49 \uff1a\u89e3\u51b3\u6570\u5b57\u6240\u6709\u6743\u3001\u521b\u4f5c\u8005\u6536\u76ca\u3001\u865a\u62df\u8d44\u4ea7\u8de8\u5e73\u53f0\u6d41\u901a\u95ee\u9898\u3002 \u706b\u7684\u903b\u8f91 \uff1a\u6280\u672f\u9769\u65b0+\u8d44\u672c\u7092\u4f5c+\u793e\u533a\u5171\u8bc6\uff0c\u4f46\u6ce1\u6cab\u4e0e\u771f\u5b9e\u9700\u6c42\u5e76\u5b58\u3002 \u672a\u6765 \uff1a\u5b9e\u7528\u578bNFT\u4f1a\u7559\u5b58\uff0c\u7eaf\u6295\u673a\u9879\u76ee\u5c06\u5f52\u96f6\u3002","title":"Qa"},{"location":"bitcoin/nft/qa/#nft","text":"NFT \u7684\u7206\u53d1\u770b\u4f3c\u662f\u7092\u4f5c\uff0c\u4f46\u80cc\u540e\u786e\u5b9e\u6709**\u5b9e\u9645\u9700\u6c42**\u548c**\u6280\u672f\u9769\u65b0**\u7684\u903b\u8f91\u3002\u5b83\u89e3\u51b3\u4e86\u4f20\u7edf\u4e92\u8054\u7f51\u548c\u827a\u672f\u5e02\u573a\u7684\u51e0\u4e2a\u6838\u5fc3\u95ee\u9898\uff0c\u4f46\u4e5f\u5b58\u5728\u5927\u91cf\u6ce1\u6cab\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u5206\u6790\uff1a","title":"\u4e3a\u4ec0\u4e48 NFT \u4f1a\u706b\u8d77\u6765\uff0c\u6709\u4ec0\u4e48\u5b9e\u9645\u7684\u610f\u4e49\u5417\uff1f\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\u5417\uff1f"},{"location":"bitcoin/nft/qa/#nft_1","text":"","title":"\u4e00\u3001NFT \u89e3\u51b3\u4e86\u54ea\u4e9b\u771f\u5b9e\u95ee\u9898\uff1f"},{"location":"bitcoin/nft/qa/#1","text":"- \u95ee\u9898 \uff1a\u4e92\u8054\u7f51\u65f6\u4ee3\uff0c\u56fe\u7247\u3001\u97f3\u4e50\u7b49\u6570\u5b57\u5185\u5bb9\u53ef\u4ee5\u88ab\u65e0\u9650\u590d\u5236\uff0c\u521b\u4f5c\u8005\u65e0\u6cd5\u8bc1\u660e\u201c\u539f\u4ef6\u201d\u5f52\u5c5e\u3002 - NFT \u65b9\u6848 \uff1a - \u901a\u8fc7\u533a\u5757\u94fe\u8bb0\u5f55\u552f\u4e00\u6240\u6709\u6743\uff08\u5982\u4f60\u4e70\u7684 CryptoPunks #3100 \u662f\u94fe\u4e0a\u516c\u8ba4\u7684\u201c\u6b63\u7248\u201d\uff09\u3002 - \u89e3\u51b3\u827a\u672f\u54c1\u7684**\u771f\u4f2a\u9a8c\u8bc1**\u95ee\u9898\uff08\u6bd4\u5982\u6bd5\u52a0\u7d22\u753b\u4f5c\u7684\u6570\u5b57\u8bc1\u4e66\uff09\u3002","title":"1. \u6570\u5b57\u6240\u6709\u6743\u4e0e\u9632\u4f2a"},{"location":"bitcoin/nft/qa/#2","text":"- \u95ee\u9898 \uff1a\u4f20\u7edf\u5e73\u53f0\uff08\u5982Instagram\u3001Spotify\uff09\u62bd\u6210\u9ad8\uff0830-50%\uff09\uff0c\u521b\u4f5c\u8005\u6536\u76ca\u4f4e\u3002 - NFT \u65b9\u6848 \uff1a - \u76f4\u63a5\u9500\u552e\u7ed9\u7c89\u4e1d\uff0c\u62bd\u6210\u4ec55-10%\uff08\u5982OpenSea\uff09\u3002 - \u7248\u7a0e\u81ea\u52a8\u5316 \uff1a\u6bcf\u6b21\u8f6c\u552e\uff0c\u667a\u80fd\u5408\u7ea6\u81ea\u52a8\u7ed9\u521b\u4f5c\u8005\u5206\u6da6\uff08\u4f20\u7edf\u827a\u672f\u5e02\u573a\u65e0\u6cd5\u5b9e\u73b0\uff09\u3002","title":"2. \u521b\u4f5c\u8005\u7ecf\u6d4e"},{"location":"bitcoin/nft/qa/#3","text":"- \u95ee\u9898 \uff1a\u6e38\u620f\u4e2d\u7684\u76ae\u80a4\u3001\u9053\u5177\u5f52\u516c\u53f8\u6240\u6709\uff08\u5982\u817e\u8baf\u5c01\u53f7\u4f1a\u6ca1\u6536\u4f60\u7684\u88c5\u5907\uff09\u3002 - NFT \u65b9\u6848 \uff1a - \u9053\u5177\u53d8\u6210NFT\u540e\uff0c\u73a9\u5bb6\u771f\u6b63\u62e5\u6709\uff08\u53ef\u8de8\u6e38\u620f\u4ea4\u6613\uff0c\u5982STEPN\u7684\u8dd1\u978b\uff09\u3002","title":"3. \u865a\u62df\u8d44\u4ea7\u786e\u6743"},{"location":"bitcoin/nft/qa/#4","text":"- \u95ee\u9898 \uff1a\u4e92\u8054\u7f51\u793e\u7fa4\u7f3a\u4e4f\u9ad8\u7c98\u6027\u6210\u5458\u7b5b\u9009\u673a\u5236\u3002 - NFT \u65b9\u6848 \uff1a - \u6301\u6709NFT=\u4f1a\u5458\u5361\uff08\u5982\u65e0\u804a\u733fBAYC\u7684\u6e38\u8247\u6d3e\u5bf9\u3001\u7a7a\u6295\u4ee3\u5e01\uff09\u3002 - \u4f8b\u5b50\uff1a Proof Collective \uff08NFT\u6301\u6709\u8005\u624d\u80fd\u53c2\u4e0e\u9876\u7ea7VC\u9879\u76ee\u6295\u8d44\uff09\u3002","title":"4. \u793e\u533a\u4e0e\u8eab\u4efd"},{"location":"bitcoin/nft/qa/#nft_2","text":"\u9886\u57df \u6848\u4f8b \u610f\u4e49 \u6570\u5b57\u827a\u672f Beeple\u7684\u300aEverydays\u300b\u62cd\u53566900\u4e07\u7f8e\u5143 \u8bc1\u660e\u6570\u5b57\u827a\u672f\u53ef\u5177\u6709\u6536\u85cf\u4ef7\u503c\u3002 \u97f3\u4e50 \u6b4c\u624bSnoop Dogg\u53d1\u884cNFT\u4e13\u8f91 \u7c89\u4e1d\u76f4\u63a5\u652f\u6301\u5076\u50cf\uff0c\u7ed5\u8fc7\u5531\u7247\u516c\u53f8\u62bd\u6210\u3002 \u6e38\u620f Axie Infinity\u7684\u5ba0\u7269NFT\uff08\u73a9\u5bb6\u9760\u4ea4\u6613/\u7e41\u6b96\u8d5a\u94b1\uff09 \u73a9\u5bb6\u771f\u6b63\u62e5\u6709\u6e38\u620f\u8d44\u4ea7\uff0c\u5f62\u6210Play-to-Earn\u7ecf\u6d4e\u3002 \u5b9e\u4f53\u6743\u76ca \u8010\u514b\u7684NFT\u8fd0\u52a8\u978b\uff08\u51edNFT\u5151\u6362\u5b9e\u7269+\u72ec\u5bb6\u6d3b\u52a8\uff09 \u6253\u901a\u6570\u5b57\u4e0e\u5b9e\u4f53\u4e16\u754c\u7684\u6743\u76ca\u8ba4\u8bc1\u3002 \u8eab\u4efd\u8ba4\u8bc1 \u65b0\u52a0\u5761\u661f\u5c55\u94f6\u884c\u7528NFT\u9a8c\u8bc1\u9ad8\u51c0\u503c\u5ba2\u6237\u8eab\u4efd \u66ff\u4ee3\u4f20\u7edfKYC\u6d41\u7a0b\uff0c\u9690\u79c1\u6027\u66f4\u5f3a\u3002","title":"\u4e8c\u3001NFT \u7684\u5b9e\u9645\u5e94\u7528\u573a\u666f\uff08\u975e\u7092\u4f5c\u90e8\u5206\uff09"},{"location":"bitcoin/nft/qa/#nft_3","text":"","title":"\u4e09\u3001\u4e3a\u4ec0\u4e48NFT\u770b\u8d77\u6765\u50cf\u7092\u4f5c\uff1f"},{"location":"bitcoin/nft/qa/#1_1","text":"- Meme\u9a71\u52a8\uff1a\u5982\u201c\u7334\u5b50\u5934\u50cf\u201dBAYC\u7092\u5230\u767e\u4e07\u7f8e\u5143\uff0c\u591a\u6570\u4e70\u5bb6\u53ea\u4e3a\u77ed\u671f\u83b7\u5229\u3002 - \u4f4e\u6d41\u52a8\u6027\uff1a90%\u7684NFT\u4ea4\u6613\u91cf\u96c6\u4e2d\u5728\u5934\u90e8\u9879\u76ee\uff0c\u957f\u5c3e\u8d44\u4ea7\u65e0\u4eba\u63a5\u76d8\u3002","title":"1. \u6295\u673a\u6ce1\u6cab"},{"location":"bitcoin/nft/qa/#2_1","text":"- \u5b58\u50a8\u95ee\u9898 \uff1a\u591a\u6570NFT\u7684\u56fe\u7247\u5b9e\u9645\u5b58\u5728\u4e2d\u5fc3\u5316\u670d\u52a1\u5668\uff08\u5982AWS\uff09\uff0c\u82e5\u5173\u95ed\u5219\u201cNFT\u53d8\u5e9f\u7eb8\u201d\u3002 - \u7528\u6237\u4f53\u9a8c \uff1a\u79c1\u94a5\u7ba1\u7406\u590d\u6742\uff0c\u666e\u901a\u7528\u6237\u6613\u88ab\u76d7\u6216\u8bef\u64cd\u4f5c\u3002","title":"2. \u6280\u672f\u5c40\u9650\u6027"},{"location":"bitcoin/nft/qa/#3_1","text":"- \u8bb8\u591aNFT\u7f3a\u4e4f\u5b9e\u7528\u4ef7\u503c\uff08\u5982\u968f\u4fbf\u751f\u621010,000\u5f20\u52a8\u7269\u5934\u50cf\uff09\uff0c\u7eaf\u9760\u8425\u9500\u7092\u4f5c\u3002","title":"3. \u4f2a\u9700\u6c42\u9879\u76ee"},{"location":"bitcoin/nft/qa/#nft_4","text":"","title":"\u56db\u3001NFT \u7684\u672a\u6765\uff1a\u54ea\u4e9b\u4f1a\u7559\u5b58\uff1f\u54ea\u4e9b\u4f1a\u6dd8\u6c70\uff1f"},{"location":"bitcoin/nft/qa/#_1","text":"\u9ad8\u4ef7\u503c\u6570\u5b57\u827a\u672f \uff1a\u5982\u535a\u7269\u9986\u7ea7\u4f5c\u54c1\u3001\u52a0\u5bc6\u539f\u751fIP\uff08\u5982CryptoPunks\uff09\u3002 \u5b9e\u7528\u578bNFT \uff1a\u95e8\u7968\u3001\u4f1a\u5458\u5361\u3001\u6e38\u620f\u8d44\u4ea7\uff08\u9700\u7ed1\u5b9a\u771f\u5b9e\u6743\u76ca\uff09\u3002 \u8eab\u4efd\u534f\u8bae \uff1a\u53bb\u4e2d\u5fc3\u5316\u793e\u4ea4\uff08DID\uff09\u3001\u94fe\u4e0a\u7b80\u5386\uff08\u5982ENS\u57df\u540d\uff09\u3002","title":"\u2705 \u53ef\u80fd\u6301\u7eed\u53d1\u5c55\u7684\u65b9\u5411"},{"location":"bitcoin/nft/qa/#_2","text":"\u4f4e\u8d28\u91cfPFP\u5934\u50cf \uff1a\u65e0\u793e\u533a\u8fd0\u8425\u7684\u201c\u52a8\u7269\u5934\u50cf\u201d\u9879\u76ee\u3002 \u5e9e\u6c0f\u6a21\u578bNFT \uff1a\u9760\u62c9\u4eba\u5934\u7ef4\u6301\u4ef7\u683c\u7684\u8d44\u91d1\u76d8\uff08\u5982\u67d0\u4e9b\u201c\u6316\u77ffNFT\u201d\uff09\u3002 \u4e2d\u5fc3\u5316\u5b58\u50a8NFT \uff1a\u56fe\u7247\u5b58\u670d\u52a1\u5668\u800c\u975eIPFS/Arweave\u7684\u9879\u76ee\u3002","title":"\u274c \u53ef\u80fd\u88ab\u6dd8\u6c70\u7684\u65b9\u5411"},{"location":"bitcoin/nft/qa/#nft_5","text":"\u660e\u786e\u76ee\u7684 \uff1a \u6295\u8d44\uff1f\u5173\u6ce8**\u84dd\u7b79NFT**\uff08\u5982BAYC\u3001Punks\uff09\u3002 \u5b9e\u7528\uff1f\u9009\u62e9**\u8d4b\u80fd\u5f3a\u7684\u9879\u76ee**\uff08\u5982\u94fe\u6e38\u8d44\u4ea7\u3001\u97f3\u4e50NFT\uff09\u3002 \u98ce\u9669\u63a7\u5236 \uff1a \u53ea\u7528\u95f2\u94b1\uff0c\u907f\u514dFOMO\uff08\u59822022\u5e74NFT\u5e02\u573a\u66b4\u8dcc80%\uff09\u3002 \u5b66\u4e60\u6280\u672f \uff1a \u786e\u8ba4NFT\u662f\u5426**\u53bb\u4e2d\u5fc3\u5316\u5b58\u50a8**\uff08\u68c0\u67e5IPFS\u54c8\u5e0c\uff09\u3002 \u4f7f\u7528\u51b7\u94b1\u5305\u4fdd\u7ba1\uff08\u9632\u9493\u9c7c\uff09\u3002","title":"\u4e94\u3001\u666e\u901a\u4eba\u5982\u4f55\u7406\u6027\u53c2\u4e0eNFT\uff1f"},{"location":"bitcoin/nft/qa/#_3","text":"NFT\u7684\u610f\u4e49 \uff1a\u89e3\u51b3\u6570\u5b57\u6240\u6709\u6743\u3001\u521b\u4f5c\u8005\u6536\u76ca\u3001\u865a\u62df\u8d44\u4ea7\u8de8\u5e73\u53f0\u6d41\u901a\u95ee\u9898\u3002 \u706b\u7684\u903b\u8f91 \uff1a\u6280\u672f\u9769\u65b0+\u8d44\u672c\u7092\u4f5c+\u793e\u533a\u5171\u8bc6\uff0c\u4f46\u6ce1\u6cab\u4e0e\u771f\u5b9e\u9700\u6c42\u5e76\u5b58\u3002 \u672a\u6765 \uff1a\u5b9e\u7528\u578bNFT\u4f1a\u7559\u5b58\uff0c\u7eaf\u6295\u673a\u9879\u76ee\u5c06\u5f52\u96f6\u3002","title":"\u603b\u7ed3"},{"location":"bitcoin/nft/text_nft/","text":"\u6587\u672c nft \u00b6 \u662f\u7684\uff0c \u6587\u672c\u5185\u5bb9\u53ef\u4ee5\u53d8\u6210NFT \uff0c\u800c\u4e14\u5df2\u7ecf\u6709\u591a\u79cd\u5b9e\u9645\u5e94\u7528\u6848\u4f8b\u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u89e3\u6790\uff1a \u4e00\u3001\u6587\u672c\u5982\u4f55\u53d8\u6210NFT\uff1f \u00b6 \u6280\u672f\u539f\u7406 \u94fe\u4e0a\u5b58\u50a8 \uff1a\u77ed\u6587\u672c\uff08\u5982\u4e00\u53e5\u8bdd\uff09\u53ef\u76f4\u63a5\u5199\u5165NFT\u7684\u5143\u6570\u636e\uff08\u5982\u4ee5\u592a\u574a\u7684 tokenURI \uff09\u3002 \u94fe\u4e0b\u5b58\u50a8 \uff1a\u957f\u6587\u672c\uff08\u5982\u5c0f\u8bf4\uff09\u901a\u8fc7\u54c8\u5e0c\u503c\u4e0a\u94fe\uff0c\u539f\u6587\u5b58\u4e8eIPFS/Arweave\uff08\u53bb\u4e2d\u5fc3\u5316\u5b58\u50a8\uff09\u3002 \u793a\u4f8b\u683c\u5f0f \uff1a { \"name\" : \"\u6211\u7684\u8bd7\u6b4cNFT\" , \"description\" : \"\u4e00\u9996\u5173\u4e8e\u533a\u5757\u94fe\u7684\u8bd7\" , \"content\" : \"\u53bb\u4e2d\u5fc3\u5316\u6d6a\u6f6e\u8d77\uff0c\u54c8\u5e0c\u65f6\u95f4\u4e0d\u53ef\u9006...\" , \"image\" : \"ipfs://QmXxx...\uff08\u53ef\u9009\u5c01\u9762\u56fe\uff09\" } \u5e73\u53f0\u652f\u6301 OpenSea \u3001 Mirror.xyz \uff08\u4e13\u6ce8\u5199\u4f5c\uff09\u3001**Manifold**\u7b49\u5747\u652f\u6301\u6587\u672cNFT\u94f8\u9020\u3002 \u4e8c\u3001\u6587\u672cNFT\u7684\u5b9e\u7528\u573a\u666f \u00b6 1. \u6570\u5b57\u7248\u6743\u4fdd\u62a4 \u00b6 - \u95ee\u9898 \uff1a\u7f51\u7edc\u5c0f\u8bf4\u3001\u8bba\u6587\u6613\u88ab\u6284\u88ad\uff0c\u539f\u4f5c\u8005\u96be\u7ef4\u6743\u3002 - NFT\u65b9\u6848 \uff1a - \u4f5c\u8005\u5c06\u4f5c\u54c1\u94f8\u9020\u4e3aNFT\uff0c\u94fe\u4e0a\u65f6\u95f4\u6233\u8bc1\u660e\u521b\u4f5c\u65f6\u95f4\u3002 - \u6848\u4f8b \uff1a\u4f5c\u5bb6Neil Strauss\u5c06\u65b0\u4e66\u7ae0\u8282\u4f5c\u4e3aNFT\u53d1\u552e\u3002 2. \u7c89\u4e1d\u7ecf\u6d4e \u00b6 - \u95ee\u9898 \uff1a\u4f20\u7edf\u6253\u8d4f\u6a21\u5f0f\u62bd\u6210\u9ad8\uff08\u5982\u516c\u4f17\u53f7\u5e73\u53f0\uff09\u3002 - NFT\u65b9\u6848 \uff1a - \u8bfb\u8005\u76f4\u63a5\u8d2d\u4e70\u4f5c\u8005\u7684\u6587\u672cNFT\uff08\u5982\u8bd7\u6b4c\u3001\u535a\u5ba2\uff09\uff0c\u521b\u4f5c\u8005\u83b7\u5f97100%\u6536\u76ca\u3002 - \u6848\u4f8b \uff1a\u8bd7\u4ebaRupi Kaur\u51fa\u552eNFT\u8bd7\u96c6\uff0c\u5355\u7bc7\u552e\u4ef7$5,000\u3002 3. \u53bb\u4e2d\u5fc3\u5316\u51fa\u7248 \u00b6 - \u95ee\u9898 \uff1a\u51fa\u7248\u793e\u5ba1\u6838\u95e8\u69db\u9ad8\uff0c\u5c0f\u4f17\u4f5c\u54c1\u96be\u9762\u4e16\u3002 - NFT\u65b9\u6848 \uff1a - \u4f5c\u8005\u81ea\u4e3b\u53d1\u884cNFT\u7535\u5b50\u4e66\uff0c\u8bfb\u8005\u8f6c\u552e\u65f6\u4f5c\u8005\u81ea\u52a8\u62bd\u6210\u3002 - \u6848\u4f8b \uff1a\u5e73\u53f0**Book.io**\u63d0\u4f9bNFT\u7535\u5b50\u4e66\u4ea4\u6613\u3002 4. \u793e\u4ea4\u8eab\u4efd \u00b6 - \u95ee\u9898 \uff1a\u793e\u4ea4\u5a92\u4f53\u5185\u5bb9\u65e0\u6cd5\u8d44\u4ea7\u5316\u3002 - NFT\u65b9\u6848 \uff1a - \u5c06\u63a8\u6587\u3001\u5e16\u5b50\u53d8\u6210NFT\uff08\u5982Twitter\u5141\u8bb8\u7528\u6237\u5c06\u63a8\u6587\u94f8\u9020\u6210NFT\uff09\u3002 - \u6848\u4f8b \uff1aJack Dorsey\u7684\u9996\u6761\u63a8\u6587NFT\u4ee5$290\u4e07\u6210\u4ea4\u3002 \u4e09\u3001\u5f53\u524d\u6587\u672cNFT\u7684\u5c40\u9650\u6027 \u00b6 \u5b58\u50a8\u6210\u672c \u957f\u6587\u672c\u5b58\u94fe\u4e0a\u8d39\u7528\u6781\u9ad8\uff08\u4ee5\u592a\u574a1MB\u6570\u636e\u2248$10,000\uff09\uff0c\u9700\u4f9d\u8d56IPFS\u7b49\u65b9\u6848\u3002 \u6cd5\u5f8b\u4e89\u8bae NFT\u7248\u6743\u5f52\u5c5e\u5c1a\u672a\u5168\u7403\u7edf\u4e00\uff08\u5982\u4e70\u5bb6\u662f\u5426\u83b7\u5f97\u6539\u7f16\u6743\uff1f\uff09\u3002 \u7528\u6237\u4f53\u9a8c \u666e\u901a\u7528\u6237\u4e0d\u4e60\u60ef\u5728\u94b1\u5305\u91cc\u201c\u9605\u8bfbNFT\u4e66\u201d\u3002 \u56db\u3001\u5982\u4f55\u5c06\u4f60\u7684\u6587\u672c\u53d8\u6210NFT\uff1f \u00b6 \u9009\u62e9\u5e73\u53f0 Mirror.xyz \uff1a\u4e13\u6ce8\u5199\u4f5c\uff0c\u652f\u6301\u514d\u8d39\u94f8\u9020\uff08\u5b58Arweave\uff09\u3002 Manifold Studio \uff1a\u81ea\u5b9a\u4e49\u667a\u80fd\u5408\u7ea6\uff0c\u9002\u5408\u6280\u672f\u7528\u6237\u3002 \u64cd\u4f5c\u6b65\u9aa4 \uff08\u4ee5Mirror\u4e3a\u4f8b\uff09\uff1a \u6ce8\u518c\u5e76\u8fde\u63a5\u94b1\u5305\uff08\u5982MetaMask\uff09\u3002 \u70b9\u51fb\u201cWrite\u201d\u7f16\u8f91\u6587\u672c\uff0c\u9009\u62e9\u201cMint as NFT\u201d\u3002 \u652f\u4ed8Gas\u8d39\uff08\u7ea6 \\(1-\\) 10\uff09\uff0c\u5b8c\u6210\u94f8\u9020\u3002 \u540e\u7eed\u64cd\u4f5c \u6302\u552e\u5230OpenSea\u7b49\u5e02\u573a\uff0c\u6216\u8bbe\u7f6e\u7248\u7a0e\uff08\u5efa\u8bae5-10%\uff09\u3002 \u4e94\u3001\u672a\u6765\u5c55\u671b \u00b6 \u52a8\u6001NFT\u6587\u672c \uff1a\u6839\u636e\u8bfb\u8005\u4e92\u52a8\u66f4\u65b0\u5185\u5bb9\uff08\u5982\u5206\u652f\u5267\u60c5\u5c0f\u8bf4\uff09\u3002 \u94fe\u4e0a\u56fe\u4e66\u9986 \uff1a\u5982**Project Gutenberg**\u8ba1\u5212\u5c06\u516c\u7248\u4e66NFT\u5316\u3002 AI\u751f\u6210\u6587\u672c+NFT \uff1a\u7528\u6237\u5b9a\u5236AI\u5199\u4f5c\u5185\u5bb9\u5e76\u62e5\u6709\u7248\u6743\u3002 \u603b\u7ed3 \u00b6 \u6587\u672cNFT\u7684\u6838\u5fc3\u4ef7\u503c\u5728\u4e8e**\u786e\u6743**\u548c**\u76f4\u63a5\u53d8\u73b0**\uff0c\u5c24\u5176\u9002\u5408\u521b\u4f5c\u8005\u3001\u4f5c\u5bb6\u3001\u5b66\u8005\u3002\u867d\u7136\u76ee\u524d\u4ecd\u5904\u65e9\u671f\uff0c\u4f46\u53bb\u4e2d\u5fc3\u5316\u51fa\u7248\u548c\u7248\u6743\u7ba1\u7406\u53ef\u80fd\u662f\u672a\u6765\u8d8b\u52bf\u3002\u5982\u679c\u60f3\u5c1d\u8bd5\uff0c\u53ef\u4ee5\u4eceMirror.xyz\u7684\u514d\u8d39\u94f8\u9020\u5f00\u59cb\uff01","title":"\u6587\u672c nft"},{"location":"bitcoin/nft/text_nft/#nft","text":"\u662f\u7684\uff0c \u6587\u672c\u5185\u5bb9\u53ef\u4ee5\u53d8\u6210NFT \uff0c\u800c\u4e14\u5df2\u7ecf\u6709\u591a\u79cd\u5b9e\u9645\u5e94\u7528\u6848\u4f8b\u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u89e3\u6790\uff1a","title":"\u6587\u672c nft"},{"location":"bitcoin/nft/text_nft/#nft_1","text":"\u6280\u672f\u539f\u7406 \u94fe\u4e0a\u5b58\u50a8 \uff1a\u77ed\u6587\u672c\uff08\u5982\u4e00\u53e5\u8bdd\uff09\u53ef\u76f4\u63a5\u5199\u5165NFT\u7684\u5143\u6570\u636e\uff08\u5982\u4ee5\u592a\u574a\u7684 tokenURI \uff09\u3002 \u94fe\u4e0b\u5b58\u50a8 \uff1a\u957f\u6587\u672c\uff08\u5982\u5c0f\u8bf4\uff09\u901a\u8fc7\u54c8\u5e0c\u503c\u4e0a\u94fe\uff0c\u539f\u6587\u5b58\u4e8eIPFS/Arweave\uff08\u53bb\u4e2d\u5fc3\u5316\u5b58\u50a8\uff09\u3002 \u793a\u4f8b\u683c\u5f0f \uff1a { \"name\" : \"\u6211\u7684\u8bd7\u6b4cNFT\" , \"description\" : \"\u4e00\u9996\u5173\u4e8e\u533a\u5757\u94fe\u7684\u8bd7\" , \"content\" : \"\u53bb\u4e2d\u5fc3\u5316\u6d6a\u6f6e\u8d77\uff0c\u54c8\u5e0c\u65f6\u95f4\u4e0d\u53ef\u9006...\" , \"image\" : \"ipfs://QmXxx...\uff08\u53ef\u9009\u5c01\u9762\u56fe\uff09\" } \u5e73\u53f0\u652f\u6301 OpenSea \u3001 Mirror.xyz \uff08\u4e13\u6ce8\u5199\u4f5c\uff09\u3001**Manifold**\u7b49\u5747\u652f\u6301\u6587\u672cNFT\u94f8\u9020\u3002","title":"\u4e00\u3001\u6587\u672c\u5982\u4f55\u53d8\u6210NFT\uff1f"},{"location":"bitcoin/nft/text_nft/#nft_2","text":"","title":"\u4e8c\u3001\u6587\u672cNFT\u7684\u5b9e\u7528\u573a\u666f"},{"location":"bitcoin/nft/text_nft/#1","text":"- \u95ee\u9898 \uff1a\u7f51\u7edc\u5c0f\u8bf4\u3001\u8bba\u6587\u6613\u88ab\u6284\u88ad\uff0c\u539f\u4f5c\u8005\u96be\u7ef4\u6743\u3002 - NFT\u65b9\u6848 \uff1a - \u4f5c\u8005\u5c06\u4f5c\u54c1\u94f8\u9020\u4e3aNFT\uff0c\u94fe\u4e0a\u65f6\u95f4\u6233\u8bc1\u660e\u521b\u4f5c\u65f6\u95f4\u3002 - \u6848\u4f8b \uff1a\u4f5c\u5bb6Neil Strauss\u5c06\u65b0\u4e66\u7ae0\u8282\u4f5c\u4e3aNFT\u53d1\u552e\u3002","title":"1. \u6570\u5b57\u7248\u6743\u4fdd\u62a4"},{"location":"bitcoin/nft/text_nft/#2","text":"- \u95ee\u9898 \uff1a\u4f20\u7edf\u6253\u8d4f\u6a21\u5f0f\u62bd\u6210\u9ad8\uff08\u5982\u516c\u4f17\u53f7\u5e73\u53f0\uff09\u3002 - NFT\u65b9\u6848 \uff1a - \u8bfb\u8005\u76f4\u63a5\u8d2d\u4e70\u4f5c\u8005\u7684\u6587\u672cNFT\uff08\u5982\u8bd7\u6b4c\u3001\u535a\u5ba2\uff09\uff0c\u521b\u4f5c\u8005\u83b7\u5f97100%\u6536\u76ca\u3002 - \u6848\u4f8b \uff1a\u8bd7\u4ebaRupi Kaur\u51fa\u552eNFT\u8bd7\u96c6\uff0c\u5355\u7bc7\u552e\u4ef7$5,000\u3002","title":"2. \u7c89\u4e1d\u7ecf\u6d4e"},{"location":"bitcoin/nft/text_nft/#3","text":"- \u95ee\u9898 \uff1a\u51fa\u7248\u793e\u5ba1\u6838\u95e8\u69db\u9ad8\uff0c\u5c0f\u4f17\u4f5c\u54c1\u96be\u9762\u4e16\u3002 - NFT\u65b9\u6848 \uff1a - \u4f5c\u8005\u81ea\u4e3b\u53d1\u884cNFT\u7535\u5b50\u4e66\uff0c\u8bfb\u8005\u8f6c\u552e\u65f6\u4f5c\u8005\u81ea\u52a8\u62bd\u6210\u3002 - \u6848\u4f8b \uff1a\u5e73\u53f0**Book.io**\u63d0\u4f9bNFT\u7535\u5b50\u4e66\u4ea4\u6613\u3002","title":"3. \u53bb\u4e2d\u5fc3\u5316\u51fa\u7248"},{"location":"bitcoin/nft/text_nft/#4","text":"- \u95ee\u9898 \uff1a\u793e\u4ea4\u5a92\u4f53\u5185\u5bb9\u65e0\u6cd5\u8d44\u4ea7\u5316\u3002 - NFT\u65b9\u6848 \uff1a - \u5c06\u63a8\u6587\u3001\u5e16\u5b50\u53d8\u6210NFT\uff08\u5982Twitter\u5141\u8bb8\u7528\u6237\u5c06\u63a8\u6587\u94f8\u9020\u6210NFT\uff09\u3002 - \u6848\u4f8b \uff1aJack Dorsey\u7684\u9996\u6761\u63a8\u6587NFT\u4ee5$290\u4e07\u6210\u4ea4\u3002","title":"4. \u793e\u4ea4\u8eab\u4efd"},{"location":"bitcoin/nft/text_nft/#nft_3","text":"\u5b58\u50a8\u6210\u672c \u957f\u6587\u672c\u5b58\u94fe\u4e0a\u8d39\u7528\u6781\u9ad8\uff08\u4ee5\u592a\u574a1MB\u6570\u636e\u2248$10,000\uff09\uff0c\u9700\u4f9d\u8d56IPFS\u7b49\u65b9\u6848\u3002 \u6cd5\u5f8b\u4e89\u8bae NFT\u7248\u6743\u5f52\u5c5e\u5c1a\u672a\u5168\u7403\u7edf\u4e00\uff08\u5982\u4e70\u5bb6\u662f\u5426\u83b7\u5f97\u6539\u7f16\u6743\uff1f\uff09\u3002 \u7528\u6237\u4f53\u9a8c \u666e\u901a\u7528\u6237\u4e0d\u4e60\u60ef\u5728\u94b1\u5305\u91cc\u201c\u9605\u8bfbNFT\u4e66\u201d\u3002","title":"\u4e09\u3001\u5f53\u524d\u6587\u672cNFT\u7684\u5c40\u9650\u6027"},{"location":"bitcoin/nft/text_nft/#nft_4","text":"\u9009\u62e9\u5e73\u53f0 Mirror.xyz \uff1a\u4e13\u6ce8\u5199\u4f5c\uff0c\u652f\u6301\u514d\u8d39\u94f8\u9020\uff08\u5b58Arweave\uff09\u3002 Manifold Studio \uff1a\u81ea\u5b9a\u4e49\u667a\u80fd\u5408\u7ea6\uff0c\u9002\u5408\u6280\u672f\u7528\u6237\u3002 \u64cd\u4f5c\u6b65\u9aa4 \uff08\u4ee5Mirror\u4e3a\u4f8b\uff09\uff1a \u6ce8\u518c\u5e76\u8fde\u63a5\u94b1\u5305\uff08\u5982MetaMask\uff09\u3002 \u70b9\u51fb\u201cWrite\u201d\u7f16\u8f91\u6587\u672c\uff0c\u9009\u62e9\u201cMint as NFT\u201d\u3002 \u652f\u4ed8Gas\u8d39\uff08\u7ea6 \\(1-\\) 10\uff09\uff0c\u5b8c\u6210\u94f8\u9020\u3002 \u540e\u7eed\u64cd\u4f5c \u6302\u552e\u5230OpenSea\u7b49\u5e02\u573a\uff0c\u6216\u8bbe\u7f6e\u7248\u7a0e\uff08\u5efa\u8bae5-10%\uff09\u3002","title":"\u56db\u3001\u5982\u4f55\u5c06\u4f60\u7684\u6587\u672c\u53d8\u6210NFT\uff1f"},{"location":"bitcoin/nft/text_nft/#_1","text":"\u52a8\u6001NFT\u6587\u672c \uff1a\u6839\u636e\u8bfb\u8005\u4e92\u52a8\u66f4\u65b0\u5185\u5bb9\uff08\u5982\u5206\u652f\u5267\u60c5\u5c0f\u8bf4\uff09\u3002 \u94fe\u4e0a\u56fe\u4e66\u9986 \uff1a\u5982**Project Gutenberg**\u8ba1\u5212\u5c06\u516c\u7248\u4e66NFT\u5316\u3002 AI\u751f\u6210\u6587\u672c+NFT \uff1a\u7528\u6237\u5b9a\u5236AI\u5199\u4f5c\u5185\u5bb9\u5e76\u62e5\u6709\u7248\u6743\u3002","title":"\u4e94\u3001\u672a\u6765\u5c55\u671b"},{"location":"bitcoin/nft/text_nft/#_2","text":"\u6587\u672cNFT\u7684\u6838\u5fc3\u4ef7\u503c\u5728\u4e8e**\u786e\u6743**\u548c**\u76f4\u63a5\u53d8\u73b0**\uff0c\u5c24\u5176\u9002\u5408\u521b\u4f5c\u8005\u3001\u4f5c\u5bb6\u3001\u5b66\u8005\u3002\u867d\u7136\u76ee\u524d\u4ecd\u5904\u65e9\u671f\uff0c\u4f46\u53bb\u4e2d\u5fc3\u5316\u51fa\u7248\u548c\u7248\u6743\u7ba1\u7406\u53ef\u80fd\u662f\u672a\u6765\u8d8b\u52bf\u3002\u5982\u679c\u60f3\u5c1d\u8bd5\uff0c\u53ef\u4ee5\u4eceMirror.xyz\u7684\u514d\u8d39\u94f8\u9020\u5f00\u59cb\uff01","title":"\u603b\u7ed3"},{"location":"bitcoin/nft/text_nft_anti/","text":"NFT \u6587\u672c\u9632\u6cc4\u5bc6\u7684\u7b56\u7565 \u4e00\u3001\u627f\u8ba4\u73b0\u5b9e\uff1a\u7edd\u5bf9\u4fdd\u5bc6\u4e0d\u53ef\u80fd\uff0c\u4f46\u53ef\u4ee5\u300c\u52a8\u6001\u8d2c\u503c\u300d\u6cc4\u5bc6\u5185\u5bb9 1. \u65f6\u95f4\u5dee\u653b\u51fb\u6cd5 2. \u4e2a\u6027\u5316\u5185\u5bb9 3. \u793e\u4ea4\u8d44\u672c\u5bf9\u51b2 \u4e8c\u3001\u653e\u5f03\u300c\u60e9\u7f5a\u300d\uff0c\u8f6c\u5411\u300c\u6fc0\u52b1\u300d\u2014\u2014\u7528\u535a\u5f08\u8bba\u89e3\u51b3\u95ee\u9898 1. \u6cc4\u5bc6\u8005\u65e0\u5229\u53ef\u56fe 2. \u4e3e\u62a5\u8005\u6709\u5229\u53ef\u56fe 3. \u8ba9\u6301\u6709\u8005\u300c\u820d\u4e0d\u5f97\u300d\u6cc4\u5bc6 \u4e09\u3001\u7ec8\u6781\u65b9\u6848\uff1a\u628a\u6587\u672c\u53d8\u6210\u300c\u670d\u52a1\u300d\u800c\u975e\u300c\u5546\u54c1\u300d 1. \u8ba2\u9605\u5236NFT 2. \u52a8\u6001\u786e\u6743 3. \u7ebf\u4e0b\u6df7\u5408\u4f53\u9a8c \u56db\u3001\u6e05\u9192\u8ba4\u77e5\uff1aNFT\u6587\u672c\u7684\u9002\u7528\u8fb9\u754c \u2705 \u9002\u5408NFT\u5316\u7684\u6587\u672c\u7c7b\u578b \u274c \u4e0d\u9002\u5408NFT\u5316\u7684\u6587\u672c \u603b\u7ed3 NFT \u6587\u672c\u9632\u6cc4\u5bc6\u7684\u7b56\u7565 \u00b6 \u4fdd\u5bc6\u548c\u60e9\u7f5a\u673a\u5236\u5728\u73b0\u5b9e\u4e2d\u786e\u5b9e\u6781\u96be\u5b8c\u7f8e\u6267\u884c \uff0c\u8fd9\u662fNFT\u6587\u672c\uff08\u4e43\u81f3\u6574\u4e2a\u6570\u5b57\u5185\u5bb9\u884c\u4e1a\uff09\u7684\u6839\u672c\u6027\u96be\u9898\u3002\u4f46\u884c\u4e1a\u6b63\u5728\u7528\u66f4\u52a1\u5b9e\u7684\u601d\u8def\u5e94\u5bf9\u2014\u2014 \u4e0d\u518d\u8ffd\u6c42\u7edd\u5bf9\u9632\u6cc4\u5bc6\uff0c\u800c\u662f\u901a\u8fc7\u7ecf\u6d4e\u6a21\u578b\u548c\u4f53\u9a8c\u8bbe\u8ba1\u8ba9\u300c\u6cc4\u5bc6\u884c\u4e3a\u300d\u53d8\u5f97\u4e0d\u5212\u7b97\u6216\u5931\u53bb\u610f\u4e49 \u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u7b56\u7565\uff1a \u4e00\u3001\u627f\u8ba4\u73b0\u5b9e\uff1a\u7edd\u5bf9\u4fdd\u5bc6\u4e0d\u53ef\u80fd\uff0c\u4f46\u53ef\u4ee5\u300c\u52a8\u6001\u8d2c\u503c\u300d\u6cc4\u5bc6\u5185\u5bb9 \u00b6 1. \u65f6\u95f4\u5dee\u653b\u51fb\u6cd5 \u00b6 - \u7b56\u7565 \uff1a - NFT\u6301\u6709\u8005**\u6c38\u8fdc\u6bd4\u6cc4\u9732\u8005\u5feb\u4e00\u6b65**\u3002\u4f8b\u5982\uff1a - \u6bcf\u5468\u89e3\u9501\u65b0\u7ae0\u8282\uff0c\u6cc4\u5bc6\u8005\u53ea\u80fd\u4f20\u64ad\u65e7\u5185\u5bb9\u3002 - \u6839\u636e\u5e02\u573a\u52a8\u6001\u4fee\u6539\u6587\u672c\u7ec6\u8282\uff08\u5982\u89d2\u8272\u540d\u66ff\u6362\u4e3a\u6700\u65b0\u70ed\u70b9\u8bcd\u6c47\uff09\u3002 - \u6848\u4f8b \uff1a - \u5c0f\u8bf4NFT\u300aDegenesis\u300b\u6bcf\u552e\u51fa100\u4efd\u5c31\u91cd\u5199\u5173\u952e\u5267\u60c5\uff0c\u6cc4\u5bc6\u7248\u672c\u8fc5\u901f\u8fc7\u65f6\u3002 2. \u4e2a\u6027\u5316\u5185\u5bb9 \u00b6 - \u7b56\u7565 \uff1a - \u7ed9\u6bcf\u4e2a\u6301\u6709\u8005\u7684NFT\u5d4c\u5165**\u552f\u4e00\u53d8\u91cf**\uff08\u5982\u5730\u7406\u4f4d\u7f6e\u3001\u6301\u6709\u65f6\u95f4\u751f\u6210\u4e13\u5c5e\u6bb5\u843d\uff09\u3002 - \u6cc4\u5bc6\u5185\u5bb9\u5bf9\u4ed6\u4eba\u65e0\u4ef7\u503c\uff08\u5982\u540c\u300c\u522b\u4eba\u7684\u4f53\u68c0\u62a5\u544a\u300d\uff09\u3002 - \u6280\u672f \uff1a - \u7528Chainlink\u9884\u8a00\u673a\u83b7\u53d6\u73b0\u5b9e\u6570\u636e\u9a71\u52a8\u5185\u5bb9\u53d8\u5316\u3002 3. \u793e\u4ea4\u8d44\u672c\u5bf9\u51b2 \u00b6 - \u7b56\u7565 \uff1a - \u8ba9\u300c\u6301\u6709NFT\u300d\u672c\u8eab\u6bd4\u300c\u5185\u5bb9\u300d\u66f4\u503c\u94b1\u2014\u2014\u6cc4\u5bc6\u8005\u81ea\u635f\u8eab\u4efd\u3002 - \u6848\u4f8b \uff1a - BAYC\u7334\u5b50\u5934\u50cf\u7684\u56fe\u7247\u5168\u7f51\u4f20\u64ad\uff0c\u4f46**\u53ea\u6709\u94fe\u4e0a\u6301\u6709\u8005\u80fd\u8fdb\u79c1\u4ebaDiscord\u3001\u83b7\u5f97\u7a7a\u6295**\u3002 - \u6587\u672cNFT\u53ef\u8bbe\u8ba1\u4e3a**\u300c\u793e\u4ea4\u95e8\u7968\u300d**\uff0c\u6cc4\u9732\u5185\u5bb9=\u653e\u5f03\u793e\u7fa4\u7279\u6743\u3002 \u4e8c\u3001\u653e\u5f03\u300c\u60e9\u7f5a\u300d\uff0c\u8f6c\u5411\u300c\u6fc0\u52b1\u300d\u2014\u2014\u7528\u535a\u5f08\u8bba\u89e3\u51b3\u95ee\u9898 \u00b6 1. \u6cc4\u5bc6\u8005\u65e0\u5229\u53ef\u56fe \u00b6 - \u6a21\u578b\u8bbe\u8ba1 \uff1a - \u8ba9NFT\u5185\u5bb9**\u788e\u7247\u5316**\u6216**\u4f9d\u8d56\u5b9e\u65f6\u4ea4\u4e92**\uff0c\u6cc4\u5bc6\u65e0\u6cd5\u8fd8\u539f\u5b8c\u6574\u4f53\u9a8c\u3002 - \u4f8b\u5982\uff1a - \u5c0f\u8bf4\u7ed3\u5c40\u9700\u7528NFT\u7b7e\u540d\u83b7\u53d6API\u5b9e\u65f6\u751f\u6210\u3002 - \u8bd7\u6b4cNFT\u6bcf\u5929\u81ea\u52a8\u66ff\u6362\u4e00\u884c\uff0c\u622a\u56fe\u6b21\u65e5\u5931\u6548\u3002 2. \u4e3e\u62a5\u8005\u6709\u5229\u53ef\u56fe \u00b6 - \u7ecf\u6d4e\u673a\u5236 \uff1a - \u8bbe\u7acb\u300c\u4e3e\u62a5\u5956\u52b1\u6c60\u300d\uff0c\u6cc4\u5bc6\u5185\u5bb9\u88ab\u4e3e\u62a5\u540e\uff0c\u4e3e\u62a5\u4eba\u5206\u5f97\u539f\u6301\u6709\u8005\u7684NFT\u8d28\u62bc\u91d1\u3002 - \u6848\u4f8b \uff1a - \u6f2b\u753b\u5e73\u53f0**Mint Comics**\u5bf9\u6cc4\u5bc6\u622a\u56fe\u4e3e\u62a5\u8005\u5956\u52b1$50\u7b49\u503c\u4ee3\u5e01\u3002 3. \u8ba9\u6301\u6709\u8005\u300c\u820d\u4e0d\u5f97\u300d\u6cc4\u5bc6 \u00b6 - \u589e\u503c\u7ed1\u5b9a \uff1a - NFT\u6587\u672c\u7684**\u540e\u7eed\u66f4\u65b0\u6743**\u4e0e\u6301\u6709\u5730\u5740\u5f3a\u5173\u8054\u2014\u2014\u6cc4\u5bc6=\u653e\u5f03\u672a\u6765\u6743\u76ca\u3002 - \u4f8b\u5982\uff1a - \u6301\u6709\u67d0NFT\u8bba\u6587\u53ef\u83b7\u4f5c\u8005\u540e\u7eed\u7814\u7a76\u4f18\u5148\u6388\u6743\uff0c\u6cc4\u5bc6\u8005\u88ab\u5217\u5165\u9ed1\u540d\u5355\u3002 \u4e09\u3001\u7ec8\u6781\u65b9\u6848\uff1a\u628a\u6587\u672c\u53d8\u6210\u300c\u670d\u52a1\u300d\u800c\u975e\u300c\u5546\u54c1\u300d \u00b6 1. \u8ba2\u9605\u5236NFT \u00b6 - \u6a21\u5f0f \uff1a - \u652f\u4ed8\u6708\u8d39\uff08\u4ee5NFT\u5f62\u5f0f\uff09\u624d\u80fd\u6301\u7eed\u8bbf\u95ee\u5185\u5bb9\uff0c\u6cc4\u5bc6\u5373\u65ad\u66f4\u3002 - \u6848\u4f8b \uff1a - \u52a0\u5bc6\u5a92\u4f53**Bankless**\u7684\u4ed8\u8d39\u901a\u8bafNFT\uff0c\u505c\u6b62\u7eed\u8d39\u5219\u65e0\u6cd5\u9605\u8bfb\u65b0\u6587\u7ae0\u3002 2. \u52a8\u6001\u786e\u6743 \u00b6 - \u6280\u672f \uff1a - \u7528**\u7075\u9b42\u7ed1\u5b9a\u4ee3\u5e01\uff08SBT\uff09**\u9a8c\u8bc1\u8bfb\u8005\u8eab\u4efd\uff0c\u5185\u5bb9\u968fSBT\u72b6\u6001\u5b9e\u65f6\u53d8\u5316\u3002 - \u4f8b\u5982\uff1a - \u5927\u5b66\u6559\u6750NFT\u4ec5\u5bf9**\u901a\u8fc7KYC\u7684\u5b66\u751f\u5730\u5740**\u663e\u793a\u5b8c\u6574\u5185\u5bb9\u3002 3. \u7ebf\u4e0b\u6df7\u5408\u4f53\u9a8c \u00b6 - \u7b56\u7565 \uff1a - NFT\u53ea\u662f\u300c\u94a5\u5319\u300d\uff0c\u6838\u5fc3\u4ef7\u503c\u5728\u7ebf\u4e0b\u670d\u52a1\u3002 - \u6848\u4f8b \uff1a - \u8bd7\u6b4cNFT+\u7ebf\u4e0b\u6717\u8bf5\u4f1a\uff08\u9700\u9a8cNFT+\u8eab\u4efd\u8bc1\uff09\u3002 - \u5c0f\u8bf4NFT\u9644\u8d60\u4f5c\u8005\u624b\u7a3f\uff08\u5b9e\u4f53\u90ae\u5bc4\uff09\uff0c\u6cc4\u5bc6\u6570\u5b57\u7248\u4e0d\u5f71\u54cd\u5b9e\u4f53\u4ef7\u503c\u3002 \u56db\u3001\u6e05\u9192\u8ba4\u77e5\uff1aNFT\u6587\u672c\u7684\u9002\u7528\u8fb9\u754c \u00b6 \u2705 \u9002\u5408NFT\u5316\u7684\u6587\u672c\u7c7b\u578b \u00b6 \u9ad8\u4e92\u52a8\u6027\u5185\u5bb9 \uff1a\u9700\u8bfb\u8005\u8f93\u5165\u5f71\u54cd\u5267\u60c5\uff08\u5982AI\u751f\u6210\u5206\u652f\u6545\u4e8b\uff09\u3002 \u793e\u533a\u5171\u5efa\u5185\u5bb9 \uff1a\u5982DAO\u534f\u4f5c\u5c0f\u8bf4\uff0c\u6301\u6709\u8005\u6709\u6743\u6295\u7968\u4fee\u6539\u540e\u7eed\u3002 \u7ed1\u5b9a\u5f3a\u6743\u76ca\u7684\u6587\u672c \uff1a\u5982\u5b66\u672f\u8bba\u6587NFT\u9644\u5e26\u6570\u636e\u8bbf\u95ee\u6743\u3001\u6f14\u5531\u4f1a\u6b4c\u8bcdNFT\u9001\u95e8\u7968\u3002 \u274c \u4e0d\u9002\u5408NFT\u5316\u7684\u6587\u672c \u00b6 \u9759\u6001\u77ed\u6587 \uff1a\u4e00\u9996\u53ef\u5b8c\u5168\u590d\u5236\u7684\u8bd7\u6b4c\uff0c\u65e0\u540e\u7eed\u6743\u76ca\u3002 \u5927\u4f17\u5316\u5185\u5bb9 \uff1a\u65b0\u95fb\u3001\u79d1\u666e\u7b49\u65e0\u7a00\u7f3a\u6027\u9700\u6c42\u7684\u6587\u672c\u3002 \u603b\u7ed3 \u00b6 \u300c\u9632\u6cc4\u5bc6\u300d\u662f\u4f2a\u547d\u9898 \uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7**\u52a8\u6001\u66f4\u65b0\u3001\u4e2a\u6027\u5316\u3001\u793e\u4ea4\u7ed1\u5b9a**\u8ba9\u6cc4\u5bc6\u884c\u4e3a\u5931\u6548\u3002 \u91cd\u70b9\u4e0d\u5728\u60e9\u7f5a \uff0c\u800c\u5728\u8bbe\u8ba1**\u300c\u6cc4\u5bc6\u65e0\u5229\u53ef\u56fe+\u6301\u6709\u6301\u7eed\u589e\u503c\u300d**\u7684\u7ecf\u6d4e\u6a21\u578b\u3002 \u7ec8\u6781\u65b9\u5411 \uff1a\u5c06\u6587\u672c\u4ece\u300c\u53ef\u590d\u5236\u7684\u4fe1\u606f\u300d\u53d8\u6210**\u300c\u9700\u5b9e\u65f6\u9a8c\u8bc1\u7684\u670d\u52a1\u300d**\u3002 \u4e3e\u4e2a\u73b0\u5b9e\u7c7b\u6bd4 \uff1a - **Netflix\u5267\u96c6**\u5168\u7f51\u76d7\u7248\uff0c\u4f46\u901a\u8fc7\u300c\u6bcf\u5468\u66f4\u65b0+\u72ec\u5bb6\u7eaa\u5f55\u7247+\u4f1a\u5458\u793e\u7fa4\u300d\u4f9d\u7136\u76c8\u5229\u3002 - **NFT\u6587\u672c**\u540c\u6837\u53ef\u4ee5\u9760**\u6301\u7eed\u4ea4\u4ed8+\u4f53\u9a8c\u58c1\u5792**\u751f\u5b58\uff0c\u800c\u975e\u4f9d\u8d56\u4fdd\u5bc6\u3002 \u5982\u679c\u60f3\u5c1d\u8bd5\uff0c\u53ef\u4ee5\u4ece**\u4e92\u52a8\u578b\u5c0f\u8bf4NFT**\uff08\u5982\u300aAI Dungeon\u300b\u7684\u94fe\u4e0a\u7248\uff09\u6216**\u4f1a\u5458\u5236\u901a\u8bafNFT**\u5f00\u59cb\uff01","title":"Text nft anti"},{"location":"bitcoin/nft/text_nft_anti/#nft","text":"\u4fdd\u5bc6\u548c\u60e9\u7f5a\u673a\u5236\u5728\u73b0\u5b9e\u4e2d\u786e\u5b9e\u6781\u96be\u5b8c\u7f8e\u6267\u884c \uff0c\u8fd9\u662fNFT\u6587\u672c\uff08\u4e43\u81f3\u6574\u4e2a\u6570\u5b57\u5185\u5bb9\u884c\u4e1a\uff09\u7684\u6839\u672c\u6027\u96be\u9898\u3002\u4f46\u884c\u4e1a\u6b63\u5728\u7528\u66f4\u52a1\u5b9e\u7684\u601d\u8def\u5e94\u5bf9\u2014\u2014 \u4e0d\u518d\u8ffd\u6c42\u7edd\u5bf9\u9632\u6cc4\u5bc6\uff0c\u800c\u662f\u901a\u8fc7\u7ecf\u6d4e\u6a21\u578b\u548c\u4f53\u9a8c\u8bbe\u8ba1\u8ba9\u300c\u6cc4\u5bc6\u884c\u4e3a\u300d\u53d8\u5f97\u4e0d\u5212\u7b97\u6216\u5931\u53bb\u610f\u4e49 \u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u7b56\u7565\uff1a","title":"NFT \u6587\u672c\u9632\u6cc4\u5bc6\u7684\u7b56\u7565"},{"location":"bitcoin/nft/text_nft_anti/#_1","text":"","title":"\u4e00\u3001\u627f\u8ba4\u73b0\u5b9e\uff1a\u7edd\u5bf9\u4fdd\u5bc6\u4e0d\u53ef\u80fd\uff0c\u4f46\u53ef\u4ee5\u300c\u52a8\u6001\u8d2c\u503c\u300d\u6cc4\u5bc6\u5185\u5bb9"},{"location":"bitcoin/nft/text_nft_anti/#1","text":"- \u7b56\u7565 \uff1a - NFT\u6301\u6709\u8005**\u6c38\u8fdc\u6bd4\u6cc4\u9732\u8005\u5feb\u4e00\u6b65**\u3002\u4f8b\u5982\uff1a - \u6bcf\u5468\u89e3\u9501\u65b0\u7ae0\u8282\uff0c\u6cc4\u5bc6\u8005\u53ea\u80fd\u4f20\u64ad\u65e7\u5185\u5bb9\u3002 - \u6839\u636e\u5e02\u573a\u52a8\u6001\u4fee\u6539\u6587\u672c\u7ec6\u8282\uff08\u5982\u89d2\u8272\u540d\u66ff\u6362\u4e3a\u6700\u65b0\u70ed\u70b9\u8bcd\u6c47\uff09\u3002 - \u6848\u4f8b \uff1a - \u5c0f\u8bf4NFT\u300aDegenesis\u300b\u6bcf\u552e\u51fa100\u4efd\u5c31\u91cd\u5199\u5173\u952e\u5267\u60c5\uff0c\u6cc4\u5bc6\u7248\u672c\u8fc5\u901f\u8fc7\u65f6\u3002","title":"1. \u65f6\u95f4\u5dee\u653b\u51fb\u6cd5"},{"location":"bitcoin/nft/text_nft_anti/#2","text":"- \u7b56\u7565 \uff1a - \u7ed9\u6bcf\u4e2a\u6301\u6709\u8005\u7684NFT\u5d4c\u5165**\u552f\u4e00\u53d8\u91cf**\uff08\u5982\u5730\u7406\u4f4d\u7f6e\u3001\u6301\u6709\u65f6\u95f4\u751f\u6210\u4e13\u5c5e\u6bb5\u843d\uff09\u3002 - \u6cc4\u5bc6\u5185\u5bb9\u5bf9\u4ed6\u4eba\u65e0\u4ef7\u503c\uff08\u5982\u540c\u300c\u522b\u4eba\u7684\u4f53\u68c0\u62a5\u544a\u300d\uff09\u3002 - \u6280\u672f \uff1a - \u7528Chainlink\u9884\u8a00\u673a\u83b7\u53d6\u73b0\u5b9e\u6570\u636e\u9a71\u52a8\u5185\u5bb9\u53d8\u5316\u3002","title":"2. \u4e2a\u6027\u5316\u5185\u5bb9"},{"location":"bitcoin/nft/text_nft_anti/#3","text":"- \u7b56\u7565 \uff1a - \u8ba9\u300c\u6301\u6709NFT\u300d\u672c\u8eab\u6bd4\u300c\u5185\u5bb9\u300d\u66f4\u503c\u94b1\u2014\u2014\u6cc4\u5bc6\u8005\u81ea\u635f\u8eab\u4efd\u3002 - \u6848\u4f8b \uff1a - BAYC\u7334\u5b50\u5934\u50cf\u7684\u56fe\u7247\u5168\u7f51\u4f20\u64ad\uff0c\u4f46**\u53ea\u6709\u94fe\u4e0a\u6301\u6709\u8005\u80fd\u8fdb\u79c1\u4ebaDiscord\u3001\u83b7\u5f97\u7a7a\u6295**\u3002 - \u6587\u672cNFT\u53ef\u8bbe\u8ba1\u4e3a**\u300c\u793e\u4ea4\u95e8\u7968\u300d**\uff0c\u6cc4\u9732\u5185\u5bb9=\u653e\u5f03\u793e\u7fa4\u7279\u6743\u3002","title":"3. \u793e\u4ea4\u8d44\u672c\u5bf9\u51b2"},{"location":"bitcoin/nft/text_nft_anti/#_2","text":"","title":"\u4e8c\u3001\u653e\u5f03\u300c\u60e9\u7f5a\u300d\uff0c\u8f6c\u5411\u300c\u6fc0\u52b1\u300d\u2014\u2014\u7528\u535a\u5f08\u8bba\u89e3\u51b3\u95ee\u9898"},{"location":"bitcoin/nft/text_nft_anti/#1_1","text":"- \u6a21\u578b\u8bbe\u8ba1 \uff1a - \u8ba9NFT\u5185\u5bb9**\u788e\u7247\u5316**\u6216**\u4f9d\u8d56\u5b9e\u65f6\u4ea4\u4e92**\uff0c\u6cc4\u5bc6\u65e0\u6cd5\u8fd8\u539f\u5b8c\u6574\u4f53\u9a8c\u3002 - \u4f8b\u5982\uff1a - \u5c0f\u8bf4\u7ed3\u5c40\u9700\u7528NFT\u7b7e\u540d\u83b7\u53d6API\u5b9e\u65f6\u751f\u6210\u3002 - \u8bd7\u6b4cNFT\u6bcf\u5929\u81ea\u52a8\u66ff\u6362\u4e00\u884c\uff0c\u622a\u56fe\u6b21\u65e5\u5931\u6548\u3002","title":"1. \u6cc4\u5bc6\u8005\u65e0\u5229\u53ef\u56fe"},{"location":"bitcoin/nft/text_nft_anti/#2_1","text":"- \u7ecf\u6d4e\u673a\u5236 \uff1a - \u8bbe\u7acb\u300c\u4e3e\u62a5\u5956\u52b1\u6c60\u300d\uff0c\u6cc4\u5bc6\u5185\u5bb9\u88ab\u4e3e\u62a5\u540e\uff0c\u4e3e\u62a5\u4eba\u5206\u5f97\u539f\u6301\u6709\u8005\u7684NFT\u8d28\u62bc\u91d1\u3002 - \u6848\u4f8b \uff1a - \u6f2b\u753b\u5e73\u53f0**Mint Comics**\u5bf9\u6cc4\u5bc6\u622a\u56fe\u4e3e\u62a5\u8005\u5956\u52b1$50\u7b49\u503c\u4ee3\u5e01\u3002","title":"2. \u4e3e\u62a5\u8005\u6709\u5229\u53ef\u56fe"},{"location":"bitcoin/nft/text_nft_anti/#3_1","text":"- \u589e\u503c\u7ed1\u5b9a \uff1a - NFT\u6587\u672c\u7684**\u540e\u7eed\u66f4\u65b0\u6743**\u4e0e\u6301\u6709\u5730\u5740\u5f3a\u5173\u8054\u2014\u2014\u6cc4\u5bc6=\u653e\u5f03\u672a\u6765\u6743\u76ca\u3002 - \u4f8b\u5982\uff1a - \u6301\u6709\u67d0NFT\u8bba\u6587\u53ef\u83b7\u4f5c\u8005\u540e\u7eed\u7814\u7a76\u4f18\u5148\u6388\u6743\uff0c\u6cc4\u5bc6\u8005\u88ab\u5217\u5165\u9ed1\u540d\u5355\u3002","title":"3. \u8ba9\u6301\u6709\u8005\u300c\u820d\u4e0d\u5f97\u300d\u6cc4\u5bc6"},{"location":"bitcoin/nft/text_nft_anti/#_3","text":"","title":"\u4e09\u3001\u7ec8\u6781\u65b9\u6848\uff1a\u628a\u6587\u672c\u53d8\u6210\u300c\u670d\u52a1\u300d\u800c\u975e\u300c\u5546\u54c1\u300d"},{"location":"bitcoin/nft/text_nft_anti/#1-nft","text":"- \u6a21\u5f0f \uff1a - \u652f\u4ed8\u6708\u8d39\uff08\u4ee5NFT\u5f62\u5f0f\uff09\u624d\u80fd\u6301\u7eed\u8bbf\u95ee\u5185\u5bb9\uff0c\u6cc4\u5bc6\u5373\u65ad\u66f4\u3002 - \u6848\u4f8b \uff1a - \u52a0\u5bc6\u5a92\u4f53**Bankless**\u7684\u4ed8\u8d39\u901a\u8bafNFT\uff0c\u505c\u6b62\u7eed\u8d39\u5219\u65e0\u6cd5\u9605\u8bfb\u65b0\u6587\u7ae0\u3002","title":"1. \u8ba2\u9605\u5236NFT"},{"location":"bitcoin/nft/text_nft_anti/#2_2","text":"- \u6280\u672f \uff1a - \u7528**\u7075\u9b42\u7ed1\u5b9a\u4ee3\u5e01\uff08SBT\uff09**\u9a8c\u8bc1\u8bfb\u8005\u8eab\u4efd\uff0c\u5185\u5bb9\u968fSBT\u72b6\u6001\u5b9e\u65f6\u53d8\u5316\u3002 - \u4f8b\u5982\uff1a - \u5927\u5b66\u6559\u6750NFT\u4ec5\u5bf9**\u901a\u8fc7KYC\u7684\u5b66\u751f\u5730\u5740**\u663e\u793a\u5b8c\u6574\u5185\u5bb9\u3002","title":"2. \u52a8\u6001\u786e\u6743"},{"location":"bitcoin/nft/text_nft_anti/#3_2","text":"- \u7b56\u7565 \uff1a - NFT\u53ea\u662f\u300c\u94a5\u5319\u300d\uff0c\u6838\u5fc3\u4ef7\u503c\u5728\u7ebf\u4e0b\u670d\u52a1\u3002 - \u6848\u4f8b \uff1a - \u8bd7\u6b4cNFT+\u7ebf\u4e0b\u6717\u8bf5\u4f1a\uff08\u9700\u9a8cNFT+\u8eab\u4efd\u8bc1\uff09\u3002 - \u5c0f\u8bf4NFT\u9644\u8d60\u4f5c\u8005\u624b\u7a3f\uff08\u5b9e\u4f53\u90ae\u5bc4\uff09\uff0c\u6cc4\u5bc6\u6570\u5b57\u7248\u4e0d\u5f71\u54cd\u5b9e\u4f53\u4ef7\u503c\u3002","title":"3. \u7ebf\u4e0b\u6df7\u5408\u4f53\u9a8c"},{"location":"bitcoin/nft/text_nft_anti/#nft_1","text":"","title":"\u56db\u3001\u6e05\u9192\u8ba4\u77e5\uff1aNFT\u6587\u672c\u7684\u9002\u7528\u8fb9\u754c"},{"location":"bitcoin/nft/text_nft_anti/#nft_2","text":"\u9ad8\u4e92\u52a8\u6027\u5185\u5bb9 \uff1a\u9700\u8bfb\u8005\u8f93\u5165\u5f71\u54cd\u5267\u60c5\uff08\u5982AI\u751f\u6210\u5206\u652f\u6545\u4e8b\uff09\u3002 \u793e\u533a\u5171\u5efa\u5185\u5bb9 \uff1a\u5982DAO\u534f\u4f5c\u5c0f\u8bf4\uff0c\u6301\u6709\u8005\u6709\u6743\u6295\u7968\u4fee\u6539\u540e\u7eed\u3002 \u7ed1\u5b9a\u5f3a\u6743\u76ca\u7684\u6587\u672c \uff1a\u5982\u5b66\u672f\u8bba\u6587NFT\u9644\u5e26\u6570\u636e\u8bbf\u95ee\u6743\u3001\u6f14\u5531\u4f1a\u6b4c\u8bcdNFT\u9001\u95e8\u7968\u3002","title":"\u2705 \u9002\u5408NFT\u5316\u7684\u6587\u672c\u7c7b\u578b"},{"location":"bitcoin/nft/text_nft_anti/#nft_3","text":"\u9759\u6001\u77ed\u6587 \uff1a\u4e00\u9996\u53ef\u5b8c\u5168\u590d\u5236\u7684\u8bd7\u6b4c\uff0c\u65e0\u540e\u7eed\u6743\u76ca\u3002 \u5927\u4f17\u5316\u5185\u5bb9 \uff1a\u65b0\u95fb\u3001\u79d1\u666e\u7b49\u65e0\u7a00\u7f3a\u6027\u9700\u6c42\u7684\u6587\u672c\u3002","title":"\u274c \u4e0d\u9002\u5408NFT\u5316\u7684\u6587\u672c"},{"location":"bitcoin/nft/text_nft_anti/#_4","text":"\u300c\u9632\u6cc4\u5bc6\u300d\u662f\u4f2a\u547d\u9898 \uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7**\u52a8\u6001\u66f4\u65b0\u3001\u4e2a\u6027\u5316\u3001\u793e\u4ea4\u7ed1\u5b9a**\u8ba9\u6cc4\u5bc6\u884c\u4e3a\u5931\u6548\u3002 \u91cd\u70b9\u4e0d\u5728\u60e9\u7f5a \uff0c\u800c\u5728\u8bbe\u8ba1**\u300c\u6cc4\u5bc6\u65e0\u5229\u53ef\u56fe+\u6301\u6709\u6301\u7eed\u589e\u503c\u300d**\u7684\u7ecf\u6d4e\u6a21\u578b\u3002 \u7ec8\u6781\u65b9\u5411 \uff1a\u5c06\u6587\u672c\u4ece\u300c\u53ef\u590d\u5236\u7684\u4fe1\u606f\u300d\u53d8\u6210**\u300c\u9700\u5b9e\u65f6\u9a8c\u8bc1\u7684\u670d\u52a1\u300d**\u3002 \u4e3e\u4e2a\u73b0\u5b9e\u7c7b\u6bd4 \uff1a - **Netflix\u5267\u96c6**\u5168\u7f51\u76d7\u7248\uff0c\u4f46\u901a\u8fc7\u300c\u6bcf\u5468\u66f4\u65b0+\u72ec\u5bb6\u7eaa\u5f55\u7247+\u4f1a\u5458\u793e\u7fa4\u300d\u4f9d\u7136\u76c8\u5229\u3002 - **NFT\u6587\u672c**\u540c\u6837\u53ef\u4ee5\u9760**\u6301\u7eed\u4ea4\u4ed8+\u4f53\u9a8c\u58c1\u5792**\u751f\u5b58\uff0c\u800c\u975e\u4f9d\u8d56\u4fdd\u5bc6\u3002 \u5982\u679c\u60f3\u5c1d\u8bd5\uff0c\u53ef\u4ee5\u4ece**\u4e92\u52a8\u578b\u5c0f\u8bf4NFT**\uff08\u5982\u300aAI Dungeon\u300b\u7684\u94fe\u4e0a\u7248\uff09\u6216**\u4f1a\u5458\u5236\u901a\u8bafNFT**\u5f00\u59cb\uff01","title":"\u603b\u7ed3"},{"location":"cc/cudac/","text":"4090 \u7684cuda\u7279\u6027 \u00b6 \u57fa\u672capi \u00b6 \u5185\u5b58\u7ba1\u7406 \u00b6 cudaMalloc\uff1a\u5728\u8bbe\u5907\uff08GPU\uff09\u4e0a\u5206\u914d\u5185\u5b58\u3002 cudaFree\uff1a\u91ca\u653e\u8bbe\u5907\u4e0a\u7684\u5185\u5b58\u3002 cudaMemcpy\uff1a\u5728\u4e3b\u673a\uff08CPU\uff09\u548c\u8bbe\u5907\u4e4b\u95f4\u590d\u5236\u5185\u5b58\u3002 \u540c\u6b65 \u00b6 cudaDeviceSynchronize\uff1a\u7b49\u5f85\u8bbe\u5907\u4e0a\u7684\u6240\u6709\u5148\u524d\u53d1\u5e03\u7684\u4efb\u52a1\u5b8c\u6210\u3002 __syncthreads()\uff1a\u5728\u4e00\u4e2a\u7ebf\u7a0b\u5757\u5185\u540c\u6b65\u6240\u6709\u7ebf\u7a0b\u3002 \u8bbe\u5907\u7ba1\u7406 \u00b6 cudaSetDevice\uff1a\u8bbe\u7f6e\u5f53\u524d\u4f7f\u7528\u7684GPU\u8bbe\u5907\u3002 cudaGetDeviceProperties\uff1a\u83b7\u53d6\u8bbe\u5907\u7684\u5c5e\u6027\u3002 \u9519\u8bef\u5904\u7406 \u00b6 cudaGetLastError\uff1a\u8fd4\u56de\u4e0a\u4e00\u4e2aCUDA\u8c03\u7528\u7684\u9519\u8bef\u72b6\u6001\u3002 cudaGetErrorString\uff1a\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u63cf\u8ff0\u3002 \u6d41\uff08Stream\uff09\u7ba1\u7406 \u00b6 cudaStreamCreate\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6d41\u3002 cudaStreamDestroy\uff1a\u9500\u6bc1\u4e00\u4e2a\u6d41\u3002 cudaStreamSynchronize\uff1a\u7b49\u5f85\u4e00\u4e2a\u6d41\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\u5b8c\u6210\u3002 \u4e8b\u4ef6\uff08Event\uff09\u7ba1\u7406 \u00b6 cudaEventCreate\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4e8b\u4ef6\u3002 cudaEventRecord\uff1a\u5728\u4e00\u4e2a\u6d41\u4e2d\u8bb0\u5f55\u4e00\u4e2a\u4e8b\u4ef6\u3002 cudaEventSynchronize\uff1a\u7b49\u5f85\u4e00\u4e2a\u4e8b\u4ef6\u5b8c\u6210\u3002 \u539f\u5b50\u64cd\u4f5c \u00b6 atomicAdd\uff1a\u539f\u5b50\u5730\u589e\u52a0\u4e00\u4e2a\u503c\u3002 atomicCAS\uff1a\u539f\u5b50\u5730\u6bd4\u8f83\u5e76\u4ea4\u6362\u4e00\u4e2a\u503c\u3002 \u4ece\u6307\u4ee4\u89d2\u5ea6\u7406\u89e3 \u00b6 ptx \u72ec\u7acb\u4e8e\u7279\u5b9agpu\u67b6\u6784 nvcc \u7f16\u8bd1 .cu \u6587\u4ef6 ===> .ptx \u4ee3\u7801 .ptx -> gpu\u67b6\u6784\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801 \u9a71\u52a8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u5b8c\u6210\uff0c\u6216\u8005\u7f16\u8bd1\u65f6\u901a\u8fc7\u6307\u5b9a\u76ee\u6807\u67b6\u6784 -arch=sm_75 \u5b8c\u6210 ptx\u6307\u4ee4 \u00b6 PTX\u6307\u4ee4\u96c6\u5305\u62ec\u7b97\u672f\u6307\u4ee4\u3001\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\u3001\u63a7\u5236\u6d41\u6307\u4ee4\u7b49\u3002\u4f8b\u5982\uff1a add.f32\uff1a\u6d6e\u70b9\u6570\u52a0\u6cd5\u3002 ld.global\uff1a\u4ece\u5168\u5c40\u5185\u5b58\u52a0\u8f7d\u6570\u636e\u3002 st.shared\uff1a\u5b58\u50a8\u6570\u636e\u5230\u5171\u4eab\u5185\u5b58\u3002 bar.sync\uff1a\u7ebf\u7a0b\u5757\u5185\u7684\u540c\u6b65\u5c4f\u969c\u3002 \u4f18\u5316\u548c\u8c03\u5ea6\uff1a \u5728PTX\u5230\u4e8c\u8fdb\u5236\u4ee3\u7801\u7684\u8f6c\u6362\u8fc7\u7a0b\u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u8fdb\u884c\u5404\u79cd\u4f18\u5316\uff0c\u5982\u6307\u4ee4\u8c03\u5ea6\u3001\u5bc4\u5b58\u5668\u5206\u914d\u7b49\uff0c\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u6267\u884c\u6548\u7387\u3002 \u8fd9\u4e9b\u4f18\u5316\u65e8\u5728\u6700\u5927\u5316GPU\u7684\u5e76\u884c\u8ba1\u7b97\u80fd\u529b\uff0c\u51cf\u5c11\u5185\u5b58\u8bbf\u95ee\u5ef6\u8fdf\u548c\u7ebf\u7a0b\u7b49\u5f85\u65f6\u95f4\u3002 \u8fd0\u884c\u65f6\u52a0\u8f7d\uff1a \u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0cCUDA\u9a71\u52a8\u7a0b\u5e8f\u4f1a\u52a0\u8f7d\u4e8c\u8fdb\u5236\u4ee3\u7801\u5230GPU\uff0c\u5e76\u7ba1\u7406\u7ebf\u7a0b\u7684\u8c03\u5ea6\u548c\u6267\u884c\u3002 PTX\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u7531\u9a71\u52a8\u7a0b\u5e8f\u8fdb\u884c\u5373\u65f6\u7f16\u8bd1\uff08JIT\uff09\uff0c\u4ee5\u9002\u5e94\u4e0d\u540c\u7684GPU\u67b6\u6784\u3002 \u5177\u4f53\u6307\u4ee4\uff1a \u7b97\u672f\u6307\u4ee4\uff1a add\uff1a\u6574\u6570\u52a0\u6cd5\u3002 sub\uff1a\u6574\u6570\u51cf\u6cd5\u3002 mul\uff1a\u6574\u6570\u4e58\u6cd5\u3002 mad\uff1a\u4e58\u52a0\uff08multiply-add\uff09\u3002 fadd\uff1a\u6d6e\u70b9\u6570\u52a0\u6cd5\u3002 fmul\uff1a\u6d6e\u70b9\u6570\u4e58\u6cd5\u3002 \u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\uff1a ld\uff1a\u4ece\u5185\u5b58\u52a0\u8f7d\u6570\u636e\u3002 st\uff1a\u5c06\u6570\u636e\u5b58\u50a8\u5230\u5185\u5b58\u3002 ld.global\uff1a\u4ece\u5168\u5c40\u5185\u5b58\u52a0\u8f7d\u6570\u636e\u3002 st.shared\uff1a\u5c06\u6570\u636e\u5b58\u50a8\u5230\u5171\u4eab\u5185\u5b58\u3002 \u63a7\u5236\u6d41\u6307\u4ee4\uff1a bra\uff1a\u65e0\u6761\u4ef6\u8df3\u8f6c\u3002 setp\uff1a\u8bbe\u7f6e\u8c13\u8bcd\u5bc4\u5b58\u5668\u3002 @p\uff1a\u57fa\u4e8e\u8c13\u8bcd\u7684\u6761\u4ef6\u6267\u884c\u3002 \u540c\u6b65\u6307\u4ee4\uff1a bar.sync\uff1a\u7ebf\u7a0b\u5757\u5185\u7684\u540c\u6b65\u5c4f\u969c\u3002 membar\uff1a\u5185\u5b58\u5c4f\u969c\uff0c\u786e\u4fdd\u5185\u5b58\u64cd\u4f5c\u7684\u987a\u5e8f\u3002 \u539f\u5b50\u64cd\u4f5c\u6307\u4ee4\uff1a atom.add\uff1a\u539f\u5b50\u52a0\u6cd5\u3002 atom.cas\uff1a\u539f\u5b50\u6bd4\u8f83\u5e76\u4ea4\u6362\u3002 \u8f6c\u6362\u6307\u4ee4\uff1a cvt\uff1a\u7c7b\u578b\u8f6c\u6362\uff08\u5982\u6574\u6570\u5230\u6d6e\u70b9\u6570\uff09\u3002 float2int\uff1a\u6d6e\u70b9\u6570\u5230\u6574\u6570\u7684\u8f6c\u6362\u3002 \u7279\u6b8a\u6307\u4ee4\uff1a tex\uff1a\u7eb9\u7406\u5185\u5b58\u8bbf\u95ee\u3002 s2r\uff1a\u7279\u6b8a\u5bc4\u5b58\u5668\u8bbf\u95ee\u3002 \u903b\u8f91\u6307\u4ee4\uff1a and\uff1a\u6309\u4f4d\u4e0e\u3002 or\uff1a\u6309\u4f4d\u6216\u3002 not\uff1a\u6309\u4f4d\u975e\u3002 \u7ee7\u7eed\u5b66\u4e60 \u00b6 \u4e00\u4e9b\u51fd\u6570 #include <ATen/Tensor.h> #include <ATen/Functions.h> #include <torch/csrc/utils/pybind.h> void square_cuda_forward ( void * input , void * output , int size ); at :: Tensor square_forward ( const at :: Tensor & input ) { auto output = at :: zeros_like ( input ); square_cuda_forward ( input . data_ptr (), output . data_ptr (), input . numel ()); return output ; } PYBIND11_MODULE ( TORCH_EXTENSION_NAME , m ) { m . def ( \"square_forward\" , & square_forward , \"Square forward (CUDA)\" ); } os . environ [ \"TORCH_CUDA_ARCH_LIST\" ] = \"8.9\" start = time . time () square_cuda = load ( name = \"square_cuda\" , sources = [ f \" { dir_path } /square_kernel.cu\" ], verbose = True , build_directory = build_dir ) end = time . time () print ( f \"Time taken: { end - start } seconds\" ) tilelang \u5b66\u4e60 \u00b6 from : https://leiblog.wang/Debug-Tools-for-TileLang/ ctypes \u8c03\u7528\u7684\u7406\u8bba\u5f00\u9500\u5e94\u8be5\u5728 500ns ~ 5\u00b5s \u4e4b\u95f4\uff0c\u57fa\u672c\u53ef\u5ffd\u7565\u3002 best practice \u00b6 https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/","title":"4090 \u7684cuda\u7279\u6027"},{"location":"cc/cudac/#4090-cuda","text":"","title":"4090 \u7684cuda\u7279\u6027"},{"location":"cc/cudac/#api","text":"","title":"\u57fa\u672capi"},{"location":"cc/cudac/#_1","text":"cudaMalloc\uff1a\u5728\u8bbe\u5907\uff08GPU\uff09\u4e0a\u5206\u914d\u5185\u5b58\u3002 cudaFree\uff1a\u91ca\u653e\u8bbe\u5907\u4e0a\u7684\u5185\u5b58\u3002 cudaMemcpy\uff1a\u5728\u4e3b\u673a\uff08CPU\uff09\u548c\u8bbe\u5907\u4e4b\u95f4\u590d\u5236\u5185\u5b58\u3002","title":"\u5185\u5b58\u7ba1\u7406"},{"location":"cc/cudac/#_2","text":"cudaDeviceSynchronize\uff1a\u7b49\u5f85\u8bbe\u5907\u4e0a\u7684\u6240\u6709\u5148\u524d\u53d1\u5e03\u7684\u4efb\u52a1\u5b8c\u6210\u3002 __syncthreads()\uff1a\u5728\u4e00\u4e2a\u7ebf\u7a0b\u5757\u5185\u540c\u6b65\u6240\u6709\u7ebf\u7a0b\u3002","title":"\u540c\u6b65"},{"location":"cc/cudac/#_3","text":"cudaSetDevice\uff1a\u8bbe\u7f6e\u5f53\u524d\u4f7f\u7528\u7684GPU\u8bbe\u5907\u3002 cudaGetDeviceProperties\uff1a\u83b7\u53d6\u8bbe\u5907\u7684\u5c5e\u6027\u3002","title":"\u8bbe\u5907\u7ba1\u7406"},{"location":"cc/cudac/#_4","text":"cudaGetLastError\uff1a\u8fd4\u56de\u4e0a\u4e00\u4e2aCUDA\u8c03\u7528\u7684\u9519\u8bef\u72b6\u6001\u3002 cudaGetErrorString\uff1a\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u63cf\u8ff0\u3002","title":"\u9519\u8bef\u5904\u7406"},{"location":"cc/cudac/#stream","text":"cudaStreamCreate\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6d41\u3002 cudaStreamDestroy\uff1a\u9500\u6bc1\u4e00\u4e2a\u6d41\u3002 cudaStreamSynchronize\uff1a\u7b49\u5f85\u4e00\u4e2a\u6d41\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\u5b8c\u6210\u3002","title":"\u6d41\uff08Stream\uff09\u7ba1\u7406"},{"location":"cc/cudac/#event","text":"cudaEventCreate\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4e8b\u4ef6\u3002 cudaEventRecord\uff1a\u5728\u4e00\u4e2a\u6d41\u4e2d\u8bb0\u5f55\u4e00\u4e2a\u4e8b\u4ef6\u3002 cudaEventSynchronize\uff1a\u7b49\u5f85\u4e00\u4e2a\u4e8b\u4ef6\u5b8c\u6210\u3002","title":"\u4e8b\u4ef6\uff08Event\uff09\u7ba1\u7406"},{"location":"cc/cudac/#_5","text":"atomicAdd\uff1a\u539f\u5b50\u5730\u589e\u52a0\u4e00\u4e2a\u503c\u3002 atomicCAS\uff1a\u539f\u5b50\u5730\u6bd4\u8f83\u5e76\u4ea4\u6362\u4e00\u4e2a\u503c\u3002","title":"\u539f\u5b50\u64cd\u4f5c"},{"location":"cc/cudac/#_6","text":"ptx \u72ec\u7acb\u4e8e\u7279\u5b9agpu\u67b6\u6784 nvcc \u7f16\u8bd1 .cu \u6587\u4ef6 ===> .ptx \u4ee3\u7801 .ptx -> gpu\u67b6\u6784\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801 \u9a71\u52a8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u5b8c\u6210\uff0c\u6216\u8005\u7f16\u8bd1\u65f6\u901a\u8fc7\u6307\u5b9a\u76ee\u6807\u67b6\u6784 -arch=sm_75 \u5b8c\u6210","title":"\u4ece\u6307\u4ee4\u89d2\u5ea6\u7406\u89e3"},{"location":"cc/cudac/#ptx","text":"PTX\u6307\u4ee4\u96c6\u5305\u62ec\u7b97\u672f\u6307\u4ee4\u3001\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\u3001\u63a7\u5236\u6d41\u6307\u4ee4\u7b49\u3002\u4f8b\u5982\uff1a add.f32\uff1a\u6d6e\u70b9\u6570\u52a0\u6cd5\u3002 ld.global\uff1a\u4ece\u5168\u5c40\u5185\u5b58\u52a0\u8f7d\u6570\u636e\u3002 st.shared\uff1a\u5b58\u50a8\u6570\u636e\u5230\u5171\u4eab\u5185\u5b58\u3002 bar.sync\uff1a\u7ebf\u7a0b\u5757\u5185\u7684\u540c\u6b65\u5c4f\u969c\u3002 \u4f18\u5316\u548c\u8c03\u5ea6\uff1a \u5728PTX\u5230\u4e8c\u8fdb\u5236\u4ee3\u7801\u7684\u8f6c\u6362\u8fc7\u7a0b\u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u8fdb\u884c\u5404\u79cd\u4f18\u5316\uff0c\u5982\u6307\u4ee4\u8c03\u5ea6\u3001\u5bc4\u5b58\u5668\u5206\u914d\u7b49\uff0c\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u6267\u884c\u6548\u7387\u3002 \u8fd9\u4e9b\u4f18\u5316\u65e8\u5728\u6700\u5927\u5316GPU\u7684\u5e76\u884c\u8ba1\u7b97\u80fd\u529b\uff0c\u51cf\u5c11\u5185\u5b58\u8bbf\u95ee\u5ef6\u8fdf\u548c\u7ebf\u7a0b\u7b49\u5f85\u65f6\u95f4\u3002 \u8fd0\u884c\u65f6\u52a0\u8f7d\uff1a \u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0cCUDA\u9a71\u52a8\u7a0b\u5e8f\u4f1a\u52a0\u8f7d\u4e8c\u8fdb\u5236\u4ee3\u7801\u5230GPU\uff0c\u5e76\u7ba1\u7406\u7ebf\u7a0b\u7684\u8c03\u5ea6\u548c\u6267\u884c\u3002 PTX\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u7531\u9a71\u52a8\u7a0b\u5e8f\u8fdb\u884c\u5373\u65f6\u7f16\u8bd1\uff08JIT\uff09\uff0c\u4ee5\u9002\u5e94\u4e0d\u540c\u7684GPU\u67b6\u6784\u3002 \u5177\u4f53\u6307\u4ee4\uff1a \u7b97\u672f\u6307\u4ee4\uff1a add\uff1a\u6574\u6570\u52a0\u6cd5\u3002 sub\uff1a\u6574\u6570\u51cf\u6cd5\u3002 mul\uff1a\u6574\u6570\u4e58\u6cd5\u3002 mad\uff1a\u4e58\u52a0\uff08multiply-add\uff09\u3002 fadd\uff1a\u6d6e\u70b9\u6570\u52a0\u6cd5\u3002 fmul\uff1a\u6d6e\u70b9\u6570\u4e58\u6cd5\u3002 \u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\uff1a ld\uff1a\u4ece\u5185\u5b58\u52a0\u8f7d\u6570\u636e\u3002 st\uff1a\u5c06\u6570\u636e\u5b58\u50a8\u5230\u5185\u5b58\u3002 ld.global\uff1a\u4ece\u5168\u5c40\u5185\u5b58\u52a0\u8f7d\u6570\u636e\u3002 st.shared\uff1a\u5c06\u6570\u636e\u5b58\u50a8\u5230\u5171\u4eab\u5185\u5b58\u3002 \u63a7\u5236\u6d41\u6307\u4ee4\uff1a bra\uff1a\u65e0\u6761\u4ef6\u8df3\u8f6c\u3002 setp\uff1a\u8bbe\u7f6e\u8c13\u8bcd\u5bc4\u5b58\u5668\u3002 @p\uff1a\u57fa\u4e8e\u8c13\u8bcd\u7684\u6761\u4ef6\u6267\u884c\u3002 \u540c\u6b65\u6307\u4ee4\uff1a bar.sync\uff1a\u7ebf\u7a0b\u5757\u5185\u7684\u540c\u6b65\u5c4f\u969c\u3002 membar\uff1a\u5185\u5b58\u5c4f\u969c\uff0c\u786e\u4fdd\u5185\u5b58\u64cd\u4f5c\u7684\u987a\u5e8f\u3002 \u539f\u5b50\u64cd\u4f5c\u6307\u4ee4\uff1a atom.add\uff1a\u539f\u5b50\u52a0\u6cd5\u3002 atom.cas\uff1a\u539f\u5b50\u6bd4\u8f83\u5e76\u4ea4\u6362\u3002 \u8f6c\u6362\u6307\u4ee4\uff1a cvt\uff1a\u7c7b\u578b\u8f6c\u6362\uff08\u5982\u6574\u6570\u5230\u6d6e\u70b9\u6570\uff09\u3002 float2int\uff1a\u6d6e\u70b9\u6570\u5230\u6574\u6570\u7684\u8f6c\u6362\u3002 \u7279\u6b8a\u6307\u4ee4\uff1a tex\uff1a\u7eb9\u7406\u5185\u5b58\u8bbf\u95ee\u3002 s2r\uff1a\u7279\u6b8a\u5bc4\u5b58\u5668\u8bbf\u95ee\u3002 \u903b\u8f91\u6307\u4ee4\uff1a and\uff1a\u6309\u4f4d\u4e0e\u3002 or\uff1a\u6309\u4f4d\u6216\u3002 not\uff1a\u6309\u4f4d\u975e\u3002","title":"ptx\u6307\u4ee4"},{"location":"cc/cudac/#_7","text":"\u4e00\u4e9b\u51fd\u6570 #include <ATen/Tensor.h> #include <ATen/Functions.h> #include <torch/csrc/utils/pybind.h> void square_cuda_forward ( void * input , void * output , int size ); at :: Tensor square_forward ( const at :: Tensor & input ) { auto output = at :: zeros_like ( input ); square_cuda_forward ( input . data_ptr (), output . data_ptr (), input . numel ()); return output ; } PYBIND11_MODULE ( TORCH_EXTENSION_NAME , m ) { m . def ( \"square_forward\" , & square_forward , \"Square forward (CUDA)\" ); } os . environ [ \"TORCH_CUDA_ARCH_LIST\" ] = \"8.9\" start = time . time () square_cuda = load ( name = \"square_cuda\" , sources = [ f \" { dir_path } /square_kernel.cu\" ], verbose = True , build_directory = build_dir ) end = time . time () print ( f \"Time taken: { end - start } seconds\" )","title":"\u7ee7\u7eed\u5b66\u4e60"},{"location":"cc/cudac/#tilelang","text":"from : https://leiblog.wang/Debug-Tools-for-TileLang/ ctypes \u8c03\u7528\u7684\u7406\u8bba\u5f00\u9500\u5e94\u8be5\u5728 500ns ~ 5\u00b5s \u4e4b\u95f4\uff0c\u57fa\u672c\u53ef\u5ffd\u7565\u3002","title":"tilelang \u5b66\u4e60"},{"location":"cc/cudac/#best-practice","text":"https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/","title":"best practice"},{"location":"cc/mix/","text":"mix \u00b6 from : https://zhuanlan.zhihu.com/p/460825741 \u7528\u9014\uff1a\u5c06\u82e5\u5e72\u529f\u80fd\u72ec\u7acb\u7684\u7c7b\u901a\u8fc7\u7ee7\u627f\u7684\u65b9\u5f0f\u5b9e\u73b0\u6a21\u5757\u590d\u7528\u7684C++\u6a21\u677f\u7f16\u7a0b\u6280\u5de7 template < typename ... Mixins > class MixinClass : public Mixins ... { public : MixinClass () : Mixins ...() {} // ... }; \u5c06\u6a21\u677f\u53c2\u6570\u4f5c\u4e3a\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b template < typename ... Mixins > class Point : public Mixins ... { public : double x , y ; Point () : Mixins ()..., x ( 0.0 ), y ( 0.0 ) {} Point ( double x , double y ) : Mixins ()..., x ( x ), y ( y ) {} }; class Label { public : std :: string label ; Label () : label ( \"\" ) {} }; class Color { public : unsigned char red = 0 , green = 0 , blue = 0 ; }; using MyPoint = Point < Label , Color > ; #include <iostream> using namespace std ; struct Number { typedef int value_type ; int n ; void set ( int v ) { n = v ; } int get () const { return n ; } }; template < typename BASE , typename T = typename BASE :: value_type > struct Undoable { typedef T value_type ; BASE base ; T before ; void set ( T v ) { before = base . get (); base . set ( v ); } void undo () { base . set ( before ); } T get () const { return base . get (); } }; template < typename BASE , typename T = typename BASE :: value_type > struct Redoable { typedef T value_type ; BASE base ; T after ; void set ( T v ) { after = v ; base . set ( v ); } void redo () { base . set ( after ); } T get () const { return base . get (); } }; typedef Redoable < Undoable < Number > > ReUndoableNumber ; int main () { ReUndoableNumber mynum ; mynum . set ( 42 ); mynum . set ( 84 ); cout << mynum . get () << '\\n' ; // 84 mynum . undo (); cout << mynum . get () << '\\n' ; // 42 mynum . redo (); cout << mynum . get () << '\\n' ; // back to 84 } \u8fd8\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u5b9e\u73b0\u53ef\u8ddf\u8e2a\u7684\u5f02\u5e38,\u4f46\u662f\u6682\u65f6\u4e0dcare\u4e86","title":"Mix"},{"location":"cc/mix/#mix","text":"from : https://zhuanlan.zhihu.com/p/460825741 \u7528\u9014\uff1a\u5c06\u82e5\u5e72\u529f\u80fd\u72ec\u7acb\u7684\u7c7b\u901a\u8fc7\u7ee7\u627f\u7684\u65b9\u5f0f\u5b9e\u73b0\u6a21\u5757\u590d\u7528\u7684C++\u6a21\u677f\u7f16\u7a0b\u6280\u5de7 template < typename ... Mixins > class MixinClass : public Mixins ... { public : MixinClass () : Mixins ...() {} // ... }; \u5c06\u6a21\u677f\u53c2\u6570\u4f5c\u4e3a\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b template < typename ... Mixins > class Point : public Mixins ... { public : double x , y ; Point () : Mixins ()..., x ( 0.0 ), y ( 0.0 ) {} Point ( double x , double y ) : Mixins ()..., x ( x ), y ( y ) {} }; class Label { public : std :: string label ; Label () : label ( \"\" ) {} }; class Color { public : unsigned char red = 0 , green = 0 , blue = 0 ; }; using MyPoint = Point < Label , Color > ; #include <iostream> using namespace std ; struct Number { typedef int value_type ; int n ; void set ( int v ) { n = v ; } int get () const { return n ; } }; template < typename BASE , typename T = typename BASE :: value_type > struct Undoable { typedef T value_type ; BASE base ; T before ; void set ( T v ) { before = base . get (); base . set ( v ); } void undo () { base . set ( before ); } T get () const { return base . get (); } }; template < typename BASE , typename T = typename BASE :: value_type > struct Redoable { typedef T value_type ; BASE base ; T after ; void set ( T v ) { after = v ; base . set ( v ); } void redo () { base . set ( after ); } T get () const { return base . get (); } }; typedef Redoable < Undoable < Number > > ReUndoableNumber ; int main () { ReUndoableNumber mynum ; mynum . set ( 42 ); mynum . set ( 84 ); cout << mynum . get () << '\\n' ; // 84 mynum . undo (); cout << mynum . get () << '\\n' ; // 42 mynum . redo (); cout << mynum . get () << '\\n' ; // back to 84 } \u8fd8\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u5b9e\u73b0\u53ef\u8ddf\u8e2a\u7684\u5f02\u5e38,\u4f46\u662f\u6682\u65f6\u4e0dcare\u4e86","title":"mix"},{"location":"cc/smart_point/","text":"\u667a\u80fd\u6307\u9488 \u00b6 #include <iostream> #include <cstring> #include <atomic> // ------------------- UniquePtr \u5b9e\u73b0 ------------------- template < typename T > class UniquePtr { private : T * ptr ; public : explicit UniquePtr ( T * p = nullptr ) : ptr ( p ) {} ~ UniquePtr () { delete ptr ; } UniquePtr ( const UniquePtr & ) = delete ; UniquePtr & operator = ( const UniquePtr & ) = delete ; UniquePtr ( UniquePtr && other ) noexcept : ptr ( other . ptr ) { other . ptr = nullptr ; } UniquePtr & operator = ( UniquePtr && other ) noexcept { if ( this != & other ) { delete ptr ; ptr = other . ptr ; other . ptr = nullptr ; } return * this ; } T * operator -> () const { return ptr ; } T & operator * () const { return * ptr ; } T * get () const { return ptr ; } }; // ------------------- SharedPtr \u5b9e\u73b0 ------------------- template < typename T > class SharedPtr { private : T * ptr ; std :: atomic < int >* count ; public : explicit SharedPtr ( T * p = nullptr ) : ptr ( p ), count ( new std :: atomic < int > ( p ? 1 : 0 )) {} ~ SharedPtr () { if ( -- ( * count ) == 0 ) { delete ptr ; delete count ; } } SharedPtr ( const SharedPtr & other ) : ptr ( other . ptr ), count ( other . count ) { ++ ( * count ); } SharedPtr & operator = ( const SharedPtr & other ) { if ( this != & other ) { if ( -- ( * count ) == 0 ) { delete ptr ; delete count ; } ptr = other . ptr ; count = other . count ; ++ ( * count ); } return * this ; } T * operator -> () const { return ptr ; } T & operator * () const { return * ptr ; } T * get () const { return ptr ; } }; // ------------------- MyString \u5b9e\u73b0 ------------------- class MyString { private : char * data ; size_t length ; public : MyString ( const char * str = \"\" ) { length = std :: strlen ( str ); data = new char [ length + 1 ]; std :: strcpy ( data , str ); } MyString ( const MyString & other ) { length = other . length ; data = new char [ length + 1 ]; std :: strcpy ( data , other . data ); } MyString & operator = ( const MyString & other ) { if ( this != & other ) { delete [] data ; length = other . length ; data = new char [ length + 1 ]; std :: strcpy ( data , other . data ); } return * this ; } MyString ( MyString && other ) noexcept : data ( other . data ), length ( other . length ) { other . data = nullptr ; other . length = 0 ; } MyString & operator = ( MyString && other ) noexcept { if ( this != & other ) { delete [] data ; data = other . data ; length = other . length ; other . data = nullptr ; other . length = 0 ; } return * this ; } ~ MyString () { delete [] data ; } const char * c_str () const { return data ; } }; // ------------------- \u6d4b\u8bd5\u4ee3\u7801 ------------------- int main () { UniquePtr < int > uPtr ( new int ( 10 )); std :: cout << \"UniquePtr: \" << * uPtr << std :: endl ; SharedPtr < int > sPtr1 ( new int ( 20 )); SharedPtr < int > sPtr2 = sPtr1 ; std :: cout << \"SharedPtr: \" << * sPtr1 << std :: endl ; MyString str1 ( \"Hello, World!\" ); MyString str2 = str1 ; std :: cout << \"MyString: \" << str2 . c_str () << std :: endl ; return 0 ; } template < typename T > constexpr typename std :: remove_reference < T >:: type && move ( T && arg ) noexcept { return static_cast < typename std :: remove_reference < T >:: type &&> ( arg ); } std::move \u65e0\u6761\u4ef6 \u8f6c\u6362\u4e3a\u53f3\u503c\u3002 std::forward \u6709\u6761\u4ef6 \u8f6c\u6362\u4e3a\u53f3\u503c\uff0c\u4ec5\u7528\u4e8e \u5b8c\u7f8e\u8f6c\u53d1\uff08\u914d\u5408\u6a21\u677f\uff09\u3002 template < typename T > void foo ( T && arg ) { T new_value = std :: forward < T > ( arg ); // \u4fdd\u6301\u5de6\u503c/\u53f3\u503c\u5c5e\u6027 } \u4e07\u80fd\u5f15\u7528\u548c\u53f3\u503c\u5f15\u7528 \u00b6 \u7ed1\u5b9a\u53f3\u503c\uff08\u6ca1\u6709\u540d\u5b57\u7684\u4e34\u65f6\u5bf9\u8c61\uff09 \u7684\u5f15\u7528\uff0c\u5141\u8bb8 \u79fb\u52a8\u8bed\u4e49\u3002 1. \u4e13\u95e8\u7528\u4e8e\u53f3\u503c\uff08int&& \u53ea\u80fd\u7ed1\u5b9a 10\uff0c\u4e0d\u80fd\u7ed1\u5b9a int a;\uff09\u3002 2. \u901a\u5e38\u7528\u4e8e\u79fb\u52a8\u6784\u9020\u3001\u79fb\u52a8\u8d4b\u503c\uff0c\u907f\u514d\u62f7\u8d1d\uff0c\u63d0\u9ad8\u6027\u80fd\u3002 void foo ( int && x ) { // \u53f3\u503c\u5f15\u7528 std :: cout << x << std :: endl ; } int main () { int a = 10 ; foo ( 10 ); // \u2705 \u53f3\u503c OK foo ( a ); // \u274c \u5de6\u503c\u4e0d\u80fd\u4f20\u7ed9 int&& } \u5f53 T&& \u51fa\u73b0\u5728\u51fd\u6570\u6a21\u677f\u4e2d\uff0c\u5e76\u4e14 T \u662f\u6a21\u677f\u53c2\u6570\uff0c\u5b83\u53d8\u6210 \u4e07\u80fd\u5f15\u7528\uff0c\u53ef\u4ee5\u63a5\u53d7\u5de6\u503c\u548c\u53f3\u503c\u3002 1. T&& \u5728\u6a21\u677f\u53c2\u6570\u4e2d\u65f6\u662f\u4e07\u80fd\u5f15\u7528\uff0c\u53ef\u4ee5\u63a5\u53d7\u5de6\u503c\u548c\u53f3\u503c\u3002 2. \u9700\u8981 std::forward (arg) \u6765\u4fdd\u6301\u539f\u6709\u7684\u5de6\u503c/\u53f3\u503c\u7279\u6027\u3002 3. \u7528\u4e8e\u6cdb\u578b\u7f16\u7a0b\uff0c\u4f7f\u51fd\u6570\u53ef\u4ee5\u63a5\u53d7\u5404\u79cd\u7c7b\u578b\u7684\u53c2\u6570\u3002 template < typename T > void wrapper ( T && arg ) { // T&& \u662f\u4e07\u80fd\u5f15\u7528 foo ( std :: forward < T > ( arg )); // \u4fdd\u6301\u5de6\u503c\u6216\u53f3\u503c\u7684\u7279\u6027 } int main () { int a = 10 ; wrapper ( a ); // \u4f20\u5165\u5de6\u503c\uff0cT = int& wrapper ( 20 ); // \u4f20\u5165\u53f3\u503c\uff0cT = int } template < typename T , typename ... Args > void emplace_back ( Args && ... args ) { data . push_back ( T ( std :: forward < Args > ( args )...)); } \u76f4\u63a5\u5728\u5bb9\u5668\u4e2d\u6784\u9020\u5bf9\u8c61\uff0c\u907f\u514d\u4e86\u62f7\u8d1d\u548c\u79fb\u52a8\u64cd\u4f5c\u3002 vec.emplace_back(1, 2.5, \"Hello\"); // \u76f4\u63a5\u5728\u5bb9\u5668\u4e2d\u6784\u9020\uff0c\u907f\u514d\u4e34\u65f6\u5bf9\u8c61 \u5728\u9ad8\u6027\u80fd\u5e94\u7528\u4e2d\uff0c\u4f7f\u7528 emplace_back \u53ef\u4ee5\u663e\u8457\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u6548\u7387 #include <iostream> template < typename T > class SharedPtr { private : T * ptr ; int * ref_count ; public : explicit SharedPtr ( T * p = nullptr ) : ptr ( p ), ref_count ( new int ( 1 )) {} ~ SharedPtr () { if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; } } SharedPtr ( const SharedPtr & other ) noexcept : ptr ( other . ptr ), ref_count ( other . ref_count ) { ++ ( * ref_count ); } SharedPtr & operator = ( const SharedPtr & other ) noexcept { if ( this != & other ) { if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; } ptr = other . ptr ; ref_count = other . ref_count ; ++ ( * ref_count ); } return * this ; } T * get () const { return ptr ; } T * operator -> () const { return ptr ; } T & operator * () const { return * ptr ; } int use_count () const { return * ref_count ; } }; struct Test { void show () { std :: cout << \"SharedPtr works! \\n \" ; } }; int main () { SharedPtr < Test > p1 ( new Test ()); SharedPtr < Test > p2 = p1 ; p2 -> show (); std :: cout << \"Reference count: \" << p1 . use_count () << std :: endl ; return 0 ; } #include <iostream> template < typename T > class SharedPtr ; // \u524d\u5411\u58f0\u660e template < typename T > class WeakPtr { private : T * ptr ; int * ref_count ; int * weak_count ; // \u989d\u5916\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u7528\u6765\u7ba1\u7406 weak_ptr \u7684\u6570\u91cf public : WeakPtr () : ptr ( nullptr ), ref_count ( nullptr ), weak_count ( nullptr ) {} WeakPtr ( const SharedPtr < T >& shared ) : ptr ( shared . ptr ), ref_count ( shared . ref_count ), weak_count ( shared . weak_count ) { if ( weak_count ) { ++ ( * weak_count ); // \u589e\u52a0 weak_ptr \u6570\u91cf } } ~ WeakPtr () { if ( weak_count && -- ( * weak_count ) == 0 ) { delete weak_count ; } } // lock() \u65b9\u6cd5\uff1a\u8fd4\u56de\u4e00\u4e2a shared_ptr\uff0c\u5982\u679c\u8d44\u6e90\u5df2\u7ecf\u88ab\u9500\u6bc1\uff0c\u8fd4\u56de\u7a7a\u7684 shared_ptr SharedPtr < T > lock () const ; // \u83b7\u53d6\u5bf9\u8c61\u662f\u5426\u6709\u6548 bool expired () const { return * ref_count == 0 ; } }; template < typename T > class SharedPtr { private : T * ptr ; int * ref_count ; // \u5f15\u7528\u8ba1\u6570 int * weak_count ; // weak_ptr \u5f15\u7528\u8ba1\u6570 public : explicit SharedPtr ( T * p = nullptr ) : ptr ( p ), ref_count ( new int ( 1 )), weak_count ( new int ( 0 )) {} ~ SharedPtr () { if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; if ( * weak_count == 0 ) { delete weak_count ; } } } SharedPtr ( const SharedPtr & other ) noexcept : ptr ( other . ptr ), ref_count ( other . ref_count ), weak_count ( other . weak_count ) { ++ ( * ref_count ); } SharedPtr & operator = ( const SharedPtr & other ) noexcept { if ( this != & other ) { if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; if ( * weak_count == 0 ) { delete weak_count ; } } ptr = other . ptr ; ref_count = other . ref_count ; weak_count = other . weak_count ; ++ ( * ref_count ); } return * this ; } SharedPtr ( SharedPtr && other ) noexcept : ptr ( other . ptr ), ref_count ( other . ref_count ), weak_count ( other . weak_count ) { other . ptr = nullptr ; other . ref_count = nullptr ; other . weak_count = nullptr ; } SharedPtr & operator = ( SharedPtr && other ) noexcept { if ( this != & other ) { if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; if ( * weak_count == 0 ) { delete weak_count ; } } ptr = other . ptr ; ref_count = other . ref_count ; weak_count = other . weak_count ; other . ptr = nullptr ; other . ref_count = nullptr ; other . weak_count = nullptr ; } return * this ; } friend class WeakPtr < T > ; // \u8fd4\u56de\u539f\u59cb\u6307\u9488 T * get () const { return ptr ; } int use_count () const { return * ref_count ; } }; // weak_ptr::lock \u5b9e\u73b0 template < typename T > SharedPtr < T > WeakPtr < T >:: lock () const { if ( * ref_count > 0 ) { return SharedPtr < T > ( * this ); // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 shared_ptr } else { return SharedPtr < T > (); // \u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684 shared_ptr } } struct Test { void show () { std :: cout << \"Test class works! \\n \" ; } }; int main () { SharedPtr < Test > sp1 ( new Test ()); { WeakPtr < Test > wp1 ( sp1 ); // wp1 \u89c2\u5bdf sp1 if ( ! wp1 . expired ()) { SharedPtr < Test > sp2 = wp1 . lock (); // \u4ece weak_ptr \u83b7\u53d6 shared_ptr sp2 -> show (); // \u8f93\u51fa\uff1aTest class works! } } // wp1 \u79bb\u5f00\u4f5c\u7528\u57df\uff0c\u5f31\u5f15\u7528\u4e0d\u518d\u5f15\u7528\u8d44\u6e90 if ( sp1 . use_count () == 0 ) { std :: cout << \"sp1 has no references left.\" << std :: endl ; } return 0 ; }","title":"Smart point"},{"location":"cc/smart_point/#_1","text":"#include <iostream> #include <cstring> #include <atomic> // ------------------- UniquePtr \u5b9e\u73b0 ------------------- template < typename T > class UniquePtr { private : T * ptr ; public : explicit UniquePtr ( T * p = nullptr ) : ptr ( p ) {} ~ UniquePtr () { delete ptr ; } UniquePtr ( const UniquePtr & ) = delete ; UniquePtr & operator = ( const UniquePtr & ) = delete ; UniquePtr ( UniquePtr && other ) noexcept : ptr ( other . ptr ) { other . ptr = nullptr ; } UniquePtr & operator = ( UniquePtr && other ) noexcept { if ( this != & other ) { delete ptr ; ptr = other . ptr ; other . ptr = nullptr ; } return * this ; } T * operator -> () const { return ptr ; } T & operator * () const { return * ptr ; } T * get () const { return ptr ; } }; // ------------------- SharedPtr \u5b9e\u73b0 ------------------- template < typename T > class SharedPtr { private : T * ptr ; std :: atomic < int >* count ; public : explicit SharedPtr ( T * p = nullptr ) : ptr ( p ), count ( new std :: atomic < int > ( p ? 1 : 0 )) {} ~ SharedPtr () { if ( -- ( * count ) == 0 ) { delete ptr ; delete count ; } } SharedPtr ( const SharedPtr & other ) : ptr ( other . ptr ), count ( other . count ) { ++ ( * count ); } SharedPtr & operator = ( const SharedPtr & other ) { if ( this != & other ) { if ( -- ( * count ) == 0 ) { delete ptr ; delete count ; } ptr = other . ptr ; count = other . count ; ++ ( * count ); } return * this ; } T * operator -> () const { return ptr ; } T & operator * () const { return * ptr ; } T * get () const { return ptr ; } }; // ------------------- MyString \u5b9e\u73b0 ------------------- class MyString { private : char * data ; size_t length ; public : MyString ( const char * str = \"\" ) { length = std :: strlen ( str ); data = new char [ length + 1 ]; std :: strcpy ( data , str ); } MyString ( const MyString & other ) { length = other . length ; data = new char [ length + 1 ]; std :: strcpy ( data , other . data ); } MyString & operator = ( const MyString & other ) { if ( this != & other ) { delete [] data ; length = other . length ; data = new char [ length + 1 ]; std :: strcpy ( data , other . data ); } return * this ; } MyString ( MyString && other ) noexcept : data ( other . data ), length ( other . length ) { other . data = nullptr ; other . length = 0 ; } MyString & operator = ( MyString && other ) noexcept { if ( this != & other ) { delete [] data ; data = other . data ; length = other . length ; other . data = nullptr ; other . length = 0 ; } return * this ; } ~ MyString () { delete [] data ; } const char * c_str () const { return data ; } }; // ------------------- \u6d4b\u8bd5\u4ee3\u7801 ------------------- int main () { UniquePtr < int > uPtr ( new int ( 10 )); std :: cout << \"UniquePtr: \" << * uPtr << std :: endl ; SharedPtr < int > sPtr1 ( new int ( 20 )); SharedPtr < int > sPtr2 = sPtr1 ; std :: cout << \"SharedPtr: \" << * sPtr1 << std :: endl ; MyString str1 ( \"Hello, World!\" ); MyString str2 = str1 ; std :: cout << \"MyString: \" << str2 . c_str () << std :: endl ; return 0 ; } template < typename T > constexpr typename std :: remove_reference < T >:: type && move ( T && arg ) noexcept { return static_cast < typename std :: remove_reference < T >:: type &&> ( arg ); } std::move \u65e0\u6761\u4ef6 \u8f6c\u6362\u4e3a\u53f3\u503c\u3002 std::forward \u6709\u6761\u4ef6 \u8f6c\u6362\u4e3a\u53f3\u503c\uff0c\u4ec5\u7528\u4e8e \u5b8c\u7f8e\u8f6c\u53d1\uff08\u914d\u5408\u6a21\u677f\uff09\u3002 template < typename T > void foo ( T && arg ) { T new_value = std :: forward < T > ( arg ); // \u4fdd\u6301\u5de6\u503c/\u53f3\u503c\u5c5e\u6027 }","title":"\u667a\u80fd\u6307\u9488"},{"location":"cc/smart_point/#_2","text":"\u7ed1\u5b9a\u53f3\u503c\uff08\u6ca1\u6709\u540d\u5b57\u7684\u4e34\u65f6\u5bf9\u8c61\uff09 \u7684\u5f15\u7528\uff0c\u5141\u8bb8 \u79fb\u52a8\u8bed\u4e49\u3002 1. \u4e13\u95e8\u7528\u4e8e\u53f3\u503c\uff08int&& \u53ea\u80fd\u7ed1\u5b9a 10\uff0c\u4e0d\u80fd\u7ed1\u5b9a int a;\uff09\u3002 2. \u901a\u5e38\u7528\u4e8e\u79fb\u52a8\u6784\u9020\u3001\u79fb\u52a8\u8d4b\u503c\uff0c\u907f\u514d\u62f7\u8d1d\uff0c\u63d0\u9ad8\u6027\u80fd\u3002 void foo ( int && x ) { // \u53f3\u503c\u5f15\u7528 std :: cout << x << std :: endl ; } int main () { int a = 10 ; foo ( 10 ); // \u2705 \u53f3\u503c OK foo ( a ); // \u274c \u5de6\u503c\u4e0d\u80fd\u4f20\u7ed9 int&& } \u5f53 T&& \u51fa\u73b0\u5728\u51fd\u6570\u6a21\u677f\u4e2d\uff0c\u5e76\u4e14 T \u662f\u6a21\u677f\u53c2\u6570\uff0c\u5b83\u53d8\u6210 \u4e07\u80fd\u5f15\u7528\uff0c\u53ef\u4ee5\u63a5\u53d7\u5de6\u503c\u548c\u53f3\u503c\u3002 1. T&& \u5728\u6a21\u677f\u53c2\u6570\u4e2d\u65f6\u662f\u4e07\u80fd\u5f15\u7528\uff0c\u53ef\u4ee5\u63a5\u53d7\u5de6\u503c\u548c\u53f3\u503c\u3002 2. \u9700\u8981 std::forward (arg) \u6765\u4fdd\u6301\u539f\u6709\u7684\u5de6\u503c/\u53f3\u503c\u7279\u6027\u3002 3. \u7528\u4e8e\u6cdb\u578b\u7f16\u7a0b\uff0c\u4f7f\u51fd\u6570\u53ef\u4ee5\u63a5\u53d7\u5404\u79cd\u7c7b\u578b\u7684\u53c2\u6570\u3002 template < typename T > void wrapper ( T && arg ) { // T&& \u662f\u4e07\u80fd\u5f15\u7528 foo ( std :: forward < T > ( arg )); // \u4fdd\u6301\u5de6\u503c\u6216\u53f3\u503c\u7684\u7279\u6027 } int main () { int a = 10 ; wrapper ( a ); // \u4f20\u5165\u5de6\u503c\uff0cT = int& wrapper ( 20 ); // \u4f20\u5165\u53f3\u503c\uff0cT = int } template < typename T , typename ... Args > void emplace_back ( Args && ... args ) { data . push_back ( T ( std :: forward < Args > ( args )...)); } \u76f4\u63a5\u5728\u5bb9\u5668\u4e2d\u6784\u9020\u5bf9\u8c61\uff0c\u907f\u514d\u4e86\u62f7\u8d1d\u548c\u79fb\u52a8\u64cd\u4f5c\u3002 vec.emplace_back(1, 2.5, \"Hello\"); // \u76f4\u63a5\u5728\u5bb9\u5668\u4e2d\u6784\u9020\uff0c\u907f\u514d\u4e34\u65f6\u5bf9\u8c61 \u5728\u9ad8\u6027\u80fd\u5e94\u7528\u4e2d\uff0c\u4f7f\u7528 emplace_back \u53ef\u4ee5\u663e\u8457\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u6548\u7387 #include <iostream> template < typename T > class SharedPtr { private : T * ptr ; int * ref_count ; public : explicit SharedPtr ( T * p = nullptr ) : ptr ( p ), ref_count ( new int ( 1 )) {} ~ SharedPtr () { if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; } } SharedPtr ( const SharedPtr & other ) noexcept : ptr ( other . ptr ), ref_count ( other . ref_count ) { ++ ( * ref_count ); } SharedPtr & operator = ( const SharedPtr & other ) noexcept { if ( this != & other ) { if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; } ptr = other . ptr ; ref_count = other . ref_count ; ++ ( * ref_count ); } return * this ; } T * get () const { return ptr ; } T * operator -> () const { return ptr ; } T & operator * () const { return * ptr ; } int use_count () const { return * ref_count ; } }; struct Test { void show () { std :: cout << \"SharedPtr works! \\n \" ; } }; int main () { SharedPtr < Test > p1 ( new Test ()); SharedPtr < Test > p2 = p1 ; p2 -> show (); std :: cout << \"Reference count: \" << p1 . use_count () << std :: endl ; return 0 ; } #include <iostream> template < typename T > class SharedPtr ; // \u524d\u5411\u58f0\u660e template < typename T > class WeakPtr { private : T * ptr ; int * ref_count ; int * weak_count ; // \u989d\u5916\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u7528\u6765\u7ba1\u7406 weak_ptr \u7684\u6570\u91cf public : WeakPtr () : ptr ( nullptr ), ref_count ( nullptr ), weak_count ( nullptr ) {} WeakPtr ( const SharedPtr < T >& shared ) : ptr ( shared . ptr ), ref_count ( shared . ref_count ), weak_count ( shared . weak_count ) { if ( weak_count ) { ++ ( * weak_count ); // \u589e\u52a0 weak_ptr \u6570\u91cf } } ~ WeakPtr () { if ( weak_count && -- ( * weak_count ) == 0 ) { delete weak_count ; } } // lock() \u65b9\u6cd5\uff1a\u8fd4\u56de\u4e00\u4e2a shared_ptr\uff0c\u5982\u679c\u8d44\u6e90\u5df2\u7ecf\u88ab\u9500\u6bc1\uff0c\u8fd4\u56de\u7a7a\u7684 shared_ptr SharedPtr < T > lock () const ; // \u83b7\u53d6\u5bf9\u8c61\u662f\u5426\u6709\u6548 bool expired () const { return * ref_count == 0 ; } }; template < typename T > class SharedPtr { private : T * ptr ; int * ref_count ; // \u5f15\u7528\u8ba1\u6570 int * weak_count ; // weak_ptr \u5f15\u7528\u8ba1\u6570 public : explicit SharedPtr ( T * p = nullptr ) : ptr ( p ), ref_count ( new int ( 1 )), weak_count ( new int ( 0 )) {} ~ SharedPtr () { if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; if ( * weak_count == 0 ) { delete weak_count ; } } } SharedPtr ( const SharedPtr & other ) noexcept : ptr ( other . ptr ), ref_count ( other . ref_count ), weak_count ( other . weak_count ) { ++ ( * ref_count ); } SharedPtr & operator = ( const SharedPtr & other ) noexcept { if ( this != & other ) { if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; if ( * weak_count == 0 ) { delete weak_count ; } } ptr = other . ptr ; ref_count = other . ref_count ; weak_count = other . weak_count ; ++ ( * ref_count ); } return * this ; } SharedPtr ( SharedPtr && other ) noexcept : ptr ( other . ptr ), ref_count ( other . ref_count ), weak_count ( other . weak_count ) { other . ptr = nullptr ; other . ref_count = nullptr ; other . weak_count = nullptr ; } SharedPtr & operator = ( SharedPtr && other ) noexcept { if ( this != & other ) { if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; if ( * weak_count == 0 ) { delete weak_count ; } } ptr = other . ptr ; ref_count = other . ref_count ; weak_count = other . weak_count ; other . ptr = nullptr ; other . ref_count = nullptr ; other . weak_count = nullptr ; } return * this ; } friend class WeakPtr < T > ; // \u8fd4\u56de\u539f\u59cb\u6307\u9488 T * get () const { return ptr ; } int use_count () const { return * ref_count ; } }; // weak_ptr::lock \u5b9e\u73b0 template < typename T > SharedPtr < T > WeakPtr < T >:: lock () const { if ( * ref_count > 0 ) { return SharedPtr < T > ( * this ); // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 shared_ptr } else { return SharedPtr < T > (); // \u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684 shared_ptr } } struct Test { void show () { std :: cout << \"Test class works! \\n \" ; } }; int main () { SharedPtr < Test > sp1 ( new Test ()); { WeakPtr < Test > wp1 ( sp1 ); // wp1 \u89c2\u5bdf sp1 if ( ! wp1 . expired ()) { SharedPtr < Test > sp2 = wp1 . lock (); // \u4ece weak_ptr \u83b7\u53d6 shared_ptr sp2 -> show (); // \u8f93\u51fa\uff1aTest class works! } } // wp1 \u79bb\u5f00\u4f5c\u7528\u57df\uff0c\u5f31\u5f15\u7528\u4e0d\u518d\u5f15\u7528\u8d44\u6e90 if ( sp1 . use_count () == 0 ) { std :: cout << \"sp1 has no references left.\" << std :: endl ; } return 0 ; }","title":"\u4e07\u80fd\u5f15\u7528\u548c\u53f3\u503c\u5f15\u7528"},{"location":"cc/type_erasure/","text":"std :: any a ; // a is empty a = 4.3 ; // a has value 4.3 of type double a = 42 ; // a has value 42 of type int a = std :: string { \"hi\" }; // a has value \"hi\" of type std::string if ( a . type () == typeid ( std :: string )) { std :: string s = std :: any_cast < std :: string > ( a ); UseString ( s ); } else if ( a . type () == typeid ( int )) { UseInt ( std :: any_cast < int > ( a )); } std::any\u53ef\u4ee5\u7528\u6765\u8868\u793a\u4efb\u4f55\u53ef\u62f7\u8d1d\u6784\u9020\u7684\u5355\u503c\u7c7b\u578b,\u5bf9\u7c7b\u578b\u7684\u6570\u636e\u8fdb\u884c\u4e86\u62bd\u8c61\u3002\u9664\u4e86\u5bf9\u7c7b\u578b\u7684\u6570\u636e\u8fdb\u884c\u62bd\u8c61\u5916\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u7c7b\u578b\u7684\u884c\u4e3a\u8fdb\u884c\u62bd\u8c61\uff0c\u4f8b\u5982std::function\u53ef\u4ee5\u7528\u6765\u8868\u793a\u6240\u6709\u7684\u53ef\u88ab\u8c03\u7528\u7684\u5bf9\u8c61\uff1a\u666e\u901a\u51fd\u6570\u3001\u6210\u5458\u51fd\u6570\u3001\u51fd\u6570\u5bf9\u8c61\u3001lambda\u8868\u8fbe\u5f0f\u3002 \u5177\u4f53\u5b9e\u73b0\u662f: class Any { // Holds either pointer to a heap object or the contained object itself. union Storage { constexpr Storage () : ptr { nullptr } {} // Prevent trivial copies of this type, buffer might hold a non-POD. Storage ( const Storage & ) = delete ; Storage & operator = ( const Storage & ) = delete ; void * ptr ; std :: aligned_storage_t < sizeof ( ptr ), alignof ( void * ) > buffer ; }; Storage storage_ ; }; \u8fd9\u4e2a\u65b9\u6cd5\u7684\u4f18\u70b9\u662f\uff1a 1. \u5c0f\u5bf9\u8c61\u4f18\u5316\uff1a\u76f4\u63a5\u5b58\u50a8\u5728 buffer \u4e2d\uff08\u5f53\u5bf9\u8c61\u5927\u5c0f\u4e0d\u8d85\u8fc7\u6307\u9488\u5927\u5c0f\u65f6\uff09 2. \u5927\u5bf9\u8c61\u5b58\u50a8\uff1a\u4f7f\u7528 ptr \u6307\u5411\u5806\u4e0a\u5206\u914d\u7684\u5185\u5b58 class Any { union Storage { /*...*/ }; // \u7528\u4e8e\u5b58\u50a8\u7c7b\u578b\u4fe1\u606f const std :: type_info * type_info_ ; // \u7c7b\u578b\u64e6\u9664\u7684\u5173\u952e\uff1a\u51fd\u6570\u6307\u9488\u8868 struct VTable { void ( * destroy )( Storage & ); void ( * copy )( Storage & , const Storage & ); void ( * move )( Storage & , Storage & ); const std :: type_info & ( * type )(); }; const VTable * vtable_ ; Storage storage_ ; }; \u5de5\u4f5c\u539f\u7406 - \u5f53\u5b58\u50a8\u4e00\u4e2a\u65b0\u503c\u65f6\uff1a \u6839\u636e\u503c\u7684\u5927\u5c0f\u9009\u62e9\u5b58\u50a8\u7b56\u7565 \u521b\u5efa\u5bf9\u5e94\u7c7b\u578b\u7684 VTable \u4fdd\u5b58\u7c7b\u578b\u4fe1\u606f \u5728 storage_ \u4e2d\u5b58\u50a8\u6570\u636e \u7c7b\u578b\u64e6\u9664\u7684\u6838\u5fc3\u5728\u4e8e\uff1a \u7075\u6d3b\u7684\u5b58\u50a8\u7b56\u7565\uff08union\uff09 \u865a\u51fd\u6570\u8868\uff08VTable\uff09\u8bb0\u5f55\u7c7b\u578b\u76f8\u5173\u7684\u64cd\u4f5c \u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff08type_info\uff09 \u65b0\u7684\u7406\u89e3 \u00b6 template < std :: size_t Len , std :: size_t Align = alignof ( std :: max_align_t ) > struct aligned_storage { using type = typename std :: aligned_storage < Len , Align >:: type ; }; #include <iostream> #include <type_traits> class Any { private : union Storage { void * ptr ; std :: aligned_storage_t < sizeof ( void * ), alignof ( void * ) > buffer ; constexpr Storage () : ptr ( nullptr ) {} ~ Storage () {} }; Storage storage_ ; size_t size_ ; void ( * destroyer_ )( void * ); // \u7528\u4e8e\u9500\u6bc1\u5b58\u50a8\u7684\u5bf9\u8c61 public : // \u6784\u9020\u51fd\u6570 template < typename T > Any ( T && value ) { size_ = sizeof ( T ); destroyer_ = []( void * ptr ) { delete static_cast < T *> ( ptr ); }; // \u4f7f\u7528 aligned_storage_t \u5b58\u50a8\u5bf9\u8c61 new ( & storage_ . buffer ) T ( std :: forward < T > ( value )); } // \u79fb\u52a8\u6784\u9020\u51fd\u6570 Any ( Any && other ) noexcept { size_ = other . size_ ; destroyer_ = other . destroyer_ ; new ( & storage_ . buffer ) void * ( std :: move ( other . storage_ . ptr )); other . size_ = 0 ; other . destroyer_ = nullptr ; } // \u6790\u6784\u51fd\u6570 ~ Any () { if ( destroyer_ ) { destroyer_ ( & storage_ . buffer ); } } // \u83b7\u53d6\u5b58\u50a8\u5bf9\u8c61 template < typename T > T & get () { return * reinterpret_cast < T *> ( & storage_ . buffer ); } }; int main () { Any a1 = 42 ; // \u5b58\u50a8\u4e00\u4e2a int Any a2 = std :: string ( \"Hello World\" ); // \u5b58\u50a8\u4e00\u4e2a string std :: cout << \"Stored int: \" << a1 . get < int > () << std :: endl ; std :: cout << \"Stored string: \" << a2 . get < std :: string > () << std :: endl ; return 0 ; } \u6700\u540e\u7528\u7684\u65f6\u5019 \u518d\u53bb\u5b8c\u5168\u7406\u89e3\u5427\u3002","title":"Type erasure"},{"location":"cc/type_erasure/#_1","text":"template < std :: size_t Len , std :: size_t Align = alignof ( std :: max_align_t ) > struct aligned_storage { using type = typename std :: aligned_storage < Len , Align >:: type ; }; #include <iostream> #include <type_traits> class Any { private : union Storage { void * ptr ; std :: aligned_storage_t < sizeof ( void * ), alignof ( void * ) > buffer ; constexpr Storage () : ptr ( nullptr ) {} ~ Storage () {} }; Storage storage_ ; size_t size_ ; void ( * destroyer_ )( void * ); // \u7528\u4e8e\u9500\u6bc1\u5b58\u50a8\u7684\u5bf9\u8c61 public : // \u6784\u9020\u51fd\u6570 template < typename T > Any ( T && value ) { size_ = sizeof ( T ); destroyer_ = []( void * ptr ) { delete static_cast < T *> ( ptr ); }; // \u4f7f\u7528 aligned_storage_t \u5b58\u50a8\u5bf9\u8c61 new ( & storage_ . buffer ) T ( std :: forward < T > ( value )); } // \u79fb\u52a8\u6784\u9020\u51fd\u6570 Any ( Any && other ) noexcept { size_ = other . size_ ; destroyer_ = other . destroyer_ ; new ( & storage_ . buffer ) void * ( std :: move ( other . storage_ . ptr )); other . size_ = 0 ; other . destroyer_ = nullptr ; } // \u6790\u6784\u51fd\u6570 ~ Any () { if ( destroyer_ ) { destroyer_ ( & storage_ . buffer ); } } // \u83b7\u53d6\u5b58\u50a8\u5bf9\u8c61 template < typename T > T & get () { return * reinterpret_cast < T *> ( & storage_ . buffer ); } }; int main () { Any a1 = 42 ; // \u5b58\u50a8\u4e00\u4e2a int Any a2 = std :: string ( \"Hello World\" ); // \u5b58\u50a8\u4e00\u4e2a string std :: cout << \"Stored int: \" << a1 . get < int > () << std :: endl ; std :: cout << \"Stored string: \" << a2 . get < std :: string > () << std :: endl ; return 0 ; } \u6700\u540e\u7528\u7684\u65f6\u5019 \u518d\u53bb\u5b8c\u5168\u7406\u89e3\u5427\u3002","title":"\u65b0\u7684\u7406\u89e3"},{"location":"cc/xapian/","text":"Xapian-delve \u4f7f\u7528\u6307\u5357\u53ca\u7d22\u5f15\u6587\u4ef6\u89e3\u6790 xapian-delve \u5de5\u5177\u4f7f\u7528 \u57fa\u672c\u7528\u6cd5 \u5e38\u7528\u9009\u9879 \u4f7f\u7528\u793a\u4f8b Xapian \u7d22\u5f15\u6587\u4ef6\u89e3\u6790 \u7d22\u5f15\u6587\u4ef6\u7ec4\u6210 \u7d22\u5f15\u6587\u4ef6\u7684\u610f\u4e49 \u7d22\u5f15\u6587\u4ef6\u67e5\u770b\u65b9\u6cd5 \u6ce8\u610f\u4e8b\u9879 xapian \u641c\u7d22\u5f15\u64ce\u7684\u6838\u5fc3\u539f\u7406 \u6d41\u7a0b\u56fe Xapian-delve \u4f7f\u7528\u6307\u5357\u53ca\u7d22\u5f15\u6587\u4ef6\u89e3\u6790 \u00b6 xapian-delve \u5de5\u5177\u4f7f\u7528 \u00b6 xapian-delve \u662f Xapian \u81ea\u5e26\u7684\u4e00\u4e2a\u7528\u4e8e\u68c0\u67e5\u7d22\u5f15\u6587\u4ef6\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u53ef\u4ee5\u7528\u6765\u67e5\u770b\u6570\u636e\u5e93\u7684\u7ed3\u6784\u548c\u5185\u5bb9\u3002 \u57fa\u672c\u7528\u6cd5 \u00b6 xapian-delve [ \u9009\u9879 ] <\u6570\u636e\u5e93\u8def\u5f84> \u5e38\u7528\u9009\u9879 \u00b6 -1 \uff1a\u53ea\u663e\u793a\u4e00\u7ea7\u4fe1\u606f\uff08\u7b80\u8981\u6982\u8ff0\uff09 -a \uff1a\u663e\u793a\u6240\u6709\u4fe1\u606f\uff08\u8be6\u7ec6\u8f93\u51fa\uff09 -r \uff1a\u9012\u5f52\u663e\u793a\u672f\u8bed\u5217\u8868 -t \uff1a\u663e\u793a\u672f\u8bed\u5217\u8868 -d \uff1a\u663e\u793a\u6587\u6863\u6570\u636e -v \uff1a\u663e\u793a\u7248\u672c\u4fe1\u606f \u4f7f\u7528\u793a\u4f8b \u00b6 \u67e5\u770b\u6570\u636e\u5e93\u57fa\u672c\u4fe1\u606f\uff1a xapian-delve -1 /path/to/database \u67e5\u770b\u8be6\u7ec6\u6570\u636e\u5e93\u4fe1\u606f\uff1a xapian-delve -a /path/to/database \u67e5\u770b\u7279\u5b9a\u6587\u6863\u5185\u5bb9\uff08\u5982\u6587\u6863ID\u4e3a123\uff09\uff1a xapian-delve -d 123 /path/to/database Xapian \u7d22\u5f15\u6587\u4ef6\u89e3\u6790 \u00b6 \u7d22\u5f15\u6587\u4ef6\u7ec4\u6210 \u00b6 Xapian \u6570\u636e\u5e93\u901a\u5e38\u7531\u591a\u4e2a\u6587\u4ef6\u7ec4\u6210\uff0c\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e2d\uff0c\u4e3b\u8981\u6587\u4ef6\u5305\u62ec\uff1a iamtermlist.DB \uff1a\u672f\u8bed\u5217\u8868\u7d22\u5f15 positionlist.DB \uff1a\u4f4d\u7f6e\u4fe1\u606f\u5b58\u50a8 postlist.DB \uff1a\u5012\u6392\u5217\u8868\u5b58\u50a8 record.DB \uff1a\u539f\u59cb\u6587\u6863\u6570\u636e\u5b58\u50a8 docdata.DB \uff1a\u6587\u6863\u5143\u6570\u636e\u5b58\u50a8 spelling.DB \uff1a\u62fc\u5199\u6821\u6b63\u6570\u636e synonym.DB \uff1a\u540c\u4e49\u8bcd\u6570\u636e flintlock \uff1a\u9501\u6587\u4ef6\uff08\u4e34\u65f6\uff09 \u7d22\u5f15\u6587\u4ef6\u7684\u610f\u4e49 \u00b6 \u5012\u6392\u7d22\u5f15\u7ed3\u6784 \uff1a postlist.DB \u5b58\u50a8\u672f\u8bed\u5230\u6587\u6863\u7684\u6620\u5c04\uff08\u5012\u6392\u5217\u8868\uff09 termlist.DB \u5b58\u50a8\u6587\u6863\u5230\u672f\u8bed\u7684\u6620\u5c04\uff08\u6b63\u6392\u5217\u8868\uff09 \u4f4d\u7f6e\u4fe1\u606f \uff1a positionlist.DB \u8bb0\u5f55\u672f\u8bed\u5728\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u7528\u4e8e\u77ed\u8bed\u67e5\u8be2\u548c\u90bb\u8fd1\u67e5\u8be2 \u6587\u6863\u6570\u636e \uff1a record.DB \u5b58\u50a8\u539f\u59cb\u6587\u6863\u5185\u5bb9 docdata.DB \u5b58\u50a8\u6587\u6863\u7684\u5143\u6570\u636e \u8f85\u52a9\u529f\u80fd \uff1a spelling.DB \u652f\u6301\u62fc\u5199\u6821\u6b63 synonym.DB \u652f\u6301\u540c\u4e49\u8bcd\u6269\u5c55 \u7d22\u5f15\u6587\u4ef6\u67e5\u770b\u65b9\u6cd5 \u00b6 \u4f7f\u7528 xapian-delve \uff08\u5982\u4e0a\u6240\u8ff0\uff09 \u4f7f\u7528\u7f16\u7a0b\u63a5\u53e3\u67e5\u770b \uff08Python\u793a\u4f8b\uff09\uff1a import xapian # \u6253\u5f00\u6570\u636e\u5e93 db = xapian . Database ( \"/path/to/database\" ) # \u83b7\u53d6\u6587\u6863\u6570\u91cf print ( db . get_doccount ()) # \u904d\u5386\u6240\u6709\u6587\u6863 for docid in range ( 1 , db . get_lastdocid () + 1 ): try : doc = db . get_document ( docid ) print ( f \"Document { docid } :\" ) print ( doc . get_data ()) except : pass \u4f7f\u7528\u5176\u4ed6\u5de5\u5177 \uff1a xapian-metadata \uff1a\u67e5\u770b\u6570\u636e\u5e93\u5143\u6570\u636e xapian-pos \uff1a\u67e5\u770b\u4f4d\u7f6e\u4fe1\u606f xapian-replicate \uff1a\u590d\u5236\u6570\u636e\u5e93\u5de5\u5177 \u6ce8\u610f\u4e8b\u9879 \u00b6 \u4e0d\u8981\u624b\u52a8\u4fee\u6539\u7d22\u5f15\u6587\u4ef6 \uff1a\u8fd9\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u5e93\u635f\u574f \u9501\u6587\u4ef6 \uff1a\u5f53 Xapian \u6b63\u5728\u5199\u5165\u65f6\u4f1a\u6709 flintlock \u6587\u4ef6\uff0c\u4e0d\u8981\u624b\u52a8\u5220\u9664 \u7248\u672c\u517c\u5bb9\u6027 \uff1a\u4e0d\u540c\u7248\u672c\u7684 Xapian \u53ef\u80fd\u4f7f\u7528\u4e0d\u540c\u7684\u6587\u4ef6\u683c\u5f0f \u5907\u4efd \uff1a\u64cd\u4f5c\u524d\u5efa\u8bae\u5907\u4efd\u6570\u636e\u5e93\u6587\u4ef6 \u901a\u8fc7\u4ee5\u4e0a\u5de5\u5177\u548c\u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3 Xapian \u7d22\u5f15\u7684\u5185\u90e8\u7ed3\u6784\u548c\u5185\u5bb9\uff0c\u8fd9\u5bf9\u4e8e\u8c03\u8bd5\u548c\u4f18\u5316\u641c\u7d22\u5e94\u7528\u975e\u5e38\u6709\u5e2e\u52a9\u3002 xapian \u641c\u7d22\u5f15\u64ce\u7684\u6838\u5fc3\u539f\u7406 \u00b6 \u57fa\u672c\u539f\u7406 Xapian \u662f\u4e00\u4e2a\u6982\u7387\u578b\u4fe1\u606f\u68c0\u7d22\uff08Probabilistic Information Retrieval\uff09\u7cfb\u7edf \u4f7f\u7528 BM25\uff08Best Match 25\uff09\u4f5c\u4e3a\u9ed8\u8ba4\u7684\u6392\u5e8f\u7b97\u6cd5 \u652f\u6301\u5e03\u5c14\u68c0\u7d22\u3001\u77ed\u8bed\u68c0\u7d22\u548c\u8fd1\u4f3c\u68c0\u7d22\u7b49\u591a\u79cd\u68c0\u7d22\u65b9\u5f0f \u6838\u5fc3\u6570\u636e\u7ed3\u6784 \u5012\u6392\u7d22\u5f15\uff08Inverted Index\uff09\uff1a \u8bcd\u9879\uff08Term\uff09\u5230\u6587\u6863ID\u7684\u6620\u5c04 \u4f7f\u7528B+\u6811\u5b58\u50a8\u8bcd\u9879\u5b57\u5178 \u652f\u6301\u524d\u7f00\u538b\u7f29\u4ee5\u8282\u7701\u7a7a\u95f4 \u6587\u6863\u6570\u636e\uff1a \u6587\u6863ID\u5230\u5b9e\u9645\u5185\u5bb9\u7684\u6620\u5c04 \u652f\u6301\u5b58\u50a8\u539f\u59cb\u6587\u6863\u6216\u6587\u6863\u5143\u6570\u636e \u4f7f\u7528 value slots \u5b58\u50a8\u989d\u5916\u7684\u5b57\u6bb5\u6570\u636e \u5b58\u50a8\u65b9\u5f0f - \u91c7\u7528 Glass \u540e\u7aef\u5b58\u50a8\u5f15\u64ce - \u4e3b\u8981\u6587\u4ef6\u7c7b\u578b\uff1a .glass - \u4e3b\u7d22\u5f15\u6587\u4ef6 .baseA - \u6587\u6863\u6570\u636e .position - \u4f4d\u7f6e\u4fe1\u606f .spelling - \u62fc\u5199\u5efa\u8bae\u6570\u636e \u4f7f\u7528\u4e8b\u52a1\u673a\u5236\u786e\u4fdd\u6570\u636e\u4e00\u81f4\u6027 \u652f\u6301\u589e\u91cf\u66f4\u65b0\uff0c\u65e0\u9700\u91cd\u5efa\u6574\u4e2a\u7d22\u5f15 \u5e76\u53d1\u5904\u7406 - \u8bfb\u5199\u9501\u5206\u79bb\uff1a \u591a\u4e2a\u8bfb\u53d6\u64cd\u4f5c\u53ef\u4ee5\u5e76\u53d1\u6267\u884c \u5199\u5165\u64cd\u4f5c\u9700\u8981\u72ec\u5360\u9501 \u6570\u636e\u5e93\u7ea7\u522b\u7684\u9501\u5b9a\u673a\u5236\uff1a Database \u7c7b\u7528\u4e8e\u53ea\u8bfb\u64cd\u4f5c WritableDatabase \u7c7b\u7528\u4e8e\u5199\u5165\u64cd\u4f5c # \u8bfb\u53d6\u64cd\u4f5c\u4f7f\u7528 Database xapian_db = Database ( XAPIAN_DB_PATH ) # \u5199\u5165\u64cd\u4f5c\u9700\u8981\u4f7f\u7528 WritableDatabase writable_db = WritableDatabase ( XAPIAN_DB_PATH , DB_CREATE_OR_OPEN ) \u6027\u80fd\u7279\u70b9 - \u7d22\u5f15\u6027\u80fd\uff1a \u5355\u7ebf\u7a0b\u5199\u5165\u901f\u5ea6\u53ef\u8fbe\u6570\u5343\u6587\u6863/\u79d2 \u652f\u6301\u6279\u91cf\u5bfc\u5165\u4f18\u5316 \u67e5\u8be2\u6027\u80fd\uff1a \u4f7f\u7528\u8df3\u8868\uff08Skip Lists\uff09\u4f18\u5316\u5012\u6392\u5217\u8868\u904d\u5386 \u67e5\u8be2\u901f\u5ea6\u4e0e\u7d22\u5f15\u5927\u5c0f\u5448\u5bf9\u6570\u5173\u7cfb \u5185\u5b58\u4f7f\u7528\uff1a \u91c7\u7528\u5185\u5b58\u6620\u5c04\uff08mmap\uff09\u6280\u672f \u652f\u6301\u7f13\u5b58\u63a7\u5236\u548c\u4f18\u5316 \u6269\u5c55\u6027 - \u652f\u6301\u81ea\u5b9a\u4e49\u6743\u91cd\u6a21\u578b - \u53ef\u6269\u5c55\u7684\u5206\u8bcd\u5668\u67b6\u6784 - \u652f\u6301\u540c\u4e49\u8bcd\u3001\u505c\u7528\u8bcd\u7b49\u9ad8\u7ea7\u7279\u6027 - \u652f\u6301\u5206\u5e03\u5f0f\u68c0\u7d22\uff08\u9700\u8981\u989d\u5916\u914d\u7f6e\uff09 \u5728\u60a8\u7684\u9879\u76ee\u4e2d\uff0c\u5efa\u8bae\u8003\u8651\u4ee5\u4e0b\u4f18\u5316\uff1a 1. \u4f7f\u7528\u8fde\u63a5\u6c60\u7ba1\u7406 WritableDatabase \u5b9e\u4f8b 2. \u6279\u91cf\u7d22\u5f15\u65f6\u4f7f\u7528\u4e8b\u52a1\u63d0\u9ad8\u6027\u80fd 3. \u8003\u8651\u6dfb\u52a0\u7f13\u5b58\u5c42\u4f18\u5316\u70ed\u70b9\u67e5\u8be2 4. \u6839\u636e\u5b9e\u9645\u9700\u6c42\u8c03\u6574 BM25 \u53c2\u6570 \u6d41\u7a0b\u56fe \u00b6 graph TD A[Flask Web \u670d\u52a1] --> B[\u641c\u7d22\u529f\u80fd] A --> C[\u76f8\u4f3c\u5ea6\u67e5\u627e\u529f\u80fd] B --> D[Xapian \u641c\u7d22\u5f15\u64ce] B --> E[SQLite \u5143\u6570\u636e\u5e93] C --> F[MinHash \u76f8\u4f3c\u5ea6\u8ba1\u7b97] C --> D C --> E subgraph \u6570\u636e\u5b58\u50a8 D[Xapian \u641c\u7d22\u5f15\u64ce] E[SQLite \u5143\u6570\u636e\u5e93] end subgraph \u8fde\u63a5\u6c60\u7ba1\u7406 G[SQLite \u8fde\u63a5\u6c60] E --> G end subgraph \u540e\u53f0\u4efb\u52a1 H[\u540e\u53f0\u7d22\u5f15\u7ebf\u7a0b] H --> D end subgraph \u6570\u636e\u6a21\u578b I[Document Model] I --> E end graph TD A[SearchApp] --> B[Flask] A --> C[Database Models] A --> D[Services] A --> E[Config] A --> F[Xapian] A --> G[Logger] C --> |Document Model| B D --> |SearchService| F D --> |DocumentService| C subgraph Services D1[SearchService] D2[DocumentService] end subgraph Database C1[Document Model] C2[SQLAlchemy] end sequenceDiagram participant Client participant SearchApp participant SearchService participant DocumentService participant XapianDB participant SQLDatabase Note over SearchApp: \u521d\u59cb\u5316\u5e94\u7528 SearchApp->>XapianDB: \u521d\u59cb\u5316 Xapian \u6570\u636e\u5e93 SearchApp->>SQLDatabase: \u521d\u59cb\u5316 SQLAlchemy SearchApp->>SearchService: \u521b\u5efa\u641c\u7d22\u670d\u52a1 SearchApp->>DocumentService: \u521b\u5efa\u6587\u6863\u670d\u52a1 alt \u641c\u7d22\u6d41\u7a0b Client->>SearchApp: GET /search?q={query} SearchApp->>SearchService: search(query, page, page_size) SearchService->>XapianDB: \u6267\u884c\u641c\u7d22 SearchService-->>SearchApp: \u8fd4\u56de\u5339\u914d\u7ed3\u679c SearchApp->>SQLDatabase: \u83b7\u53d6\u6587\u6863\u5143\u6570\u636e SearchApp-->>Client: \u8fd4\u56de\u641c\u7d22\u7ed3\u679c else \u521b\u5efa\u6587\u6863\u6d41\u7a0b Client->>SearchApp: POST /documents SearchApp->>DocumentService: create_document(data) DocumentService->>SQLDatabase: \u4fdd\u5b58\u6587\u6863 DocumentService->>XapianDB: \u7d22\u5f15\u6587\u6863 SearchApp-->>Client: \u8fd4\u56de\u521b\u5efa\u7ed3\u679c end graph TD subgraph \u6587\u6863\u5904\u7406\u6d41\u7a0b A[\u6587\u6863\u8f93\u5165] --> B[\u6587\u6863\u9884\u5904\u7406] B --> C[Jieba\u5206\u8bcd\u5668] C --> D[\u751f\u6210\u7d22\u5f15\u8bcd] D --> E[\u6dfb\u52a0\u5b57\u6bb5\u524d\u7f00] E --> F[\u5199\u5165Xapian\u6570\u636e\u5e93] end subgraph \u67e5\u8be2\u5904\u7406\u6d41\u7a0b Q[\u67e5\u8be2\u8f93\u5165] --> R{\u662f\u5426\u5b57\u6bb5\u67e5\u8be2?} R -->|\u662f| S1[\u4fdd\u6301\u539f\u59cb\u67e5\u8be2] R -->|\u5426| S2[Jieba\u5206\u8bcd] S1 --> T[QueryParser\u89e3\u6790] S2 --> T T --> U[\u521b\u5efaXapian\u67e5\u8be2] U --> V[\u6267\u884c\u641c\u7d22] V --> W[\u8fd4\u56de\u7ed3\u679c] end subgraph \u7d22\u5f15\u7ed3\u6784 I1[\u6807\u9898\u7d22\u5f15 T:\u8bcd\u9879] I2[\u5185\u5bb9\u7d22\u5f15 XC:\u8bcd\u9879] I3[\u901a\u7528\u7d22\u5f15 \u8bcd\u9879] I4[\u6587\u6863ID Q:id] end","title":"Xapian"},{"location":"cc/xapian/#xapian-delve","text":"","title":"Xapian-delve \u4f7f\u7528\u6307\u5357\u53ca\u7d22\u5f15\u6587\u4ef6\u89e3\u6790"},{"location":"cc/xapian/#xapian-delve_1","text":"xapian-delve \u662f Xapian \u81ea\u5e26\u7684\u4e00\u4e2a\u7528\u4e8e\u68c0\u67e5\u7d22\u5f15\u6587\u4ef6\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u53ef\u4ee5\u7528\u6765\u67e5\u770b\u6570\u636e\u5e93\u7684\u7ed3\u6784\u548c\u5185\u5bb9\u3002","title":"xapian-delve \u5de5\u5177\u4f7f\u7528"},{"location":"cc/xapian/#_1","text":"xapian-delve [ \u9009\u9879 ] <\u6570\u636e\u5e93\u8def\u5f84>","title":"\u57fa\u672c\u7528\u6cd5"},{"location":"cc/xapian/#_2","text":"-1 \uff1a\u53ea\u663e\u793a\u4e00\u7ea7\u4fe1\u606f\uff08\u7b80\u8981\u6982\u8ff0\uff09 -a \uff1a\u663e\u793a\u6240\u6709\u4fe1\u606f\uff08\u8be6\u7ec6\u8f93\u51fa\uff09 -r \uff1a\u9012\u5f52\u663e\u793a\u672f\u8bed\u5217\u8868 -t \uff1a\u663e\u793a\u672f\u8bed\u5217\u8868 -d \uff1a\u663e\u793a\u6587\u6863\u6570\u636e -v \uff1a\u663e\u793a\u7248\u672c\u4fe1\u606f","title":"\u5e38\u7528\u9009\u9879"},{"location":"cc/xapian/#_3","text":"\u67e5\u770b\u6570\u636e\u5e93\u57fa\u672c\u4fe1\u606f\uff1a xapian-delve -1 /path/to/database \u67e5\u770b\u8be6\u7ec6\u6570\u636e\u5e93\u4fe1\u606f\uff1a xapian-delve -a /path/to/database \u67e5\u770b\u7279\u5b9a\u6587\u6863\u5185\u5bb9\uff08\u5982\u6587\u6863ID\u4e3a123\uff09\uff1a xapian-delve -d 123 /path/to/database","title":"\u4f7f\u7528\u793a\u4f8b"},{"location":"cc/xapian/#xapian","text":"","title":"Xapian \u7d22\u5f15\u6587\u4ef6\u89e3\u6790"},{"location":"cc/xapian/#_4","text":"Xapian \u6570\u636e\u5e93\u901a\u5e38\u7531\u591a\u4e2a\u6587\u4ef6\u7ec4\u6210\uff0c\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e2d\uff0c\u4e3b\u8981\u6587\u4ef6\u5305\u62ec\uff1a iamtermlist.DB \uff1a\u672f\u8bed\u5217\u8868\u7d22\u5f15 positionlist.DB \uff1a\u4f4d\u7f6e\u4fe1\u606f\u5b58\u50a8 postlist.DB \uff1a\u5012\u6392\u5217\u8868\u5b58\u50a8 record.DB \uff1a\u539f\u59cb\u6587\u6863\u6570\u636e\u5b58\u50a8 docdata.DB \uff1a\u6587\u6863\u5143\u6570\u636e\u5b58\u50a8 spelling.DB \uff1a\u62fc\u5199\u6821\u6b63\u6570\u636e synonym.DB \uff1a\u540c\u4e49\u8bcd\u6570\u636e flintlock \uff1a\u9501\u6587\u4ef6\uff08\u4e34\u65f6\uff09","title":"\u7d22\u5f15\u6587\u4ef6\u7ec4\u6210"},{"location":"cc/xapian/#_5","text":"\u5012\u6392\u7d22\u5f15\u7ed3\u6784 \uff1a postlist.DB \u5b58\u50a8\u672f\u8bed\u5230\u6587\u6863\u7684\u6620\u5c04\uff08\u5012\u6392\u5217\u8868\uff09 termlist.DB \u5b58\u50a8\u6587\u6863\u5230\u672f\u8bed\u7684\u6620\u5c04\uff08\u6b63\u6392\u5217\u8868\uff09 \u4f4d\u7f6e\u4fe1\u606f \uff1a positionlist.DB \u8bb0\u5f55\u672f\u8bed\u5728\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u7528\u4e8e\u77ed\u8bed\u67e5\u8be2\u548c\u90bb\u8fd1\u67e5\u8be2 \u6587\u6863\u6570\u636e \uff1a record.DB \u5b58\u50a8\u539f\u59cb\u6587\u6863\u5185\u5bb9 docdata.DB \u5b58\u50a8\u6587\u6863\u7684\u5143\u6570\u636e \u8f85\u52a9\u529f\u80fd \uff1a spelling.DB \u652f\u6301\u62fc\u5199\u6821\u6b63 synonym.DB \u652f\u6301\u540c\u4e49\u8bcd\u6269\u5c55","title":"\u7d22\u5f15\u6587\u4ef6\u7684\u610f\u4e49"},{"location":"cc/xapian/#_6","text":"\u4f7f\u7528 xapian-delve \uff08\u5982\u4e0a\u6240\u8ff0\uff09 \u4f7f\u7528\u7f16\u7a0b\u63a5\u53e3\u67e5\u770b \uff08Python\u793a\u4f8b\uff09\uff1a import xapian # \u6253\u5f00\u6570\u636e\u5e93 db = xapian . Database ( \"/path/to/database\" ) # \u83b7\u53d6\u6587\u6863\u6570\u91cf print ( db . get_doccount ()) # \u904d\u5386\u6240\u6709\u6587\u6863 for docid in range ( 1 , db . get_lastdocid () + 1 ): try : doc = db . get_document ( docid ) print ( f \"Document { docid } :\" ) print ( doc . get_data ()) except : pass \u4f7f\u7528\u5176\u4ed6\u5de5\u5177 \uff1a xapian-metadata \uff1a\u67e5\u770b\u6570\u636e\u5e93\u5143\u6570\u636e xapian-pos \uff1a\u67e5\u770b\u4f4d\u7f6e\u4fe1\u606f xapian-replicate \uff1a\u590d\u5236\u6570\u636e\u5e93\u5de5\u5177","title":"\u7d22\u5f15\u6587\u4ef6\u67e5\u770b\u65b9\u6cd5"},{"location":"cc/xapian/#_7","text":"\u4e0d\u8981\u624b\u52a8\u4fee\u6539\u7d22\u5f15\u6587\u4ef6 \uff1a\u8fd9\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u5e93\u635f\u574f \u9501\u6587\u4ef6 \uff1a\u5f53 Xapian \u6b63\u5728\u5199\u5165\u65f6\u4f1a\u6709 flintlock \u6587\u4ef6\uff0c\u4e0d\u8981\u624b\u52a8\u5220\u9664 \u7248\u672c\u517c\u5bb9\u6027 \uff1a\u4e0d\u540c\u7248\u672c\u7684 Xapian \u53ef\u80fd\u4f7f\u7528\u4e0d\u540c\u7684\u6587\u4ef6\u683c\u5f0f \u5907\u4efd \uff1a\u64cd\u4f5c\u524d\u5efa\u8bae\u5907\u4efd\u6570\u636e\u5e93\u6587\u4ef6 \u901a\u8fc7\u4ee5\u4e0a\u5de5\u5177\u548c\u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3 Xapian \u7d22\u5f15\u7684\u5185\u90e8\u7ed3\u6784\u548c\u5185\u5bb9\uff0c\u8fd9\u5bf9\u4e8e\u8c03\u8bd5\u548c\u4f18\u5316\u641c\u7d22\u5e94\u7528\u975e\u5e38\u6709\u5e2e\u52a9\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"cc/xapian/#xapian_1","text":"\u57fa\u672c\u539f\u7406 Xapian \u662f\u4e00\u4e2a\u6982\u7387\u578b\u4fe1\u606f\u68c0\u7d22\uff08Probabilistic Information Retrieval\uff09\u7cfb\u7edf \u4f7f\u7528 BM25\uff08Best Match 25\uff09\u4f5c\u4e3a\u9ed8\u8ba4\u7684\u6392\u5e8f\u7b97\u6cd5 \u652f\u6301\u5e03\u5c14\u68c0\u7d22\u3001\u77ed\u8bed\u68c0\u7d22\u548c\u8fd1\u4f3c\u68c0\u7d22\u7b49\u591a\u79cd\u68c0\u7d22\u65b9\u5f0f \u6838\u5fc3\u6570\u636e\u7ed3\u6784 \u5012\u6392\u7d22\u5f15\uff08Inverted Index\uff09\uff1a \u8bcd\u9879\uff08Term\uff09\u5230\u6587\u6863ID\u7684\u6620\u5c04 \u4f7f\u7528B+\u6811\u5b58\u50a8\u8bcd\u9879\u5b57\u5178 \u652f\u6301\u524d\u7f00\u538b\u7f29\u4ee5\u8282\u7701\u7a7a\u95f4 \u6587\u6863\u6570\u636e\uff1a \u6587\u6863ID\u5230\u5b9e\u9645\u5185\u5bb9\u7684\u6620\u5c04 \u652f\u6301\u5b58\u50a8\u539f\u59cb\u6587\u6863\u6216\u6587\u6863\u5143\u6570\u636e \u4f7f\u7528 value slots \u5b58\u50a8\u989d\u5916\u7684\u5b57\u6bb5\u6570\u636e \u5b58\u50a8\u65b9\u5f0f - \u91c7\u7528 Glass \u540e\u7aef\u5b58\u50a8\u5f15\u64ce - \u4e3b\u8981\u6587\u4ef6\u7c7b\u578b\uff1a .glass - \u4e3b\u7d22\u5f15\u6587\u4ef6 .baseA - \u6587\u6863\u6570\u636e .position - \u4f4d\u7f6e\u4fe1\u606f .spelling - \u62fc\u5199\u5efa\u8bae\u6570\u636e \u4f7f\u7528\u4e8b\u52a1\u673a\u5236\u786e\u4fdd\u6570\u636e\u4e00\u81f4\u6027 \u652f\u6301\u589e\u91cf\u66f4\u65b0\uff0c\u65e0\u9700\u91cd\u5efa\u6574\u4e2a\u7d22\u5f15 \u5e76\u53d1\u5904\u7406 - \u8bfb\u5199\u9501\u5206\u79bb\uff1a \u591a\u4e2a\u8bfb\u53d6\u64cd\u4f5c\u53ef\u4ee5\u5e76\u53d1\u6267\u884c \u5199\u5165\u64cd\u4f5c\u9700\u8981\u72ec\u5360\u9501 \u6570\u636e\u5e93\u7ea7\u522b\u7684\u9501\u5b9a\u673a\u5236\uff1a Database \u7c7b\u7528\u4e8e\u53ea\u8bfb\u64cd\u4f5c WritableDatabase \u7c7b\u7528\u4e8e\u5199\u5165\u64cd\u4f5c # \u8bfb\u53d6\u64cd\u4f5c\u4f7f\u7528 Database xapian_db = Database ( XAPIAN_DB_PATH ) # \u5199\u5165\u64cd\u4f5c\u9700\u8981\u4f7f\u7528 WritableDatabase writable_db = WritableDatabase ( XAPIAN_DB_PATH , DB_CREATE_OR_OPEN ) \u6027\u80fd\u7279\u70b9 - \u7d22\u5f15\u6027\u80fd\uff1a \u5355\u7ebf\u7a0b\u5199\u5165\u901f\u5ea6\u53ef\u8fbe\u6570\u5343\u6587\u6863/\u79d2 \u652f\u6301\u6279\u91cf\u5bfc\u5165\u4f18\u5316 \u67e5\u8be2\u6027\u80fd\uff1a \u4f7f\u7528\u8df3\u8868\uff08Skip Lists\uff09\u4f18\u5316\u5012\u6392\u5217\u8868\u904d\u5386 \u67e5\u8be2\u901f\u5ea6\u4e0e\u7d22\u5f15\u5927\u5c0f\u5448\u5bf9\u6570\u5173\u7cfb \u5185\u5b58\u4f7f\u7528\uff1a \u91c7\u7528\u5185\u5b58\u6620\u5c04\uff08mmap\uff09\u6280\u672f \u652f\u6301\u7f13\u5b58\u63a7\u5236\u548c\u4f18\u5316 \u6269\u5c55\u6027 - \u652f\u6301\u81ea\u5b9a\u4e49\u6743\u91cd\u6a21\u578b - \u53ef\u6269\u5c55\u7684\u5206\u8bcd\u5668\u67b6\u6784 - \u652f\u6301\u540c\u4e49\u8bcd\u3001\u505c\u7528\u8bcd\u7b49\u9ad8\u7ea7\u7279\u6027 - \u652f\u6301\u5206\u5e03\u5f0f\u68c0\u7d22\uff08\u9700\u8981\u989d\u5916\u914d\u7f6e\uff09 \u5728\u60a8\u7684\u9879\u76ee\u4e2d\uff0c\u5efa\u8bae\u8003\u8651\u4ee5\u4e0b\u4f18\u5316\uff1a 1. \u4f7f\u7528\u8fde\u63a5\u6c60\u7ba1\u7406 WritableDatabase \u5b9e\u4f8b 2. \u6279\u91cf\u7d22\u5f15\u65f6\u4f7f\u7528\u4e8b\u52a1\u63d0\u9ad8\u6027\u80fd 3. \u8003\u8651\u6dfb\u52a0\u7f13\u5b58\u5c42\u4f18\u5316\u70ed\u70b9\u67e5\u8be2 4. \u6839\u636e\u5b9e\u9645\u9700\u6c42\u8c03\u6574 BM25 \u53c2\u6570","title":"xapian \u641c\u7d22\u5f15\u64ce\u7684\u6838\u5fc3\u539f\u7406"},{"location":"cc/xapian/#_8","text":"graph TD A[Flask Web \u670d\u52a1] --> B[\u641c\u7d22\u529f\u80fd] A --> C[\u76f8\u4f3c\u5ea6\u67e5\u627e\u529f\u80fd] B --> D[Xapian \u641c\u7d22\u5f15\u64ce] B --> E[SQLite \u5143\u6570\u636e\u5e93] C --> F[MinHash \u76f8\u4f3c\u5ea6\u8ba1\u7b97] C --> D C --> E subgraph \u6570\u636e\u5b58\u50a8 D[Xapian \u641c\u7d22\u5f15\u64ce] E[SQLite \u5143\u6570\u636e\u5e93] end subgraph \u8fde\u63a5\u6c60\u7ba1\u7406 G[SQLite \u8fde\u63a5\u6c60] E --> G end subgraph \u540e\u53f0\u4efb\u52a1 H[\u540e\u53f0\u7d22\u5f15\u7ebf\u7a0b] H --> D end subgraph \u6570\u636e\u6a21\u578b I[Document Model] I --> E end graph TD A[SearchApp] --> B[Flask] A --> C[Database Models] A --> D[Services] A --> E[Config] A --> F[Xapian] A --> G[Logger] C --> |Document Model| B D --> |SearchService| F D --> |DocumentService| C subgraph Services D1[SearchService] D2[DocumentService] end subgraph Database C1[Document Model] C2[SQLAlchemy] end sequenceDiagram participant Client participant SearchApp participant SearchService participant DocumentService participant XapianDB participant SQLDatabase Note over SearchApp: \u521d\u59cb\u5316\u5e94\u7528 SearchApp->>XapianDB: \u521d\u59cb\u5316 Xapian \u6570\u636e\u5e93 SearchApp->>SQLDatabase: \u521d\u59cb\u5316 SQLAlchemy SearchApp->>SearchService: \u521b\u5efa\u641c\u7d22\u670d\u52a1 SearchApp->>DocumentService: \u521b\u5efa\u6587\u6863\u670d\u52a1 alt \u641c\u7d22\u6d41\u7a0b Client->>SearchApp: GET /search?q={query} SearchApp->>SearchService: search(query, page, page_size) SearchService->>XapianDB: \u6267\u884c\u641c\u7d22 SearchService-->>SearchApp: \u8fd4\u56de\u5339\u914d\u7ed3\u679c SearchApp->>SQLDatabase: \u83b7\u53d6\u6587\u6863\u5143\u6570\u636e SearchApp-->>Client: \u8fd4\u56de\u641c\u7d22\u7ed3\u679c else \u521b\u5efa\u6587\u6863\u6d41\u7a0b Client->>SearchApp: POST /documents SearchApp->>DocumentService: create_document(data) DocumentService->>SQLDatabase: \u4fdd\u5b58\u6587\u6863 DocumentService->>XapianDB: \u7d22\u5f15\u6587\u6863 SearchApp-->>Client: \u8fd4\u56de\u521b\u5efa\u7ed3\u679c end graph TD subgraph \u6587\u6863\u5904\u7406\u6d41\u7a0b A[\u6587\u6863\u8f93\u5165] --> B[\u6587\u6863\u9884\u5904\u7406] B --> C[Jieba\u5206\u8bcd\u5668] C --> D[\u751f\u6210\u7d22\u5f15\u8bcd] D --> E[\u6dfb\u52a0\u5b57\u6bb5\u524d\u7f00] E --> F[\u5199\u5165Xapian\u6570\u636e\u5e93] end subgraph \u67e5\u8be2\u5904\u7406\u6d41\u7a0b Q[\u67e5\u8be2\u8f93\u5165] --> R{\u662f\u5426\u5b57\u6bb5\u67e5\u8be2?} R -->|\u662f| S1[\u4fdd\u6301\u539f\u59cb\u67e5\u8be2] R -->|\u5426| S2[Jieba\u5206\u8bcd] S1 --> T[QueryParser\u89e3\u6790] S2 --> T T --> U[\u521b\u5efaXapian\u67e5\u8be2] U --> V[\u6267\u884c\u641c\u7d22] V --> W[\u8fd4\u56de\u7ed3\u679c] end subgraph \u7d22\u5f15\u7ed3\u6784 I1[\u6807\u9898\u7d22\u5f15 T:\u8bcd\u9879] I2[\u5185\u5bb9\u7d22\u5f15 XC:\u8bcd\u9879] I3[\u901a\u7528\u7d22\u5f15 \u8bcd\u9879] I4[\u6587\u6863ID Q:id] end","title":"\u6d41\u7a0b\u56fe"},{"location":"cc/xapian2/","text":"Xapian \u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u3001\u53ef\u6269\u5c55\u7684\u5168\u6587\u641c\u7d22\u5f15\u64ce\u5e93\uff0c\u4e3b\u8981\u7528\u4e8e\u6784\u5efa\u81ea\u5b9a\u4e49\u7684\u641c\u7d22\u5f15\u64ce\u7cfb\u7edf\u3002\u5b83\u63d0\u4f9b\u4e86\u8bb8\u591a\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u65e2\u9002\u7528\u4e8e\u7b80\u5355\u7684\u641c\u7d22\uff0c\u4e5f\u9002\u7528\u4e8e\u590d\u6742\u7684\u81ea\u5b9a\u4e49\u68c0\u7d22\u7cfb\u7edf\u3002 \ud83e\uddf0 Xapian \u7684\u6838\u5fc3\u529f\u80fd\u4e00\u89c8 \u00b6 \ud83d\udd0d 1. \u5168\u6587\u7d22\u5f15\u4e0e\u641c\u7d22 \u00b6 \u5012\u6392\u7d22\u5f15\uff08Inverted Index\uff09 \u5e03\u5c14\u67e5\u8be2\uff08AND, OR, NOT\uff09 \u77ed\u8bed\u641c\u7d22\uff08Phrase Search\uff09 \u8bcd\u5e72\u63d0\u53d6\uff08Stemming\uff09 \u81ea\u52a8\u5206\u8bcd\uff08Tokenization\uff09 \u4f4d\u7f6e\u4fe1\u606f\uff08\u7528\u4e8e\u77ed\u8bed\u548c\u90bb\u8fd1\u67e5\u8be2\uff09 \ud83e\udde0 2. \u667a\u80fd\u67e5\u8be2\u5904\u7406 \u00b6 \u62fc\u5199\u7ea0\u6b63\uff08Spelling Correction\uff09 \u67e5\u8be2\u5efa\u8bae\uff08Did you mean...?\uff09 \u6a21\u7cca\u641c\u7d22\uff08\u53ef\u624b\u52a8\u6269\u5c55\u7f16\u8f91\u8ddd\u79bb/N-gram\uff09 \u540c\u4e49\u8bcd\u6269\u5c55\uff08Synonym support\uff09 \u81ea\u52a8\u6743\u91cd\u6392\u5e8f\uff08TF-IDF/BM25 \u6743\u91cd\u6a21\u578b\uff09 \u67e5\u8be2\u91cd\u5199\uff08Query expansion\uff09 \ud83c\udff7\ufe0f 3. \u6587\u6863\u5143\u6570\u636e\u7ba1\u7406 \u00b6 \u652f\u6301\u5b58\u50a8 \u4efb\u610f\u5b57\u6bb5 \uff08key-value \u6570\u636e\uff09 \u53ef\u4e3a\u6587\u6863\u6dfb\u52a0 \u81ea\u5b9a\u4e49\u524d\u7f00\u5b57\u6bb5 \u652f\u6301 \u5143\u5b57\u6bb5\u8fc7\u6ee4\uff08range query / field filtering\uff09 \ud83d\udcca 4. \u6392\u5e8f\u4e0e\u8bc4\u5206\uff08Ranking & Relevance\uff09 \u00b6 BM25 \u6392\u540d\u7b97\u6cd5 \uff08\u9ed8\u8ba4\uff09 \u53ef\u81ea\u5b9a\u4e49\u8bc4\u5206\u51fd\u6570\uff08\u7528 ValueWeightPostingSource \u5b9e\u73b0\u7c7b\u4f3c PageRank \u7b49\uff09 \u6309\u5b57\u6bb5\u6392\u5e8f \uff08\u81ea\u5b9a\u4e49 value slot \uff09 Multi-valued field \u6392\u5e8f\u652f\u6301 \ud83d\udd27 5. \u67e5\u8be2\u89e3\u6790\u5668\uff08QueryParser\uff09 \u00b6 \u63d0\u4f9b\u7c7b\u4f3c Lucene \u8bed\u6cd5\u7684\u89e3\u6790\u5668\uff1a \u652f\u6301 +must , -must_not , field:value \u652f\u6301 NEAR , ADJ , SOME , ALL \u652f\u6301 FLAG_PARTIAL \uff08\u524d\u7f00\u6a21\u7cca\uff09 \u53ef\u81ea\u5b9a\u4e49\u5b57\u6bb5\u524d\u7f00\u6620\u5c04\uff08\u6bd4\u5982 title: , author: \uff09 \ud83d\udcc1 6. \u6570\u636e\u5e93\u652f\u6301 \u00b6 \u652f\u6301\u591a\u4e2a\u6570\u636e\u5e93\u5408\u5e76\u67e5\u8be2\uff08 Xapian::Database \u591a\u4e2a\u62fc\u63a5\uff09 \u652f\u6301\u53ea\u8bfb\u548c\u53ef\u5199\u6570\u636e\u5e93 \u652f\u6301**\u8fdc\u7a0b\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u8bbf\u95ee**\uff08 xapian-tcpsrv \uff09 \u2699\ufe0f 7. \u9ad8\u7ea7\u529f\u80fd \u00b6 \u6743\u91cd\u5b66\u4e60\uff08Learning To Rank\uff09 - \u901a\u8fc7\u8bad\u7ec3\u6570\u636e\u5bf9\u76f8\u5173\u6027\u6392\u5e8f\u8fdb\u884c\u4f18\u5316\uff08\u7c7b\u4f3c\u4e8e LTR\uff09 \u6587\u6863\u66f4\u65b0\u4e0e\u7248\u672c\u63a7\u5236 \u4e8b\u52a1\u4e0e\u539f\u5b50\u63d0\u4ea4\uff08Atomic commit\uff09 \u5206\u5e03\u5f0f\u641c\u7d22\u652f\u6301\uff08\u53ef\u6269\u5c55\uff09 \u5e76\u884c\u67e5\u8be2\uff08\u7ebf\u7a0b\u5b89\u5168\uff09 \ud83e\uddea 8. \u6269\u5c55\u6027\u4e0e\u7ed1\u5b9a\u8bed\u8a00 \u00b6 C++ \u539f\u751f\u63a5\u53e3\uff08\u6838\u5fc3\u5e93\uff09 \u591a\u8bed\u8a00\u7ed1\u5b9a\uff1a Python\uff08 xapian-bindings \uff09 Java PHP Ruby Perl \u2705 \u603b\u7ed3\u8868\u683c \u00b6 \u529f\u80fd\u7c7b\u522b \u529f\u80fd \u641c\u7d22 \u5168\u6587\u641c\u7d22\u3001\u77ed\u8bed\u5339\u914d\u3001\u5e03\u5c14\u903b\u8f91\u3001\u8fd1\u90bb\u641c\u7d22 \u67e5\u8be2\u8f85\u52a9 \u62fc\u5199\u7ea0\u6b63\u3001\u540c\u4e49\u8bcd\u3001\u524d\u7f00\u5339\u914d\u3001\u6a21\u7cca\u641c\u7d22\uff08\u53ef\u6269\u5c55\uff09 \u6392\u5e8f\u8bc4\u5206 TF-IDF\u3001BM25\u3001\u81ea\u5b9a\u4e49\u8bc4\u5206\u3001\u5b57\u6bb5\u6392\u5e8f \u6570\u636e\u7ed3\u6784 \u6587\u6863\u5b57\u6bb5\u3001\u81ea\u5b9a\u4e49\u5b57\u6bb5\u3001\u952e\u503c\u5143\u6570\u636e \u6570\u636e\u652f\u6301 \u6570\u636e\u5e93\u5408\u5e76\u3001\u8fdc\u7a0b\u641c\u7d22\u3001\u4e8b\u52a1\u652f\u6301 \u6269\u5c55\u6027 \u591a\u8bed\u8a00\u7ed1\u5b9a\u3001\u81ea\u5b9a\u4e49\u67e5\u8be2\u89e3\u6790\u5668\u3001\u81ea\u5b9a\u4e49\u6392\u5e8f\u5668 \u5982\u679c\u4f60\u5bf9\u67d0\u4e00\u4e2a\u529f\u80fd\uff08\u6bd4\u5982\u62fc\u5199\u7ea0\u6b63\u3001\u8fd1\u90bb\u641c\u7d22\u3001\u6216\u8005\u81ea\u5b9a\u4e49\u6392\u5e8f\uff09\u611f\u5174\u8da3\uff0c\u6211\u53ef\u4ee5\u5355\u72ec\u5c55\u5f00\u4ecb\u7ecd\uff0c\u8fd8\u80fd\u7ed9\u4f60\u5199\u4e00\u4e9b\u4ee3\u7801 demo\u3002\u4f60\u6709\u6ca1\u6709\u7279\u522b\u60f3\u5b9e\u73b0\u7684\u641c\u7d22\u884c\u4e3a\uff1f\u6211\u53ef\u4ee5\u6309\u4f60\u7684\u5e94\u7528\u573a\u666f\u6765\u8bb2\u89e3\u3002","title":"Xapian2"},{"location":"cc/xapian2/#xapian","text":"","title":"\ud83e\uddf0 Xapian \u7684\u6838\u5fc3\u529f\u80fd\u4e00\u89c8"},{"location":"cc/xapian2/#1","text":"\u5012\u6392\u7d22\u5f15\uff08Inverted Index\uff09 \u5e03\u5c14\u67e5\u8be2\uff08AND, OR, NOT\uff09 \u77ed\u8bed\u641c\u7d22\uff08Phrase Search\uff09 \u8bcd\u5e72\u63d0\u53d6\uff08Stemming\uff09 \u81ea\u52a8\u5206\u8bcd\uff08Tokenization\uff09 \u4f4d\u7f6e\u4fe1\u606f\uff08\u7528\u4e8e\u77ed\u8bed\u548c\u90bb\u8fd1\u67e5\u8be2\uff09","title":"\ud83d\udd0d 1. \u5168\u6587\u7d22\u5f15\u4e0e\u641c\u7d22"},{"location":"cc/xapian2/#2","text":"\u62fc\u5199\u7ea0\u6b63\uff08Spelling Correction\uff09 \u67e5\u8be2\u5efa\u8bae\uff08Did you mean...?\uff09 \u6a21\u7cca\u641c\u7d22\uff08\u53ef\u624b\u52a8\u6269\u5c55\u7f16\u8f91\u8ddd\u79bb/N-gram\uff09 \u540c\u4e49\u8bcd\u6269\u5c55\uff08Synonym support\uff09 \u81ea\u52a8\u6743\u91cd\u6392\u5e8f\uff08TF-IDF/BM25 \u6743\u91cd\u6a21\u578b\uff09 \u67e5\u8be2\u91cd\u5199\uff08Query expansion\uff09","title":"\ud83e\udde0 2. \u667a\u80fd\u67e5\u8be2\u5904\u7406"},{"location":"cc/xapian2/#3","text":"\u652f\u6301\u5b58\u50a8 \u4efb\u610f\u5b57\u6bb5 \uff08key-value \u6570\u636e\uff09 \u53ef\u4e3a\u6587\u6863\u6dfb\u52a0 \u81ea\u5b9a\u4e49\u524d\u7f00\u5b57\u6bb5 \u652f\u6301 \u5143\u5b57\u6bb5\u8fc7\u6ee4\uff08range query / field filtering\uff09","title":"\ud83c\udff7\ufe0f 3. \u6587\u6863\u5143\u6570\u636e\u7ba1\u7406"},{"location":"cc/xapian2/#4-ranking-relevance","text":"BM25 \u6392\u540d\u7b97\u6cd5 \uff08\u9ed8\u8ba4\uff09 \u53ef\u81ea\u5b9a\u4e49\u8bc4\u5206\u51fd\u6570\uff08\u7528 ValueWeightPostingSource \u5b9e\u73b0\u7c7b\u4f3c PageRank \u7b49\uff09 \u6309\u5b57\u6bb5\u6392\u5e8f \uff08\u81ea\u5b9a\u4e49 value slot \uff09 Multi-valued field \u6392\u5e8f\u652f\u6301","title":"\ud83d\udcca 4. \u6392\u5e8f\u4e0e\u8bc4\u5206\uff08Ranking &amp; Relevance\uff09"},{"location":"cc/xapian2/#5-queryparser","text":"\u63d0\u4f9b\u7c7b\u4f3c Lucene \u8bed\u6cd5\u7684\u89e3\u6790\u5668\uff1a \u652f\u6301 +must , -must_not , field:value \u652f\u6301 NEAR , ADJ , SOME , ALL \u652f\u6301 FLAG_PARTIAL \uff08\u524d\u7f00\u6a21\u7cca\uff09 \u53ef\u81ea\u5b9a\u4e49\u5b57\u6bb5\u524d\u7f00\u6620\u5c04\uff08\u6bd4\u5982 title: , author: \uff09","title":"\ud83d\udd27 5. \u67e5\u8be2\u89e3\u6790\u5668\uff08QueryParser\uff09"},{"location":"cc/xapian2/#6","text":"\u652f\u6301\u591a\u4e2a\u6570\u636e\u5e93\u5408\u5e76\u67e5\u8be2\uff08 Xapian::Database \u591a\u4e2a\u62fc\u63a5\uff09 \u652f\u6301\u53ea\u8bfb\u548c\u53ef\u5199\u6570\u636e\u5e93 \u652f\u6301**\u8fdc\u7a0b\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u8bbf\u95ee**\uff08 xapian-tcpsrv \uff09","title":"\ud83d\udcc1 6. \u6570\u636e\u5e93\u652f\u6301"},{"location":"cc/xapian2/#7","text":"\u6743\u91cd\u5b66\u4e60\uff08Learning To Rank\uff09 - \u901a\u8fc7\u8bad\u7ec3\u6570\u636e\u5bf9\u76f8\u5173\u6027\u6392\u5e8f\u8fdb\u884c\u4f18\u5316\uff08\u7c7b\u4f3c\u4e8e LTR\uff09 \u6587\u6863\u66f4\u65b0\u4e0e\u7248\u672c\u63a7\u5236 \u4e8b\u52a1\u4e0e\u539f\u5b50\u63d0\u4ea4\uff08Atomic commit\uff09 \u5206\u5e03\u5f0f\u641c\u7d22\u652f\u6301\uff08\u53ef\u6269\u5c55\uff09 \u5e76\u884c\u67e5\u8be2\uff08\u7ebf\u7a0b\u5b89\u5168\uff09","title":"\u2699\ufe0f 7. \u9ad8\u7ea7\u529f\u80fd"},{"location":"cc/xapian2/#8","text":"C++ \u539f\u751f\u63a5\u53e3\uff08\u6838\u5fc3\u5e93\uff09 \u591a\u8bed\u8a00\u7ed1\u5b9a\uff1a Python\uff08 xapian-bindings \uff09 Java PHP Ruby Perl","title":"\ud83e\uddea 8. \u6269\u5c55\u6027\u4e0e\u7ed1\u5b9a\u8bed\u8a00"},{"location":"cc/xapian2/#_1","text":"\u529f\u80fd\u7c7b\u522b \u529f\u80fd \u641c\u7d22 \u5168\u6587\u641c\u7d22\u3001\u77ed\u8bed\u5339\u914d\u3001\u5e03\u5c14\u903b\u8f91\u3001\u8fd1\u90bb\u641c\u7d22 \u67e5\u8be2\u8f85\u52a9 \u62fc\u5199\u7ea0\u6b63\u3001\u540c\u4e49\u8bcd\u3001\u524d\u7f00\u5339\u914d\u3001\u6a21\u7cca\u641c\u7d22\uff08\u53ef\u6269\u5c55\uff09 \u6392\u5e8f\u8bc4\u5206 TF-IDF\u3001BM25\u3001\u81ea\u5b9a\u4e49\u8bc4\u5206\u3001\u5b57\u6bb5\u6392\u5e8f \u6570\u636e\u7ed3\u6784 \u6587\u6863\u5b57\u6bb5\u3001\u81ea\u5b9a\u4e49\u5b57\u6bb5\u3001\u952e\u503c\u5143\u6570\u636e \u6570\u636e\u652f\u6301 \u6570\u636e\u5e93\u5408\u5e76\u3001\u8fdc\u7a0b\u641c\u7d22\u3001\u4e8b\u52a1\u652f\u6301 \u6269\u5c55\u6027 \u591a\u8bed\u8a00\u7ed1\u5b9a\u3001\u81ea\u5b9a\u4e49\u67e5\u8be2\u89e3\u6790\u5668\u3001\u81ea\u5b9a\u4e49\u6392\u5e8f\u5668 \u5982\u679c\u4f60\u5bf9\u67d0\u4e00\u4e2a\u529f\u80fd\uff08\u6bd4\u5982\u62fc\u5199\u7ea0\u6b63\u3001\u8fd1\u90bb\u641c\u7d22\u3001\u6216\u8005\u81ea\u5b9a\u4e49\u6392\u5e8f\uff09\u611f\u5174\u8da3\uff0c\u6211\u53ef\u4ee5\u5355\u72ec\u5c55\u5f00\u4ecb\u7ecd\uff0c\u8fd8\u80fd\u7ed9\u4f60\u5199\u4e00\u4e9b\u4ee3\u7801 demo\u3002\u4f60\u6709\u6ca1\u6709\u7279\u522b\u60f3\u5b9e\u73b0\u7684\u641c\u7d22\u884c\u4e3a\uff1f\u6211\u53ef\u4ee5\u6309\u4f60\u7684\u5e94\u7528\u573a\u666f\u6765\u8bb2\u89e3\u3002","title":"\u2705 \u603b\u7ed3\u8868\u683c"},{"location":"cc/%E5%86%85%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7/","text":"","title":"\u5185\u5b58\u4e00\u81f4\u6027"},{"location":"cuda/cmd/","text":"PTX/SASS\u6307\u4ee4\u5feb\u901f\u6307\u5357 \u00b6 PTX (Parallel Thread Execution) \u548c SASS (Streaming ASSembly) \u662fNVIDIA GPU\u7684\u4e24\u79cd\u6307\u4ee4\u96c6\u8868\u793a\uff0c\u4e86\u89e3\u5b83\u4eec\u5bf9CUDA\u6df1\u5ea6\u4f18\u5316\u975e\u5e38\u91cd\u8981\u3002 1. PTX\u4e0eSASS\u7684\u533a\u522b \u00b6 \u7279\u6027 PTX SASS \u7ea7\u522b \u865a\u62df\u6307\u4ee4\u96c6(\u7c7b\u4f3cLLVM IR) \u539f\u751f\u673a\u5668\u6307\u4ee4 \u53ef\u8bfb\u6027 \u8f83\u9ad8\uff0c\u7c7b\u4f3c\u6c47\u7f16 \u8f83\u4f4e\uff0c\u9ad8\u5ea6\u4f18\u5316 \u7a33\u5b9a\u6027 \u8de8\u67b6\u6784\u517c\u5bb9 \u67b6\u6784\u7279\u5b9a \u83b7\u53d6\u65b9\u5f0f -keep \u7f16\u8bd1\u9009\u9879\u6216cuobjdump Nsight Compute\u6216cuobjdump 2. \u6838\u5fc3PTX\u6307\u4ee4\u7c7b\u522b \u00b6 \u8ba1\u7b97\u6307\u4ee4 \u00b6 add , sub , mul , mad (\u4e58\u52a0) fma (\u878d\u5408\u4e58\u52a0) div , rcp (\u5012\u6570), sqrt , rsqrt (\u5e73\u65b9\u6839\u5012\u6570) min , max , abs , neg and , or , xor , not (\u4f4d\u8fd0\u7b97) shl , shr (\u79fb\u4f4d) \u63a7\u5236\u6d41\u6307\u4ee4 \u00b6 @p \u8c13\u8bcd\u6267\u884c (\u5982 @p add.rn.f32 ) bra (\u5206\u652f) call (\u51fd\u6570\u8c03\u7528) ret (\u8fd4\u56de) \u5185\u5b58\u6307\u4ee4 \u00b6 ld (\u52a0\u8f7d) st (\u5b58\u50a8) atom (\u539f\u5b50\u64cd\u4f5c) bar (\u5c4f\u969c\u540c\u6b65) ldparam (\u53c2\u6570\u52a0\u8f7d) \u7279\u6b8a\u6307\u4ee4 \u00b6 mov (\u5bc4\u5b58\u5668\u79fb\u52a8) cvt (\u7c7b\u578b\u8f6c\u6362) setp (\u8bbe\u7f6e\u8c13\u8bcd) selp (\u8c13\u8bcd\u9009\u62e9) 3. \u5e38\u89c1SASS\u6307\u4ee4\u793a\u4f8b \u00b6 SASS\u6307\u4ee4\u66f4\u5e95\u5c42\u4e14\u67b6\u6784\u76f8\u5173(\u968fGPU\u4ee3\u9645\u53d8\u5316): Volta/Turing/Ampere\u67b6\u6784\u5e38\u89c1\u6307\u4ee4 \u00b6 IADD3 (\u4e09\u64cd\u4f5c\u6570\u6574\u6570\u52a0) FADD (\u6d6e\u70b9\u52a0) FMUL (\u6d6e\u70b9\u4e58) FFMA (\u878d\u5408\u6d6e\u70b9\u4e58\u52a0) MOV (\u79fb\u52a8) LDG (\u5168\u5c40\u5185\u5b58\u52a0\u8f7d) STS (\u5171\u4eab\u5185\u5b58\u5b58\u50a8) BRA (\u5206\u652f) BAR (\u5c4f\u969c) 4. \u5982\u4f55\u67e5\u770bPTX/SASS\u4ee3\u7801 \u00b6 \u7f16\u8bd1\u65f6\u4fdd\u7559PTX \u00b6 nvcc -keep mykernel.cu # \u751f\u6210.ptx\u6587\u4ef6 \u4f7f\u7528cuobjdump\u67e5\u770bSASS \u00b6 cuobjdump -sass myexecutable \u4f7f\u7528Nsight Compute\u67e5\u770b \u00b6 ncu --print-instruction-mix ./myprogram 5. \u5feb\u901f\u5b66\u4e60\u5efa\u8bae \u00b6 \u4ecePTX\u5f00\u59cb \uff1a\u5148\u7406\u89e3PTX\u6307\u4ee4\uff0c\u518d\u8fc7\u6e21\u5230SASS \u6bd4\u8f83\u4e0d\u540c\u4f18\u5316\u7ea7\u522b \uff1a\u7528 -O0 \u548c -O3 \u7f16\u8bd1\u6bd4\u8f83PTX\u5dee\u5f02 \u5173\u6ce8\u5173\u952e\u6307\u4ee4 \uff1a LD/ST \u5185\u5b58\u6307\u4ee4 FMA \u8ba1\u7b97\u6307\u4ee4 BAR \u540c\u6b65\u6307\u4ee4 \u4f7f\u7528\u53ef\u89c6\u5316\u5de5\u5177 \uff1a ncu-ui ./myprogram # \u56fe\u5f62\u754c\u9762\u67e5\u770b\u6307\u4ee4\u6df7\u5408 6. \u5b9e\u7528\u5b66\u4e60\u8d44\u6e90 \u00b6 \u5b98\u65b9\u6587\u6863 \uff1a PTX ISA\u53c2\u8003 CUDA\u4e8c\u8fdb\u5236\u5de5\u5177\u6307\u5357 \u5173\u952e\u624b\u518c\u7ae0\u8282 \uff1a PTX\u5bc4\u5b58\u5668\u7c7b\u578b(.b8, .u16, .f32\u7b49) \u5bfb\u5740\u6a21\u5f0f(\u5bc4\u5b58\u5668/\u7acb\u5373\u6570/\u95f4\u63a5) \u8c13\u8bcd\u6267\u884c\u7cfb\u7edf \u5b9e\u9645\u6848\u4f8b\u5b66\u4e60 \uff1a cuobjdump -ptx myexecutable | less # \u6d4f\u89c8PTX\u4ee3\u7801 ncu --set details -k mykernel ./myprogram # \u8be6\u7ec6\u5185\u6838\u5206\u6790 \u638c\u63e1\u8fd9\u4e9b\u6307\u4ee4\u540e\uff0c\u4f60\u5c06\u80fd\u66f4\u597d\u5730\u7406\u89e3CUDA\u5185\u6838\u7684\u5b9e\u9645\u6267\u884c\u884c\u4e3a\uff0c\u5e76\u8fdb\u884c\u66f4\u6709\u6548\u7684\u4f18\u5316\u3002 NVIDIA RTX 4090 (Ada Lovelace\u67b6\u6784) \u7684\u7279\u6b8a\u6307\u4ee4\u4e0e\u9ad8\u6548\u4f18\u5316 \u00b6 RTX 4090\u91c7\u7528\u7684Ada Lovelace\u67b6\u6784\u786e\u5b9e\u5f15\u5165\u4e86\u4e00\u4e9b\u7279\u6b8a\u6307\u4ee4\u548c\u4f18\u5316\u7279\u6027\uff0c\u4ee5\u4e0b\u662f\u5173\u952e\u5185\u5bb9\uff1a \u4e00\u3001Ada Lovelace\u67b6\u6784\u7279\u6709\u7684\u65b0\u6307\u4ee4 \u00b6 1. \u7b2c\u4e09\u4ee3Tensor Core\u589e\u5f3a\u6307\u4ee4 \u00b6 HMMA2 (\u6df7\u5408\u7cbe\u5ea6\u77e9\u9635\u4e58\u52a0) - \u652f\u6301\u65b0\u578bFP8\u683c\u5f0f IMMA2 (\u6574\u6570\u77e9\u9635\u4e58\u52a0) - \u52a0\u901fINT8/INT4\u63a8\u7406 DP4A \u589e\u5f3a\u7248 - \u66f4\u9ad8\u6548\u7684INT8\u70b9\u79ef\u8fd0\u7b97 2. \u65b0\u7684Shader Execution Reordering (SER)\u6307\u4ee4 \u00b6 REORDER \u6307\u4ee4 - \u52a8\u6001\u91cd\u6392\u7740\u8272\u5668\u6267\u884c\u987a\u5e8f COHERENCE \u63a7\u5236\u6307\u4ee4 - \u6539\u8fdb\u5149\u7ebf\u8ffd\u8e2a\u7684\u5185\u5b58\u4e00\u81f4\u6027 3. \u7b2c\u516b\u4ee3NVDLA\u589e\u5f3a \u00b6 DL2 \u524d\u7f00\u6307\u4ee4 - \u6df1\u5ea6\u5b66\u4e60\u52a0\u901f\u6307\u4ee4\u96c6\u6269\u5c55 SMEMD - \u5171\u4eab\u5185\u5b58\u76f4\u63a5\u6570\u636e\u4ea4\u6362\u6307\u4ee4 \u4e8c\u3001\u9488\u5bf9RTX 4090\u7684\u9ad8\u6548\u6307\u4ee4\u4f7f\u7528 \u00b6 \u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u4f18\u5316 \u00b6 FP32\u77e9\u9635\u8fd0\u7b97 \uff1a // \u4f7f\u7528\u65b0\u7684FFMA.PRED\u6307\u4ee4 @ p FFMA.PRED.RN.FTZ R0 , R1 , R2 , R0 ; // \u5e26\u8c13\u8bcd\u7684\u878d\u5408\u4e58\u52a0 INT8\u63a8\u7406\u52a0\u901f \uff1a // \u4f7f\u7528IMMA.8816\u6307\u4ee4 IMMA.8816.S8.S8.S32 R0 , R1 , R2 , R0 ; // INT8\u77e9\u9635\u4e58\u52a0 \u5185\u5b58\u8bbf\u95ee\u4f18\u5316 \u00b6 \u65b0\u7684LDG.128\u6307\u4ee4 \uff1a LDG.128.SYS R0 , [ R1 ]; // 128-bit\u5168\u5c40\u5185\u5b58\u52a0\u8f7d \u589e\u5f3a\u7684L2\u7f13\u5b58\u63a7\u5236 \uff1a PREFETCH.L2 [ R1 ]; // \u4e3b\u52a8L2\u9884\u53d6 MEMBAR.GL.SYS ; // \u6539\u8fdb\u7684\u5185\u5b58\u5c4f\u969c \u4e09\u3001\u5b9e\u9645\u4f18\u5316\u6848\u4f8b \u00b6 \u5149\u7ebf\u8ffd\u8e2a\u4f18\u5316 \u00b6 // \u4f7f\u7528\u65b0\u7684RT\u6838\u5fc3\u6307\u4ee4 RT.TRACE.ACCEL R0 , [ R1 ] , R2 ; // \u52a0\u901f\u7684\u5149\u7ebf\u8ffd\u8e2a\u67e5\u8be2 RT.REORDER.START ; // \u5f00\u59cb\u6267\u884c\u91cd\u6392 AI\u63a8\u7406\u4f18\u5316 \u00b6 // FP8\u77e9\u9635\u8fd0\u7b97 HMMA2.1688.FP8.FP8.FP32 R0 , R1 , R2 , R0 ; \u56db\u3001\u67e5\u770b4090\u7279\u5b9a\u6307\u4ee4\u7684\u65b9\u6cd5 \u00b6 \u4f7f\u7528Nsight Compute \uff1a ncu --arch sm_89 --query-metrics \u68c0\u67e5\u7279\u5b9a\u5185\u6838 \uff1a ncu --kernel-name MyKernel --set full --metrics smsp__inst_executed.avg.per_cycle_active ./myapp PTX\u5230SASS\u8f6c\u6362\u89c2\u5bdf \uff1a cuobjdump -arch = sm_89 -ptx -sass mykernel.o \u4e94\u3001\u5173\u952e\u4f18\u5316\u5efa\u8bae \u00b6 \u4f18\u5148\u4f7f\u7528Tensor Core \uff1a \u5c3d\u91cf\u5c06\u8ba1\u7b97\u8f6c\u6362\u4e3aFP16/FP8/INT8\u77e9\u9635\u8fd0\u7b97 \u4f7f\u7528 mma.sync \u6307\u4ee4\u96c6 \u5229\u7528\u65b0\u7684\u5185\u5b58\u5c42\u6b21 \uff1a __global__ void kernel () { __builtin_prefetch ( ptr , 1 ); // \u4f7f\u7528\u786c\u4ef6\u9884\u53d6 } SER\u7279\u6027\u5e94\u7528 \uff1a // \u5728\u5149\u7ebf\u8ffd\u8e2a\u5185\u6838\u4e2d\u542f\u7528 __attribute__ (( reorder_with_hint ( high_priority ))) \u4f7f\u7528\u65b0\u7684CUDA 12.x\u7279\u6027 \uff1a #pragma unroll 2 // \u5229\u7528\u589e\u5f3a\u7684\u5faa\u73af\u5c55\u5f00 RTX 4090\u7684\u8fd9\u4e9b\u65b0\u6307\u4ee4\u9700\u8981\u914d\u5408CUDA 12.x\u53ca\u4ee5\u4e0a\u7248\u672c\u4f7f\u7528\uff0c\u5efa\u8bae\u53c2\u8003NVIDIA\u7684\u300aAda Lovelace\u67b6\u6784\u767d\u76ae\u4e66\u300b\u83b7\u53d6\u6700\u65b0\u6307\u4ee4\u7ec6\u8282\u3002","title":"PTX/SASS\u6307\u4ee4\u5feb\u901f\u6307\u5357"},{"location":"cuda/cmd/#ptxsass","text":"PTX (Parallel Thread Execution) \u548c SASS (Streaming ASSembly) \u662fNVIDIA GPU\u7684\u4e24\u79cd\u6307\u4ee4\u96c6\u8868\u793a\uff0c\u4e86\u89e3\u5b83\u4eec\u5bf9CUDA\u6df1\u5ea6\u4f18\u5316\u975e\u5e38\u91cd\u8981\u3002","title":"PTX/SASS\u6307\u4ee4\u5feb\u901f\u6307\u5357"},{"location":"cuda/cmd/#1-ptxsass","text":"\u7279\u6027 PTX SASS \u7ea7\u522b \u865a\u62df\u6307\u4ee4\u96c6(\u7c7b\u4f3cLLVM IR) \u539f\u751f\u673a\u5668\u6307\u4ee4 \u53ef\u8bfb\u6027 \u8f83\u9ad8\uff0c\u7c7b\u4f3c\u6c47\u7f16 \u8f83\u4f4e\uff0c\u9ad8\u5ea6\u4f18\u5316 \u7a33\u5b9a\u6027 \u8de8\u67b6\u6784\u517c\u5bb9 \u67b6\u6784\u7279\u5b9a \u83b7\u53d6\u65b9\u5f0f -keep \u7f16\u8bd1\u9009\u9879\u6216cuobjdump Nsight Compute\u6216cuobjdump","title":"1. PTX\u4e0eSASS\u7684\u533a\u522b"},{"location":"cuda/cmd/#2-ptx","text":"","title":"2. \u6838\u5fc3PTX\u6307\u4ee4\u7c7b\u522b"},{"location":"cuda/cmd/#_1","text":"add , sub , mul , mad (\u4e58\u52a0) fma (\u878d\u5408\u4e58\u52a0) div , rcp (\u5012\u6570), sqrt , rsqrt (\u5e73\u65b9\u6839\u5012\u6570) min , max , abs , neg and , or , xor , not (\u4f4d\u8fd0\u7b97) shl , shr (\u79fb\u4f4d)","title":"\u8ba1\u7b97\u6307\u4ee4"},{"location":"cuda/cmd/#_2","text":"@p \u8c13\u8bcd\u6267\u884c (\u5982 @p add.rn.f32 ) bra (\u5206\u652f) call (\u51fd\u6570\u8c03\u7528) ret (\u8fd4\u56de)","title":"\u63a7\u5236\u6d41\u6307\u4ee4"},{"location":"cuda/cmd/#_3","text":"ld (\u52a0\u8f7d) st (\u5b58\u50a8) atom (\u539f\u5b50\u64cd\u4f5c) bar (\u5c4f\u969c\u540c\u6b65) ldparam (\u53c2\u6570\u52a0\u8f7d)","title":"\u5185\u5b58\u6307\u4ee4"},{"location":"cuda/cmd/#_4","text":"mov (\u5bc4\u5b58\u5668\u79fb\u52a8) cvt (\u7c7b\u578b\u8f6c\u6362) setp (\u8bbe\u7f6e\u8c13\u8bcd) selp (\u8c13\u8bcd\u9009\u62e9)","title":"\u7279\u6b8a\u6307\u4ee4"},{"location":"cuda/cmd/#3-sass","text":"SASS\u6307\u4ee4\u66f4\u5e95\u5c42\u4e14\u67b6\u6784\u76f8\u5173(\u968fGPU\u4ee3\u9645\u53d8\u5316):","title":"3. \u5e38\u89c1SASS\u6307\u4ee4\u793a\u4f8b"},{"location":"cuda/cmd/#voltaturingampere","text":"IADD3 (\u4e09\u64cd\u4f5c\u6570\u6574\u6570\u52a0) FADD (\u6d6e\u70b9\u52a0) FMUL (\u6d6e\u70b9\u4e58) FFMA (\u878d\u5408\u6d6e\u70b9\u4e58\u52a0) MOV (\u79fb\u52a8) LDG (\u5168\u5c40\u5185\u5b58\u52a0\u8f7d) STS (\u5171\u4eab\u5185\u5b58\u5b58\u50a8) BRA (\u5206\u652f) BAR (\u5c4f\u969c)","title":"Volta/Turing/Ampere\u67b6\u6784\u5e38\u89c1\u6307\u4ee4"},{"location":"cuda/cmd/#4-ptxsass","text":"","title":"4. \u5982\u4f55\u67e5\u770bPTX/SASS\u4ee3\u7801"},{"location":"cuda/cmd/#ptx","text":"nvcc -keep mykernel.cu # \u751f\u6210.ptx\u6587\u4ef6","title":"\u7f16\u8bd1\u65f6\u4fdd\u7559PTX"},{"location":"cuda/cmd/#cuobjdumpsass","text":"cuobjdump -sass myexecutable","title":"\u4f7f\u7528cuobjdump\u67e5\u770bSASS"},{"location":"cuda/cmd/#nsight-compute","text":"ncu --print-instruction-mix ./myprogram","title":"\u4f7f\u7528Nsight Compute\u67e5\u770b"},{"location":"cuda/cmd/#5","text":"\u4ecePTX\u5f00\u59cb \uff1a\u5148\u7406\u89e3PTX\u6307\u4ee4\uff0c\u518d\u8fc7\u6e21\u5230SASS \u6bd4\u8f83\u4e0d\u540c\u4f18\u5316\u7ea7\u522b \uff1a\u7528 -O0 \u548c -O3 \u7f16\u8bd1\u6bd4\u8f83PTX\u5dee\u5f02 \u5173\u6ce8\u5173\u952e\u6307\u4ee4 \uff1a LD/ST \u5185\u5b58\u6307\u4ee4 FMA \u8ba1\u7b97\u6307\u4ee4 BAR \u540c\u6b65\u6307\u4ee4 \u4f7f\u7528\u53ef\u89c6\u5316\u5de5\u5177 \uff1a ncu-ui ./myprogram # \u56fe\u5f62\u754c\u9762\u67e5\u770b\u6307\u4ee4\u6df7\u5408","title":"5. \u5feb\u901f\u5b66\u4e60\u5efa\u8bae"},{"location":"cuda/cmd/#6","text":"\u5b98\u65b9\u6587\u6863 \uff1a PTX ISA\u53c2\u8003 CUDA\u4e8c\u8fdb\u5236\u5de5\u5177\u6307\u5357 \u5173\u952e\u624b\u518c\u7ae0\u8282 \uff1a PTX\u5bc4\u5b58\u5668\u7c7b\u578b(.b8, .u16, .f32\u7b49) \u5bfb\u5740\u6a21\u5f0f(\u5bc4\u5b58\u5668/\u7acb\u5373\u6570/\u95f4\u63a5) \u8c13\u8bcd\u6267\u884c\u7cfb\u7edf \u5b9e\u9645\u6848\u4f8b\u5b66\u4e60 \uff1a cuobjdump -ptx myexecutable | less # \u6d4f\u89c8PTX\u4ee3\u7801 ncu --set details -k mykernel ./myprogram # \u8be6\u7ec6\u5185\u6838\u5206\u6790 \u638c\u63e1\u8fd9\u4e9b\u6307\u4ee4\u540e\uff0c\u4f60\u5c06\u80fd\u66f4\u597d\u5730\u7406\u89e3CUDA\u5185\u6838\u7684\u5b9e\u9645\u6267\u884c\u884c\u4e3a\uff0c\u5e76\u8fdb\u884c\u66f4\u6709\u6548\u7684\u4f18\u5316\u3002","title":"6. \u5b9e\u7528\u5b66\u4e60\u8d44\u6e90"},{"location":"cuda/cmd/#nvidia-rtx-4090-ada-lovelace","text":"RTX 4090\u91c7\u7528\u7684Ada Lovelace\u67b6\u6784\u786e\u5b9e\u5f15\u5165\u4e86\u4e00\u4e9b\u7279\u6b8a\u6307\u4ee4\u548c\u4f18\u5316\u7279\u6027\uff0c\u4ee5\u4e0b\u662f\u5173\u952e\u5185\u5bb9\uff1a","title":"NVIDIA RTX 4090 (Ada Lovelace\u67b6\u6784) \u7684\u7279\u6b8a\u6307\u4ee4\u4e0e\u9ad8\u6548\u4f18\u5316"},{"location":"cuda/cmd/#ada-lovelace","text":"","title":"\u4e00\u3001Ada Lovelace\u67b6\u6784\u7279\u6709\u7684\u65b0\u6307\u4ee4"},{"location":"cuda/cmd/#1-tensor-core","text":"HMMA2 (\u6df7\u5408\u7cbe\u5ea6\u77e9\u9635\u4e58\u52a0) - \u652f\u6301\u65b0\u578bFP8\u683c\u5f0f IMMA2 (\u6574\u6570\u77e9\u9635\u4e58\u52a0) - \u52a0\u901fINT8/INT4\u63a8\u7406 DP4A \u589e\u5f3a\u7248 - \u66f4\u9ad8\u6548\u7684INT8\u70b9\u79ef\u8fd0\u7b97","title":"1. \u7b2c\u4e09\u4ee3Tensor Core\u589e\u5f3a\u6307\u4ee4"},{"location":"cuda/cmd/#2-shader-execution-reordering-ser","text":"REORDER \u6307\u4ee4 - \u52a8\u6001\u91cd\u6392\u7740\u8272\u5668\u6267\u884c\u987a\u5e8f COHERENCE \u63a7\u5236\u6307\u4ee4 - \u6539\u8fdb\u5149\u7ebf\u8ffd\u8e2a\u7684\u5185\u5b58\u4e00\u81f4\u6027","title":"2. \u65b0\u7684Shader Execution Reordering (SER)\u6307\u4ee4"},{"location":"cuda/cmd/#3-nvdla","text":"DL2 \u524d\u7f00\u6307\u4ee4 - \u6df1\u5ea6\u5b66\u4e60\u52a0\u901f\u6307\u4ee4\u96c6\u6269\u5c55 SMEMD - \u5171\u4eab\u5185\u5b58\u76f4\u63a5\u6570\u636e\u4ea4\u6362\u6307\u4ee4","title":"3. \u7b2c\u516b\u4ee3NVDLA\u589e\u5f3a"},{"location":"cuda/cmd/#rtx-4090","text":"","title":"\u4e8c\u3001\u9488\u5bf9RTX 4090\u7684\u9ad8\u6548\u6307\u4ee4\u4f7f\u7528"},{"location":"cuda/cmd/#_5","text":"FP32\u77e9\u9635\u8fd0\u7b97 \uff1a // \u4f7f\u7528\u65b0\u7684FFMA.PRED\u6307\u4ee4 @ p FFMA.PRED.RN.FTZ R0 , R1 , R2 , R0 ; // \u5e26\u8c13\u8bcd\u7684\u878d\u5408\u4e58\u52a0 INT8\u63a8\u7406\u52a0\u901f \uff1a // \u4f7f\u7528IMMA.8816\u6307\u4ee4 IMMA.8816.S8.S8.S32 R0 , R1 , R2 , R0 ; // INT8\u77e9\u9635\u4e58\u52a0","title":"\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u4f18\u5316"},{"location":"cuda/cmd/#_6","text":"\u65b0\u7684LDG.128\u6307\u4ee4 \uff1a LDG.128.SYS R0 , [ R1 ]; // 128-bit\u5168\u5c40\u5185\u5b58\u52a0\u8f7d \u589e\u5f3a\u7684L2\u7f13\u5b58\u63a7\u5236 \uff1a PREFETCH.L2 [ R1 ]; // \u4e3b\u52a8L2\u9884\u53d6 MEMBAR.GL.SYS ; // \u6539\u8fdb\u7684\u5185\u5b58\u5c4f\u969c","title":"\u5185\u5b58\u8bbf\u95ee\u4f18\u5316"},{"location":"cuda/cmd/#_7","text":"","title":"\u4e09\u3001\u5b9e\u9645\u4f18\u5316\u6848\u4f8b"},{"location":"cuda/cmd/#_8","text":"// \u4f7f\u7528\u65b0\u7684RT\u6838\u5fc3\u6307\u4ee4 RT.TRACE.ACCEL R0 , [ R1 ] , R2 ; // \u52a0\u901f\u7684\u5149\u7ebf\u8ffd\u8e2a\u67e5\u8be2 RT.REORDER.START ; // \u5f00\u59cb\u6267\u884c\u91cd\u6392","title":"\u5149\u7ebf\u8ffd\u8e2a\u4f18\u5316"},{"location":"cuda/cmd/#ai","text":"// FP8\u77e9\u9635\u8fd0\u7b97 HMMA2.1688.FP8.FP8.FP32 R0 , R1 , R2 , R0 ;","title":"AI\u63a8\u7406\u4f18\u5316"},{"location":"cuda/cmd/#4090","text":"\u4f7f\u7528Nsight Compute \uff1a ncu --arch sm_89 --query-metrics \u68c0\u67e5\u7279\u5b9a\u5185\u6838 \uff1a ncu --kernel-name MyKernel --set full --metrics smsp__inst_executed.avg.per_cycle_active ./myapp PTX\u5230SASS\u8f6c\u6362\u89c2\u5bdf \uff1a cuobjdump -arch = sm_89 -ptx -sass mykernel.o","title":"\u56db\u3001\u67e5\u770b4090\u7279\u5b9a\u6307\u4ee4\u7684\u65b9\u6cd5"},{"location":"cuda/cmd/#_9","text":"\u4f18\u5148\u4f7f\u7528Tensor Core \uff1a \u5c3d\u91cf\u5c06\u8ba1\u7b97\u8f6c\u6362\u4e3aFP16/FP8/INT8\u77e9\u9635\u8fd0\u7b97 \u4f7f\u7528 mma.sync \u6307\u4ee4\u96c6 \u5229\u7528\u65b0\u7684\u5185\u5b58\u5c42\u6b21 \uff1a __global__ void kernel () { __builtin_prefetch ( ptr , 1 ); // \u4f7f\u7528\u786c\u4ef6\u9884\u53d6 } SER\u7279\u6027\u5e94\u7528 \uff1a // \u5728\u5149\u7ebf\u8ffd\u8e2a\u5185\u6838\u4e2d\u542f\u7528 __attribute__ (( reorder_with_hint ( high_priority ))) \u4f7f\u7528\u65b0\u7684CUDA 12.x\u7279\u6027 \uff1a #pragma unroll 2 // \u5229\u7528\u589e\u5f3a\u7684\u5faa\u73af\u5c55\u5f00 RTX 4090\u7684\u8fd9\u4e9b\u65b0\u6307\u4ee4\u9700\u8981\u914d\u5408CUDA 12.x\u53ca\u4ee5\u4e0a\u7248\u672c\u4f7f\u7528\uff0c\u5efa\u8bae\u53c2\u8003NVIDIA\u7684\u300aAda Lovelace\u67b6\u6784\u767d\u76ae\u4e66\u300b\u83b7\u53d6\u6700\u65b0\u6307\u4ee4\u7ec6\u8282\u3002","title":"\u4e94\u3001\u5173\u952e\u4f18\u5316\u5efa\u8bae"},{"location":"cuda/other/","text":"mps : MPS \u662f CUDA \u7684 Multi-Process Service\uff08\u591a\u8fdb\u7a0b\u670d\u52a1\uff09\uff0c\u5b83\u5141\u8bb8\u591a\u4e2a CUDA \u5e94\u7528\u7a0b\u5e8f\u5171\u4eab GPU \u8d44\u6e90\uff0c\u4ece\u800c\u63d0\u9ad8 GPU \u7684\u5229\u7528\u7387\u548c\u541e\u5410\u91cf\u3002MPS \u53ef\u4ee5\u5e2e\u52a9\u51cf\u5c11\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u5f00\u9500\uff0c\u5e76\u5141\u8bb8\u591a\u4e2a\u8fdb\u7a0b\u540c\u65f6\u6267\u884c GPU \u4efb\u52a1\u3002 rdma : RDMA\uff08Remote Direct Memory Access\uff09\u662f\u4e00\u79cd\u7f51\u7edc\u901a\u4fe1\u6280\u672f\uff0c\u5b83\u5141\u8bb8\u5728\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u4e4b\u95f4\u76f4\u63a5\u8bbf\u95ee\u5185\u5b58\uff0c\u800c\u4e0d\u9700\u8981\u901a\u8fc7\u7f51\u7edc\u8fdb\u884c\u6570\u636e\u4f20\u8f93\u3002RDMA \u6280\u672f\u53ef\u4ee5\u63d0\u9ad8\u6570\u636e\u4f20\u8f93\u7684\u6548\u7387\u548c\u6027\u80fd\u3002","title":"Other"},{"location":"cuda/profile/","text":"\u5728\u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\u67e5\u770bCUDA\u7a0b\u5e8f\u6027\u80fd \u00b6 \u8981\u5728\u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\u67e5\u770bCUDA\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u7279\u522b\u662f\u6bcf\u6761\u6307\u4ee4\u7684\u8017\u65f6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51e0\u79cd\u65b9\u6cd5\uff1a 1. \u4f7f\u7528nvprof (NVIDIA Profiler) \u00b6 nvprof\u662fNVIDIA\u63d0\u4f9b\u7684\u547d\u4ee4\u884c\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u53ef\u4ee5\u8be6\u7ec6\u5206\u6790CUDA\u5185\u6838\u548cAPI\u8c03\u7528\u3002 nvprof ./your_cuda_program \u5e38\u7528\u9009\u9879\uff1a \u00b6 --print-gpu-trace \uff1a\u663e\u793aGPU\u6d3b\u52a8\u7684\u65f6\u95f4\u7ebf --metrics all \uff1a\u663e\u793a\u6240\u6709\u53ef\u7528\u6307\u6807 --events all \uff1a\u8bb0\u5f55\u6240\u6709\u4e8b\u4ef6 --analysis-metrics \uff1a\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u5206\u6790 \u4f8b\u5982\uff0c\u67e5\u770b\u6bcf\u6761\u6307\u4ee4\u7684\u8017\u65f6\uff1a nvprof --print-gpu-trace --metrics inst_executed ./your_cuda_program 2. \u4f7f\u7528Nsight Compute (ncu) \u00b6 Nsight Compute\u662f\u66f4\u73b0\u4ee3\u7684CUDA\u5185\u6838\u5206\u6790\u5de5\u5177\uff0c\u63d0\u4f9b\u6307\u4ee4\u7ea7\u5206\u6790\uff1a ncu --set full ./your_cuda_program sudo apt install nvidia-modprobe sudo usermod -a -G video $USER reboot \u5e38\u7528\u9009\u9879\uff1a \u00b6 --section SpeedOfLight \uff1a\u663e\u793a\u8ba1\u7b97\u548c\u5185\u5b58\u541e\u5410\u91cf --section InstructionStats \uff1a\u663e\u793a\u6307\u4ee4\u7edf\u8ba1 --section SchedulerStats \uff1a\u663e\u793a\u8c03\u5ea6\u5668\u7edf\u8ba1 --kernel-regex pattern \uff1a\u53ea\u5206\u6790\u5339\u914d\u7684\u5185\u6838 \u4f8b\u5982\uff0c\u5206\u6790\u7279\u5b9a\u5185\u6838\u7684\u6307\u4ee4\u8017\u65f6\uff1a ncu --kernel-name myKernel --section InstructionStats ./your_cuda_program 3. \u4f7f\u7528Nsight Systems (nsys) \u00b6 \u5bf9\u4e8e\u7cfb\u7edf\u7ea7\u5206\u6790\uff0c\u5305\u62ecCPU\u548cGPU\u6d3b\u52a8\uff1a nsys profile ./your_cuda_program 4. \u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0\u65f6\u95f4\u6d4b\u91cf \u00b6 \u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u624b\u52a8\u6dfb\u52a0\u65f6\u95f4\u6d4b\u91cf\uff1a cudaEvent_t start , stop ; cudaEventCreate ( & start ); cudaEventCreate ( & stop ); cudaEventRecord ( start ); // \u8981\u6d4b\u91cf\u7684CUDA\u4ee3\u7801 myKernel <<< grid , block >>> (...); cudaEventRecord ( stop ); cudaEventSynchronize ( stop ); float milliseconds = 0 ; cudaEventElapsedTime ( & milliseconds , start , stop ); printf ( \"Kernel time: %f ms \\n \" , milliseconds ); 5. \u67e5\u770bPTX/SASS\u6307\u4ee4 \u00b6 \u8981\u67e5\u770b\u5b9e\u9645\u7684\u6307\u4ee4\u7ea7\u6027\u80fd\uff0c\u4f60\u9700\u8981\u5206\u6790PTX\u6216SASS\u4ee3\u7801\uff1a cuobjdump -sass your_cuda_program \u7136\u540e\u7ed3\u5408Nsight Compute\u7684\u5206\u6790\u7ed3\u679c\u6765\u7406\u89e3\u6bcf\u6761\u6307\u4ee4\u7684\u6027\u80fd\u3002 \u6ce8\u610f\u4e8b\u9879 \u00b6 \u786e\u4fdd\u4f60\u7684\u7a0b\u5e8f\u662f\u4f7f\u7528\u8c03\u8bd5\u7b26\u53f7\u7f16\u8bd1\u7684\uff08 -G \u6216 -lineinfo \u9009\u9879\uff09 \u5206\u6790\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u6027\u80fd\uff0c\u56e0\u6b64\u7ed3\u679c\u4ec5\u4f9b\u53c2\u8003 \u5bf9\u4e8e\u6307\u4ee4\u7ea7\u5206\u6790\uff0cNsight Compute\u901a\u5e38\u6bd4nvprof\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f CUDA\u6027\u80fd\u5206\u6790\u5de5\u5177\u4f18\u7f3a\u70b9\u5bf9\u6bd4 \u00b6 \u4ee5\u4e0b\u662f\u5404\u79cdCUDA\u6027\u80fd\u5206\u6790\u65b9\u6cd5\u7684\u4f18\u7f3a\u70b9\u6bd4\u8f83\uff0c\u5e2e\u52a9\u4f60\u6839\u636e\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u5de5\u5177\uff1a 1. nvprof (NVIDIA Profiler) \u00b6 \u4f18\u70b9 \uff1a - \u7b80\u5355\u6613\u7528\uff0c\u57fa\u672c\u6027\u80fd\u6570\u636e\u4e00\u76ee\u4e86\u7136 - \u652f\u6301\u6240\u6709CUDA\u7248\u672c\uff08\u867d\u7136\u65b0\u7248\u672c\u5df2\u5f03\u7528\uff0c\u4f46\u4ecd\u5e7f\u6cdb\u4f7f\u7528\uff09 - \u53ef\u4ee5\u6536\u96c6\u5404\u79cd\u786c\u4ef6\u8ba1\u6570\u5668 - \u63d0\u4f9bAPI\u8c03\u7528\u548c\u5185\u6838\u6267\u884c\u7684\u65f6\u95f4\u7ebf \u7f3a\u70b9 \uff1a - \u5728\u8f83\u65b0CUDA\u7248\u672c\u4e2d\u5df2\u6807\u8bb0\u4e3a\u5f03\u7528\uff08\u63a8\u8350\u4f7f\u7528Nsight\u5de5\u5177\uff09 - \u6307\u4ee4\u7ea7\u5206\u6790\u4e0d\u591f\u8be6\u7ec6 - \u5bf9Ampere\u67b6\u6784\u53ca\u66f4\u65b0\u7684GPU\u652f\u6301\u6709\u9650 - \u7528\u6237\u754c\u9762\u76f8\u5bf9\u7b80\u5355 2. Nsight Compute (ncu) \u00b6 \u4f18\u70b9 \uff1a - \u63d0\u4f9b\u6700\u8be6\u7ec6\u7684\u6307\u4ee4\u7ea7\u6027\u80fd\u5206\u6790 - \u652f\u6301\u6700\u65b0\u7684GPU\u67b6\u6784\u7279\u6027 - \u53ef\u4ee5\u5206\u6790\u5355\u4e2a\u5185\u6838\u7684SASS\u6307\u4ee4\u6027\u80fd - \u63d0\u4f9b\u4e30\u5bcc\u7684\u6027\u80fd\u6307\u6807\u548c\u74f6\u9888\u5206\u6790 - \u652f\u6301\u4ea4\u4e92\u5f0f\u5206\u6790\u6a21\u5f0f \u7f3a\u70b9 \uff1a - \u5b66\u4e60\u66f2\u7ebf\u8f83\u9661\u5ced - \u8be6\u7ec6\u5206\u6790\u4f1a\u663e\u8457\u589e\u52a0\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4 - \u8f93\u51fa\u4fe1\u606f\u91cf\u5927\uff0c\u9700\u8981\u4e13\u4e1a\u77e5\u8bc6\u89e3\u8bfb - \u4e3b\u8981\u5173\u6ce8\u5185\u6838\u6027\u80fd\uff0c\u7cfb\u7edf\u7ea7\u5206\u6790\u8f83\u5f31 3. Nsight Systems (nsys) \u00b6 \u4f18\u70b9 \uff1a - \u63d0\u4f9b\u5b8c\u6574\u7684\u7cfb\u7edf\u7ea7\u89c6\u56fe\uff08CPU+GPU+\u5185\u5b58\u7b49\uff09 - \u65f6\u95f4\u7ebf\u53ef\u89c6\u5316\u975e\u5e38\u5f3a\u5927 - \u5f00\u9500\u76f8\u5bf9\u8f83\u5c0f\uff0c\u9002\u5408\u5206\u6790\u6574\u4e2a\u5e94\u7528 - \u652f\u6301\u591a\u8fdb\u7a0b\u548c\u591aGPU\u5206\u6790 - \u53ef\u4ee5\u8bc6\u522bCPU-GPU\u540c\u6b65\u95ee\u9898 \u7f3a\u70b9 \uff1a - \u4e0d\u63d0\u4f9b\u6307\u4ee4\u7ea7\u5206\u6790\u7ec6\u8282 - \u5bf9\u4e8e\u7eaf\u5185\u6838\u4f18\u5316\u5e2e\u52a9\u6709\u9650 - \u751f\u6210\u7684\u62a5\u544a\u6587\u4ef6\u53ef\u80fd\u5f88\u5927 - \u9700\u8981GUI\uff08nsight-sys\uff09\u83b7\u5f97\u6700\u4f73\u4f53\u9a8c 4. \u4ee3\u7801\u5185\u624b\u52a8\u8ba1\u65f6 \u00b6 \u4f18\u70b9 \uff1a - \u7cbe\u786e\u63a7\u5236\u6d4b\u91cf\u8303\u56f4 - \u65e0\u9700\u989d\u5916\u5de5\u5177\u4f9d\u8d56 - \u53ef\u4ee5\u96c6\u6210\u5230\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d - \u9002\u5408\u751f\u4ea7\u73af\u5883\u76d1\u63a7 \u7f3a\u70b9 \uff1a - \u53ea\u63d0\u4f9b\u7c97\u7c92\u5ea6\u65f6\u95f4\u6d4b\u91cf - \u65e0\u6cd5\u83b7\u53d6\u786c\u4ef6\u6027\u80fd\u8ba1\u6570\u5668 - \u9700\u8981\u4fee\u6539\u4ee3\u7801 - \u6d4b\u91cf\u672c\u8eab\u53ef\u80fd\u5f15\u5165\u5f00\u9500 5. PTX/SASS\u6307\u4ee4\u5206\u6790 (cuobjdump) \u00b6 \u4f18\u70b9 \uff1a - \u67e5\u770b\u5b9e\u9645\u6267\u884c\u7684\u673a\u5668\u6307\u4ee4 - \u7406\u89e3\u7f16\u8bd1\u5668\u4f18\u5316\u7ed3\u679c - \u5e2e\u52a9\u8fdb\u884c\u6781\u7aef\u4f18\u5316 \u7f3a\u70b9 \uff1a - \u9700\u8981\u6df1\u539a\u7684GPU\u67b6\u6784\u77e5\u8bc6 - \u65e0\u6cd5\u76f4\u63a5\u5173\u8054\u5230\u6e90\u4ee3\u7801 - \u4e0d\u63d0\u4f9b\u6027\u80fd\u6570\u636e - \u5206\u6790\u8fc7\u7a0b\u7e41\u7410 \u5de5\u5177\u9009\u62e9\u5efa\u8bae \u00b6 \u5206\u6790\u9700\u6c42 \u63a8\u8350\u5de5\u5177 \u5feb\u901f\u83b7\u53d6\u57fa\u672c\u6027\u80fd\u6570\u636e nvprof \u6df1\u5165\u5206\u6790\u5185\u6838\u74f6\u9888 Nsight Compute \u7cfb\u7edf\u7ea7\u6027\u80fd\u5206\u6790 Nsight Systems \u957f\u671f\u6027\u80fd\u76d1\u63a7 \u4ee3\u7801\u5185\u8ba1\u65f6 \u6781\u7aef\u4f18\u5316/\u6307\u4ee4\u5206\u6790 cuobjdump + Nsight Compute \u5bf9\u4e8e\u4f60\u7684\u5177\u4f53\u9700\u6c42\"\u67e5\u770b\u6bcf\u4e00\u6761\u6307\u4ee4\u7684\u8017\u65f6\"\uff0c Nsight Compute (ncu) \u662f\u6700\u5408\u9002\u7684\u9009\u62e9\uff0c\u5b83\u80fd\u63d0\u4f9b\u6700\u8be6\u7ec6\u7684\u6307\u4ee4\u7ea7\u6027\u80fd\u5206\u6790\uff0c\u5305\u62ec\u6307\u4ee4\u541e\u5410\u91cf\u3001\u505c\u987f\u5468\u671f\u7b49\u4fe1\u606f\u3002 sudo vim /etc/modprobe.d/nvidia-profiler.conf # options nvidia NVreg_RestrictProfilingToAdminUsers=0 sudo update-initramfs -u sudo reboot","title":"\u5728\u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\u67e5\u770bCUDA\u7a0b\u5e8f\u6027\u80fd"},{"location":"cuda/profile/#cuda","text":"\u8981\u5728\u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\u67e5\u770bCUDA\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u7279\u522b\u662f\u6bcf\u6761\u6307\u4ee4\u7684\u8017\u65f6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51e0\u79cd\u65b9\u6cd5\uff1a","title":"\u5728\u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\u67e5\u770bCUDA\u7a0b\u5e8f\u6027\u80fd"},{"location":"cuda/profile/#1-nvprof-nvidia-profiler","text":"nvprof\u662fNVIDIA\u63d0\u4f9b\u7684\u547d\u4ee4\u884c\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u53ef\u4ee5\u8be6\u7ec6\u5206\u6790CUDA\u5185\u6838\u548cAPI\u8c03\u7528\u3002 nvprof ./your_cuda_program","title":"1. \u4f7f\u7528nvprof (NVIDIA Profiler)"},{"location":"cuda/profile/#_1","text":"--print-gpu-trace \uff1a\u663e\u793aGPU\u6d3b\u52a8\u7684\u65f6\u95f4\u7ebf --metrics all \uff1a\u663e\u793a\u6240\u6709\u53ef\u7528\u6307\u6807 --events all \uff1a\u8bb0\u5f55\u6240\u6709\u4e8b\u4ef6 --analysis-metrics \uff1a\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u5206\u6790 \u4f8b\u5982\uff0c\u67e5\u770b\u6bcf\u6761\u6307\u4ee4\u7684\u8017\u65f6\uff1a nvprof --print-gpu-trace --metrics inst_executed ./your_cuda_program","title":"\u5e38\u7528\u9009\u9879\uff1a"},{"location":"cuda/profile/#2-nsight-compute-ncu","text":"Nsight Compute\u662f\u66f4\u73b0\u4ee3\u7684CUDA\u5185\u6838\u5206\u6790\u5de5\u5177\uff0c\u63d0\u4f9b\u6307\u4ee4\u7ea7\u5206\u6790\uff1a ncu --set full ./your_cuda_program sudo apt install nvidia-modprobe sudo usermod -a -G video $USER reboot","title":"2. \u4f7f\u7528Nsight Compute (ncu)"},{"location":"cuda/profile/#_2","text":"--section SpeedOfLight \uff1a\u663e\u793a\u8ba1\u7b97\u548c\u5185\u5b58\u541e\u5410\u91cf --section InstructionStats \uff1a\u663e\u793a\u6307\u4ee4\u7edf\u8ba1 --section SchedulerStats \uff1a\u663e\u793a\u8c03\u5ea6\u5668\u7edf\u8ba1 --kernel-regex pattern \uff1a\u53ea\u5206\u6790\u5339\u914d\u7684\u5185\u6838 \u4f8b\u5982\uff0c\u5206\u6790\u7279\u5b9a\u5185\u6838\u7684\u6307\u4ee4\u8017\u65f6\uff1a ncu --kernel-name myKernel --section InstructionStats ./your_cuda_program","title":"\u5e38\u7528\u9009\u9879\uff1a"},{"location":"cuda/profile/#3-nsight-systems-nsys","text":"\u5bf9\u4e8e\u7cfb\u7edf\u7ea7\u5206\u6790\uff0c\u5305\u62ecCPU\u548cGPU\u6d3b\u52a8\uff1a nsys profile ./your_cuda_program","title":"3. \u4f7f\u7528Nsight Systems (nsys)"},{"location":"cuda/profile/#4","text":"\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u624b\u52a8\u6dfb\u52a0\u65f6\u95f4\u6d4b\u91cf\uff1a cudaEvent_t start , stop ; cudaEventCreate ( & start ); cudaEventCreate ( & stop ); cudaEventRecord ( start ); // \u8981\u6d4b\u91cf\u7684CUDA\u4ee3\u7801 myKernel <<< grid , block >>> (...); cudaEventRecord ( stop ); cudaEventSynchronize ( stop ); float milliseconds = 0 ; cudaEventElapsedTime ( & milliseconds , start , stop ); printf ( \"Kernel time: %f ms \\n \" , milliseconds );","title":"4. \u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0\u65f6\u95f4\u6d4b\u91cf"},{"location":"cuda/profile/#5-ptxsass","text":"\u8981\u67e5\u770b\u5b9e\u9645\u7684\u6307\u4ee4\u7ea7\u6027\u80fd\uff0c\u4f60\u9700\u8981\u5206\u6790PTX\u6216SASS\u4ee3\u7801\uff1a cuobjdump -sass your_cuda_program \u7136\u540e\u7ed3\u5408Nsight Compute\u7684\u5206\u6790\u7ed3\u679c\u6765\u7406\u89e3\u6bcf\u6761\u6307\u4ee4\u7684\u6027\u80fd\u3002","title":"5. \u67e5\u770bPTX/SASS\u6307\u4ee4"},{"location":"cuda/profile/#_3","text":"\u786e\u4fdd\u4f60\u7684\u7a0b\u5e8f\u662f\u4f7f\u7528\u8c03\u8bd5\u7b26\u53f7\u7f16\u8bd1\u7684\uff08 -G \u6216 -lineinfo \u9009\u9879\uff09 \u5206\u6790\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u6027\u80fd\uff0c\u56e0\u6b64\u7ed3\u679c\u4ec5\u4f9b\u53c2\u8003 \u5bf9\u4e8e\u6307\u4ee4\u7ea7\u5206\u6790\uff0cNsight Compute\u901a\u5e38\u6bd4nvprof\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"cuda/profile/#cuda_1","text":"\u4ee5\u4e0b\u662f\u5404\u79cdCUDA\u6027\u80fd\u5206\u6790\u65b9\u6cd5\u7684\u4f18\u7f3a\u70b9\u6bd4\u8f83\uff0c\u5e2e\u52a9\u4f60\u6839\u636e\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u5de5\u5177\uff1a","title":"CUDA\u6027\u80fd\u5206\u6790\u5de5\u5177\u4f18\u7f3a\u70b9\u5bf9\u6bd4"},{"location":"cuda/profile/#1-nvprof-nvidia-profiler_1","text":"\u4f18\u70b9 \uff1a - \u7b80\u5355\u6613\u7528\uff0c\u57fa\u672c\u6027\u80fd\u6570\u636e\u4e00\u76ee\u4e86\u7136 - \u652f\u6301\u6240\u6709CUDA\u7248\u672c\uff08\u867d\u7136\u65b0\u7248\u672c\u5df2\u5f03\u7528\uff0c\u4f46\u4ecd\u5e7f\u6cdb\u4f7f\u7528\uff09 - \u53ef\u4ee5\u6536\u96c6\u5404\u79cd\u786c\u4ef6\u8ba1\u6570\u5668 - \u63d0\u4f9bAPI\u8c03\u7528\u548c\u5185\u6838\u6267\u884c\u7684\u65f6\u95f4\u7ebf \u7f3a\u70b9 \uff1a - \u5728\u8f83\u65b0CUDA\u7248\u672c\u4e2d\u5df2\u6807\u8bb0\u4e3a\u5f03\u7528\uff08\u63a8\u8350\u4f7f\u7528Nsight\u5de5\u5177\uff09 - \u6307\u4ee4\u7ea7\u5206\u6790\u4e0d\u591f\u8be6\u7ec6 - \u5bf9Ampere\u67b6\u6784\u53ca\u66f4\u65b0\u7684GPU\u652f\u6301\u6709\u9650 - \u7528\u6237\u754c\u9762\u76f8\u5bf9\u7b80\u5355","title":"1. nvprof (NVIDIA Profiler)"},{"location":"cuda/profile/#2-nsight-compute-ncu_1","text":"\u4f18\u70b9 \uff1a - \u63d0\u4f9b\u6700\u8be6\u7ec6\u7684\u6307\u4ee4\u7ea7\u6027\u80fd\u5206\u6790 - \u652f\u6301\u6700\u65b0\u7684GPU\u67b6\u6784\u7279\u6027 - \u53ef\u4ee5\u5206\u6790\u5355\u4e2a\u5185\u6838\u7684SASS\u6307\u4ee4\u6027\u80fd - \u63d0\u4f9b\u4e30\u5bcc\u7684\u6027\u80fd\u6307\u6807\u548c\u74f6\u9888\u5206\u6790 - \u652f\u6301\u4ea4\u4e92\u5f0f\u5206\u6790\u6a21\u5f0f \u7f3a\u70b9 \uff1a - \u5b66\u4e60\u66f2\u7ebf\u8f83\u9661\u5ced - \u8be6\u7ec6\u5206\u6790\u4f1a\u663e\u8457\u589e\u52a0\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4 - \u8f93\u51fa\u4fe1\u606f\u91cf\u5927\uff0c\u9700\u8981\u4e13\u4e1a\u77e5\u8bc6\u89e3\u8bfb - \u4e3b\u8981\u5173\u6ce8\u5185\u6838\u6027\u80fd\uff0c\u7cfb\u7edf\u7ea7\u5206\u6790\u8f83\u5f31","title":"2. Nsight Compute (ncu)"},{"location":"cuda/profile/#3-nsight-systems-nsys_1","text":"\u4f18\u70b9 \uff1a - \u63d0\u4f9b\u5b8c\u6574\u7684\u7cfb\u7edf\u7ea7\u89c6\u56fe\uff08CPU+GPU+\u5185\u5b58\u7b49\uff09 - \u65f6\u95f4\u7ebf\u53ef\u89c6\u5316\u975e\u5e38\u5f3a\u5927 - \u5f00\u9500\u76f8\u5bf9\u8f83\u5c0f\uff0c\u9002\u5408\u5206\u6790\u6574\u4e2a\u5e94\u7528 - \u652f\u6301\u591a\u8fdb\u7a0b\u548c\u591aGPU\u5206\u6790 - \u53ef\u4ee5\u8bc6\u522bCPU-GPU\u540c\u6b65\u95ee\u9898 \u7f3a\u70b9 \uff1a - \u4e0d\u63d0\u4f9b\u6307\u4ee4\u7ea7\u5206\u6790\u7ec6\u8282 - \u5bf9\u4e8e\u7eaf\u5185\u6838\u4f18\u5316\u5e2e\u52a9\u6709\u9650 - \u751f\u6210\u7684\u62a5\u544a\u6587\u4ef6\u53ef\u80fd\u5f88\u5927 - \u9700\u8981GUI\uff08nsight-sys\uff09\u83b7\u5f97\u6700\u4f73\u4f53\u9a8c","title":"3. Nsight Systems (nsys)"},{"location":"cuda/profile/#4_1","text":"\u4f18\u70b9 \uff1a - \u7cbe\u786e\u63a7\u5236\u6d4b\u91cf\u8303\u56f4 - \u65e0\u9700\u989d\u5916\u5de5\u5177\u4f9d\u8d56 - \u53ef\u4ee5\u96c6\u6210\u5230\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d - \u9002\u5408\u751f\u4ea7\u73af\u5883\u76d1\u63a7 \u7f3a\u70b9 \uff1a - \u53ea\u63d0\u4f9b\u7c97\u7c92\u5ea6\u65f6\u95f4\u6d4b\u91cf - \u65e0\u6cd5\u83b7\u53d6\u786c\u4ef6\u6027\u80fd\u8ba1\u6570\u5668 - \u9700\u8981\u4fee\u6539\u4ee3\u7801 - \u6d4b\u91cf\u672c\u8eab\u53ef\u80fd\u5f15\u5165\u5f00\u9500","title":"4. \u4ee3\u7801\u5185\u624b\u52a8\u8ba1\u65f6"},{"location":"cuda/profile/#5-ptxsass-cuobjdump","text":"\u4f18\u70b9 \uff1a - \u67e5\u770b\u5b9e\u9645\u6267\u884c\u7684\u673a\u5668\u6307\u4ee4 - \u7406\u89e3\u7f16\u8bd1\u5668\u4f18\u5316\u7ed3\u679c - \u5e2e\u52a9\u8fdb\u884c\u6781\u7aef\u4f18\u5316 \u7f3a\u70b9 \uff1a - \u9700\u8981\u6df1\u539a\u7684GPU\u67b6\u6784\u77e5\u8bc6 - \u65e0\u6cd5\u76f4\u63a5\u5173\u8054\u5230\u6e90\u4ee3\u7801 - \u4e0d\u63d0\u4f9b\u6027\u80fd\u6570\u636e - \u5206\u6790\u8fc7\u7a0b\u7e41\u7410","title":"5. PTX/SASS\u6307\u4ee4\u5206\u6790 (cuobjdump)"},{"location":"cuda/profile/#_4","text":"\u5206\u6790\u9700\u6c42 \u63a8\u8350\u5de5\u5177 \u5feb\u901f\u83b7\u53d6\u57fa\u672c\u6027\u80fd\u6570\u636e nvprof \u6df1\u5165\u5206\u6790\u5185\u6838\u74f6\u9888 Nsight Compute \u7cfb\u7edf\u7ea7\u6027\u80fd\u5206\u6790 Nsight Systems \u957f\u671f\u6027\u80fd\u76d1\u63a7 \u4ee3\u7801\u5185\u8ba1\u65f6 \u6781\u7aef\u4f18\u5316/\u6307\u4ee4\u5206\u6790 cuobjdump + Nsight Compute \u5bf9\u4e8e\u4f60\u7684\u5177\u4f53\u9700\u6c42\"\u67e5\u770b\u6bcf\u4e00\u6761\u6307\u4ee4\u7684\u8017\u65f6\"\uff0c Nsight Compute (ncu) \u662f\u6700\u5408\u9002\u7684\u9009\u62e9\uff0c\u5b83\u80fd\u63d0\u4f9b\u6700\u8be6\u7ec6\u7684\u6307\u4ee4\u7ea7\u6027\u80fd\u5206\u6790\uff0c\u5305\u62ec\u6307\u4ee4\u541e\u5410\u91cf\u3001\u505c\u987f\u5468\u671f\u7b49\u4fe1\u606f\u3002 sudo vim /etc/modprobe.d/nvidia-profiler.conf # options nvidia NVreg_RestrictProfilingToAdminUsers=0 sudo update-initramfs -u sudo reboot","title":"\u5de5\u5177\u9009\u62e9\u5efa\u8bae"},{"location":"cuda/tilelang/","text":"tilelang \u00b6","title":"tilelang"},{"location":"cuda/tilelang/#tilelang","text":"","title":"tilelang"},{"location":"daily/0327/","text":"todo \u00b6 \u5b66\u4e60 code/skiplist gpubenchmark \u00b6 https://github.com/RRZE-HPC/gpu-benches/tree/master llvm \u00b6 https://llvm-study-notes.readthedocs.io/en/latest/ cuda content \u00b6 cuda-gdb cuda-memcheck ncu --target-processes all -o profile_output python3 elu.py \u5206\u6790 profile_output.ncu-rep \u7ed3\u679c \u53ef\u4ee5\u8f6c\u4e3a csv \u6587\u4ef6: ncu --import profile_output.ncu-rep --csv --page raw > profile_output.csv \u770b\u6765\u4fe1\u606f\u5e94\u8be5\u975e\u5e38\u5168 ncu --import profile_output.ncu-rep --page details ncu --import profile_output.ncu-rep --export profile_output.html","title":"0327"},{"location":"daily/0327/#todo","text":"\u5b66\u4e60 code/skiplist","title":"todo"},{"location":"daily/0327/#gpubenchmark","text":"https://github.com/RRZE-HPC/gpu-benches/tree/master","title":"gpubenchmark"},{"location":"daily/0327/#llvm","text":"https://llvm-study-notes.readthedocs.io/en/latest/","title":"llvm"},{"location":"daily/0327/#cuda-content","text":"cuda-gdb cuda-memcheck ncu --target-processes all -o profile_output python3 elu.py \u5206\u6790 profile_output.ncu-rep \u7ed3\u679c \u53ef\u4ee5\u8f6c\u4e3a csv \u6587\u4ef6: ncu --import profile_output.ncu-rep --csv --page raw > profile_output.csv \u770b\u6765\u4fe1\u606f\u5e94\u8be5\u975e\u5e38\u5168 ncu --import profile_output.ncu-rep --page details ncu --import profile_output.ncu-rep --export profile_output.html","title":"cuda content"},{"location":"daily/0328/","text":"vae-3d conv \u00b6 Wan-VAE \u5206\u5757\u56e0\u679c3D\u5377\u79ef from https://zhuanlan.zhihu.com/p/29268015945 class CausalConv3d ( nn . Conv3d ): \"\"\" Causal 3d convolusion. \"\"\" def __init__ ( self , * args , ** kwargs ): super () . __init__ ( * args , ** kwargs ) self . _padding = ( self . padding [ 2 ], self . padding [ 2 ], self . padding [ 1 ], self . padding [ 1 ], 2 * self . padding [ 0 ], 0 ) self . padding = ( 0 , 0 , 0 ) def forward ( self , x , cache_x = None ): padding = list ( self . _padding ) if cache_x is not None and self . _padding [ 4 ] > 0 : cache_x = cache_x . to ( x . device ) x = torch . cat ([ cache_x , x ], dim = 2 ) padding [ 4 ] -= cache_x . shape [ 2 ] x = F . pad ( x , padding ) return super () . forward ( x ) (Pdb) p self.decoder WanDecoder3d( (nonlinearity): SiLU() (conv_in): WanCausalConv3d(16, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (mid_block): WanMidBlock( (attentions): ModuleList( (0): WanAttentionBlock( (norm): WanRMS_norm() (to_qkv): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1)) (proj): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1)) ) ) (resnets): ModuleList( (0-1): 2 x WanResidualBlock( (nonlinearity): SiLU() (norm1): WanRMS_norm() (conv1): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (norm2): WanRMS_norm() (dropout): Dropout(p=0.0, inplace=False) (conv2): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (conv_shortcut): Identity() ) ) ) (up_blocks): ModuleList( (0): WanUpBlock( (resnets): ModuleList( (0-1): 2 x WanResidualBlock( (nonlinearity): SiLU() (norm1): WanRMS_norm() (conv1): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (norm2): WanRMS_norm() (dropout): Dropout(p=0.0, inplace=False) (conv2): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (conv_shortcut): Identity() ) ) (upsamplers): ModuleList( (0): WanResample( (resample): Sequential( (0): WanUpsample(scale_factor=(2.0, 2.0), mode='nearest-exact') (1): Conv2d(384, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)) ) (time_conv): WanCausalConv3d(384, 768, kernel_size=(3, 1, 1), stride=(1, 1, 1)) ) ) ) (1): WanUpBlock( (resnets): ModuleList( (0): WanResidualBlock( (nonlinearity): SiLU() (norm1): WanRMS_norm() (conv1): WanCausalConv3d(192, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (norm2): WanRMS_norm() (dropout): Dropout(p=0.0, inplace=False) (conv2): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (conv_shortcut): WanCausalConv3d(192, 384, kernel_size=(1, 1, 1), stride=(1, 1, 1)) ) (1): WanResidualBlock( (nonlinearity): SiLU() (norm1): WanRMS_norm() (conv1): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (norm2): WanRMS_norm() (dropout): Dropout(p=0.0, inplace=False) (conv2): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (conv_shortcut): Identity() ) ) (upsamplers): ModuleList( (0): WanResample( (resample): Sequential( (0): WanUpsample(scale_factor=(2.0, 2.0), mode='nearest-exact') (1): Conv2d(384, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)) ) (time_conv): WanCausalConv3d(384, 768, kernel_size=(3, 1, 1), stride=(1, 1, 1)) ) ) ) (2): WanUpBlock( (resnets): ModuleList( (0-1): 2 x WanResidualBlock( (nonlinearity): SiLU() (norm1): WanRMS_norm() (conv1): WanCausalConv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (norm2): WanRMS_norm() (dropout): Dropout(p=0.0, inplace=False) (conv2): WanCausalConv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (conv_shortcut): Identity() ) ) (upsamplers): ModuleList( (0): WanResample( (resample): Sequential( (0): WanUpsample(scale_factor=(2.0, 2.0), mode='nearest-exact') (1): Conv2d(192, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)) ) ) ) ) (3): WanUpBlock( (resnets): ModuleList( (0-1): 2 x WanResidualBlock( (nonlinearity): SiLU() (norm1): WanRMS_norm() (conv1): WanCausalConv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (norm2): WanRMS_norm() (dropout): Dropout(p=0.0, inplace=False) (conv2): WanCausalConv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (conv_shortcut): Identity() ) ) ) ) (norm_out): WanRMS_norm() (conv_out): WanCausalConv3d(96, 3, kernel_size=(3, 3, 3), stride=(1, 1, 1)) ) 3D\u56e0\u679cVAE\u67b6\u6784 cache\u5377\u79ef\u8f93\u5165\uff0c\u6d41\u5f0f\u63a8\u7406\uff0c\u6bcf\u6b21\u63a8\u7406\u4e00\u6bb5\uff0c\u663e\u5b58\u5360\u7528\u663e\u8457\u51cf\u5c11 Wan-VAE \u53ef\u4ee5\u7f16\u7801\u548c\u89e3\u7801\u4e0d\u9650\u5236\u957f\u5ea6\u76841080P\u89c6\u9891\uff0c\u800c\u4e0d\u4f1a\u4e22\u5931\u5386\u53f2\u65f6\u95f4\u4fe1\u606f\uff0c\u4f7f\u5176\u7279\u522b\u9002\u5408\u89c6\u9891\u751f\u6210\u4efb\u52a1 class WanCausalConv3d ( nn . Conv3d ): r \"\"\" A custom 3D causal convolution layer with feature caching support. This layer extends the standard Conv3D layer by ensuring causality in the time dimension and handling feature caching for efficient inference. Args: in_channels (int): Number of channels in the input image out_channels (int): Number of channels produced by the convolution kernel_size (int or tuple): Size of the convolving kernel stride (int or tuple, optional): Stride of the convolution. Default: 1 padding (int or tuple, optional): Zero-padding added to all three sides of the input. Default: 0 \"\"\" def __init__ ( self , in_channels : int , out_channels : int , kernel_size : Union [ int , Tuple [ int , int , int ]], stride : Union [ int , Tuple [ int , int , int ]] = 1 , padding : Union [ int , Tuple [ int , int , int ]] = 0 , ) -> None : super () . __init__ ( in_channels = in_channels , out_channels = out_channels , kernel_size = kernel_size , stride = stride , padding = padding , ) # Set up causal padding self . _padding = ( self . padding [ 2 ], self . padding [ 2 ], self . padding [ 1 ], self . padding [ 1 ], 2 * self . padding [ 0 ], 0 ) self . padding = ( 0 , 0 , 0 ) def forward ( self , x , cache_x = None ): padding = list ( self . _padding ) if cache_x is not None and self . _padding [ 4 ] > 0 : cache_x = cache_x . to ( x . device ) x = torch . cat ([ cache_x , x ], dim = 2 ) padding [ 4 ] -= cache_x . shape [ 2 ] x = F . pad ( x , padding ) return super () . forward ( x ) class WanMidBlock ( nn . Module ): def __init__ ( self , dim : int , dropout : float = 0.0 , non_linearity : str = \"silu\" , num_layers : int = 1 ): super () . __init__ () self . dim = dim # Create the components resnets = [ WanResidualBlock ( dim , dim , dropout , non_linearity )] attentions = [] for _ in range ( num_layers ): attentions . append ( WanAttentionBlock ( dim )) resnets . append ( WanResidualBlock ( dim , dim , dropout , non_linearity )) self . attentions = nn . ModuleList ( attentions ) self . resnets = nn . ModuleList ( resnets ) self . gradient_checkpointing = False def forward ( self , x , feat_cache = None , feat_idx = [ 0 ]): # First residual block x = self . resnets [ 0 ]( x , feat_cache , feat_idx ) # Process through attention and residual blocks for attn , resnet in zip ( self . attentions , self . resnets [ 1 :]): if attn is not None : x = attn ( x ) x = resnet ( x , feat_cache , feat_idx ) return x class WanResidualBlock ( nn . Module ): r \"\"\" A custom residual block module. Args: in_dim (int): Number of input channels. out_dim (int): Number of output channels. dropout (float, optional): Dropout rate for the dropout layer. Default is 0.0. non_linearity (str, optional): Type of non-linearity to use. Default is \"silu\". \"\"\" def __init__ ( self , in_dim : int , out_dim : int , dropout : float = 0.0 , non_linearity : str = \"silu\" , ) -> None : super () . __init__ () self . in_dim = in_dim self . out_dim = out_dim self . nonlinearity = get_activation ( non_linearity ) # layers self . norm1 = WanRMS_norm ( in_dim , images = False ) self . conv1 = WanCausalConv3d ( in_dim , out_dim , 3 , padding = 1 ) self . norm2 = WanRMS_norm ( out_dim , images = False ) self . dropout = nn . Dropout ( dropout ) self . conv2 = WanCausalConv3d ( out_dim , out_dim , 3 , padding = 1 ) self . conv_shortcut = WanCausalConv3d ( in_dim , out_dim , 1 ) if in_dim != out_dim else nn . Identity () def forward ( self , x , feat_cache = None , feat_idx = [ 0 ]): # Apply shortcut connection h = self . conv_shortcut ( x ) # First normalization and activation x = self . norm1 ( x ) x = self . nonlinearity ( x ) if feat_cache is not None : idx = feat_idx [ 0 ] cache_x = x [:, :, - CACHE_T :, :, :] . clone () if cache_x . shape [ 2 ] < 2 and feat_cache [ idx ] is not None : cache_x = torch . cat ([ feat_cache [ idx ][:, :, - 1 , :, :] . unsqueeze ( 2 ) . to ( cache_x . device ), cache_x ], dim = 2 ) x = self . conv1 ( x , feat_cache [ idx ]) feat_cache [ idx ] = cache_x feat_idx [ 0 ] += 1 else : x = self . conv1 ( x ) # Second normalization and activation x = self . norm2 ( x ) x = self . nonlinearity ( x ) # Dropout x = self . dropout ( x ) if feat_cache is not None : idx = feat_idx [ 0 ] cache_x = x [:, :, - CACHE_T :, :, :] . clone () if cache_x . shape [ 2 ] < 2 and feat_cache [ idx ] is not None : cache_x = torch . cat ([ feat_cache [ idx ][:, :, - 1 , :, :] . unsqueeze ( 2 ) . to ( cache_x . device ), cache_x ], dim = 2 ) x = self . conv2 ( x , feat_cache [ idx ]) feat_cache [ idx ] = cache_x feat_idx [ 0 ] += 1 else : x = self . conv2 ( x ) # Add residual connection return x + h def _decode ( self , z : torch . Tensor , return_dict : bool = True ) -> Union [ DecoderOutput , torch . Tensor ]: self . clear_cache () iter_ = z . shape [ 2 ] x = self . post_quant_conv ( z ) breakpoint () for i in range ( iter_ ): self . _conv_idx = [ 0 ] if i == 0 : # \u9010\u5e27\u53bb\u505a\u7684\u5904\u7406 out = self . decoder ( x [:, :, i : i + 1 , :, :], feat_cache = self . _feat_map , feat_idx = self . _conv_idx ) else : out_ = self . decoder ( x [:, :, i : i + 1 , :, :], feat_cache = self . _feat_map , feat_idx = self . _conv_idx ) out = torch . cat ([ out , out_ ], 2 ) out = torch . clamp ( out , min =- 1.0 , max = 1.0 ) self . clear_cache () if not return_dict : return ( out ,) return DecoderOutput ( sample = out ) class WanDecoder3d ( nn . Module ): def __init__ ( self , dim = 128 , z_dim = 4 , dim_mult = [ 1 , 2 , 4 , 4 ], num_res_blocks = 2 , attn_scales = [], temperal_upsample = [ False , True , True ], dropout = 0.0 , non_linearity : str = \"silu\" , ): super () . __init__ () self . dim = dim self . z_dim = z_dim self . dim_mult = dim_mult self . num_res_blocks = num_res_blocks self . attn_scales = attn_scales self . temperal_upsample = temperal_upsample self . nonlinearity = get_activation ( non_linearity ) # dimensions dims = [ dim * u for u in [ dim_mult [ - 1 ]] + dim_mult [:: - 1 ]] scale = 1.0 / 2 ** ( len ( dim_mult ) - 2 ) # init block self . conv_in = WanCausalConv3d ( z_dim , dims [ 0 ], 3 , padding = 1 ) # middle blocks self . mid_block = WanMidBlock ( dims [ 0 ], dropout , non_linearity , num_layers = 1 ) # upsample blocks self . up_blocks = nn . ModuleList ([]) for i , ( in_dim , out_dim ) in enumerate ( zip ( dims [: - 1 ], dims [ 1 :])): # residual (+attention) blocks if i > 0 : in_dim = in_dim // 2 # Determine if we need upsampling upsample_mode = None if i != len ( dim_mult ) - 1 : upsample_mode = \"upsample3d\" if temperal_upsample [ i ] else \"upsample2d\" # Create and add the upsampling block up_block = WanUpBlock ( in_dim = in_dim , out_dim = out_dim , num_res_blocks = num_res_blocks , dropout = dropout , upsample_mode = upsample_mode , non_linearity = non_linearity , ) self . up_blocks . append ( up_block ) # Update scale for next iteration if upsample_mode is not None : scale *= 2.0 # output blocks self . norm_out = WanRMS_norm ( out_dim , images = False ) self . conv_out = WanCausalConv3d ( out_dim , 3 , 3 , padding = 1 ) self . gradient_checkpointing = False def forward ( self , x , feat_cache = None , feat_idx = [ 0 ]): ## conv1 if feat_cache is not None : idx = feat_idx [ 0 ] cache_x = x [:, :, - CACHE_T :, :, :] . clone () if cache_x . shape [ 2 ] < 2 and feat_cache [ idx ] is not None : # cache last frame of last two chunk cache_x = torch . cat ([ feat_cache [ idx ][:, :, - 1 , :, :] . unsqueeze ( 2 ) . to ( cache_x . device ), cache_x ], dim = 2 ) x = self . conv_in ( x , feat_cache [ idx ]) feat_cache [ idx ] = cache_x feat_idx [ 0 ] += 1 else : x = self . conv_in ( x ) ## middle x = self . mid_block ( x , feat_cache , feat_idx ) ## upsamples for up_block in self . up_blocks : x = up_block ( x , feat_cache , feat_idx ) ## head x = self . norm_out ( x ) x = self . nonlinearity ( x ) if feat_cache is not None : idx = feat_idx [ 0 ] cache_x = x [:, :, - CACHE_T :, :, :] . clone () if cache_x . shape [ 2 ] < 2 and feat_cache [ idx ] is not None : # cache last frame of last two chunk cache_x = torch . cat ([ feat_cache [ idx ][:, :, - 1 , :, :] . unsqueeze ( 2 ) . to ( cache_x . device ), cache_x ], dim = 2 ) x = self . conv_out ( x , feat_cache [ idx ]) feat_cache [ idx ] = cache_x feat_idx [ 0 ] += 1 else : x = self . conv_out ( x ) return x graph LR subgraph \"\u65f6\u95f4\u7ef4\u5ea6\" T1[t-2] --> T2[t-1] --> T3[t] end subgraph \"\u56e0\u679c\u5377\u79ef\" T1 --> O[\u8f93\u51fat] T2 --> O T3 --> O style O fill:#f96 end class WanUpBlock ( nn . Module ): def __init__ ( self , in_dim : int , out_dim : int , num_res_blocks : int , dropout : float = 0.0 , upsample_mode : Optional [ str ] = None , non_linearity : str = \"silu\" , ): super () . __init__ () self . in_dim = in_dim self . out_dim = out_dim # Create layers list resnets = [] # Add residual blocks and attention if needed current_dim = in_dim for _ in range ( num_res_blocks + 1 ): resnets . append ( WanResidualBlock ( current_dim , out_dim , dropout , non_linearity )) current_dim = out_dim self . resnets = nn . ModuleList ( resnets ) # Add upsampling layer if needed self . upsamplers = None if upsample_mode is not None : self . upsamplers = nn . ModuleList ([ WanResample ( out_dim , mode = upsample_mode )]) self . gradient_checkpointing = False def forward ( self , x , feat_cache = None , feat_idx = [ 0 ]): for resnet in self . resnets : if feat_cache is not None : x = resnet ( x , feat_cache , feat_idx ) else : x = resnet ( x ) if self . upsamplers is not None : if feat_cache is not None : x = self . upsamplers [ 0 ]( x , feat_cache , feat_idx ) else : x = self . upsamplers [ 0 ]( x ) return x \u73b0\u5728\u6700\u5927\u7684\u95ee\u9898\u5c31\u662f feat_cache \u8c8c\u4f3c\u6bcf\u4e00\u8f6e\u90fd\u4f1a\u6709\u4e00\u4e2acache\u8fc7\u7a0b\uff1f\u800c\u4e14\u5728\u4e00\u4e2a self.decoder \u5c31\u4f1a\u51e0\u4e4e\u6253\u6ee125\u4e2afeat_cache\u4f4d\u7f6e\u3002 \u8fd9\u91cc\u7684\u52a8\u6001\u5f88\u591a.\u5177\u4f53\u5185\u5bb9\u5305\u62ec. \u4ed6\u7684shape\u4e5f\u5f88\u5947\u602a. paper: https://files.alicdn.com/tpsservice/5c9de1c74de03972b7aa657e5a54756b.pdf \u6574\u4f53\u7ed3\u6784\u53c2\u8003\uff1a \u7b2c\u4e8c\u538b\u7f29\u5e27\u7684\u5185\u5bb9 x.shape: torch.Size([1, 16, 1, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] feat_cache torch.Size([1, 16, 2, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] \u7b2c\u4e09\u538b\u7f29\u5e27 x.shape: torch.Size([1, 16, 1, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] feat_cache torch.Size([1, 16, 2, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [0, 0, 0, 0, 2, 0] after [0, 0, 0, 0, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [0, 0, 0, 0, 2, 0] after [0, 0, 0, 0, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] \u7b2c4\u5e27 x.shape: torch.Size([1, 16, 1, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] feat_cache torch.Size([1, 16, 2, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [0, 0, 0, 0, 2, 0] after [0, 0, 0, 0, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [0, 0, 0, 0, 2, 0] after [0, 0, 0, 0, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] 5 x.shape: torch.Size([1, 16, 1, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] feat_cache torch.Size([1, 16, 2, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [0, 0, 0, 0, 2, 0] after [0, 0, 0, 0, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [0, 0, 0, 0, 2, 0] after [0, 0, 0, 0, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] \u76ee\u524d\u53d1\u73b0 \u7b2c\u4e00\u5e27\u548c\u7b2c\u4e8c\u5e27\u7684\u884c\u4e3a\u4e0e\u540e\u9762\u90fd\u4e0d\u592a\u4e00\u6837 \u65b0\u7684\u7b56\u7565 \u00b6 \u5f97\u5230\u6240\u6709\u7684shape \u8d70\u52a8\u6001 \u7528 torchview \u5f97\u5230\u6240\u6709\u7684\u7ed3\u6784\u548cshape","title":"0328"},{"location":"daily/0328/#vae-3d-conv","text":"Wan-VAE \u5206\u5757\u56e0\u679c3D\u5377\u79ef from https://zhuanlan.zhihu.com/p/29268015945 class CausalConv3d ( nn . Conv3d ): \"\"\" Causal 3d convolusion. \"\"\" def __init__ ( self , * args , ** kwargs ): super () . __init__ ( * args , ** kwargs ) self . _padding = ( self . padding [ 2 ], self . padding [ 2 ], self . padding [ 1 ], self . padding [ 1 ], 2 * self . padding [ 0 ], 0 ) self . padding = ( 0 , 0 , 0 ) def forward ( self , x , cache_x = None ): padding = list ( self . _padding ) if cache_x is not None and self . _padding [ 4 ] > 0 : cache_x = cache_x . to ( x . device ) x = torch . cat ([ cache_x , x ], dim = 2 ) padding [ 4 ] -= cache_x . shape [ 2 ] x = F . pad ( x , padding ) return super () . forward ( x ) (Pdb) p self.decoder WanDecoder3d( (nonlinearity): SiLU() (conv_in): WanCausalConv3d(16, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (mid_block): WanMidBlock( (attentions): ModuleList( (0): WanAttentionBlock( (norm): WanRMS_norm() (to_qkv): Conv2d(384, 1152, kernel_size=(1, 1), stride=(1, 1)) (proj): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1)) ) ) (resnets): ModuleList( (0-1): 2 x WanResidualBlock( (nonlinearity): SiLU() (norm1): WanRMS_norm() (conv1): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (norm2): WanRMS_norm() (dropout): Dropout(p=0.0, inplace=False) (conv2): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (conv_shortcut): Identity() ) ) ) (up_blocks): ModuleList( (0): WanUpBlock( (resnets): ModuleList( (0-1): 2 x WanResidualBlock( (nonlinearity): SiLU() (norm1): WanRMS_norm() (conv1): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (norm2): WanRMS_norm() (dropout): Dropout(p=0.0, inplace=False) (conv2): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (conv_shortcut): Identity() ) ) (upsamplers): ModuleList( (0): WanResample( (resample): Sequential( (0): WanUpsample(scale_factor=(2.0, 2.0), mode='nearest-exact') (1): Conv2d(384, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)) ) (time_conv): WanCausalConv3d(384, 768, kernel_size=(3, 1, 1), stride=(1, 1, 1)) ) ) ) (1): WanUpBlock( (resnets): ModuleList( (0): WanResidualBlock( (nonlinearity): SiLU() (norm1): WanRMS_norm() (conv1): WanCausalConv3d(192, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (norm2): WanRMS_norm() (dropout): Dropout(p=0.0, inplace=False) (conv2): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (conv_shortcut): WanCausalConv3d(192, 384, kernel_size=(1, 1, 1), stride=(1, 1, 1)) ) (1): WanResidualBlock( (nonlinearity): SiLU() (norm1): WanRMS_norm() (conv1): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (norm2): WanRMS_norm() (dropout): Dropout(p=0.0, inplace=False) (conv2): WanCausalConv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (conv_shortcut): Identity() ) ) (upsamplers): ModuleList( (0): WanResample( (resample): Sequential( (0): WanUpsample(scale_factor=(2.0, 2.0), mode='nearest-exact') (1): Conv2d(384, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)) ) (time_conv): WanCausalConv3d(384, 768, kernel_size=(3, 1, 1), stride=(1, 1, 1)) ) ) ) (2): WanUpBlock( (resnets): ModuleList( (0-1): 2 x WanResidualBlock( (nonlinearity): SiLU() (norm1): WanRMS_norm() (conv1): WanCausalConv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (norm2): WanRMS_norm() (dropout): Dropout(p=0.0, inplace=False) (conv2): WanCausalConv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (conv_shortcut): Identity() ) ) (upsamplers): ModuleList( (0): WanResample( (resample): Sequential( (0): WanUpsample(scale_factor=(2.0, 2.0), mode='nearest-exact') (1): Conv2d(192, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)) ) ) ) ) (3): WanUpBlock( (resnets): ModuleList( (0-1): 2 x WanResidualBlock( (nonlinearity): SiLU() (norm1): WanRMS_norm() (conv1): WanCausalConv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (norm2): WanRMS_norm() (dropout): Dropout(p=0.0, inplace=False) (conv2): WanCausalConv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1)) (conv_shortcut): Identity() ) ) ) ) (norm_out): WanRMS_norm() (conv_out): WanCausalConv3d(96, 3, kernel_size=(3, 3, 3), stride=(1, 1, 1)) ) 3D\u56e0\u679cVAE\u67b6\u6784 cache\u5377\u79ef\u8f93\u5165\uff0c\u6d41\u5f0f\u63a8\u7406\uff0c\u6bcf\u6b21\u63a8\u7406\u4e00\u6bb5\uff0c\u663e\u5b58\u5360\u7528\u663e\u8457\u51cf\u5c11 Wan-VAE \u53ef\u4ee5\u7f16\u7801\u548c\u89e3\u7801\u4e0d\u9650\u5236\u957f\u5ea6\u76841080P\u89c6\u9891\uff0c\u800c\u4e0d\u4f1a\u4e22\u5931\u5386\u53f2\u65f6\u95f4\u4fe1\u606f\uff0c\u4f7f\u5176\u7279\u522b\u9002\u5408\u89c6\u9891\u751f\u6210\u4efb\u52a1 class WanCausalConv3d ( nn . Conv3d ): r \"\"\" A custom 3D causal convolution layer with feature caching support. This layer extends the standard Conv3D layer by ensuring causality in the time dimension and handling feature caching for efficient inference. Args: in_channels (int): Number of channels in the input image out_channels (int): Number of channels produced by the convolution kernel_size (int or tuple): Size of the convolving kernel stride (int or tuple, optional): Stride of the convolution. Default: 1 padding (int or tuple, optional): Zero-padding added to all three sides of the input. Default: 0 \"\"\" def __init__ ( self , in_channels : int , out_channels : int , kernel_size : Union [ int , Tuple [ int , int , int ]], stride : Union [ int , Tuple [ int , int , int ]] = 1 , padding : Union [ int , Tuple [ int , int , int ]] = 0 , ) -> None : super () . __init__ ( in_channels = in_channels , out_channels = out_channels , kernel_size = kernel_size , stride = stride , padding = padding , ) # Set up causal padding self . _padding = ( self . padding [ 2 ], self . padding [ 2 ], self . padding [ 1 ], self . padding [ 1 ], 2 * self . padding [ 0 ], 0 ) self . padding = ( 0 , 0 , 0 ) def forward ( self , x , cache_x = None ): padding = list ( self . _padding ) if cache_x is not None and self . _padding [ 4 ] > 0 : cache_x = cache_x . to ( x . device ) x = torch . cat ([ cache_x , x ], dim = 2 ) padding [ 4 ] -= cache_x . shape [ 2 ] x = F . pad ( x , padding ) return super () . forward ( x ) class WanMidBlock ( nn . Module ): def __init__ ( self , dim : int , dropout : float = 0.0 , non_linearity : str = \"silu\" , num_layers : int = 1 ): super () . __init__ () self . dim = dim # Create the components resnets = [ WanResidualBlock ( dim , dim , dropout , non_linearity )] attentions = [] for _ in range ( num_layers ): attentions . append ( WanAttentionBlock ( dim )) resnets . append ( WanResidualBlock ( dim , dim , dropout , non_linearity )) self . attentions = nn . ModuleList ( attentions ) self . resnets = nn . ModuleList ( resnets ) self . gradient_checkpointing = False def forward ( self , x , feat_cache = None , feat_idx = [ 0 ]): # First residual block x = self . resnets [ 0 ]( x , feat_cache , feat_idx ) # Process through attention and residual blocks for attn , resnet in zip ( self . attentions , self . resnets [ 1 :]): if attn is not None : x = attn ( x ) x = resnet ( x , feat_cache , feat_idx ) return x class WanResidualBlock ( nn . Module ): r \"\"\" A custom residual block module. Args: in_dim (int): Number of input channels. out_dim (int): Number of output channels. dropout (float, optional): Dropout rate for the dropout layer. Default is 0.0. non_linearity (str, optional): Type of non-linearity to use. Default is \"silu\". \"\"\" def __init__ ( self , in_dim : int , out_dim : int , dropout : float = 0.0 , non_linearity : str = \"silu\" , ) -> None : super () . __init__ () self . in_dim = in_dim self . out_dim = out_dim self . nonlinearity = get_activation ( non_linearity ) # layers self . norm1 = WanRMS_norm ( in_dim , images = False ) self . conv1 = WanCausalConv3d ( in_dim , out_dim , 3 , padding = 1 ) self . norm2 = WanRMS_norm ( out_dim , images = False ) self . dropout = nn . Dropout ( dropout ) self . conv2 = WanCausalConv3d ( out_dim , out_dim , 3 , padding = 1 ) self . conv_shortcut = WanCausalConv3d ( in_dim , out_dim , 1 ) if in_dim != out_dim else nn . Identity () def forward ( self , x , feat_cache = None , feat_idx = [ 0 ]): # Apply shortcut connection h = self . conv_shortcut ( x ) # First normalization and activation x = self . norm1 ( x ) x = self . nonlinearity ( x ) if feat_cache is not None : idx = feat_idx [ 0 ] cache_x = x [:, :, - CACHE_T :, :, :] . clone () if cache_x . shape [ 2 ] < 2 and feat_cache [ idx ] is not None : cache_x = torch . cat ([ feat_cache [ idx ][:, :, - 1 , :, :] . unsqueeze ( 2 ) . to ( cache_x . device ), cache_x ], dim = 2 ) x = self . conv1 ( x , feat_cache [ idx ]) feat_cache [ idx ] = cache_x feat_idx [ 0 ] += 1 else : x = self . conv1 ( x ) # Second normalization and activation x = self . norm2 ( x ) x = self . nonlinearity ( x ) # Dropout x = self . dropout ( x ) if feat_cache is not None : idx = feat_idx [ 0 ] cache_x = x [:, :, - CACHE_T :, :, :] . clone () if cache_x . shape [ 2 ] < 2 and feat_cache [ idx ] is not None : cache_x = torch . cat ([ feat_cache [ idx ][:, :, - 1 , :, :] . unsqueeze ( 2 ) . to ( cache_x . device ), cache_x ], dim = 2 ) x = self . conv2 ( x , feat_cache [ idx ]) feat_cache [ idx ] = cache_x feat_idx [ 0 ] += 1 else : x = self . conv2 ( x ) # Add residual connection return x + h def _decode ( self , z : torch . Tensor , return_dict : bool = True ) -> Union [ DecoderOutput , torch . Tensor ]: self . clear_cache () iter_ = z . shape [ 2 ] x = self . post_quant_conv ( z ) breakpoint () for i in range ( iter_ ): self . _conv_idx = [ 0 ] if i == 0 : # \u9010\u5e27\u53bb\u505a\u7684\u5904\u7406 out = self . decoder ( x [:, :, i : i + 1 , :, :], feat_cache = self . _feat_map , feat_idx = self . _conv_idx ) else : out_ = self . decoder ( x [:, :, i : i + 1 , :, :], feat_cache = self . _feat_map , feat_idx = self . _conv_idx ) out = torch . cat ([ out , out_ ], 2 ) out = torch . clamp ( out , min =- 1.0 , max = 1.0 ) self . clear_cache () if not return_dict : return ( out ,) return DecoderOutput ( sample = out ) class WanDecoder3d ( nn . Module ): def __init__ ( self , dim = 128 , z_dim = 4 , dim_mult = [ 1 , 2 , 4 , 4 ], num_res_blocks = 2 , attn_scales = [], temperal_upsample = [ False , True , True ], dropout = 0.0 , non_linearity : str = \"silu\" , ): super () . __init__ () self . dim = dim self . z_dim = z_dim self . dim_mult = dim_mult self . num_res_blocks = num_res_blocks self . attn_scales = attn_scales self . temperal_upsample = temperal_upsample self . nonlinearity = get_activation ( non_linearity ) # dimensions dims = [ dim * u for u in [ dim_mult [ - 1 ]] + dim_mult [:: - 1 ]] scale = 1.0 / 2 ** ( len ( dim_mult ) - 2 ) # init block self . conv_in = WanCausalConv3d ( z_dim , dims [ 0 ], 3 , padding = 1 ) # middle blocks self . mid_block = WanMidBlock ( dims [ 0 ], dropout , non_linearity , num_layers = 1 ) # upsample blocks self . up_blocks = nn . ModuleList ([]) for i , ( in_dim , out_dim ) in enumerate ( zip ( dims [: - 1 ], dims [ 1 :])): # residual (+attention) blocks if i > 0 : in_dim = in_dim // 2 # Determine if we need upsampling upsample_mode = None if i != len ( dim_mult ) - 1 : upsample_mode = \"upsample3d\" if temperal_upsample [ i ] else \"upsample2d\" # Create and add the upsampling block up_block = WanUpBlock ( in_dim = in_dim , out_dim = out_dim , num_res_blocks = num_res_blocks , dropout = dropout , upsample_mode = upsample_mode , non_linearity = non_linearity , ) self . up_blocks . append ( up_block ) # Update scale for next iteration if upsample_mode is not None : scale *= 2.0 # output blocks self . norm_out = WanRMS_norm ( out_dim , images = False ) self . conv_out = WanCausalConv3d ( out_dim , 3 , 3 , padding = 1 ) self . gradient_checkpointing = False def forward ( self , x , feat_cache = None , feat_idx = [ 0 ]): ## conv1 if feat_cache is not None : idx = feat_idx [ 0 ] cache_x = x [:, :, - CACHE_T :, :, :] . clone () if cache_x . shape [ 2 ] < 2 and feat_cache [ idx ] is not None : # cache last frame of last two chunk cache_x = torch . cat ([ feat_cache [ idx ][:, :, - 1 , :, :] . unsqueeze ( 2 ) . to ( cache_x . device ), cache_x ], dim = 2 ) x = self . conv_in ( x , feat_cache [ idx ]) feat_cache [ idx ] = cache_x feat_idx [ 0 ] += 1 else : x = self . conv_in ( x ) ## middle x = self . mid_block ( x , feat_cache , feat_idx ) ## upsamples for up_block in self . up_blocks : x = up_block ( x , feat_cache , feat_idx ) ## head x = self . norm_out ( x ) x = self . nonlinearity ( x ) if feat_cache is not None : idx = feat_idx [ 0 ] cache_x = x [:, :, - CACHE_T :, :, :] . clone () if cache_x . shape [ 2 ] < 2 and feat_cache [ idx ] is not None : # cache last frame of last two chunk cache_x = torch . cat ([ feat_cache [ idx ][:, :, - 1 , :, :] . unsqueeze ( 2 ) . to ( cache_x . device ), cache_x ], dim = 2 ) x = self . conv_out ( x , feat_cache [ idx ]) feat_cache [ idx ] = cache_x feat_idx [ 0 ] += 1 else : x = self . conv_out ( x ) return x graph LR subgraph \"\u65f6\u95f4\u7ef4\u5ea6\" T1[t-2] --> T2[t-1] --> T3[t] end subgraph \"\u56e0\u679c\u5377\u79ef\" T1 --> O[\u8f93\u51fat] T2 --> O T3 --> O style O fill:#f96 end class WanUpBlock ( nn . Module ): def __init__ ( self , in_dim : int , out_dim : int , num_res_blocks : int , dropout : float = 0.0 , upsample_mode : Optional [ str ] = None , non_linearity : str = \"silu\" , ): super () . __init__ () self . in_dim = in_dim self . out_dim = out_dim # Create layers list resnets = [] # Add residual blocks and attention if needed current_dim = in_dim for _ in range ( num_res_blocks + 1 ): resnets . append ( WanResidualBlock ( current_dim , out_dim , dropout , non_linearity )) current_dim = out_dim self . resnets = nn . ModuleList ( resnets ) # Add upsampling layer if needed self . upsamplers = None if upsample_mode is not None : self . upsamplers = nn . ModuleList ([ WanResample ( out_dim , mode = upsample_mode )]) self . gradient_checkpointing = False def forward ( self , x , feat_cache = None , feat_idx = [ 0 ]): for resnet in self . resnets : if feat_cache is not None : x = resnet ( x , feat_cache , feat_idx ) else : x = resnet ( x ) if self . upsamplers is not None : if feat_cache is not None : x = self . upsamplers [ 0 ]( x , feat_cache , feat_idx ) else : x = self . upsamplers [ 0 ]( x ) return x \u73b0\u5728\u6700\u5927\u7684\u95ee\u9898\u5c31\u662f feat_cache \u8c8c\u4f3c\u6bcf\u4e00\u8f6e\u90fd\u4f1a\u6709\u4e00\u4e2acache\u8fc7\u7a0b\uff1f\u800c\u4e14\u5728\u4e00\u4e2a self.decoder \u5c31\u4f1a\u51e0\u4e4e\u6253\u6ee125\u4e2afeat_cache\u4f4d\u7f6e\u3002 \u8fd9\u91cc\u7684\u52a8\u6001\u5f88\u591a.\u5177\u4f53\u5185\u5bb9\u5305\u62ec. \u4ed6\u7684shape\u4e5f\u5f88\u5947\u602a. paper: https://files.alicdn.com/tpsservice/5c9de1c74de03972b7aa657e5a54756b.pdf \u6574\u4f53\u7ed3\u6784\u53c2\u8003\uff1a \u7b2c\u4e8c\u538b\u7f29\u5e27\u7684\u5185\u5bb9 x.shape: torch.Size([1, 16, 1, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] feat_cache torch.Size([1, 16, 2, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 1, 0] \u7b2c\u4e09\u538b\u7f29\u5e27 x.shape: torch.Size([1, 16, 1, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] feat_cache torch.Size([1, 16, 2, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [0, 0, 0, 0, 2, 0] after [0, 0, 0, 0, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [0, 0, 0, 0, 2, 0] after [0, 0, 0, 0, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] \u7b2c4\u5e27 x.shape: torch.Size([1, 16, 1, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] feat_cache torch.Size([1, 16, 2, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [0, 0, 0, 0, 2, 0] after [0, 0, 0, 0, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [0, 0, 0, 0, 2, 0] after [0, 0, 0, 0, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] 5 x.shape: torch.Size([1, 16, 1, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] feat_cache torch.Size([1, 16, 2, 90, 128]) before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [0, 0, 0, 0, 2, 0] after [0, 0, 0, 0, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [0, 0, 0, 0, 2, 0] after [0, 0, 0, 0, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] before [1, 1, 1, 1, 2, 0] after [1, 1, 1, 1, 0, 0] \u76ee\u524d\u53d1\u73b0 \u7b2c\u4e00\u5e27\u548c\u7b2c\u4e8c\u5e27\u7684\u884c\u4e3a\u4e0e\u540e\u9762\u90fd\u4e0d\u592a\u4e00\u6837","title":"vae-3d conv"},{"location":"daily/0328/#_1","text":"\u5f97\u5230\u6240\u6709\u7684shape \u8d70\u52a8\u6001 \u7528 torchview \u5f97\u5230\u6240\u6709\u7684\u7ed3\u6784\u548cshape","title":"\u65b0\u7684\u7b56\u7565"},{"location":"daily/0331/","text":"\u5feb\u624bai\u7f16\u8bd1\u5668\u76f8\u5173\u5185\u5bb9 \u00b6 \u77e5\u4e4e https://zhuanlan.zhihu.com/p/32229854140 \u611f\u89c9\u5185\u5bb9\u5f88\u591a \u5f88\u624e\u5b9e\u3002\u4ee5\u540e\u5b66\u7740\u70b9\u3002","title":"0331"},{"location":"daily/0331/#ai","text":"\u77e5\u4e4e https://zhuanlan.zhihu.com/p/32229854140 \u611f\u89c9\u5185\u5bb9\u5f88\u591a \u5f88\u624e\u5b9e\u3002\u4ee5\u540e\u5b66\u7740\u70b9\u3002","title":"\u5feb\u624bai\u7f16\u8bd1\u5668\u76f8\u5173\u5185\u5bb9"},{"location":"daily/0401/","text":"ncu \u00b6 ncu\u6bd4\u8f83\u6162 cuda\u5b89\u88c5\u4e1c\u897f\u8fd8\u662f\u633a\u591a\u7684 \u533a\u5757\u94fe \u00b6 \u533a\u5757\u94fe\u8981\u53bb\u89e3\u51b3\u7684\u95ee\u9898\u5f88\u4e13\u6ce8\uff0c\u89e3\u51b3\u65b9\u6cd5\u4e5f\u5f88\u66b4\u529b\uff0c\u4f46\u662f\u95ee\u9898\u89e3\u51b3\u4e86\u3002 package \u00b6 https://v2raya.org/ sudo apt install v2raya v2ray ## \u4e5f\u53ef\u4ee5\u4f7f\u7528 xray \u5305 algorithm \u5305 \u00b6 #include <algorithm> std :: stable_sort (); std :: find_if (); std :: find (); std :: binary_search (); std :: lower_bound (); std :: upper_bound (); std :: copy (); std :: copy_if (); std :: transform (); // \u652f\u6301\u539f\u5730\u4fee\u6539 std :: replace (); std :: replace_if (); std :: fill (); std :: fill_n (); std :: generate (); std :: generate_n (); std :: remove (); // \u79fb\u9664\u5bb9\u5668\u6216\u6570\u7ec4\u4e2d\u7b49\u4e8e\u67d0\u4e2a\u503c\u7684\u5143\u7d20\uff0c\u4f46\u4e0d\u6539\u53d8\u5bb9\u5668\u7684\u5927\u5c0f\uff0c\u9700\u8981\u8c03\u7528 erase \u6765\u771f\u6b63\u79fb\u9664\u5143\u7d20\u3002 std :: reverse (); std :: rotate (); std :: shuffle (); std :: sort (); std :: accumulate (); std :: inner_product (); std :: partial_sum (); std :: partition (); std :: merge (); std :: set_union (); set :: set_intersection (); set :: set_difference (); set :: set_symmetric_difference (); std :: min_element (); std :: make_heap (); std :: push_heap (); std :: pop_heap (); std :: sort_heap (); other \u00b6 \u5c31\u8fd9\u6837\u5427\u3002 c++\u7684\u8fd9\u4e9b\u6807\u51c6\u5e93\u8fd8\u662f\u5f97\u597d\u597d\u5b66\u3002 \u6ca1\u770b\u7684 \u00b6 https://github.com/rdyro/Pallas-Puzzles","title":"0401"},{"location":"daily/0401/#ncu","text":"ncu\u6bd4\u8f83\u6162 cuda\u5b89\u88c5\u4e1c\u897f\u8fd8\u662f\u633a\u591a\u7684","title":"ncu"},{"location":"daily/0401/#_1","text":"\u533a\u5757\u94fe\u8981\u53bb\u89e3\u51b3\u7684\u95ee\u9898\u5f88\u4e13\u6ce8\uff0c\u89e3\u51b3\u65b9\u6cd5\u4e5f\u5f88\u66b4\u529b\uff0c\u4f46\u662f\u95ee\u9898\u89e3\u51b3\u4e86\u3002","title":"\u533a\u5757\u94fe"},{"location":"daily/0401/#package","text":"https://v2raya.org/ sudo apt install v2raya v2ray ## \u4e5f\u53ef\u4ee5\u4f7f\u7528 xray \u5305","title":"package"},{"location":"daily/0401/#algorithm","text":"#include <algorithm> std :: stable_sort (); std :: find_if (); std :: find (); std :: binary_search (); std :: lower_bound (); std :: upper_bound (); std :: copy (); std :: copy_if (); std :: transform (); // \u652f\u6301\u539f\u5730\u4fee\u6539 std :: replace (); std :: replace_if (); std :: fill (); std :: fill_n (); std :: generate (); std :: generate_n (); std :: remove (); // \u79fb\u9664\u5bb9\u5668\u6216\u6570\u7ec4\u4e2d\u7b49\u4e8e\u67d0\u4e2a\u503c\u7684\u5143\u7d20\uff0c\u4f46\u4e0d\u6539\u53d8\u5bb9\u5668\u7684\u5927\u5c0f\uff0c\u9700\u8981\u8c03\u7528 erase \u6765\u771f\u6b63\u79fb\u9664\u5143\u7d20\u3002 std :: reverse (); std :: rotate (); std :: shuffle (); std :: sort (); std :: accumulate (); std :: inner_product (); std :: partial_sum (); std :: partition (); std :: merge (); std :: set_union (); set :: set_intersection (); set :: set_difference (); set :: set_symmetric_difference (); std :: min_element (); std :: make_heap (); std :: push_heap (); std :: pop_heap (); std :: sort_heap ();","title":"algorithm \u5305"},{"location":"daily/0401/#other","text":"\u5c31\u8fd9\u6837\u5427\u3002 c++\u7684\u8fd9\u4e9b\u6807\u51c6\u5e93\u8fd8\u662f\u5f97\u597d\u597d\u5b66\u3002","title":"other"},{"location":"daily/0401/#_2","text":"https://github.com/rdyro/Pallas-Puzzles","title":"\u6ca1\u770b\u7684"},{"location":"daily/0407/","text":"svd quant \u5438\u6536\u5f02\u5e38\u503c\u91cf\u5316 4-bit \u6269\u6563\u6a21\u578b web3 svd quant \u5438\u6536\u5f02\u5e38\u503c\u91cf\u5316 4-bit \u6269\u6563\u6a21\u578b \u00b6 8-bit setting \uff1aWeight\uff1aPer-channel\uff0cActivation\uff1aPer-token Dynamic 4-bit setting \uff1aWeight\uff1aPer-group symmetric\uff0cActivation\uff1aPer-group symmetric \u8fd9\u5f20\u56fe\u516c\u5f0f\u5e94\u8be5\u6709\u95ee\u9898 web3 \u00b6","title":"0407"},{"location":"daily/0407/#svd-quant-4-bit","text":"8-bit setting \uff1aWeight\uff1aPer-channel\uff0cActivation\uff1aPer-token Dynamic 4-bit setting \uff1aWeight\uff1aPer-group symmetric\uff0cActivation\uff1aPer-group symmetric \u8fd9\u5f20\u56fe\u516c\u5f0f\u5e94\u8be5\u6709\u95ee\u9898","title":"svd quant \u5438\u6536\u5f02\u5e38\u503c\u91cf\u5316 4-bit \u6269\u6563\u6a21\u578b"},{"location":"daily/0407/#web3","text":"","title":"web3"},{"location":"daily/0410/","text":"\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5 CometBFT 1. ABCI \u63a5\u53e3\u6982\u89c8 2. \u4e3b\u8981\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u7c7b\u578b 2.1 \u4e3b\u8981\u8bf7\u6c42\u7c7b\u578b 2.2 \u4e3b\u8981\u54cd\u5e94\u7c7b\u578b 3. \u4f7f\u7528\u65b9\u6cd5\u4e0e\u6d41\u7a0b 3.1 \u90e8\u7f72\u6a21\u5f0f 3.2 \u5f00\u53d1\u6d41\u7a0b 4. \u603b\u7ed3 Reth Node Bitcoin Signing Server \u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5 \u00b6 \u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\uff08Byzantine Fault Tolerance\uff0c\u7b80\u79f0 BFT\uff09\u662f\u4e00\u7c7b\u65e8\u5728\u89e3\u51b3\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u8282\u70b9\u53ef\u80fd\u51fa\u73b0\u6545\u969c\u6216\u6076\u610f\u884c\u4e3a\u800c\u5bfc\u81f4\u7cfb\u7edf\u6574\u4f53\u4e0d\u4e00\u81f4\u95ee\u9898\u7684\u7b97\u6cd5\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5b83\u8ba9\u7cfb\u7edf\u5728\u5b58\u5728\u201c\u62dc\u5360\u5ead\u9519\u8bef\u201d\uff08\u5373\u8282\u70b9\u7684\u884c\u4e3a\u5f02\u5e38\u6216\u8005\u6545\u610f\u4f5c\u6076\uff09\u7684\u60c5\u51b5\u4e0b\uff0c\u4ecd\u80fd\u8fbe\u6210\u5171\u8bc6\u5e76\u6b63\u5e38\u8fd0\u884c\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u5173\u952e\u6982\u5ff5\u548c\u7279\u70b9\uff1a \u62dc\u5360\u5ead\u95ee\u9898\u7684\u80cc\u666f \u62dc\u5360\u5ead\u95ee\u9898\u6700\u65e9\u6765\u6e90\u4e8e\u4e00\u4e2a\u865a\u6784\u7684\u60c5\u666f\uff1a\u4e00\u652f\u62dc\u5360\u5ead\u519b\u961f\u4e2d\uff0c\u4e0d\u540c\u90e8\u961f\u4e4b\u95f4\u9700\u8981\u534f\u8c03\u4f5c\u6218\uff0c\u4f46\u6709\u4e9b\u90e8\u961f\u53ef\u80fd\u662f\u53db\u5f92\uff0c\u4f1a\u4f20\u9012\u865a\u5047\u4fe1\u606f\u3002\u5982\u4f55\u786e\u4fdd\u5373\u4f7f\u5b58\u5728\u5c11\u91cf\u53db\u5f92\uff0c\u5fe0\u8bda\u7684\u90e8\u961f\u4ecd\u7136\u53ef\u4ee5\u5c31\u4f5c\u6218\u8ba1\u5212\u8fbe\u6210\u5171\u8bc6\uff1f\u8fd9\u5c31\u662f\u62dc\u5360\u5ead\u95ee\u9898\u7684\u6838\u5fc3\u3002 \u5bb9\u9519\u80fd\u529b \u4e00\u4e2a\u7cfb\u7edf\u5982\u679c\u80fd\u591f\u5bb9\u5fcd\u4e00\u90e8\u5206\u8282\u70b9\u5b58\u5728\u6076\u610f\u6216\u6545\u969c\u884c\u4e3a\uff0c\u4ecd\u7136\u80fd\u591f\u6b63\u786e\u5730\u6267\u884c\u4efb\u52a1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7cfb\u7edf\u5c31\u5177\u5907\u62dc\u5360\u5ead\u5bb9\u9519\u80fd\u529b\u3002\u5e38\u89c1\u7684\u8bbe\u7f6e\u4e2d\uff0c\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\u80fd\u591f\u5bb9\u5fcd\u4e0d\u8d85\u8fc7\u4e09\u5206\u4e4b\u4e00\u7684\u8282\u70b9\u5b58\u5728\u6545\u969c\u3002 \u8fbe\u6210\u5171\u8bc6 \u5728\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u5404\u4e2a\u8282\u70b9\u9700\u8981\u5c31\u67d0\u4e2a\u72b6\u6001\u6216\u51b3\u7b56\u8fbe\u6210\u4e00\u81f4\uff0c\u5373\u4f7f\u4e00\u4e9b\u8282\u70b9\u53ef\u80fd\u53d1\u9001\u9519\u8bef\u7684\u4fe1\u606f\u3002BFT \u7b97\u6cd5\u63d0\u4f9b\u4e00\u7cfb\u5217\u673a\u5236\u548c\u6295\u7968/\u6d88\u606f\u4f20\u9012\u6d41\u7a0b\uff0c\u786e\u4fdd\u6240\u6709\u8bda\u5b9e\u8282\u70b9\u80fd\u591f\u6700\u7ec8\u5c31\u6b63\u786e\u7684\u6570\u636e\u6216\u51b3\u7b56\u8fbe\u6210\u5171\u8bc6\u3002 \u5b9e\u9645\u5e94\u7528 \u533a\u5757\u94fe\u7cfb\u7edf \uff1a\u4f8b\u5982 CometBFT\u3001Tendermint \u7b49\u533a\u5757\u94fe\u5171\u8bc6\u5f15\u64ce\u91c7\u7528\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\uff0c\u9632\u6b62\u6076\u610f\u8282\u70b9\u7be1\u6539\u6570\u636e\u6216\u8fdb\u884c\u53cc\u82b1\u653b\u51fb\u3002 \u5206\u5e03\u5f0f\u6570\u636e\u5e93\u548c\u91d1\u878d\u7cfb\u7edf \uff1a\u5728\u9700\u8981\u9ad8\u5b89\u5168\u6027\u548c\u4e00\u81f4\u6027\u4fdd\u8bc1\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4e5f\u5e38\u89c1\u4f7f\u7528 BFT \u7b97\u6cd5\u3002 \u7b97\u6cd5\u5b9e\u4f8b \u5e38\u89c1\u7684\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\u6709 Practical Byzantine Fault Tolerance (PBFT) \u7b49\u3002\u8fd9\u4e9b\u7b97\u6cd5\u901a\u5e38\u5305\u62ec\u591a\u4e2a\u9636\u6bb5\uff08\u5982\u9884\u51c6\u5907\u3001\u51c6\u5907\u548c\u63d0\u4ea4\u9636\u6bb5\uff09\uff0c\u5404\u8282\u70b9\u4ea4\u6362\u6d88\u606f\u5e76\u8fdb\u884c\u6295\u7968\uff0c\u76f4\u5230\u5728\u5927\u90e8\u5206\u8282\u70b9\u4e4b\u95f4\u8fbe\u6210\u4e00\u81f4\u3002 graph TD subgraph Byzantine_Fault_Tolerance_Process A[Propose] --> B[Prevote] B --> C[Precommit] C --> D[Commit] D --> E[Block Finalized] %% Step 1: Propose Phase A --> A1[Nodes receive proposal] A1 --> A2[Validate proposal] A2 -->|Valid| B A2 -->|Invalid| F[Discard proposal] %% Step 2: Prevote Phase B --> B1[Collect prevotes] B1 -->|More than 2/3 prevotes| C %% Step 3: Precommit Phase C --> C1[Collect precommits] C1 -->|More than 2/3 precommits| D %% Step 4: Commit Phase D --> D1[Finalize block] D1 --> E end \u603b\u7684\u6765\u8bf4\uff0c\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\u662f\u8bbe\u8ba1\u6765\u89e3\u51b3\u5728\u90e8\u5206\u8282\u70b9\u53ef\u80fd\u51fa\u73b0\u6545\u969c\u6216\u6076\u610f\u884c\u4e3a\u6761\u4ef6\u4e0b\u5982\u4f55\u786e\u4fdd\u5168\u5c40\u4e00\u81f4\u6027\u7684\u4e00\u7c7b\u5171\u8bc6\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6784\u5efa\u5b89\u5168\u3001\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u81f3\u5173\u91cd\u8981\u3002 CometBFT \u00b6 CometBFT\uff08\u539f\u540d Tendermint Core\uff09\u662f\u4e00\u4e2a\u57fa\u4e8e\u62dc\u5360\u5ead\u5bb9\u9519\uff08BFT\uff09\u5171\u8bc6\u7b97\u6cd5\u7684\u9ad8\u6027\u80fd\u533a\u5757\u94fe\u5171\u8bc6\u5f15\u64ce\u3002\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u548c\u4f7f\u7528\u573a\u666f\u5305\u62ec\uff1a \u5171\u8bc6\u534f\u8bae\u5b9e\u73b0 CometBFT \u63d0\u4f9b\u4e86\u4e00\u79cd\u57fa\u4e8e\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\u7684\u5171\u8bc6\u534f\u8bae\uff0c\u8fd9\u79cd\u534f\u8bae\u80fd\u591f\u5728\u591a\u4e2a\u8282\u70b9\u4e2d\u8fbe\u6210\u4e00\u81f4\uff0c\u5373\u4f7f\u90e8\u5206\u8282\u70b9\u53ef\u80fd\u5b58\u5728\u6076\u610f\u884c\u4e3a\u6216\u6545\u969c\u3002\u5b83\u4fdd\u8bc1\u4e86\u7cfb\u7edf\u5728\u4e0d\u5b8c\u5168\u4fe1\u4efb\u7684\u73af\u5883\u4e2d\u4ecd\u7136\u80fd\u591f\u5b89\u5168\u3001\u9ad8\u6548\u5730\u751f\u6210\u533a\u5757\u3002 \u533a\u5757\u94fe\u7f51\u7edc\u7684\u6838\u5fc3\u5f15\u64ce \u4f5c\u4e3a\u533a\u5757\u94fe\u7cfb\u7edf\u7684\u57fa\u7840\u5c42\uff0cCometBFT \u8d1f\u8d23\u533a\u5757\u7684\u751f\u6210\u3001\u4ea4\u6613\u7684\u6392\u5e8f\u4ee5\u53ca\u72b6\u6001\u7684\u4e00\u81f4\u6027\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u5c06\u4e1a\u52a1\u903b\u8f91\uff08\u4f8b\u5982\u667a\u80fd\u5408\u7ea6\u3001\u8d26\u6237\u7cfb\u7edf\u7b49\uff09\u4e0e\u5171\u8bc6\u5c42\u5206\u79bb\uff0c\u5229\u7528 CometBFT \u6765\u5b9e\u73b0\u540e\u8005\uff0c\u4ece\u800c\u964d\u4f4e\u5f00\u53d1\u590d\u6742\u6027\u3002 \u6a21\u5757\u5316\u548c\u7075\u6d3b\u6027 \u5b83\u8bbe\u8ba1\u6709\u6e05\u6670\u7684\u5206\u5c42\u67b6\u6784\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4e2d\u95f4\u4ef6\u6574\u5408\u5230\u5404\u79cd\u94fe\u4e0a\u5e94\u7528\u4e2d\uff0c\u5e76\u5141\u8bb8\u5f00\u53d1\u8005\u6839\u636e\u9700\u6c42\u81ea\u5b9a\u4e49\u5e94\u7528\u5c42\uff08\u901a\u5e38\u79f0\u4e3a \u201c\u5e94\u7528\u533a\u5757\u94fe\u63a5\u53e3\u201d\uff08ABCI\uff09\u5e94\u7528\uff09\u3002\u8fd9\u4f7f\u5f97 CometBFT \u80fd\u591f\u652f\u6301\u4e0d\u540c\u7c7b\u578b\u7684\u53bb\u4e2d\u5fc3\u5316\u5e94\u7528\u573a\u666f\u3002 \u5b9e\u9645\u5e94\u7528\u573a\u666f \u516c\u94fe\u548c\u8054\u76df\u94fe \uff1aCometBFT \u88ab\u5e7f\u6cdb\u7528\u4e8e\u6784\u5efa\u53bb\u4e2d\u5fc3\u5316\u7684\u516c\u6709\u94fe\uff08\u4f8b\u5982 Cosmos \u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u8bb8\u591a\u9879\u76ee\uff09\u4ee5\u53ca\u8054\u76df\u94fe\uff0c\u5b83\u4eec\u9700\u8981\u9ad8\u6548\u4e14\u5065\u58ee\u7684\u5171\u8bc6\u673a\u5236\u3002 \u8de8\u94fe\u901a\u4fe1 \uff1a\u5728\u8de8\u94fe\u534f\u8bae\u7684\u65b9\u6848\u4e2d\uff0cCometBFT \u53ef\u4ee5\u4f5c\u4e3a\u4e0d\u540c\u94fe\u95f4\u6570\u636e\u4e00\u81f4\u6027\u548c\u5b89\u5168\u901a\u4fe1\u7684\u57fa\u7840\u3002 \u9ad8\u6027\u80fd\u91d1\u878d\u7cfb\u7edf \uff1a\u5bf9\u4e8e\u5bf9\u4ea4\u6613\u541e\u5410\u91cf\u548c\u786e\u8ba4\u901f\u5ea6\u6709\u8f83\u9ad8\u8981\u6c42\u7684\u7cfb\u7edf\uff0c\u5229\u7528 CometBFT \u7684\u5171\u8bc6\u7b97\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u8f83\u4f4e\u5ef6\u8fdf\u548c\u8f83\u9ad8\u5e76\u53d1\u7684\u4ea4\u6613\u5904\u7406\u3002 \u603b\u4e4b\uff0cCometBFT \u7a0b\u5e8f\u4e3b\u8981\u5c31\u662f\u5b9e\u73b0\u4e00\u4e2a\u9ad8\u6548\u3001\u5065\u58ee\u7684\u533a\u5757\u94fe\u5171\u8bc6\u5f15\u64ce\uff0c\u5728\u5404\u79cd\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u63d0\u4f9b\u540e\u7aef\u7684\u6570\u636e\u4e00\u81f4\u6027\u548c\u5b89\u5168\u6027\u4fdd\u969c\u3002 CometBFT \u7684\u6838\u5fc3\u8bbe\u8ba1\u7406\u5ff5\u662f\u5c06\u5171\u8bc6\u5c42\u548c\u5e94\u7528\u5c42\u5206\u79bb\uff0c\u901a\u8fc7 ABCI\uff08\u5e94\u7528\u533a\u5757\u94fe\u63a5\u53e3\uff09\u4f7f\u5f97\u8fd9\u4e24\u90e8\u5206\u53ef\u4ee5\u72ec\u7acb\u6f14\u8fdb\u3002\u56e0\u6b64\uff0c\u5b83\u7684\u8f93\u5165\u548c\u8f93\u51fa\u4e3b\u8981\u4f53\u73b0\u5728\u4e0e\u5916\u90e8\u5e94\u7528\u7a0b\u5e8f\uff08\u5373\u5b9e\u9645\u4e1a\u52a1\u903b\u8f91\u6240\u5728\u5904\uff09\u7684\u4ea4\u4e92\u4e0a\u3002\u4e0b\u9762\u8be6\u7ec6\u8bf4\u660e\uff1a 1. ABCI \u63a5\u53e3\u6982\u89c8 \u00b6 ABCI\uff08Application BlockChain Interface\uff09\u662f\u4e00\u4e2a\u57fa\u4e8e socket \u901a\u4fe1\uff08TCP \u6216 Unix Domain Socket\uff09\u7684\u63a5\u53e3\uff0c\u7528\u4e8e CometBFT \u5171\u8bc6\u5f15\u64ce\u548c\u5177\u4f53\u4e1a\u52a1\u5e94\u7528\u4e4b\u95f4\u7684\u6d88\u606f\u4f20\u9012\u3002\u8fd9\u4e2a\u63a5\u53e3\u5b9a\u4e49\u4e86\u4e00\u7ec4\u8bf7\u6c42\u548c\u54cd\u5e94\u6d88\u606f\uff0c\u6574\u4e2a\u4ea4\u4e92\u8fc7\u7a0b\u4e3b\u8981\u53d1\u751f\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\uff1a \u5171\u8bc6\u5c42\u53d1\u9001\u8bf7\u6c42\u7ed9\u5e94\u7528\u5c42 \u5e94\u7528\u5c42\u8fd4\u56de\u54cd\u5e94\u7ed9\u5171\u8bc6\u5c42 2. \u4e3b\u8981\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u7c7b\u578b \u00b6 2.1 \u4e3b\u8981\u8bf7\u6c42\u7c7b\u578b \u00b6 DeliverTx \u5f53\u65b0\u533a\u5757\u4e2d\u5305\u542b\u4ea4\u6613\u65f6\uff0cCometBFT \u4f7f\u7528 DeliverTx \u8bf7\u6c42\u9010\u7b14\u5411\u5e94\u7528\u5c42\u4f20\u9012\u4ea4\u6613\u6570\u636e\uff0c\u5e94\u7528\u5c42\u8d1f\u8d23\u6821\u9a8c\u4ea4\u6613\uff08\u4f8b\u5982\u7b7e\u540d\u9a8c\u8bc1\u3001\u72b6\u6001\u6821\u9a8c\u7b49\uff09\u5e76\u66f4\u65b0\u72b6\u6001\u3002 CheckTx \u7528\u4e8e\u5728\u4ea4\u6613\u8fdb\u5165\u5185\u5b58\u6c60\u65f6\u8fdb\u884c\u521d\u6b65\u9a8c\u8bc1\u3002\u8fd9\u4e2a\u8bf7\u6c42\u901a\u5e38\u5728\u4ea4\u6613\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u8c03\u7528\uff0c\u786e\u4fdd\u4ea4\u6613\u683c\u5f0f\u548c\u521d\u6b65\u89c4\u5219\u6b63\u786e\uff0c\u4ee5\u4fbf\u5b83\u4eec\u80fd\u88ab\u7eb3\u5165\u5171\u8bc6\u6d41\u7a0b\u3002 BeginBlock \u548c EndBlock \u8fd9\u4e24\u4e2a\u8bf7\u6c42\u5305\u56f4\u7740\u6574\u4e2a\u533a\u5757\u4e2d\u4ea4\u6613\u7684\u5904\u7406\u8fc7\u7a0b\uff1a BeginBlock \u901a\u77e5\u5e94\u7528\u533a\u5757\u7684\u5f00\u59cb\uff08\u4f8b\u5982\u5305\u542b\u533a\u5757\u5934\u4fe1\u606f\u3001\u533a\u5757\u5185\u63d0\u4ea4\u8005\u5217\u8868\u7b49\uff09\uff0c EndBlock \u901a\u77e5\u533a\u5757\u5904\u7406\u7ed3\u675f\uff0c\u5e94\u7528\u53ef\u4ee5\u5728\u6b64\u9636\u6bb5\u8fd4\u56de\u8bf8\u5982\u6cbb\u7406\u7b56\u7565\u3001 validator \u66f4\u65b0\u7b49\u4fe1\u606f\u3002 Commit \u5f53\u4e00\u4e2a\u5757\u7ed3\u675f\u4e14\u6240\u6709\u4ea4\u6613\u90fd\u5904\u7406\u5b8c\u6bd5\uff0cCometBFT \u8c03\u7528 Commit \u8bf7\u6c42\u8981\u6c42\u5e94\u7528\u5c42\u5c06\u5f53\u524d\u72b6\u6001\u6301\u4e45\u5316\uff0c\u5e76\u8fd4\u56de\u6700\u65b0\u72b6\u6001\u7684 Merkle \u6839\u6216\u5176\u4ed6\u5f62\u5f0f\u7684\u72b6\u6001\u6458\u8981\u3002\u8be5\u6458\u8981\u4f1a\u88ab\u5199\u5165\u5171\u8bc6\u5c42\u533a\u5757\u4e2d\uff0c\u4f5c\u4e3a\u72b6\u6001\u4e00\u81f4\u6027\u9a8c\u8bc1\u7684\u4f9d\u636e\u3002 \u5176\u4ed6\u8f85\u52a9\u8bf7\u6c42 \u6839\u636e\u9700\u6c42\uff0cABCI \u8fd8\u652f\u6301\u8bf8\u5982\u67e5\u8be2\u64cd\u4f5c\uff08 Query \uff09\u3001\u5feb\u7167\u76f8\u5173\u8bf7\u6c42\u7b49\uff0c\u8fd9\u4e9b\u901a\u5e38\u7528\u4e8e\u8282\u70b9\u95f4\u72b6\u6001\u540c\u6b65\u3001\u72b6\u6001\u67e5\u8be2\u6216\u8c03\u8bd5\u3002 2.2 \u4e3b\u8981\u54cd\u5e94\u7c7b\u578b \u00b6 \u5bf9\u4e8e\u6bcf\u4e2a\u8bf7\u6c42\uff0c\u5e94\u7528\u5c42\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u54cd\u5e94\u6d88\u606f\uff0c\u5176\u4e2d\u5305\u542b\uff1a \u4ea4\u6613\u5904\u7406\u7ed3\u679c \uff1a\u5728 CheckTx \u548c DeliverTx \u7684\u54cd\u5e94\u4e2d\uff0c\u901a\u5e38\u4f1a\u6709\u4e00\u4e2a\u4ee3\u7801\uff08\u4f8b\u5982 0 \u8868\u793a\u6210\u529f\uff0c\u5176\u4ed6\u503c\u8868\u793a\u9519\u8bef\uff09\u4ee5\u53ca\u76f8\u5e94\u7684\u65e5\u5fd7\u4fe1\u606f\u6216\u6267\u884c\u7ed3\u679c\u3002 \u533a\u5757\u7ed3\u679c \uff1a\u5728 EndBlock \u4e2d\uff0c\u5e94\u7528\u5c42\u53ef\u4ee5\u8fd4\u56de\u9488\u5bf9\u8fd9\u4e2a\u533a\u5757\u5185\u67d0\u4e9b\u4e1a\u52a1\u903b\u8f91\u7684\u53d8\u66f4\uff08\u4f8b\u5982\u53d8\u66f4 validator \u96c6\u5408\uff09\uff0c\u8fd9\u4e9b\u4fe1\u606f\u4f1a\u88ab CometBFT \u7528\u4e8e\u540e\u7eed\u5171\u8bc6\u6d41\u7a0b\u3002 \u72b6\u6001\u6458\u8981 \uff1a\u5728 Commit \u54cd\u5e94\u4e2d\uff0c\u5e94\u7528\u5c42\u8fd4\u56de\u7684\u72b6\u6001\u6839\uff08\u6216\u7c7b\u4f3c\u6807\u8bc6\u7b26\uff09\u76f4\u63a5\u53c2\u4e0e\u5230\u533a\u5757\u94fe\u72b6\u6001\u7684\u8fde\u7eed\u6027\u4fdd\u8bc1\u4e2d\u3002 3. \u4f7f\u7528\u65b9\u6cd5\u4e0e\u6d41\u7a0b \u00b6 3.1 \u90e8\u7f72\u6a21\u5f0f \u00b6 \u72ec\u7acb\u8fdb\u7a0b CometBFT \u5171\u8bc6\u5f15\u64ce\u901a\u5e38\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u8fdb\u7a0b\u8fd0\u884c\uff0c\u800c\u4e1a\u52a1\u5e94\u7528\u7a0b\u5e8f\u5219\u53e6\u8d77\u8fdb\u7a0b\u3002\u4e24\u8005\u901a\u8fc7\u7f51\u7edc socket \u8fde\u63a5\uff08TCP \u6216 Unix Socket\uff09\u8fdb\u884c\u901a\u4fe1\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u5f97\u5171\u8bc6\u5c42\u4e0e\u5e94\u7528\u903b\u8f91\u53ef\u4ee5\u5206\u522b\u91c7\u7528\u4e0d\u540c\u7684\u7f16\u7a0b\u8bed\u8a00\u6216\u72ec\u7acb\u5347\u7ea7\u3002 \u96c6\u6210\u90e8\u7f72 \u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u53ef\u4ee5\u5c06\u5171\u8bc6\u5f15\u64ce\u548c\u5e94\u7528\u903b\u8f91\u5728\u540c\u4e00\u8fdb\u7a0b\u4e2d\u90e8\u7f72\uff0c\u4f46\u8fd9\u79cd\u6a21\u5f0f\u8f83\u5c11\u89c1\uff0c\u56e0\u4e3a\u5206\u79bb\u6a21\u5f0f\u66f4\u5bb9\u6613\u5b9e\u73b0\u6a21\u5757\u5316\u3001\u7ef4\u62a4\u548c\u6269\u5c55\u3002 3.2 \u5f00\u53d1\u6d41\u7a0b \u00b6 \u6784\u5efa ABCI \u5e94\u7528 \u5f00\u53d1\u8005\u9996\u5148\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u7b26\u5408 ABCI \u534f\u8bae\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6d89\u53ca\u4e3a\u4e0a\u8ff0\u8bf7\u6c42\u7c7b\u578b\u7f16\u5199\u5904\u7406\u903b\u8f91\uff0c\u5982\u4ea4\u6613\u9a8c\u8bc1\u3001\u72b6\u6001\u66f4\u65b0\u3001\u533a\u5757\u524d\u540e\u903b\u8f91\u5904\u7406\u7b49\u3002\u5e38\u89c1\u7684\u7f16\u7a0b\u8bed\u8a00\u6709 Go\uff08\u4f8b\u5982 Cosmos SDK \u4f7f\u7528 Go \u7f16\u5199\uff09\u4ee5\u53ca\u5176\u4ed6\u8bed\u8a00\u7684\u5b9e\u73b0\u7248\u672c\u3002 \u914d\u7f6e CometBFT \u914d\u7f6e\u6587\u4ef6\u4e2d\u9700\u8981\u6307\u5b9a ABCI \u5e94\u7528\u7a0b\u5e8f\u7684\u76d1\u542c\u5730\u5740\uff0c\u786e\u4fdd CometBFT \u4e0e\u5e94\u7528\u4e4b\u95f4\u80fd\u591f\u5efa\u7acb\u8fde\u63a5\u3002\u542f\u52a8 CometBFT \u540e\uff0c\u5b83\u4f1a\u6839\u636e\u914d\u7f6e\u53d1\u8d77\u4e0e\u5e94\u7528\u7684\u8fde\u63a5\uff0c\u5e76\u5f00\u59cb\u533a\u5757\u751f\u6210\u548c\u5171\u8bc6\u6d41\u7a0b\u3002 \u5171\u8bc6\u6d41\u7a0b\u7684\u4ea4\u4e92 \u5f53\u7528\u6237\u63d0\u4ea4\u4ea4\u6613\u65f6\uff0c\u4ea4\u6613\u9996\u5148\u7ecf\u8fc7 CheckTx \u8fdb\u884c\u9884\u6821\u9a8c\uff0c\u5e76\u8fdb\u5165\u8282\u70b9\u7684\u5185\u5b58\u6c60\u3002 \u8fbe\u6210\u5171\u8bc6\u540e\uff0cCometBFT \u5728\u65b0\u533a\u5757\u751f\u6210\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u4f9d\u6b21\u8c03\u7528 BeginBlock \u3001\u9488\u5bf9\u6bcf\u7b14\u4ea4\u6613\u8c03\u7528 DeliverTx \uff0c\u6700\u540e\u8c03\u7528 EndBlock \u5e76\u8bf7\u6c42 Commit \u3002 \u5e94\u7528\u7a0b\u5e8f\u56de\u4f20\u7684\u72b6\u6001\u6458\u8981\u4fdd\u8bc1\u4e86\u94fe\u4e0a\u72b6\u6001\u7684\u4e00\u81f4\u6027\uff0cCometBFT \u4f1a\u5c06\u5176\u5199\u5165\u65b0\u533a\u5757\u5934\u4e2d\u3002 \u72b6\u6001\u67e5\u8be2\u4e0e\u7ef4\u62a4 \u5f00\u53d1\u8005\u53ef\u4ee5\u5229\u7528 Query \u63a5\u53e3\u8fdb\u884c\u72b6\u6001\u67e5\u8be2\uff0c\u8c03\u8bd5\u65f6\u68c0\u67e5\u533a\u5757\u4e0e\u72b6\u6001\u6267\u884c\u60c5\u51b5\uff0c\u6216\u901a\u8fc7\u5feb\u7167\u673a\u5236\u8fdb\u884c\u72b6\u6001\u540c\u6b65\u548c\u6062\u590d\u3002 4. \u603b\u7ed3 \u00b6 \u8f93\u5165 CometBFT \u7684\u8f93\u5165\u4e3b\u8981\u662f\u9488\u5bf9 ABCI \u63a5\u53e3\u7684\u8bf7\u6c42\u4fe1\u606f\uff0c\u5305\u62ec\u4ea4\u6613\u6570\u636e\uff08\u901a\u8fc7 CheckTx \u3001 DeliverTx \uff09\u3001\u533a\u5757\u4fe1\u606f\uff08\u901a\u8fc7 BeginBlock \u3001 EndBlock \uff09\u4ee5\u53ca\u533a\u5757\u63d0\u4ea4\uff08 Commit \uff09\u7b49\uff0c\u8fd9\u4e9b\u4fe1\u606f\u90fd\u7531\u5171\u8bc6\u5f15\u64ce\u6309\u7167\u9884\u8bbe\u534f\u8bae\u6d41\u7a0b\u53d1\u9001\u7ed9\u5e94\u7528\u5c42\u3002 \u8f93\u51fa \u5e94\u7528\u5c42\u5904\u7406\u8fd9\u4e9b\u8bf7\u6c42\u540e\u8fd4\u56de\u54cd\u5e94\u4fe1\u606f\uff1a \u4ea4\u6613\u7684\u6267\u884c\u7ed3\u679c\u548c\u72b6\u6001\u66f4\u65b0\u60c5\u51b5\uff0c \u533a\u5757\u7ed3\u675f\u65f6\u7684\u76f8\u5173\u4fe1\u606f\u548c validator \u96c6\u5408\u66f4\u65b0\uff0c \u4ee5\u53ca\u63d0\u4ea4\u65f6\u7684\u72b6\u6001\u6458\u8981\uff08\u5982\u72b6\u6001\u6839\uff09\u3002 \u8fd9\u4e9b\u8f93\u51fa\u4fe1\u606f\u6700\u7ec8\u4f1a\u88ab CometBFT \u6574\u5408\u8fdb\u65b0\u533a\u5757\u4e2d\uff0c\u786e\u4fdd\u6574\u4e2a\u7f51\u7edc\u8fbe\u6210\u5171\u8bc6\u5e76\u7ef4\u62a4\u6570\u636e\u4e00\u81f4\u6027\u3002 \u901a\u8fc7\u8fd9\u79cd\u8f93\u5165\u8f93\u51fa\u673a\u5236\uff0cCometBFT \u5b9e\u73b0\u4e86\u5171\u8bc6\u5c42\u4e0e\u5e94\u7528\u5c42\u7684\u89e3\u8026\uff0c\u4f7f\u5f97\u533a\u5757\u94fe\u7cfb\u7edf\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u7075\u6d3b\u6784\u5efa\uff0c\u540c\u65f6\u4fdd\u8bc1\u9ad8\u6027\u80fd\u3001\u9ad8\u5b89\u5168\u7684\u5171\u8bc6\u80fd\u529b\u3002 flowchart TD A[\u7528\u6237\u63d0\u4ea4\u4ea4\u6613] B[CheckTx: \u521d\u6b65\u6821\u9a8c] C[\u4ea4\u6613\u8fdb\u5165\u5185\u5b58\u6c60] D[\u8fbe\u6210\u5171\u8bc6\u5e76\u6253\u5305\u533a\u5757] E[BeginBlock: \u533a\u5757\u5f00\u59cb] F[DeliverTx: \u9010\u7b14\u5904\u7406\u4ea4\u6613] G[EndBlock: \u533a\u5757\u7ed3\u675f] H[Commit: \u751f\u6210\u72b6\u6001\u6458\u8981] I[\u8fd4\u56de\u65b0\u533a\u5757\u5e76\u66f4\u65b0\u72b6\u6001] A --> B B --> C C --> D D --> E E --> F F --> G G --> H H --> I Reth Node \u00b6 Ethereum execution layer client \uff08\u4ee5\u592a\u574a\u6267\u884c\u5c42\u5ba2\u6237\u7aef\uff09 \u5728\u4ee5\u592a\u574a\u4e2d\uff0c\u5ba2\u6237\u7aef\u901a\u5e38\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u6267\u884c\u5c42\u548c\u5171\u8bc6\u5c42\u3002\u6267\u884c\u5c42\u8d1f\u8d23\u5904\u7406\u4ea4\u6613\u3001\u6267\u884c\u667a\u80fd\u5408\u7ea6\u3001\u7ef4\u62a4\u72b6\u6001\u7b49\u6838\u5fc3\u529f\u80fd\u3002\u4ee5\u592a\u574a\u6267\u884c\u5c42\u5ba2\u6237\u7aef\u5c31\u662f\u4e13\u95e8\u8d1f\u8d23\u8fd9\u4e9b\u4efb\u52a1\u7684\u8f6f\u4ef6\u3002 CometBFT ABCI \u5ba2\u6237\u7aef CometBFT\uff08\u524d\u8eab\u4e3a Tendermint\uff09\u662f\u4e00\u79cd\u533a\u5757\u94fe\u5171\u8bc6\u5f15\u64ce\uff0c\u5b83\u901a\u8fc7 ABCI\uff08\u5e94\u7528\u7a0b\u5e8f\u533a\u5757\u94fe\u63a5\u53e3\uff09\u5c06\u5171\u8bc6\u5c42\u4e0e\u5e94\u7528\u5c42\u5206\u79bb\u3002\u7b80\u800c\u8a00\u4e4b\uff0cABCI \u5145\u5f53\u4e86\u5171\u8bc6\u5c42\u4e0e\u5177\u4f53\u4e1a\u52a1\u903b\u8f91\uff08\u5982\u4ee5\u592a\u574a\u6267\u884c\u5ba2\u6237\u7aef\uff09\u4e4b\u95f4\u7684\u6865\u6881\u3002 \u5f53\u4e00\u4e2a\u4ee5\u592a\u574a\u6267\u884c\u5c42\u5ba2\u6237\u7aef\u88ab\u63cf\u8ff0\u4e3a\u201cCometBFT ABCI \u5ba2\u6237\u7aef\u201d\u65f6\uff0c\u8fd9\u8868\u793a\u8be5\u5ba2\u6237\u7aef\u901a\u8fc7\u5b9e\u73b0 ABCI \u63a5\u53e3\uff0c\u4f7f\u5f97\u5b83\u80fd\u591f\u4e0e\u57fa\u4e8e CometBFT \u7684\u5171\u8bc6\u5f15\u64ce\u8fdb\u884c\u901a\u4fe1\u548c\u6570\u636e\u4ea4\u6362\u3002 Reth Node \u201cReth Node\u201d \u6307\u7684\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u4ee5\u592a\u574a\u6267\u884c\u5c42\u5ba2\u6237\u7aef\uff0c\u5b83\u57fa\u4e8e CometBFT \u7684 ABCI \u63a5\u53e3\u6765\u5b9e\u73b0\u4e0e\u5171\u8bc6\u5c42\u7684\u5bf9\u63a5\u3002\u901a\u8fc7\u8fd9\u79cd\u8bbe\u8ba1\uff0cReth Node \u80fd\u591f\u5229\u7528 CometBFT \u5171\u8bc6\u5c42\u7684\u7279\u6027\uff08\u5982\u5feb\u901f\u7684\u533a\u5757\u751f\u6210\u548c\u5bb9\u9519\u80fd\u529b\uff09\uff0c\u540c\u65f6\u6267\u884c\u4ee5\u592a\u574a\u7f51\u7edc\u6240\u9700\u7684\u4ea4\u6613\u548c\u667a\u80fd\u5408\u7ea6\u64cd\u4f5c\u3002 flowchart TD A[\u4ee5\u592a\u574a\u6267\u884c\u5c42] B[CometBFT ABCI \u5ba2\u6237\u7aef] C[CometBFT \u5171\u8bc6\u5f15\u64ce] %% \u4ee5\u592a\u574a\u6267\u884c\u5c42\u5b9e\u73b0ABCI\u63a5\u53e3\uff0c\u4e0eCometBFT ABCI\u5ba2\u6237\u7aef\u901a\u4fe1 A -->|\u5b9e\u73b0\u5e76\u8c03\u7528ABCI\u63a5\u53e3| B %% CometBFT ABCI\u5ba2\u6237\u7aef\u4e0e\u5171\u8bc6\u5f15\u64ce\u4ea4\u4e92 B -->|\u53d1\u9001\u4ea4\u6613/\u72b6\u6001\u66f4\u65b0\u8bf7\u6c42| C C -->|\u8fd4\u56de\u5171\u8bc6\u9a8c\u8bc1\u7ed3\u679c\u53ca\u533a\u5757| B %% CometBFT ABCI\u5ba2\u6237\u7aef\u5c06\u6267\u884c\u7ed3\u679c\u53cd\u9988\u7ed9\u4ee5\u592a\u574a\u6267\u884c\u5c42 B -->|\u8fd4\u56de\u6267\u884c\u7ed3\u679c\u548c\u533a\u5757\u4fe1\u606f| A %% \u4ee5\u592a\u574a\u6267\u884c\u5c42\u5904\u7406\u533a\u5757\u5e76\u751f\u6210\u65b0\u7684\u72b6\u6001 A -->|\u66f4\u65b0\u72b6\u6001\u5e76\u751f\u6210\u65b0\u533a\u5757\u63d0\u6848| B graph TD subgraph \"Botanix Federation Host\" BitcoinSigningServer[\"Bitcoin Signing Server\"] RethNode[\"Reth Node \u6267\u884c\u5c42client\"] CometBFTNode[\"CometBFT Consensus Node\"] BitcoinSigningServer -->|Signs Transactions| RethNode RethNode -->|Blockchain Interactions| CometBFTNode GrafanaAlloy[\"Grafana Alloy\"] RethNode -->|Monitors| GrafanaAlloy CometBFTNode -->|Monitors| GrafanaAlloy end Bitcoin Signing Server \u00b6 Bitcoin Signing Server\uff08\u6bd4\u7279\u5e01\u7b7e\u540d\u670d\u52a1\u5668\uff09\u4e3b\u8981\u7528\u4e8e\u5904\u7406\u6bd4\u7279\u5e01\u4ea4\u6613\u7684\u7b7e\u540d\u8fc7\u7a0b\u3002\u5728\u6bd4\u7279\u5e01\u7f51\u7edc\u4e2d\uff0c\u6bcf\u4e00\u7b14\u4ea4\u6613\u90fd\u9700\u8981\u4f7f\u7528\u79c1\u94a5\u8fdb\u884c\u7b7e\u540d\u4ee5\u8bc1\u660e\u4ea4\u6613\u53d1\u8d77\u8005\u5bf9\u6240\u82b1\u8d39\u7684\u6bd4\u7279\u5e01\u62e5\u6709\u6240\u6709\u6743\u3002\u8fd9\u4e2a\u7b7e\u540d\u8fc7\u7a0b\u662f\u786e\u4fdd\u4ea4\u6613\u7684\u771f\u5b9e\u6027\u548c\u9632\u6b62\u6b3a\u8bc8\u884c\u4e3a\u7684\u5173\u952e\u6b65\u9aa4\u3002 \u5177\u4f53\u6765\u8bf4\uff0cBitcoin Signing Server\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u529f\u80fd\uff1a \u5b89\u5168\u7b7e\u540d\uff1a\u5b83\u4fdd\u5b58\u7740\u7528\u4e8e\u7b7e\u540d\u4ea4\u6613\u7684\u79c1\u94a5\uff0c\u5e76\u5728\u9700\u8981\u65f6\u5bf9\u4ea4\u6613\u8fdb\u884c\u7b7e\u540d\u3002\u7531\u4e8e\u79c1\u94a5\u4e0d\u79bb\u5f00\u670d\u52a1\u5668\uff0c\u8fd9\u589e\u52a0\u4e86\u5b89\u5168\u6027\uff0c\u51cf\u5c11\u4e86\u79c1\u94a5\u6cc4\u9732\u7684\u98ce\u9669\u3002 \u81ea\u52a8\u5316\u5904\u7406\uff1a\u5bf9\u4e8e\u4e00\u4e9b\u5e94\u7528\u6216\u670d\u52a1\uff0c\u53ef\u80fd\u9700\u8981\u9891\u7e41\u5730\u53d1\u9001\u6bd4\u7279\u5e01\u4ea4\u6613\u3002\u4e00\u4e2a\u81ea\u52a8\u5316\u7684\u7b7e\u540d\u670d\u52a1\u5668\u53ef\u4ee5\u5e2e\u52a9\u8fd9\u4e9b\u5e94\u7528\u5feb\u901f\u4e14\u5b89\u5168\u5730\u751f\u6210\u5df2\u7b7e\u540d\u7684\u4ea4\u6613\uff0c\u800c\u4e0d\u9700\u8981\u4eba\u5de5\u5e72\u9884\u3002 \u591a\u91cd\u7b7e\u540d\u652f\u6301\uff1a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u53ef\u80fd\u4f1a\u8981\u6c42\u591a\u4e8e\u4e00\u628a\u79c1\u94a5\u6765\u6388\u6743\u4e00\u7b14\u4ea4\u6613\u3002\u8fd9\u79cd\u673a\u5236\u79f0\u4e3a\u591a\u91cd\u7b7e\u540d\uff08multisig\uff09\u3002Bitcoin Signing Server\u53ef\u4ee5\u88ab\u914d\u7f6e\u4e3a\u652f\u6301\u8fd9\u6837\u7684\u64cd\u4f5c\u6d41\u7a0b\u3002 \u96c6\u6210\u4e0e\u76d1\u63a7\uff1a\u5b83\u53ef\u4ee5\u4e0e\u5176\u4ed6\u7cfb\u7edf\u7ec4\u4ef6\uff08\u5982\u533a\u5757\u94fe\u8282\u70b9\u3001\u5171\u8bc6\u7b97\u6cd5\u8282\u70b9\u7b49\uff09\u96c6\u6210\uff0c\u5e76\u901a\u8fc7\u76d1\u63a7\u5de5\u5177\u8ddf\u8e2a\u5176\u72b6\u6001\u548c\u6027\u80fd\uff0c\u786e\u4fdd\u7cfb\u7edf\u7684\u7a33\u5b9a\u8fd0\u884c\u3002","title":"0410"},{"location":"daily/0410/#_1","text":"\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\uff08Byzantine Fault Tolerance\uff0c\u7b80\u79f0 BFT\uff09\u662f\u4e00\u7c7b\u65e8\u5728\u89e3\u51b3\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u8282\u70b9\u53ef\u80fd\u51fa\u73b0\u6545\u969c\u6216\u6076\u610f\u884c\u4e3a\u800c\u5bfc\u81f4\u7cfb\u7edf\u6574\u4f53\u4e0d\u4e00\u81f4\u95ee\u9898\u7684\u7b97\u6cd5\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5b83\u8ba9\u7cfb\u7edf\u5728\u5b58\u5728\u201c\u62dc\u5360\u5ead\u9519\u8bef\u201d\uff08\u5373\u8282\u70b9\u7684\u884c\u4e3a\u5f02\u5e38\u6216\u8005\u6545\u610f\u4f5c\u6076\uff09\u7684\u60c5\u51b5\u4e0b\uff0c\u4ecd\u80fd\u8fbe\u6210\u5171\u8bc6\u5e76\u6b63\u5e38\u8fd0\u884c\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u5173\u952e\u6982\u5ff5\u548c\u7279\u70b9\uff1a \u62dc\u5360\u5ead\u95ee\u9898\u7684\u80cc\u666f \u62dc\u5360\u5ead\u95ee\u9898\u6700\u65e9\u6765\u6e90\u4e8e\u4e00\u4e2a\u865a\u6784\u7684\u60c5\u666f\uff1a\u4e00\u652f\u62dc\u5360\u5ead\u519b\u961f\u4e2d\uff0c\u4e0d\u540c\u90e8\u961f\u4e4b\u95f4\u9700\u8981\u534f\u8c03\u4f5c\u6218\uff0c\u4f46\u6709\u4e9b\u90e8\u961f\u53ef\u80fd\u662f\u53db\u5f92\uff0c\u4f1a\u4f20\u9012\u865a\u5047\u4fe1\u606f\u3002\u5982\u4f55\u786e\u4fdd\u5373\u4f7f\u5b58\u5728\u5c11\u91cf\u53db\u5f92\uff0c\u5fe0\u8bda\u7684\u90e8\u961f\u4ecd\u7136\u53ef\u4ee5\u5c31\u4f5c\u6218\u8ba1\u5212\u8fbe\u6210\u5171\u8bc6\uff1f\u8fd9\u5c31\u662f\u62dc\u5360\u5ead\u95ee\u9898\u7684\u6838\u5fc3\u3002 \u5bb9\u9519\u80fd\u529b \u4e00\u4e2a\u7cfb\u7edf\u5982\u679c\u80fd\u591f\u5bb9\u5fcd\u4e00\u90e8\u5206\u8282\u70b9\u5b58\u5728\u6076\u610f\u6216\u6545\u969c\u884c\u4e3a\uff0c\u4ecd\u7136\u80fd\u591f\u6b63\u786e\u5730\u6267\u884c\u4efb\u52a1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7cfb\u7edf\u5c31\u5177\u5907\u62dc\u5360\u5ead\u5bb9\u9519\u80fd\u529b\u3002\u5e38\u89c1\u7684\u8bbe\u7f6e\u4e2d\uff0c\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\u80fd\u591f\u5bb9\u5fcd\u4e0d\u8d85\u8fc7\u4e09\u5206\u4e4b\u4e00\u7684\u8282\u70b9\u5b58\u5728\u6545\u969c\u3002 \u8fbe\u6210\u5171\u8bc6 \u5728\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u5404\u4e2a\u8282\u70b9\u9700\u8981\u5c31\u67d0\u4e2a\u72b6\u6001\u6216\u51b3\u7b56\u8fbe\u6210\u4e00\u81f4\uff0c\u5373\u4f7f\u4e00\u4e9b\u8282\u70b9\u53ef\u80fd\u53d1\u9001\u9519\u8bef\u7684\u4fe1\u606f\u3002BFT \u7b97\u6cd5\u63d0\u4f9b\u4e00\u7cfb\u5217\u673a\u5236\u548c\u6295\u7968/\u6d88\u606f\u4f20\u9012\u6d41\u7a0b\uff0c\u786e\u4fdd\u6240\u6709\u8bda\u5b9e\u8282\u70b9\u80fd\u591f\u6700\u7ec8\u5c31\u6b63\u786e\u7684\u6570\u636e\u6216\u51b3\u7b56\u8fbe\u6210\u5171\u8bc6\u3002 \u5b9e\u9645\u5e94\u7528 \u533a\u5757\u94fe\u7cfb\u7edf \uff1a\u4f8b\u5982 CometBFT\u3001Tendermint \u7b49\u533a\u5757\u94fe\u5171\u8bc6\u5f15\u64ce\u91c7\u7528\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\uff0c\u9632\u6b62\u6076\u610f\u8282\u70b9\u7be1\u6539\u6570\u636e\u6216\u8fdb\u884c\u53cc\u82b1\u653b\u51fb\u3002 \u5206\u5e03\u5f0f\u6570\u636e\u5e93\u548c\u91d1\u878d\u7cfb\u7edf \uff1a\u5728\u9700\u8981\u9ad8\u5b89\u5168\u6027\u548c\u4e00\u81f4\u6027\u4fdd\u8bc1\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4e5f\u5e38\u89c1\u4f7f\u7528 BFT \u7b97\u6cd5\u3002 \u7b97\u6cd5\u5b9e\u4f8b \u5e38\u89c1\u7684\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\u6709 Practical Byzantine Fault Tolerance (PBFT) \u7b49\u3002\u8fd9\u4e9b\u7b97\u6cd5\u901a\u5e38\u5305\u62ec\u591a\u4e2a\u9636\u6bb5\uff08\u5982\u9884\u51c6\u5907\u3001\u51c6\u5907\u548c\u63d0\u4ea4\u9636\u6bb5\uff09\uff0c\u5404\u8282\u70b9\u4ea4\u6362\u6d88\u606f\u5e76\u8fdb\u884c\u6295\u7968\uff0c\u76f4\u5230\u5728\u5927\u90e8\u5206\u8282\u70b9\u4e4b\u95f4\u8fbe\u6210\u4e00\u81f4\u3002 graph TD subgraph Byzantine_Fault_Tolerance_Process A[Propose] --> B[Prevote] B --> C[Precommit] C --> D[Commit] D --> E[Block Finalized] %% Step 1: Propose Phase A --> A1[Nodes receive proposal] A1 --> A2[Validate proposal] A2 -->|Valid| B A2 -->|Invalid| F[Discard proposal] %% Step 2: Prevote Phase B --> B1[Collect prevotes] B1 -->|More than 2/3 prevotes| C %% Step 3: Precommit Phase C --> C1[Collect precommits] C1 -->|More than 2/3 precommits| D %% Step 4: Commit Phase D --> D1[Finalize block] D1 --> E end \u603b\u7684\u6765\u8bf4\uff0c\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\u662f\u8bbe\u8ba1\u6765\u89e3\u51b3\u5728\u90e8\u5206\u8282\u70b9\u53ef\u80fd\u51fa\u73b0\u6545\u969c\u6216\u6076\u610f\u884c\u4e3a\u6761\u4ef6\u4e0b\u5982\u4f55\u786e\u4fdd\u5168\u5c40\u4e00\u81f4\u6027\u7684\u4e00\u7c7b\u5171\u8bc6\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6784\u5efa\u5b89\u5168\u3001\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u81f3\u5173\u91cd\u8981\u3002","title":"\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5"},{"location":"daily/0410/#cometbft","text":"CometBFT\uff08\u539f\u540d Tendermint Core\uff09\u662f\u4e00\u4e2a\u57fa\u4e8e\u62dc\u5360\u5ead\u5bb9\u9519\uff08BFT\uff09\u5171\u8bc6\u7b97\u6cd5\u7684\u9ad8\u6027\u80fd\u533a\u5757\u94fe\u5171\u8bc6\u5f15\u64ce\u3002\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u548c\u4f7f\u7528\u573a\u666f\u5305\u62ec\uff1a \u5171\u8bc6\u534f\u8bae\u5b9e\u73b0 CometBFT \u63d0\u4f9b\u4e86\u4e00\u79cd\u57fa\u4e8e\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\u7684\u5171\u8bc6\u534f\u8bae\uff0c\u8fd9\u79cd\u534f\u8bae\u80fd\u591f\u5728\u591a\u4e2a\u8282\u70b9\u4e2d\u8fbe\u6210\u4e00\u81f4\uff0c\u5373\u4f7f\u90e8\u5206\u8282\u70b9\u53ef\u80fd\u5b58\u5728\u6076\u610f\u884c\u4e3a\u6216\u6545\u969c\u3002\u5b83\u4fdd\u8bc1\u4e86\u7cfb\u7edf\u5728\u4e0d\u5b8c\u5168\u4fe1\u4efb\u7684\u73af\u5883\u4e2d\u4ecd\u7136\u80fd\u591f\u5b89\u5168\u3001\u9ad8\u6548\u5730\u751f\u6210\u533a\u5757\u3002 \u533a\u5757\u94fe\u7f51\u7edc\u7684\u6838\u5fc3\u5f15\u64ce \u4f5c\u4e3a\u533a\u5757\u94fe\u7cfb\u7edf\u7684\u57fa\u7840\u5c42\uff0cCometBFT \u8d1f\u8d23\u533a\u5757\u7684\u751f\u6210\u3001\u4ea4\u6613\u7684\u6392\u5e8f\u4ee5\u53ca\u72b6\u6001\u7684\u4e00\u81f4\u6027\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u5c06\u4e1a\u52a1\u903b\u8f91\uff08\u4f8b\u5982\u667a\u80fd\u5408\u7ea6\u3001\u8d26\u6237\u7cfb\u7edf\u7b49\uff09\u4e0e\u5171\u8bc6\u5c42\u5206\u79bb\uff0c\u5229\u7528 CometBFT \u6765\u5b9e\u73b0\u540e\u8005\uff0c\u4ece\u800c\u964d\u4f4e\u5f00\u53d1\u590d\u6742\u6027\u3002 \u6a21\u5757\u5316\u548c\u7075\u6d3b\u6027 \u5b83\u8bbe\u8ba1\u6709\u6e05\u6670\u7684\u5206\u5c42\u67b6\u6784\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4e2d\u95f4\u4ef6\u6574\u5408\u5230\u5404\u79cd\u94fe\u4e0a\u5e94\u7528\u4e2d\uff0c\u5e76\u5141\u8bb8\u5f00\u53d1\u8005\u6839\u636e\u9700\u6c42\u81ea\u5b9a\u4e49\u5e94\u7528\u5c42\uff08\u901a\u5e38\u79f0\u4e3a \u201c\u5e94\u7528\u533a\u5757\u94fe\u63a5\u53e3\u201d\uff08ABCI\uff09\u5e94\u7528\uff09\u3002\u8fd9\u4f7f\u5f97 CometBFT \u80fd\u591f\u652f\u6301\u4e0d\u540c\u7c7b\u578b\u7684\u53bb\u4e2d\u5fc3\u5316\u5e94\u7528\u573a\u666f\u3002 \u5b9e\u9645\u5e94\u7528\u573a\u666f \u516c\u94fe\u548c\u8054\u76df\u94fe \uff1aCometBFT \u88ab\u5e7f\u6cdb\u7528\u4e8e\u6784\u5efa\u53bb\u4e2d\u5fc3\u5316\u7684\u516c\u6709\u94fe\uff08\u4f8b\u5982 Cosmos \u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u8bb8\u591a\u9879\u76ee\uff09\u4ee5\u53ca\u8054\u76df\u94fe\uff0c\u5b83\u4eec\u9700\u8981\u9ad8\u6548\u4e14\u5065\u58ee\u7684\u5171\u8bc6\u673a\u5236\u3002 \u8de8\u94fe\u901a\u4fe1 \uff1a\u5728\u8de8\u94fe\u534f\u8bae\u7684\u65b9\u6848\u4e2d\uff0cCometBFT \u53ef\u4ee5\u4f5c\u4e3a\u4e0d\u540c\u94fe\u95f4\u6570\u636e\u4e00\u81f4\u6027\u548c\u5b89\u5168\u901a\u4fe1\u7684\u57fa\u7840\u3002 \u9ad8\u6027\u80fd\u91d1\u878d\u7cfb\u7edf \uff1a\u5bf9\u4e8e\u5bf9\u4ea4\u6613\u541e\u5410\u91cf\u548c\u786e\u8ba4\u901f\u5ea6\u6709\u8f83\u9ad8\u8981\u6c42\u7684\u7cfb\u7edf\uff0c\u5229\u7528 CometBFT \u7684\u5171\u8bc6\u7b97\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u8f83\u4f4e\u5ef6\u8fdf\u548c\u8f83\u9ad8\u5e76\u53d1\u7684\u4ea4\u6613\u5904\u7406\u3002 \u603b\u4e4b\uff0cCometBFT \u7a0b\u5e8f\u4e3b\u8981\u5c31\u662f\u5b9e\u73b0\u4e00\u4e2a\u9ad8\u6548\u3001\u5065\u58ee\u7684\u533a\u5757\u94fe\u5171\u8bc6\u5f15\u64ce\uff0c\u5728\u5404\u79cd\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u63d0\u4f9b\u540e\u7aef\u7684\u6570\u636e\u4e00\u81f4\u6027\u548c\u5b89\u5168\u6027\u4fdd\u969c\u3002 CometBFT \u7684\u6838\u5fc3\u8bbe\u8ba1\u7406\u5ff5\u662f\u5c06\u5171\u8bc6\u5c42\u548c\u5e94\u7528\u5c42\u5206\u79bb\uff0c\u901a\u8fc7 ABCI\uff08\u5e94\u7528\u533a\u5757\u94fe\u63a5\u53e3\uff09\u4f7f\u5f97\u8fd9\u4e24\u90e8\u5206\u53ef\u4ee5\u72ec\u7acb\u6f14\u8fdb\u3002\u56e0\u6b64\uff0c\u5b83\u7684\u8f93\u5165\u548c\u8f93\u51fa\u4e3b\u8981\u4f53\u73b0\u5728\u4e0e\u5916\u90e8\u5e94\u7528\u7a0b\u5e8f\uff08\u5373\u5b9e\u9645\u4e1a\u52a1\u903b\u8f91\u6240\u5728\u5904\uff09\u7684\u4ea4\u4e92\u4e0a\u3002\u4e0b\u9762\u8be6\u7ec6\u8bf4\u660e\uff1a","title":"CometBFT"},{"location":"daily/0410/#1-abci","text":"ABCI\uff08Application BlockChain Interface\uff09\u662f\u4e00\u4e2a\u57fa\u4e8e socket \u901a\u4fe1\uff08TCP \u6216 Unix Domain Socket\uff09\u7684\u63a5\u53e3\uff0c\u7528\u4e8e CometBFT \u5171\u8bc6\u5f15\u64ce\u548c\u5177\u4f53\u4e1a\u52a1\u5e94\u7528\u4e4b\u95f4\u7684\u6d88\u606f\u4f20\u9012\u3002\u8fd9\u4e2a\u63a5\u53e3\u5b9a\u4e49\u4e86\u4e00\u7ec4\u8bf7\u6c42\u548c\u54cd\u5e94\u6d88\u606f\uff0c\u6574\u4e2a\u4ea4\u4e92\u8fc7\u7a0b\u4e3b\u8981\u53d1\u751f\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\uff1a \u5171\u8bc6\u5c42\u53d1\u9001\u8bf7\u6c42\u7ed9\u5e94\u7528\u5c42 \u5e94\u7528\u5c42\u8fd4\u56de\u54cd\u5e94\u7ed9\u5171\u8bc6\u5c42","title":"1. ABCI \u63a5\u53e3\u6982\u89c8"},{"location":"daily/0410/#2","text":"","title":"2. \u4e3b\u8981\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u7c7b\u578b"},{"location":"daily/0410/#21","text":"DeliverTx \u5f53\u65b0\u533a\u5757\u4e2d\u5305\u542b\u4ea4\u6613\u65f6\uff0cCometBFT \u4f7f\u7528 DeliverTx \u8bf7\u6c42\u9010\u7b14\u5411\u5e94\u7528\u5c42\u4f20\u9012\u4ea4\u6613\u6570\u636e\uff0c\u5e94\u7528\u5c42\u8d1f\u8d23\u6821\u9a8c\u4ea4\u6613\uff08\u4f8b\u5982\u7b7e\u540d\u9a8c\u8bc1\u3001\u72b6\u6001\u6821\u9a8c\u7b49\uff09\u5e76\u66f4\u65b0\u72b6\u6001\u3002 CheckTx \u7528\u4e8e\u5728\u4ea4\u6613\u8fdb\u5165\u5185\u5b58\u6c60\u65f6\u8fdb\u884c\u521d\u6b65\u9a8c\u8bc1\u3002\u8fd9\u4e2a\u8bf7\u6c42\u901a\u5e38\u5728\u4ea4\u6613\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u8c03\u7528\uff0c\u786e\u4fdd\u4ea4\u6613\u683c\u5f0f\u548c\u521d\u6b65\u89c4\u5219\u6b63\u786e\uff0c\u4ee5\u4fbf\u5b83\u4eec\u80fd\u88ab\u7eb3\u5165\u5171\u8bc6\u6d41\u7a0b\u3002 BeginBlock \u548c EndBlock \u8fd9\u4e24\u4e2a\u8bf7\u6c42\u5305\u56f4\u7740\u6574\u4e2a\u533a\u5757\u4e2d\u4ea4\u6613\u7684\u5904\u7406\u8fc7\u7a0b\uff1a BeginBlock \u901a\u77e5\u5e94\u7528\u533a\u5757\u7684\u5f00\u59cb\uff08\u4f8b\u5982\u5305\u542b\u533a\u5757\u5934\u4fe1\u606f\u3001\u533a\u5757\u5185\u63d0\u4ea4\u8005\u5217\u8868\u7b49\uff09\uff0c EndBlock \u901a\u77e5\u533a\u5757\u5904\u7406\u7ed3\u675f\uff0c\u5e94\u7528\u53ef\u4ee5\u5728\u6b64\u9636\u6bb5\u8fd4\u56de\u8bf8\u5982\u6cbb\u7406\u7b56\u7565\u3001 validator \u66f4\u65b0\u7b49\u4fe1\u606f\u3002 Commit \u5f53\u4e00\u4e2a\u5757\u7ed3\u675f\u4e14\u6240\u6709\u4ea4\u6613\u90fd\u5904\u7406\u5b8c\u6bd5\uff0cCometBFT \u8c03\u7528 Commit \u8bf7\u6c42\u8981\u6c42\u5e94\u7528\u5c42\u5c06\u5f53\u524d\u72b6\u6001\u6301\u4e45\u5316\uff0c\u5e76\u8fd4\u56de\u6700\u65b0\u72b6\u6001\u7684 Merkle \u6839\u6216\u5176\u4ed6\u5f62\u5f0f\u7684\u72b6\u6001\u6458\u8981\u3002\u8be5\u6458\u8981\u4f1a\u88ab\u5199\u5165\u5171\u8bc6\u5c42\u533a\u5757\u4e2d\uff0c\u4f5c\u4e3a\u72b6\u6001\u4e00\u81f4\u6027\u9a8c\u8bc1\u7684\u4f9d\u636e\u3002 \u5176\u4ed6\u8f85\u52a9\u8bf7\u6c42 \u6839\u636e\u9700\u6c42\uff0cABCI \u8fd8\u652f\u6301\u8bf8\u5982\u67e5\u8be2\u64cd\u4f5c\uff08 Query \uff09\u3001\u5feb\u7167\u76f8\u5173\u8bf7\u6c42\u7b49\uff0c\u8fd9\u4e9b\u901a\u5e38\u7528\u4e8e\u8282\u70b9\u95f4\u72b6\u6001\u540c\u6b65\u3001\u72b6\u6001\u67e5\u8be2\u6216\u8c03\u8bd5\u3002","title":"2.1 \u4e3b\u8981\u8bf7\u6c42\u7c7b\u578b"},{"location":"daily/0410/#22","text":"\u5bf9\u4e8e\u6bcf\u4e2a\u8bf7\u6c42\uff0c\u5e94\u7528\u5c42\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u54cd\u5e94\u6d88\u606f\uff0c\u5176\u4e2d\u5305\u542b\uff1a \u4ea4\u6613\u5904\u7406\u7ed3\u679c \uff1a\u5728 CheckTx \u548c DeliverTx \u7684\u54cd\u5e94\u4e2d\uff0c\u901a\u5e38\u4f1a\u6709\u4e00\u4e2a\u4ee3\u7801\uff08\u4f8b\u5982 0 \u8868\u793a\u6210\u529f\uff0c\u5176\u4ed6\u503c\u8868\u793a\u9519\u8bef\uff09\u4ee5\u53ca\u76f8\u5e94\u7684\u65e5\u5fd7\u4fe1\u606f\u6216\u6267\u884c\u7ed3\u679c\u3002 \u533a\u5757\u7ed3\u679c \uff1a\u5728 EndBlock \u4e2d\uff0c\u5e94\u7528\u5c42\u53ef\u4ee5\u8fd4\u56de\u9488\u5bf9\u8fd9\u4e2a\u533a\u5757\u5185\u67d0\u4e9b\u4e1a\u52a1\u903b\u8f91\u7684\u53d8\u66f4\uff08\u4f8b\u5982\u53d8\u66f4 validator \u96c6\u5408\uff09\uff0c\u8fd9\u4e9b\u4fe1\u606f\u4f1a\u88ab CometBFT \u7528\u4e8e\u540e\u7eed\u5171\u8bc6\u6d41\u7a0b\u3002 \u72b6\u6001\u6458\u8981 \uff1a\u5728 Commit \u54cd\u5e94\u4e2d\uff0c\u5e94\u7528\u5c42\u8fd4\u56de\u7684\u72b6\u6001\u6839\uff08\u6216\u7c7b\u4f3c\u6807\u8bc6\u7b26\uff09\u76f4\u63a5\u53c2\u4e0e\u5230\u533a\u5757\u94fe\u72b6\u6001\u7684\u8fde\u7eed\u6027\u4fdd\u8bc1\u4e2d\u3002","title":"2.2 \u4e3b\u8981\u54cd\u5e94\u7c7b\u578b"},{"location":"daily/0410/#3","text":"","title":"3. \u4f7f\u7528\u65b9\u6cd5\u4e0e\u6d41\u7a0b"},{"location":"daily/0410/#31","text":"\u72ec\u7acb\u8fdb\u7a0b CometBFT \u5171\u8bc6\u5f15\u64ce\u901a\u5e38\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u8fdb\u7a0b\u8fd0\u884c\uff0c\u800c\u4e1a\u52a1\u5e94\u7528\u7a0b\u5e8f\u5219\u53e6\u8d77\u8fdb\u7a0b\u3002\u4e24\u8005\u901a\u8fc7\u7f51\u7edc socket \u8fde\u63a5\uff08TCP \u6216 Unix Socket\uff09\u8fdb\u884c\u901a\u4fe1\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u5f97\u5171\u8bc6\u5c42\u4e0e\u5e94\u7528\u903b\u8f91\u53ef\u4ee5\u5206\u522b\u91c7\u7528\u4e0d\u540c\u7684\u7f16\u7a0b\u8bed\u8a00\u6216\u72ec\u7acb\u5347\u7ea7\u3002 \u96c6\u6210\u90e8\u7f72 \u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u53ef\u4ee5\u5c06\u5171\u8bc6\u5f15\u64ce\u548c\u5e94\u7528\u903b\u8f91\u5728\u540c\u4e00\u8fdb\u7a0b\u4e2d\u90e8\u7f72\uff0c\u4f46\u8fd9\u79cd\u6a21\u5f0f\u8f83\u5c11\u89c1\uff0c\u56e0\u4e3a\u5206\u79bb\u6a21\u5f0f\u66f4\u5bb9\u6613\u5b9e\u73b0\u6a21\u5757\u5316\u3001\u7ef4\u62a4\u548c\u6269\u5c55\u3002","title":"3.1 \u90e8\u7f72\u6a21\u5f0f"},{"location":"daily/0410/#32","text":"\u6784\u5efa ABCI \u5e94\u7528 \u5f00\u53d1\u8005\u9996\u5148\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u7b26\u5408 ABCI \u534f\u8bae\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6d89\u53ca\u4e3a\u4e0a\u8ff0\u8bf7\u6c42\u7c7b\u578b\u7f16\u5199\u5904\u7406\u903b\u8f91\uff0c\u5982\u4ea4\u6613\u9a8c\u8bc1\u3001\u72b6\u6001\u66f4\u65b0\u3001\u533a\u5757\u524d\u540e\u903b\u8f91\u5904\u7406\u7b49\u3002\u5e38\u89c1\u7684\u7f16\u7a0b\u8bed\u8a00\u6709 Go\uff08\u4f8b\u5982 Cosmos SDK \u4f7f\u7528 Go \u7f16\u5199\uff09\u4ee5\u53ca\u5176\u4ed6\u8bed\u8a00\u7684\u5b9e\u73b0\u7248\u672c\u3002 \u914d\u7f6e CometBFT \u914d\u7f6e\u6587\u4ef6\u4e2d\u9700\u8981\u6307\u5b9a ABCI \u5e94\u7528\u7a0b\u5e8f\u7684\u76d1\u542c\u5730\u5740\uff0c\u786e\u4fdd CometBFT \u4e0e\u5e94\u7528\u4e4b\u95f4\u80fd\u591f\u5efa\u7acb\u8fde\u63a5\u3002\u542f\u52a8 CometBFT \u540e\uff0c\u5b83\u4f1a\u6839\u636e\u914d\u7f6e\u53d1\u8d77\u4e0e\u5e94\u7528\u7684\u8fde\u63a5\uff0c\u5e76\u5f00\u59cb\u533a\u5757\u751f\u6210\u548c\u5171\u8bc6\u6d41\u7a0b\u3002 \u5171\u8bc6\u6d41\u7a0b\u7684\u4ea4\u4e92 \u5f53\u7528\u6237\u63d0\u4ea4\u4ea4\u6613\u65f6\uff0c\u4ea4\u6613\u9996\u5148\u7ecf\u8fc7 CheckTx \u8fdb\u884c\u9884\u6821\u9a8c\uff0c\u5e76\u8fdb\u5165\u8282\u70b9\u7684\u5185\u5b58\u6c60\u3002 \u8fbe\u6210\u5171\u8bc6\u540e\uff0cCometBFT \u5728\u65b0\u533a\u5757\u751f\u6210\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u4f9d\u6b21\u8c03\u7528 BeginBlock \u3001\u9488\u5bf9\u6bcf\u7b14\u4ea4\u6613\u8c03\u7528 DeliverTx \uff0c\u6700\u540e\u8c03\u7528 EndBlock \u5e76\u8bf7\u6c42 Commit \u3002 \u5e94\u7528\u7a0b\u5e8f\u56de\u4f20\u7684\u72b6\u6001\u6458\u8981\u4fdd\u8bc1\u4e86\u94fe\u4e0a\u72b6\u6001\u7684\u4e00\u81f4\u6027\uff0cCometBFT \u4f1a\u5c06\u5176\u5199\u5165\u65b0\u533a\u5757\u5934\u4e2d\u3002 \u72b6\u6001\u67e5\u8be2\u4e0e\u7ef4\u62a4 \u5f00\u53d1\u8005\u53ef\u4ee5\u5229\u7528 Query \u63a5\u53e3\u8fdb\u884c\u72b6\u6001\u67e5\u8be2\uff0c\u8c03\u8bd5\u65f6\u68c0\u67e5\u533a\u5757\u4e0e\u72b6\u6001\u6267\u884c\u60c5\u51b5\uff0c\u6216\u901a\u8fc7\u5feb\u7167\u673a\u5236\u8fdb\u884c\u72b6\u6001\u540c\u6b65\u548c\u6062\u590d\u3002","title":"3.2 \u5f00\u53d1\u6d41\u7a0b"},{"location":"daily/0410/#4","text":"\u8f93\u5165 CometBFT \u7684\u8f93\u5165\u4e3b\u8981\u662f\u9488\u5bf9 ABCI \u63a5\u53e3\u7684\u8bf7\u6c42\u4fe1\u606f\uff0c\u5305\u62ec\u4ea4\u6613\u6570\u636e\uff08\u901a\u8fc7 CheckTx \u3001 DeliverTx \uff09\u3001\u533a\u5757\u4fe1\u606f\uff08\u901a\u8fc7 BeginBlock \u3001 EndBlock \uff09\u4ee5\u53ca\u533a\u5757\u63d0\u4ea4\uff08 Commit \uff09\u7b49\uff0c\u8fd9\u4e9b\u4fe1\u606f\u90fd\u7531\u5171\u8bc6\u5f15\u64ce\u6309\u7167\u9884\u8bbe\u534f\u8bae\u6d41\u7a0b\u53d1\u9001\u7ed9\u5e94\u7528\u5c42\u3002 \u8f93\u51fa \u5e94\u7528\u5c42\u5904\u7406\u8fd9\u4e9b\u8bf7\u6c42\u540e\u8fd4\u56de\u54cd\u5e94\u4fe1\u606f\uff1a \u4ea4\u6613\u7684\u6267\u884c\u7ed3\u679c\u548c\u72b6\u6001\u66f4\u65b0\u60c5\u51b5\uff0c \u533a\u5757\u7ed3\u675f\u65f6\u7684\u76f8\u5173\u4fe1\u606f\u548c validator \u96c6\u5408\u66f4\u65b0\uff0c \u4ee5\u53ca\u63d0\u4ea4\u65f6\u7684\u72b6\u6001\u6458\u8981\uff08\u5982\u72b6\u6001\u6839\uff09\u3002 \u8fd9\u4e9b\u8f93\u51fa\u4fe1\u606f\u6700\u7ec8\u4f1a\u88ab CometBFT \u6574\u5408\u8fdb\u65b0\u533a\u5757\u4e2d\uff0c\u786e\u4fdd\u6574\u4e2a\u7f51\u7edc\u8fbe\u6210\u5171\u8bc6\u5e76\u7ef4\u62a4\u6570\u636e\u4e00\u81f4\u6027\u3002 \u901a\u8fc7\u8fd9\u79cd\u8f93\u5165\u8f93\u51fa\u673a\u5236\uff0cCometBFT \u5b9e\u73b0\u4e86\u5171\u8bc6\u5c42\u4e0e\u5e94\u7528\u5c42\u7684\u89e3\u8026\uff0c\u4f7f\u5f97\u533a\u5757\u94fe\u7cfb\u7edf\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u7075\u6d3b\u6784\u5efa\uff0c\u540c\u65f6\u4fdd\u8bc1\u9ad8\u6027\u80fd\u3001\u9ad8\u5b89\u5168\u7684\u5171\u8bc6\u80fd\u529b\u3002 flowchart TD A[\u7528\u6237\u63d0\u4ea4\u4ea4\u6613] B[CheckTx: \u521d\u6b65\u6821\u9a8c] C[\u4ea4\u6613\u8fdb\u5165\u5185\u5b58\u6c60] D[\u8fbe\u6210\u5171\u8bc6\u5e76\u6253\u5305\u533a\u5757] E[BeginBlock: \u533a\u5757\u5f00\u59cb] F[DeliverTx: \u9010\u7b14\u5904\u7406\u4ea4\u6613] G[EndBlock: \u533a\u5757\u7ed3\u675f] H[Commit: \u751f\u6210\u72b6\u6001\u6458\u8981] I[\u8fd4\u56de\u65b0\u533a\u5757\u5e76\u66f4\u65b0\u72b6\u6001] A --> B B --> C C --> D D --> E E --> F F --> G G --> H H --> I","title":"4. \u603b\u7ed3"},{"location":"daily/0410/#reth-node","text":"Ethereum execution layer client \uff08\u4ee5\u592a\u574a\u6267\u884c\u5c42\u5ba2\u6237\u7aef\uff09 \u5728\u4ee5\u592a\u574a\u4e2d\uff0c\u5ba2\u6237\u7aef\u901a\u5e38\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u6267\u884c\u5c42\u548c\u5171\u8bc6\u5c42\u3002\u6267\u884c\u5c42\u8d1f\u8d23\u5904\u7406\u4ea4\u6613\u3001\u6267\u884c\u667a\u80fd\u5408\u7ea6\u3001\u7ef4\u62a4\u72b6\u6001\u7b49\u6838\u5fc3\u529f\u80fd\u3002\u4ee5\u592a\u574a\u6267\u884c\u5c42\u5ba2\u6237\u7aef\u5c31\u662f\u4e13\u95e8\u8d1f\u8d23\u8fd9\u4e9b\u4efb\u52a1\u7684\u8f6f\u4ef6\u3002 CometBFT ABCI \u5ba2\u6237\u7aef CometBFT\uff08\u524d\u8eab\u4e3a Tendermint\uff09\u662f\u4e00\u79cd\u533a\u5757\u94fe\u5171\u8bc6\u5f15\u64ce\uff0c\u5b83\u901a\u8fc7 ABCI\uff08\u5e94\u7528\u7a0b\u5e8f\u533a\u5757\u94fe\u63a5\u53e3\uff09\u5c06\u5171\u8bc6\u5c42\u4e0e\u5e94\u7528\u5c42\u5206\u79bb\u3002\u7b80\u800c\u8a00\u4e4b\uff0cABCI \u5145\u5f53\u4e86\u5171\u8bc6\u5c42\u4e0e\u5177\u4f53\u4e1a\u52a1\u903b\u8f91\uff08\u5982\u4ee5\u592a\u574a\u6267\u884c\u5ba2\u6237\u7aef\uff09\u4e4b\u95f4\u7684\u6865\u6881\u3002 \u5f53\u4e00\u4e2a\u4ee5\u592a\u574a\u6267\u884c\u5c42\u5ba2\u6237\u7aef\u88ab\u63cf\u8ff0\u4e3a\u201cCometBFT ABCI \u5ba2\u6237\u7aef\u201d\u65f6\uff0c\u8fd9\u8868\u793a\u8be5\u5ba2\u6237\u7aef\u901a\u8fc7\u5b9e\u73b0 ABCI \u63a5\u53e3\uff0c\u4f7f\u5f97\u5b83\u80fd\u591f\u4e0e\u57fa\u4e8e CometBFT \u7684\u5171\u8bc6\u5f15\u64ce\u8fdb\u884c\u901a\u4fe1\u548c\u6570\u636e\u4ea4\u6362\u3002 Reth Node \u201cReth Node\u201d \u6307\u7684\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u4ee5\u592a\u574a\u6267\u884c\u5c42\u5ba2\u6237\u7aef\uff0c\u5b83\u57fa\u4e8e CometBFT \u7684 ABCI \u63a5\u53e3\u6765\u5b9e\u73b0\u4e0e\u5171\u8bc6\u5c42\u7684\u5bf9\u63a5\u3002\u901a\u8fc7\u8fd9\u79cd\u8bbe\u8ba1\uff0cReth Node \u80fd\u591f\u5229\u7528 CometBFT \u5171\u8bc6\u5c42\u7684\u7279\u6027\uff08\u5982\u5feb\u901f\u7684\u533a\u5757\u751f\u6210\u548c\u5bb9\u9519\u80fd\u529b\uff09\uff0c\u540c\u65f6\u6267\u884c\u4ee5\u592a\u574a\u7f51\u7edc\u6240\u9700\u7684\u4ea4\u6613\u548c\u667a\u80fd\u5408\u7ea6\u64cd\u4f5c\u3002 flowchart TD A[\u4ee5\u592a\u574a\u6267\u884c\u5c42] B[CometBFT ABCI \u5ba2\u6237\u7aef] C[CometBFT \u5171\u8bc6\u5f15\u64ce] %% \u4ee5\u592a\u574a\u6267\u884c\u5c42\u5b9e\u73b0ABCI\u63a5\u53e3\uff0c\u4e0eCometBFT ABCI\u5ba2\u6237\u7aef\u901a\u4fe1 A -->|\u5b9e\u73b0\u5e76\u8c03\u7528ABCI\u63a5\u53e3| B %% CometBFT ABCI\u5ba2\u6237\u7aef\u4e0e\u5171\u8bc6\u5f15\u64ce\u4ea4\u4e92 B -->|\u53d1\u9001\u4ea4\u6613/\u72b6\u6001\u66f4\u65b0\u8bf7\u6c42| C C -->|\u8fd4\u56de\u5171\u8bc6\u9a8c\u8bc1\u7ed3\u679c\u53ca\u533a\u5757| B %% CometBFT ABCI\u5ba2\u6237\u7aef\u5c06\u6267\u884c\u7ed3\u679c\u53cd\u9988\u7ed9\u4ee5\u592a\u574a\u6267\u884c\u5c42 B -->|\u8fd4\u56de\u6267\u884c\u7ed3\u679c\u548c\u533a\u5757\u4fe1\u606f| A %% \u4ee5\u592a\u574a\u6267\u884c\u5c42\u5904\u7406\u533a\u5757\u5e76\u751f\u6210\u65b0\u7684\u72b6\u6001 A -->|\u66f4\u65b0\u72b6\u6001\u5e76\u751f\u6210\u65b0\u533a\u5757\u63d0\u6848| B graph TD subgraph \"Botanix Federation Host\" BitcoinSigningServer[\"Bitcoin Signing Server\"] RethNode[\"Reth Node \u6267\u884c\u5c42client\"] CometBFTNode[\"CometBFT Consensus Node\"] BitcoinSigningServer -->|Signs Transactions| RethNode RethNode -->|Blockchain Interactions| CometBFTNode GrafanaAlloy[\"Grafana Alloy\"] RethNode -->|Monitors| GrafanaAlloy CometBFTNode -->|Monitors| GrafanaAlloy end","title":"Reth Node"},{"location":"daily/0410/#bitcoin-signing-server","text":"Bitcoin Signing Server\uff08\u6bd4\u7279\u5e01\u7b7e\u540d\u670d\u52a1\u5668\uff09\u4e3b\u8981\u7528\u4e8e\u5904\u7406\u6bd4\u7279\u5e01\u4ea4\u6613\u7684\u7b7e\u540d\u8fc7\u7a0b\u3002\u5728\u6bd4\u7279\u5e01\u7f51\u7edc\u4e2d\uff0c\u6bcf\u4e00\u7b14\u4ea4\u6613\u90fd\u9700\u8981\u4f7f\u7528\u79c1\u94a5\u8fdb\u884c\u7b7e\u540d\u4ee5\u8bc1\u660e\u4ea4\u6613\u53d1\u8d77\u8005\u5bf9\u6240\u82b1\u8d39\u7684\u6bd4\u7279\u5e01\u62e5\u6709\u6240\u6709\u6743\u3002\u8fd9\u4e2a\u7b7e\u540d\u8fc7\u7a0b\u662f\u786e\u4fdd\u4ea4\u6613\u7684\u771f\u5b9e\u6027\u548c\u9632\u6b62\u6b3a\u8bc8\u884c\u4e3a\u7684\u5173\u952e\u6b65\u9aa4\u3002 \u5177\u4f53\u6765\u8bf4\uff0cBitcoin Signing Server\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u529f\u80fd\uff1a \u5b89\u5168\u7b7e\u540d\uff1a\u5b83\u4fdd\u5b58\u7740\u7528\u4e8e\u7b7e\u540d\u4ea4\u6613\u7684\u79c1\u94a5\uff0c\u5e76\u5728\u9700\u8981\u65f6\u5bf9\u4ea4\u6613\u8fdb\u884c\u7b7e\u540d\u3002\u7531\u4e8e\u79c1\u94a5\u4e0d\u79bb\u5f00\u670d\u52a1\u5668\uff0c\u8fd9\u589e\u52a0\u4e86\u5b89\u5168\u6027\uff0c\u51cf\u5c11\u4e86\u79c1\u94a5\u6cc4\u9732\u7684\u98ce\u9669\u3002 \u81ea\u52a8\u5316\u5904\u7406\uff1a\u5bf9\u4e8e\u4e00\u4e9b\u5e94\u7528\u6216\u670d\u52a1\uff0c\u53ef\u80fd\u9700\u8981\u9891\u7e41\u5730\u53d1\u9001\u6bd4\u7279\u5e01\u4ea4\u6613\u3002\u4e00\u4e2a\u81ea\u52a8\u5316\u7684\u7b7e\u540d\u670d\u52a1\u5668\u53ef\u4ee5\u5e2e\u52a9\u8fd9\u4e9b\u5e94\u7528\u5feb\u901f\u4e14\u5b89\u5168\u5730\u751f\u6210\u5df2\u7b7e\u540d\u7684\u4ea4\u6613\uff0c\u800c\u4e0d\u9700\u8981\u4eba\u5de5\u5e72\u9884\u3002 \u591a\u91cd\u7b7e\u540d\u652f\u6301\uff1a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u53ef\u80fd\u4f1a\u8981\u6c42\u591a\u4e8e\u4e00\u628a\u79c1\u94a5\u6765\u6388\u6743\u4e00\u7b14\u4ea4\u6613\u3002\u8fd9\u79cd\u673a\u5236\u79f0\u4e3a\u591a\u91cd\u7b7e\u540d\uff08multisig\uff09\u3002Bitcoin Signing Server\u53ef\u4ee5\u88ab\u914d\u7f6e\u4e3a\u652f\u6301\u8fd9\u6837\u7684\u64cd\u4f5c\u6d41\u7a0b\u3002 \u96c6\u6210\u4e0e\u76d1\u63a7\uff1a\u5b83\u53ef\u4ee5\u4e0e\u5176\u4ed6\u7cfb\u7edf\u7ec4\u4ef6\uff08\u5982\u533a\u5757\u94fe\u8282\u70b9\u3001\u5171\u8bc6\u7b97\u6cd5\u8282\u70b9\u7b49\uff09\u96c6\u6210\uff0c\u5e76\u901a\u8fc7\u76d1\u63a7\u5de5\u5177\u8ddf\u8e2a\u5176\u72b6\u6001\u548c\u6027\u80fd\uff0c\u786e\u4fdd\u7cfb\u7edf\u7684\u7a33\u5b9a\u8fd0\u884c\u3002","title":"Bitcoin Signing Server"},{"location":"daily/0411/","text":"go scripts \u00b6 import ( \"flag\" \"fmt\" ) func initFlag ( flagSet * flag . FlagSet , varPtr interface {}, longName , shortName , description string ) { switch ptr := varPtr .( type ) { case * string : flagSet . StringVar ( ptr , longName , * ptr , description ) flagSet . StringVar ( ptr , shortName , * ptr , description + \" (shorthand)\" ) case * int : flagSet . IntVar ( ptr , longName , * ptr , description ) flagSet . IntVar ( ptr , shortName , * ptr , description + \" (shorthand)\" ) case * bool : flagSet . BoolVar ( ptr , longName , * ptr , description ) flagSet . BoolVar ( ptr , shortName , * ptr , description + \" (shorthand)\" ) case * float64 : flagSet . Float64Var ( ptr , longName , * ptr , description ) flagSet . Float64Var ( ptr , shortName , * ptr , description + \" (shorthand)\" ) // \u53ef\u4ee5\u6839\u636e\u9700\u8981\u6dfb\u52a0\u66f4\u591a\u7c7b\u578b\u7684\u652f\u6301 default : panic ( fmt . Sprintf ( \"Unsupported type: %T\" , ptr )) } } go\u6269\u5c55 \u00b6","title":"0411"},{"location":"daily/0411/#go-scripts","text":"import ( \"flag\" \"fmt\" ) func initFlag ( flagSet * flag . FlagSet , varPtr interface {}, longName , shortName , description string ) { switch ptr := varPtr .( type ) { case * string : flagSet . StringVar ( ptr , longName , * ptr , description ) flagSet . StringVar ( ptr , shortName , * ptr , description + \" (shorthand)\" ) case * int : flagSet . IntVar ( ptr , longName , * ptr , description ) flagSet . IntVar ( ptr , shortName , * ptr , description + \" (shorthand)\" ) case * bool : flagSet . BoolVar ( ptr , longName , * ptr , description ) flagSet . BoolVar ( ptr , shortName , * ptr , description + \" (shorthand)\" ) case * float64 : flagSet . Float64Var ( ptr , longName , * ptr , description ) flagSet . Float64Var ( ptr , shortName , * ptr , description + \" (shorthand)\" ) // \u53ef\u4ee5\u6839\u636e\u9700\u8981\u6dfb\u52a0\u66f4\u591a\u7c7b\u578b\u7684\u652f\u6301 default : panic ( fmt . Sprintf ( \"Unsupported type: %T\" , ptr )) } }","title":"go scripts"},{"location":"daily/0411/#go","text":"","title":"go\u6269\u5c55"},{"location":"daily/0413/","text":"\u4eca\u65e5\u5185\u5bb9 \u4fee\u6539yai \u652f\u6301\u81ea\u5b9a\u4e49url zhihu \u722c\u866b 1. \u6574\u4f53\u67b6\u6784 2. \u4e3b\u8981\u529f\u80fd\u6d41\u7a0b 3. \u53cd\u722c\u5904\u7406 4. \u6570\u636e\u5b58\u50a8 5. \u7279\u8272\u529f\u80fd plan \u4eca\u65e5\u5185\u5bb9 \u00b6 \u4fee\u6539yai \u652f\u6301\u81ea\u5b9a\u4e49url \u00b6 graph TD A[\u5f00\u59cb] --> B{\u914d\u7f6e\u68c0\u67e5} B -->|\u914d\u7f6e\u4e0d\u5b58\u5728| C[\u914d\u7f6e\u521d\u59cb\u5316] B -->|\u914d\u7f6e\u5b58\u5728| D{\u8fd0\u884c\u6a21\u5f0f} C -->|\u5199\u5165\u914d\u7f6e| D D -->|REPL\u6a21\u5f0f| E[REPL\u4ea4\u4e92\u754c\u9762] D -->|CLI\u6a21\u5f0f| F[CLI\u5355\u6b21\u6267\u884c] E -->|Tab\u5207\u6362| G{\u63d0\u793a\u6a21\u5f0f} G -->|Chat\u6a21\u5f0f| H[ChatGPT\u5bf9\u8bdd] G -->|Exec\u6a21\u5f0f| I[\u547d\u4ee4\u6267\u884c] H -->|\u6d41\u5f0f\u8f93\u51fa| J[\u663e\u793a\u56de\u7b54] I -->|\u547d\u4ee4\u786e\u8ba4| K[\u6267\u884c\u547d\u4ee4] F -->|\u53c2\u6570\u5904\u7406| L{\u63d0\u793a\u6a21\u5f0f} L -->|Chat\u6a21\u5f0f| M[\u5355\u6b21\u5bf9\u8bdd] L -->|Exec\u6a21\u5f0f| N[\u5355\u6b21\u547d\u4ee4] J --> E K --> E M --> O[\u7ed3\u675f] N --> O graph TD A[\u5f00\u59cb NewUIInput] --> B[\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570] B --> C{\u68c0\u67e5\u53c2\u6570\u6807\u5fd7} C --> |\"-e\"| D[\u8bbe\u7f6e Exec \u6a21\u5f0f] C --> |\"-c\"| E[\u8bbe\u7f6e Chat \u6a21\u5f0f] B --> F{\u68c0\u67e5\u6807\u51c6\u8f93\u5165} F --> |\u6709\u7ba1\u9053\u8f93\u5165| G[\u8bfb\u53d6\u7ba1\u9053\u5185\u5bb9] F --> |\u65e0\u7ba1\u9053\u8f93\u5165| H[pipe \u4e3a\u7a7a] B --> I{\u68c0\u67e5\u547d\u4ee4\u884c\u53c2\u6570} I --> |\u6709\u53c2\u6570| J[\u8bbe\u7f6e CLI \u6a21\u5f0f] I --> |\u65e0\u53c2\u6570| K[\u8bbe\u7f6e REPL \u6a21\u5f0f] D --> L[\u8bbe\u7f6e promptMode] E --> L G --> M[\u6784\u9020 UiInput] H --> M J --> M K --> M L --> M M --> N[\u8fd4\u56de UiInput \u5b9e\u4f8b] graph LR A[UI \u6a21\u5f0f\u679a\u4e3e] --> B[RunMode] A --> C[PromptMode] B --> B1[ReplMode<br/>\u4ea4\u4e92\u5f0f\u6a21\u5f0f] B --> B2[CliMode<br/>\u547d\u4ee4\u884c\u6a21\u5f0f] C --> C1[ChatPromptMode<br/>\u804a\u5929\u6a21\u5f0f] C --> C2[ExecPromptMode<br/>\u547d\u4ee4\u6267\u884c\u6a21\u5f0f] C --> C3[DefaultPromptMode<br/>\u9ed8\u8ba4\u6a21\u5f0f] graph TD A[Spinner \u52a0\u8f7d\u52a8\u753b] --> B[\u663e\u793a\u72b6\u6001] B --> B1[\u601d\u8003\u4e2d...] B --> B2[\u52a0\u8f7d\u4e2d...] B --> B3[\u5904\u7406\u4e2d...] A --> C[\u529f\u80fd] C --> C1[\u89c6\u89c9\u53cd\u9988] C --> C2[\u63d0\u5347\u7528\u6237\u4f53\u9a8c] graph TD A[UI \u4e3b\u4f53] --> B[\u7ec4\u4ef6] B --> B1[Prompt<br/>\u8f93\u5165\u63d0\u793a] B --> B2[Spinner<br/>\u52a0\u8f7d\u52a8\u753b] B --> B3[Renderer<br/>\u6e32\u67d3\u5668] A --> C[\u72b6\u6001\u7ba1\u7406] C --> C1[\u8fd0\u884c\u6a21\u5f0f] C --> C2[\u67e5\u8be2\u72b6\u6001] C --> C3[\u914d\u7f6e\u72b6\u6001] A --> D[\u4e8b\u4ef6\u5904\u7406] D --> D1[\u952e\u76d8\u4e8b\u4ef6] D --> D2[AI\u54cd\u5e94] D --> D3[\u547d\u4ee4\u6267\u884c] \u4e3b\u8981\u7ec4\u4ef6\u8bf4\u660e\uff1a ui.go \uff1a UI \u7684\u6838\u5fc3\u63a7\u5236\u5668 \u5904\u7406\u7528\u6237\u8f93\u5165 \u7ba1\u7406\u72b6\u6001\u8f6c\u6362 \u534f\u8c03\u5404\u4e2a\u7ec4\u4ef6 2. spinner.go \uff1a \u663e\u793a\u52a0\u8f7d\u52a8\u753b \u5f53 AI \u601d\u8003\u6216\u6267\u884c\u547d\u4ee4\u65f6\u63d0\u4f9b\u89c6\u89c9\u53cd\u9988 \u63d0\u5347\u7528\u6237\u4f53\u9a8c 3. input.go \uff1a \u5904\u7406\u547d\u4ee4\u884c\u53c2\u6570 \u7ba1\u7406\u8f93\u5165\u6a21\u5f0f \u5904\u7406\u7ba1\u9053\u8f93\u5165 4. prompt.go \uff1a \u5904\u7406\u7528\u6237\u8f93\u5165\u754c\u9762 \u7ba1\u7406\u8f93\u5165\u63d0\u793a \u5904\u7406\u8f93\u5165\u5386\u53f2 graph TD A[\u547d\u4ee4\u884c\u8f93\u5165] --> B{\u53c2\u6570\u89e3\u6790} B --> C[\u4ea4\u4e92\u6a21\u5f0f] B --> D[\u5355\u6b21\u6267\u884c\u6a21\u5f0f] B --> E[\u7ba1\u9053\u8f93\u5165\u6a21\u5f0f] graph TD A[\u7528\u6237\u4ea4\u4e92\u8bbe\u8ba1] --> B[\u5feb\u6377\u952e\u7ed1\u5b9a] B --> B1[Ctrl+C: \u9000\u51fa] B --> B2[Ctrl+L: \u6e05\u5c4f] B --> B3[Ctrl+R: \u91cd\u7f6e] A --> C[\u5386\u53f2\u8bb0\u5f55] C --> C1[\u4e0a\u4e0b\u952e\u5bfc\u822a] C --> C2[\u5386\u53f2\u4fdd\u5b58] A --> D[\u72b6\u6001\u53cd\u9988] D --> D1[\u52a0\u8f7d\u52a8\u753b] D --> D2[\u9519\u8bef\u63d0\u793a] D --> D3[\u6210\u529f\u63d0\u793a] graph TD A[\u547d\u4ee4\u884c\u5e94\u7528] --> B[\u8f93\u5165\u5c42] B --> B1[\u53c2\u6570\u89e3\u6790] B --> B2[\u4ea4\u4e92\u8f93\u5165] A --> C[\u6838\u5fc3\u5c42] C --> C1[\u4e1a\u52a1\u903b\u8f91] C --> C2[\u72b6\u6001\u7ba1\u7406] A --> D[\u8f93\u51fa\u5c42] D --> D1[\u683c\u5f0f\u5316\u8f93\u51fa] D --> D2[\u989c\u8272\u6e32\u67d3] \u4ece Yai \u53ef\u4ee5\u5b66\u5230\u7684\u5173\u952e\u8bbe\u8ba1\u6a21\u5f0f\uff1a \u8f93\u5165\u5904\u7406 \uff1a \u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790 \u7ba1\u9053\u8f93\u5165\u5904\u7406 \u4ea4\u4e92\u5f0f\u8f93\u5165 \u5386\u53f2\u8bb0\u5f55\u7ba1\u7406 2. \u72b6\u6001\u7ba1\u7406 \uff1a \u8fd0\u884c\u6a21\u5f0f\u5207\u6362 \u72b6\u6001\u673a\u8bbe\u8ba1 \u9519\u8bef\u5904\u7406 3. \u7528\u6237\u4f53\u9a8c \uff1a \u52a0\u8f7d\u52a8\u753b \u989c\u8272\u8f93\u51fa \u683c\u5f0f\u5316\u663e\u793a \u5e2e\u52a9\u4fe1\u606f 4. \u914d\u7f6e\u7ba1\u7406 \uff1a \u914d\u7f6e\u6587\u4ef6\u8bfb\u5199 \u7528\u6237\u8bbe\u7f6e\u6301\u4e45\u5316 \u8fd9\u4e9b\u90fd\u662f\u6784\u5efa\u547d\u4ee4\u884c\u5e94\u7528\u7684\u57fa\u672c\u8981\u7d20\uff0c\u901a\u8fc7\u5b66\u4e60 Yai \u7684\u5b9e\u73b0\uff0c\u4f60\u53ef\u4ee5\u4e86\u89e3\uff1a \u5982\u4f55\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u8f93\u5165 \u5982\u4f55\u7ba1\u7406\u5e94\u7528\u72b6\u6001 \u5982\u4f55\u63d0\u4f9b\u826f\u597d\u7684\u7528\u6237\u4f53\u9a8c \u5982\u4f55\u7ec4\u7ec7\u4ee3\u7801\u7ed3\u6784 zhihu \u722c\u866b \u00b6 \u6211\u6765\u5206\u6790\u4e00\u4e0b\u77e5\u4e4e\u722c\u866b\u7684\u4e3b\u8981\u903b\u8f91\u7ed3\u6784: 1. \u6574\u4f53\u67b6\u6784 \u00b6 \u6574\u4e2a\u77e5\u4e4e\u722c\u866b\u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u4e2a\u6838\u5fc3\u7ec4\u4ef6\u6784\u6210: ZhihuCrawler ( ) - \u722c\u866b\u7684\u4e3b\u7c7b,\u8d1f\u8d23\u6574\u4f53\u6d41\u7a0b\u63a7\u5236 - \u521d\u59cb\u5316\u6d4f\u89c8\u5668\u73af\u5883 - \u5904\u7406\u767b\u5f55\u6d41\u7a0b - \u6267\u884c\u5177\u4f53\u7684\u722c\u53d6\u4efb\u52a1 ZhiHuClient ( ) - API\u5ba2\u6237\u7aef,\u8d1f\u8d23\u4e0e\u77e5\u4e4e\u670d\u52a1\u5668\u4ea4\u4e92 - \u5c01\u88c5\u5404\u7c7bAPI\u8bf7\u6c42 - \u5904\u7406\u8bf7\u6c42\u7b7e\u540d\u548c\u8ba4\u8bc1 ZhihuExtractor ( ) - \u6570\u636e\u63d0\u53d6\u5668,\u8d1f\u8d23\u89e3\u6790\u54cd\u5e94\u6570\u636e - \u63d0\u53d6\u6587\u7ae0\u3001\u8bc4\u8bba\u7b49\u5185\u5bb9 - \u683c\u5f0f\u5316\u6570\u636e\u7ed3\u6784 2. \u4e3b\u8981\u529f\u80fd\u6d41\u7a0b \u00b6 \u722c\u866b\u652f\u6301\u4e09\u79cd\u4e3b\u8981\u7684\u722c\u53d6\u6a21\u5f0f: \u641c\u7d22\u6a21\u5f0f (search) - \u6839\u636e\u5173\u952e\u8bcd\u641c\u7d22\u5185\u5bb9 - \u5206\u9875\u83b7\u53d6\u641c\u7d22\u7ed3\u679c - \u83b7\u53d6\u5185\u5bb9\u7684\u8bc4\u8bba\u4fe1\u606f \u6307\u5b9a\u5185\u5bb9\u6a21\u5f0f (detail) - \u76f4\u63a5\u722c\u53d6\u6307\u5b9aURL\u7684\u5185\u5bb9 - \u652f\u6301\u56de\u7b54 \u3001 \u6587\u7ae0 \u3001 \u89c6\u9891\u4e09\u79cd\u7c7b\u578b - \u540c\u65f6\u83b7\u53d6\u8bc4\u8bba\u4fe1\u606f \u521b\u4f5c\u8005\u6a21\u5f0f (creator) - \u722c\u53d6\u6307\u5b9a\u521b\u4f5c\u8005\u7684\u4fe1\u606f - \u83b7\u53d6\u521b\u4f5c\u8005\u7684\u6240\u6709\u5185\u5bb9 ( \u56de\u7b54 / \u6587\u7ae0 / \u89c6\u9891 ) - \u83b7\u53d6\u5185\u5bb9\u7684\u8bc4\u8bba\u4fe1\u606f 3. \u53cd\u722c\u5904\u7406 \u00b6 \u722c\u866b\u91c7\u7528\u4e86\u591a\u79cd\u53cd\u722c\u866b\u63aa\u65bd: \u8bf7\u6c42\u7b7e\u540d - \u4f7f\u7528 \u8ba1\u7b97\u7b7e\u540d - \u4e3a\u6bcf\u4e2a\u8bf7\u6c42\u6dfb\u52a0\u5fc5\u8981\u7684\u7b7e\u540d\u53c2\u6570 \u767b\u5f55\u6001\u7ef4\u62a4 - \u652f\u6301\u4e8c\u7ef4\u7801\u3001Cookie\u3001\u624b\u673a\u53f7\u4e09\u79cd\u767b\u5f55\u65b9\u5f0f - \u53ef\u4ee5\u4fdd\u5b58\u767b\u5f55\u72b6\u6001\u907f\u514d\u91cd\u590d\u767b\u5f55 \u4ee3\u7406IP - \u652f\u6301\u914d\u7f6e\u4ee3\u7406IP\u6c60 - \u81ea\u52a8\u5207\u6362\u4ee3\u7406\u907f\u514d\u88ab\u5c01 \u8bf7\u6c42\u9891\u7387\u63a7\u5236 - \u4f7f\u7528\u4fe1\u53f7\u91cf\u63a7\u5236\u5e76\u53d1 - \u968f\u673a\u5ef6\u8fdf\u8bf7\u6c42\u95f4\u9694 4. \u6570\u636e\u5b58\u50a8 \u00b6 \u901a\u8fc7 \u6a21\u5757\u5904\u7406\u6570\u636e\u5b58\u50a8: \u652f\u6301\u5b58\u50a8\u5185\u5bb9\u4fe1\u606f \u652f\u6301\u5b58\u50a8\u8bc4\u8bba\u4fe1\u606f \u652f\u6301\u5b58\u50a8\u521b\u4f5c\u8005\u4fe1\u606f 5. \u7279\u8272\u529f\u80fd \u00b6 \u667a\u80fd\u89e3\u6790 - \u81ea\u52a8\u8bc6\u522b\u5185\u5bb9\u7c7b\u578b(\u56de\u7b54/\u6587\u7ae0/\u89c6\u9891) - \u7edf\u4e00\u7684\u6570\u636e\u63d0\u53d6\u63a5\u53e3 \u5e76\u53d1\u63a7\u5236 - \u652f\u6301\u914d\u7f6e\u6700\u5927\u5e76\u53d1\u6570 - \u5f02\u6b65\u5904\u7406\u63d0\u9ad8\u6548\u7387 \u7075\u6d3b\u914d\u7f6e - \u652f\u6301\u591a\u79cd\u8fd0\u884c\u6a21\u5f0f - \u4e30\u5bcc\u7684\u914d\u7f6e\u9009\u9879 \u8fd9\u4e2a\u722c\u866b\u9879\u76ee\u7684\u8bbe\u8ba1\u6bd4\u8f83\u5b8c\u5584,\u91c7\u7528\u4e86\u6a21\u5757\u5316\u7684\u7ed3\u6784\u8bbe\u8ba1,\u5177\u6709\u5f88\u597d\u7684\u53ef\u6269\u5c55\u6027\u548c\u7ef4\u62a4\u6027\u3002\u540c\u65f6\u4e5f\u5145\u5206\u8003\u8651\u4e86\u53cd\u722c\u866b\u5904\u7406,\u662f\u4e00\u4e2a\u76f8\u5bf9\u5b8c\u6574\u7684\u722c\u866b\u89e3\u51b3\u65b9\u6848\u3002 plan \u00b6 \u901a\u8fc7 yai \u5b66\u4e60\u547d\u4ee4\u884c\u5e94\u7528\u7684\u8bbe\u8ba1\u6a21\u5f0f \u4fe1\u606f\u91c7\u96c6","title":"0413"},{"location":"daily/0413/#_1","text":"","title":"\u4eca\u65e5\u5185\u5bb9"},{"location":"daily/0413/#yai-url","text":"graph TD A[\u5f00\u59cb] --> B{\u914d\u7f6e\u68c0\u67e5} B -->|\u914d\u7f6e\u4e0d\u5b58\u5728| C[\u914d\u7f6e\u521d\u59cb\u5316] B -->|\u914d\u7f6e\u5b58\u5728| D{\u8fd0\u884c\u6a21\u5f0f} C -->|\u5199\u5165\u914d\u7f6e| D D -->|REPL\u6a21\u5f0f| E[REPL\u4ea4\u4e92\u754c\u9762] D -->|CLI\u6a21\u5f0f| F[CLI\u5355\u6b21\u6267\u884c] E -->|Tab\u5207\u6362| G{\u63d0\u793a\u6a21\u5f0f} G -->|Chat\u6a21\u5f0f| H[ChatGPT\u5bf9\u8bdd] G -->|Exec\u6a21\u5f0f| I[\u547d\u4ee4\u6267\u884c] H -->|\u6d41\u5f0f\u8f93\u51fa| J[\u663e\u793a\u56de\u7b54] I -->|\u547d\u4ee4\u786e\u8ba4| K[\u6267\u884c\u547d\u4ee4] F -->|\u53c2\u6570\u5904\u7406| L{\u63d0\u793a\u6a21\u5f0f} L -->|Chat\u6a21\u5f0f| M[\u5355\u6b21\u5bf9\u8bdd] L -->|Exec\u6a21\u5f0f| N[\u5355\u6b21\u547d\u4ee4] J --> E K --> E M --> O[\u7ed3\u675f] N --> O graph TD A[\u5f00\u59cb NewUIInput] --> B[\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570] B --> C{\u68c0\u67e5\u53c2\u6570\u6807\u5fd7} C --> |\"-e\"| D[\u8bbe\u7f6e Exec \u6a21\u5f0f] C --> |\"-c\"| E[\u8bbe\u7f6e Chat \u6a21\u5f0f] B --> F{\u68c0\u67e5\u6807\u51c6\u8f93\u5165} F --> |\u6709\u7ba1\u9053\u8f93\u5165| G[\u8bfb\u53d6\u7ba1\u9053\u5185\u5bb9] F --> |\u65e0\u7ba1\u9053\u8f93\u5165| H[pipe \u4e3a\u7a7a] B --> I{\u68c0\u67e5\u547d\u4ee4\u884c\u53c2\u6570} I --> |\u6709\u53c2\u6570| J[\u8bbe\u7f6e CLI \u6a21\u5f0f] I --> |\u65e0\u53c2\u6570| K[\u8bbe\u7f6e REPL \u6a21\u5f0f] D --> L[\u8bbe\u7f6e promptMode] E --> L G --> M[\u6784\u9020 UiInput] H --> M J --> M K --> M L --> M M --> N[\u8fd4\u56de UiInput \u5b9e\u4f8b] graph LR A[UI \u6a21\u5f0f\u679a\u4e3e] --> B[RunMode] A --> C[PromptMode] B --> B1[ReplMode<br/>\u4ea4\u4e92\u5f0f\u6a21\u5f0f] B --> B2[CliMode<br/>\u547d\u4ee4\u884c\u6a21\u5f0f] C --> C1[ChatPromptMode<br/>\u804a\u5929\u6a21\u5f0f] C --> C2[ExecPromptMode<br/>\u547d\u4ee4\u6267\u884c\u6a21\u5f0f] C --> C3[DefaultPromptMode<br/>\u9ed8\u8ba4\u6a21\u5f0f] graph TD A[Spinner \u52a0\u8f7d\u52a8\u753b] --> B[\u663e\u793a\u72b6\u6001] B --> B1[\u601d\u8003\u4e2d...] B --> B2[\u52a0\u8f7d\u4e2d...] B --> B3[\u5904\u7406\u4e2d...] A --> C[\u529f\u80fd] C --> C1[\u89c6\u89c9\u53cd\u9988] C --> C2[\u63d0\u5347\u7528\u6237\u4f53\u9a8c] graph TD A[UI \u4e3b\u4f53] --> B[\u7ec4\u4ef6] B --> B1[Prompt<br/>\u8f93\u5165\u63d0\u793a] B --> B2[Spinner<br/>\u52a0\u8f7d\u52a8\u753b] B --> B3[Renderer<br/>\u6e32\u67d3\u5668] A --> C[\u72b6\u6001\u7ba1\u7406] C --> C1[\u8fd0\u884c\u6a21\u5f0f] C --> C2[\u67e5\u8be2\u72b6\u6001] C --> C3[\u914d\u7f6e\u72b6\u6001] A --> D[\u4e8b\u4ef6\u5904\u7406] D --> D1[\u952e\u76d8\u4e8b\u4ef6] D --> D2[AI\u54cd\u5e94] D --> D3[\u547d\u4ee4\u6267\u884c] \u4e3b\u8981\u7ec4\u4ef6\u8bf4\u660e\uff1a ui.go \uff1a UI \u7684\u6838\u5fc3\u63a7\u5236\u5668 \u5904\u7406\u7528\u6237\u8f93\u5165 \u7ba1\u7406\u72b6\u6001\u8f6c\u6362 \u534f\u8c03\u5404\u4e2a\u7ec4\u4ef6 2. spinner.go \uff1a \u663e\u793a\u52a0\u8f7d\u52a8\u753b \u5f53 AI \u601d\u8003\u6216\u6267\u884c\u547d\u4ee4\u65f6\u63d0\u4f9b\u89c6\u89c9\u53cd\u9988 \u63d0\u5347\u7528\u6237\u4f53\u9a8c 3. input.go \uff1a \u5904\u7406\u547d\u4ee4\u884c\u53c2\u6570 \u7ba1\u7406\u8f93\u5165\u6a21\u5f0f \u5904\u7406\u7ba1\u9053\u8f93\u5165 4. prompt.go \uff1a \u5904\u7406\u7528\u6237\u8f93\u5165\u754c\u9762 \u7ba1\u7406\u8f93\u5165\u63d0\u793a \u5904\u7406\u8f93\u5165\u5386\u53f2 graph TD A[\u547d\u4ee4\u884c\u8f93\u5165] --> B{\u53c2\u6570\u89e3\u6790} B --> C[\u4ea4\u4e92\u6a21\u5f0f] B --> D[\u5355\u6b21\u6267\u884c\u6a21\u5f0f] B --> E[\u7ba1\u9053\u8f93\u5165\u6a21\u5f0f] graph TD A[\u7528\u6237\u4ea4\u4e92\u8bbe\u8ba1] --> B[\u5feb\u6377\u952e\u7ed1\u5b9a] B --> B1[Ctrl+C: \u9000\u51fa] B --> B2[Ctrl+L: \u6e05\u5c4f] B --> B3[Ctrl+R: \u91cd\u7f6e] A --> C[\u5386\u53f2\u8bb0\u5f55] C --> C1[\u4e0a\u4e0b\u952e\u5bfc\u822a] C --> C2[\u5386\u53f2\u4fdd\u5b58] A --> D[\u72b6\u6001\u53cd\u9988] D --> D1[\u52a0\u8f7d\u52a8\u753b] D --> D2[\u9519\u8bef\u63d0\u793a] D --> D3[\u6210\u529f\u63d0\u793a] graph TD A[\u547d\u4ee4\u884c\u5e94\u7528] --> B[\u8f93\u5165\u5c42] B --> B1[\u53c2\u6570\u89e3\u6790] B --> B2[\u4ea4\u4e92\u8f93\u5165] A --> C[\u6838\u5fc3\u5c42] C --> C1[\u4e1a\u52a1\u903b\u8f91] C --> C2[\u72b6\u6001\u7ba1\u7406] A --> D[\u8f93\u51fa\u5c42] D --> D1[\u683c\u5f0f\u5316\u8f93\u51fa] D --> D2[\u989c\u8272\u6e32\u67d3] \u4ece Yai \u53ef\u4ee5\u5b66\u5230\u7684\u5173\u952e\u8bbe\u8ba1\u6a21\u5f0f\uff1a \u8f93\u5165\u5904\u7406 \uff1a \u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790 \u7ba1\u9053\u8f93\u5165\u5904\u7406 \u4ea4\u4e92\u5f0f\u8f93\u5165 \u5386\u53f2\u8bb0\u5f55\u7ba1\u7406 2. \u72b6\u6001\u7ba1\u7406 \uff1a \u8fd0\u884c\u6a21\u5f0f\u5207\u6362 \u72b6\u6001\u673a\u8bbe\u8ba1 \u9519\u8bef\u5904\u7406 3. \u7528\u6237\u4f53\u9a8c \uff1a \u52a0\u8f7d\u52a8\u753b \u989c\u8272\u8f93\u51fa \u683c\u5f0f\u5316\u663e\u793a \u5e2e\u52a9\u4fe1\u606f 4. \u914d\u7f6e\u7ba1\u7406 \uff1a \u914d\u7f6e\u6587\u4ef6\u8bfb\u5199 \u7528\u6237\u8bbe\u7f6e\u6301\u4e45\u5316 \u8fd9\u4e9b\u90fd\u662f\u6784\u5efa\u547d\u4ee4\u884c\u5e94\u7528\u7684\u57fa\u672c\u8981\u7d20\uff0c\u901a\u8fc7\u5b66\u4e60 Yai \u7684\u5b9e\u73b0\uff0c\u4f60\u53ef\u4ee5\u4e86\u89e3\uff1a \u5982\u4f55\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u8f93\u5165 \u5982\u4f55\u7ba1\u7406\u5e94\u7528\u72b6\u6001 \u5982\u4f55\u63d0\u4f9b\u826f\u597d\u7684\u7528\u6237\u4f53\u9a8c \u5982\u4f55\u7ec4\u7ec7\u4ee3\u7801\u7ed3\u6784","title":"\u4fee\u6539yai \u652f\u6301\u81ea\u5b9a\u4e49url"},{"location":"daily/0413/#zhihu","text":"\u6211\u6765\u5206\u6790\u4e00\u4e0b\u77e5\u4e4e\u722c\u866b\u7684\u4e3b\u8981\u903b\u8f91\u7ed3\u6784:","title":"zhihu \u722c\u866b"},{"location":"daily/0413/#1","text":"\u6574\u4e2a\u77e5\u4e4e\u722c\u866b\u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u4e2a\u6838\u5fc3\u7ec4\u4ef6\u6784\u6210: ZhihuCrawler ( ) - \u722c\u866b\u7684\u4e3b\u7c7b,\u8d1f\u8d23\u6574\u4f53\u6d41\u7a0b\u63a7\u5236 - \u521d\u59cb\u5316\u6d4f\u89c8\u5668\u73af\u5883 - \u5904\u7406\u767b\u5f55\u6d41\u7a0b - \u6267\u884c\u5177\u4f53\u7684\u722c\u53d6\u4efb\u52a1 ZhiHuClient ( ) - API\u5ba2\u6237\u7aef,\u8d1f\u8d23\u4e0e\u77e5\u4e4e\u670d\u52a1\u5668\u4ea4\u4e92 - \u5c01\u88c5\u5404\u7c7bAPI\u8bf7\u6c42 - \u5904\u7406\u8bf7\u6c42\u7b7e\u540d\u548c\u8ba4\u8bc1 ZhihuExtractor ( ) - \u6570\u636e\u63d0\u53d6\u5668,\u8d1f\u8d23\u89e3\u6790\u54cd\u5e94\u6570\u636e - \u63d0\u53d6\u6587\u7ae0\u3001\u8bc4\u8bba\u7b49\u5185\u5bb9 - \u683c\u5f0f\u5316\u6570\u636e\u7ed3\u6784","title":"1. \u6574\u4f53\u67b6\u6784"},{"location":"daily/0413/#2","text":"\u722c\u866b\u652f\u6301\u4e09\u79cd\u4e3b\u8981\u7684\u722c\u53d6\u6a21\u5f0f: \u641c\u7d22\u6a21\u5f0f (search) - \u6839\u636e\u5173\u952e\u8bcd\u641c\u7d22\u5185\u5bb9 - \u5206\u9875\u83b7\u53d6\u641c\u7d22\u7ed3\u679c - \u83b7\u53d6\u5185\u5bb9\u7684\u8bc4\u8bba\u4fe1\u606f \u6307\u5b9a\u5185\u5bb9\u6a21\u5f0f (detail) - \u76f4\u63a5\u722c\u53d6\u6307\u5b9aURL\u7684\u5185\u5bb9 - \u652f\u6301\u56de\u7b54 \u3001 \u6587\u7ae0 \u3001 \u89c6\u9891\u4e09\u79cd\u7c7b\u578b - \u540c\u65f6\u83b7\u53d6\u8bc4\u8bba\u4fe1\u606f \u521b\u4f5c\u8005\u6a21\u5f0f (creator) - \u722c\u53d6\u6307\u5b9a\u521b\u4f5c\u8005\u7684\u4fe1\u606f - \u83b7\u53d6\u521b\u4f5c\u8005\u7684\u6240\u6709\u5185\u5bb9 ( \u56de\u7b54 / \u6587\u7ae0 / \u89c6\u9891 ) - \u83b7\u53d6\u5185\u5bb9\u7684\u8bc4\u8bba\u4fe1\u606f","title":"2. \u4e3b\u8981\u529f\u80fd\u6d41\u7a0b"},{"location":"daily/0413/#3","text":"\u722c\u866b\u91c7\u7528\u4e86\u591a\u79cd\u53cd\u722c\u866b\u63aa\u65bd: \u8bf7\u6c42\u7b7e\u540d - \u4f7f\u7528 \u8ba1\u7b97\u7b7e\u540d - \u4e3a\u6bcf\u4e2a\u8bf7\u6c42\u6dfb\u52a0\u5fc5\u8981\u7684\u7b7e\u540d\u53c2\u6570 \u767b\u5f55\u6001\u7ef4\u62a4 - \u652f\u6301\u4e8c\u7ef4\u7801\u3001Cookie\u3001\u624b\u673a\u53f7\u4e09\u79cd\u767b\u5f55\u65b9\u5f0f - \u53ef\u4ee5\u4fdd\u5b58\u767b\u5f55\u72b6\u6001\u907f\u514d\u91cd\u590d\u767b\u5f55 \u4ee3\u7406IP - \u652f\u6301\u914d\u7f6e\u4ee3\u7406IP\u6c60 - \u81ea\u52a8\u5207\u6362\u4ee3\u7406\u907f\u514d\u88ab\u5c01 \u8bf7\u6c42\u9891\u7387\u63a7\u5236 - \u4f7f\u7528\u4fe1\u53f7\u91cf\u63a7\u5236\u5e76\u53d1 - \u968f\u673a\u5ef6\u8fdf\u8bf7\u6c42\u95f4\u9694","title":"3. \u53cd\u722c\u5904\u7406"},{"location":"daily/0413/#4","text":"\u901a\u8fc7 \u6a21\u5757\u5904\u7406\u6570\u636e\u5b58\u50a8: \u652f\u6301\u5b58\u50a8\u5185\u5bb9\u4fe1\u606f \u652f\u6301\u5b58\u50a8\u8bc4\u8bba\u4fe1\u606f \u652f\u6301\u5b58\u50a8\u521b\u4f5c\u8005\u4fe1\u606f","title":"4. \u6570\u636e\u5b58\u50a8"},{"location":"daily/0413/#5","text":"\u667a\u80fd\u89e3\u6790 - \u81ea\u52a8\u8bc6\u522b\u5185\u5bb9\u7c7b\u578b(\u56de\u7b54/\u6587\u7ae0/\u89c6\u9891) - \u7edf\u4e00\u7684\u6570\u636e\u63d0\u53d6\u63a5\u53e3 \u5e76\u53d1\u63a7\u5236 - \u652f\u6301\u914d\u7f6e\u6700\u5927\u5e76\u53d1\u6570 - \u5f02\u6b65\u5904\u7406\u63d0\u9ad8\u6548\u7387 \u7075\u6d3b\u914d\u7f6e - \u652f\u6301\u591a\u79cd\u8fd0\u884c\u6a21\u5f0f - \u4e30\u5bcc\u7684\u914d\u7f6e\u9009\u9879 \u8fd9\u4e2a\u722c\u866b\u9879\u76ee\u7684\u8bbe\u8ba1\u6bd4\u8f83\u5b8c\u5584,\u91c7\u7528\u4e86\u6a21\u5757\u5316\u7684\u7ed3\u6784\u8bbe\u8ba1,\u5177\u6709\u5f88\u597d\u7684\u53ef\u6269\u5c55\u6027\u548c\u7ef4\u62a4\u6027\u3002\u540c\u65f6\u4e5f\u5145\u5206\u8003\u8651\u4e86\u53cd\u722c\u866b\u5904\u7406,\u662f\u4e00\u4e2a\u76f8\u5bf9\u5b8c\u6574\u7684\u722c\u866b\u89e3\u51b3\u65b9\u6848\u3002","title":"5. \u7279\u8272\u529f\u80fd"},{"location":"daily/0413/#plan","text":"\u901a\u8fc7 yai \u5b66\u4e60\u547d\u4ee4\u884c\u5e94\u7528\u7684\u8bbe\u8ba1\u6a21\u5f0f \u4fe1\u606f\u91c7\u96c6","title":"plan"},{"location":"daily/0425/","text":"smolagent \u00b6 \u4ee3\u7801\u77ed\u5c0f\u7cbe\u608d\uff0c\u503c\u5f97\u5b66\u4e60 A-mem \u00b6 https://github.com/agiresearch/A-mem \u4ee3\u7801\u5f88\u5c11\uff0c\u5c1d\u8bd5\u89e3\u51b3 \u8bb0\u5fc6\u81ea\u52a8\u7ec4\u7ec7\uff0c\u81ea\u52a8\u66f4\u65b0\u7b49\u95ee\u9898\uff0c\u8fd8\u662f\u5168\u90e8\u4f7f\u7528llm \u4ed6\u7684embedding\u662f\u57fa\u4e8e old * weight + new * (1 - weight) \u6709\u70b9\u52a0\u6743\u7684\u610f\u601d Dynamic Parametric RAG \u00b6 91starts \u5f88\u5c11\uff0c\u4f5c\u8005\u662f\u4e2d\u56fd\u79d1\u5b66\u9662\u7684\u4eba https://arxiv.org/pdf/2503.23895 \u901a\u8fc7\u77e5\u8bc6\u76f4\u63a5\u53d8\u6210lora\uff1f \u65b9\u6cd5\u6838\u5fc3\u662f\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u628a\u77e5\u8bc6\u8f6c\u4e3alora,\u5177\u4f53\u5982\u4e0b\uff1a 1. doc-param \u6587\u672c\u5bf9,\u901a\u8fc7\u5fae\u8c03\u65b9\u5f0f,\u5f97\u5230\u8bad\u7ec3\u540e\u7684lora 2. \u6839\u636edoc\u548clora\uff0c\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u9884\u6d4blora\u7684\u53c2\u6570 3. \u901a\u8fc7\u8fd9\u4e2a\u6a21\u578b\u5f97\u5230\u66f4\u591a\u7684\u6587\u6863\u7684lora \u4f18\u70b9\u662f\uff0c\u8c8c\u4f3c\u80fd\u591f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u7f3a\u70b9\u662f\uff1a 1. \u4e0d\u540c\u7684layer\u7684lora\u53c2\u6570\u4e0d\u540c\uff0c\u662f\u4e0d\u662f\u6bcf\u4e00\u4e2alora\u90fd\u9700\u8981\u4e00\u4e2a\u9884\u6d4b\u5668\u3002 2. \u6cdb\u5316\u6027\u4f1a\u5f88\u597d\u5417\uff1f quant wiki \u91cf\u5316\u767e\u79d1 \u00b6 \u8c8c\u4f3c\u53ef\u4ee5\u5b66\u8d77\u6765 n8n \u00b6 \u89c2\u5bdf\u5e76\u9009\u62e9\u76f8\u5173\u7684\u8282\u70b9 moe\u539f\u7406 \u00b6 \u6d89\u53ca\u7684\u5185\u5bb9\u5305\u62ec\uff1arouter, export, load balance, keep top-k, auxiliary loss, export capacity deepseek moe: shared export isolation(common knowledge) cuAssembler gpu\u6781\u9650\u6027\u80fd\u5229\u5668 \u00b6 CuAssembler \u5bf9\u591a\u67b6\u6784\u7684\u652f\u6301\u66f4\u5b8c\u6574\uff08\u5f53\u524d\u4e3b\u8981\u6709 SM60/SM61/SM70/SM75/SM80/SM86\uff09 \u4e00\u662f\u6027\u80fd\u654f\u611f\u7b97\u5b50\uff08\u5982 conv\u3001gemm \u7b49\uff09\u7684\u6c47\u7f16\u7ea7\u7684\u6781\u81f4\u4f18\u5316\u3002\u7531\u4e8e\u6c47\u7f16\u662f\u8bbe\u5907\u8fd0\u884c\u7684\u6700\u7ec8\u4ee3\u7801\uff0c\u4f7f\u7528\u6c47\u7f16\u53ef\u4ee5\u652f\u6301\u6700\u7ec6\u7c92\u5ea6\u7684\u6027\u80fd\u8c03\u4f18\u3002\u7b2c\u4e8c\u4e2a\u573a\u666f\u662f\u901a\u8fc7\u4e00\u4e9b\u7279\u5b9a\u6c47\u7f16\u4ee3\u7801\u5b9e\u73b0 microbenchmarking\uff0c\u6d4b\u8bd5\u6307\u4ee4\u96c6\u53ca\u5fae\u67b6\u6784\u7684\u6027\u80fd\u4fe1\u606f\uff0c\u4ece\u800c\u4e3a\u7a0b\u5e8f\u6027\u80fd\u4f18\u5316\u63d0\u4f9b\u53c2\u8003\u3002 c++ \u9ad8\u6027\u80fd\u8ba1\u7b97 \u00b6 goto \u8df3\u8fc7\u65e0\u610f\u4e49\u903b\u8f91\u5224\u65ad \u5206\u652f\u9884\u6d4b\u4f18\u5316\uff0c likely, unlikely \u6570\u7ec4\u578b\u7ea2\u9ed1\u6811 \u4f7f\u7528c\u98ce\u683c\u6570\u7ec4 \u975e\u5fc5\u8981\u4e0d\u7528 \u5faa\u73af\u5c55\u5f00 \u5c0f\u5185\u5b58\u6570\u7ec4\u76f4\u63a5\u5f00\u8f9f\u5728\u6808\u4e0a, \u8bbf\u95ee\u6808\u66f4\u5bb9\u6613\u7f13\u5b58\u547d\u4e2d. \u6253\u8868\u548c\u8ba1\u7b97\u7ed3\u5408, \u6709\u65f6\u5019\u53ef\u4ee5\u5148\u6253\u8868\u786e\u5b9a\u5927\u81f4\u8303\u56f4\u6216\u4e0d\u7cbe\u786e\u89e3, \u901a\u8fc7\u5c11\u91cf\u8fdb\u4e00\u6b65\u8ba1\u7b97\u83b7\u5f97\u66f4\u7cbe\u786e\u89e3. \u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c gprof \u975e\u5fc5\u8981\u4e0d\u7528: SIMD\u6307\u4ee4 if-else if\u8f6cswitch, \u5982\u679c\u80fd\u4f18\u5316\u7684\u8bdd, \u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u4f18\u5316\u7684. \u591a\u7528 \u4f4d\u8fd0\u7b97\uff0c\u4f4d\u8fd0\u7b97\u53ef\u4ee5\u7528\u7f16\u8bd1\u5668\u5185\u7f6e\u51fd\u6570, \u5982__builtin_ctzll C restrict\u5173\u952e\u5b57. __builtin_prefetch\u63d0\u793a\u6570\u636e\u9884\u53d6 https://www.zhihu.com/question/662526033/answer/1894737937473713792 framepack \u00b6 \u672c\u8d28\u662f \"next frame prediction\" + \u5012\u5e8f\u91c7\u6837 \u4f20\u7edf\u505a\u6cd5\u662f\u4e00\u5e27\u4e00\u5e27\u987a\u7740\u751f\u6210\uff0c\u9519\u4e00\u5e27\u5c31\u8d8a\u9519\u8d8a\u591a\u3002 FramePack \u63d0\u51fa\u4e24\u79cd Anti-drifting \u91c7\u6837\u65b9\u6cd5\uff1a \u53cc\u951a\u70b9\u751f\u6210\uff08bi-directional\uff09\uff1a\u5148\u751f\u6210\u5f00\u5934\u548c\u7ed3\u5c3e\u5e27\uff0c\u518d\u586b\u4e2d\u95f4\uff1b \u53cd\u5411\u751f\u6210\uff08inverted\uff09\uff1a\u4ece\u5df2\u77e5\u9ad8\u8d28\u91cf\u5e27\u5012\u7740\u9884\u6d4b\u524d\u5e27\u3002 \u7ed3\u679c\u662f\uff1a\u6bcf\u4e00\u5e27\u90fd\u6709\u201c\u53c2\u8003\u5e27\u201d\uff0c\u8bef\u5dee\u4e0d\u518d\u7d2f\u79ef\uff0c\u6f02\u79fb\u5927\u5e45\u51cf\u5c11\u3002 \u7f3a\u70b9: 1. \u6ca1\u6709\u5168\u5c40\u89c4\u5212\uff0c\u6ca1\u6709storyline\uff0c\u6ca1\u6709scene-level abstraction 2. frame\u88ab\u8fc7\u5ea6\u538b\u7f29\uff0c\u5267\u60c5\u7ebf\u65ad\uff0c\u89d2\u8272\u884c\u4e3a\u4e0d\u8fde\u8d2f 3. \u53cd\u5411\u91c7\u6837\uff0c\u8282\u594f\u53ef\u80fd\u4e0d\u81ea\u7136 \u5bf9load,store\u7684\u5b66\u4e60 \u00b6 level1: \u4f20\u7edf: \u5f3a\u8c03Load/Store\u662f\u6307\u4ee4\u7684\u540c\u6b65\u884c\u4e3a level2: \u786c\u4ef6\u5524\u9192\u673a\u5236,load\u5728\u6267\u884c\u540e\u4e5f\u662f\u5f02\u6b65\u6302\u8d77\uff0c\u5176\u4ed6\u6307\u4ee4\u90fd\u53ef\u4ee5\u968f\u610f\u4e71\u5e8f\uff0c\u800cLoad\u5b8c\u6210\u65f6\uff0c\u5176Load\u5bf9\u5e94\u7684\u76ee\u6807Reg\u4f1a\u89e6\u53d1\u4e00\u4e2a\u786c\u4ef6\u7684Flag\u89e3\u9664Dependency\uff0c\u5524\u9192\u5176\u76f8\u5173\u7684\u6307\u4ee4\u518d\u6267\u884c level3: \u8f6f\u4ef6polling\u67d0\u4e2aFlag: \u5982\u679cLoad\u9700\u8981\u7684\u6570\u636e\u91cf\u6bd4\u8f83\u5927,\u8d85\u51fa\u4e86Super-Scalar\u7684OoO\u4ee5\u53caRegfile\u7684\u63a7\u5236\u8303\u56f4\uff0c\u786c\u4ef6\u518d\u6ca1\u6709\u529e\u6cd5\u5e2e\u4f60\u9690\u85cf\u5185\u5b58\u5ef6\u8fdf\u5e76\u68c0\u67e5\u76f8\u5173\u6027\u65f6,\u6ca1\u6709Regfile\u4e86\uff0c\u7ed9\u4f60\u653e\u4e00\u4e2a\u663e\u6027\u5730\u5740\u7684Buffer\u5427\uff0c\u4f60\u81ea\u5df1\u628a\u6570\u636e\u642c\u8fdb\u6765\u5e76\u4e14\u81ea\u5df1\u52a0flag polling\u68c0\u67e5\u8fd9\u4e9bdata inside buffer\u7684\u7ed3\u675f\u5427 level4: Buffer\u653e\u4e0d\u4e0b\uff0c\u53d8\u6210Mem to Mem\u65f6 \u73b0\u4ee3CPU\u4e2dLoad/Store\u6307\u4ee4\u7684\u6267\u884c\u673a\u5236\uff0c\u4ee5\u53ca\u5728\u4e0d\u540c\u60c5\u5883\u4e0b\u8fd9\u4e9b\u6307\u4ee4\u7684\u8868\u73b0\u548c\u5b9a\u4e49\uff1a \u73b0\u4ee3CPU\u7684\u6267\u884c\u673a\u5236 \uff1a \u73b0\u4ee3CPU\u91c7\u7528\u4e86\u8d85\u6807\u91cf\uff08Super Scalar\uff09\u548c\u4e71\u5e8f\u6267\u884c\uff08Out-of-Order Execution, OoO\uff09\u6280\u672f\uff0c\u8fd9\u610f\u5473\u7740\u6307\u4ee4\u4e0d\u518d\u4e25\u683c\u6309\u7167\u7a0b\u5e8f\u7f16\u5199\u7684\u987a\u5e8f\u6267\u884c\u3002 Load\u6307\u4ee4\u5728\u6267\u884c\u540e\u4f1a\u5f02\u6b65\u6302\u8d77\uff0c\u5141\u8bb8\u5176\u4ed6\u6307\u4ee4\u7ee7\u7eed\u6267\u884c\u3002\u5f53Load\u6307\u4ee4\u5b8c\u6210\u65f6\uff0c\u4f1a\u89e6\u53d1\u4e00\u4e2a\u786c\u4ef6\u6807\u5fd7\uff08Flag\uff09\uff0c\u89e3\u9664\u76f8\u5173\u6307\u4ee4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5524\u9192\u8fd9\u4e9b\u6307\u4ee4\u7ee7\u7eed\u6267\u884c\u3002 \u8f6f\u4ef6\u5f00\u53d1\u8005\u7684\u89c6\u89d2 \uff1a \u5bf9\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u8fd9\u4e9b\u5e95\u5c42\u7684\u786c\u4ef6\u4f18\u5316\u662f\u900f\u660e\u7684\uff0c\u4ed6\u4eec\u4e0d\u9700\u8981\u611f\u77e5\u8fd9\u4e9b\u7ec6\u8282\u3002 \u4f20\u7edf\u4e0a\uff0c\u8f6f\u4ef6\u5f00\u53d1\u8005\u5c06Load/Store\u6307\u4ee4\u7406\u89e3\u4e3a\u5355\u4e2a\u7684\u3001\u7ec6\u7c92\u5ea6\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5728\u6c47\u7f16\u6307\u4ee4\u4e2d\u8868\u73b0\u4e3a ld \uff08Load\uff09\u3001 st \uff08Store\uff09\u3001 mov \u7b49\u524d\u7f00\u3002 \u5927\u6570\u636e\u91cf\u7684Load/Store\u64cd\u4f5c \uff1a \u5f53Load/Store\u64cd\u4f5c\u6d89\u53ca\u5927\u91cf\u6570\u636e\u65f6\uff08\u4f8b\u5982\u77e9\u9635\u8ba1\u7b97\uff09\uff0c\u8d85\u6807\u91cf\u548c\u4e71\u5e8f\u6267\u884c\u7684\u4f18\u5316\u53ef\u80fd\u65e0\u6cd5\u5b8c\u5168\u9690\u85cf\u5185\u5b58\u5ef6\u8fdf\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u786c\u4ef6\u53ef\u80fd\u4f1a\u4f7f\u7528\u663e\u6027\u5730\u5740\u7684\u7f13\u51b2\u533a\uff08Buffer\uff09\uff0c\u8f6f\u4ef6\u9700\u8981\u81ea\u5df1\u7ba1\u7406\u6570\u636e\u7684\u642c\u8fd0\u548c\u6807\u5fd7\u7684\u8f6e\u8be2\u68c0\u67e5\u3002 \u8fd9\u79cd\u673a\u5236\u5728Nvidia\u7684TMA\uff08Tensor Memory Accelerator\uff09\u548c\u534e\u4e3a\u6607\u817e\u7684MTE\uff08Matrix Tensor Engine\uff09\u4e2d\u6709\u4f53\u73b0\u3002 DMA\uff08\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee\uff09 \uff1a \u4ece\u8f6f\u4ef6\u89c6\u89d2\u770b\uff0c\u8fd9\u79cd\u5927\u6570\u636e\u91cf\u7684Load/Store\u64cd\u4f5c\u7c7b\u4f3c\u4e8eDMA\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8f6f\u4ef6\u9700\u8981\u663e\u5f0f\u5730\u7b49\u5f85\u6570\u636e\u52a0\u8f7d\u5b8c\u6210\u3002 \u7136\u800c\uff0c\u4ece\u786c\u4ef6\u4f53\u7cfb\u7ed3\u6784\u7684\u89c6\u89d2\u770b\uff0c\u8fd9\u4ecd\u7136\u662f\u6307\u4ee4\uff08Instruction\uff09\uff0c\u53ea\u662f\u53d8\u6210\u4e86\u5b8f\u6307\u4ee4\uff08Macro Instruction\uff09\u6216\u590d\u6742\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a\uff08CISC\uff09\u6307\u4ee4\u3002 \u4e0d\u540c\u89c6\u89d2\u7684\u5b9a\u4e49 \uff1a \u5bf9\u4e8eCPU\u6838\u5fc3\uff08Core\uff09\u7684\u786c\u4ef6\u8bbe\u8ba1\u4eba\u5458\u6765\u8bf4\uff0c\u8fd9\u53ea\u662fLoad/Store\u6307\u4ee4\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u4e0d\u9700\u8981\u786c\u4ef6\u5524\u9192\u673a\u5236\uff0c\u800c\u662f\u4ea4\u7ed9\u8f6f\u4ef6\u8fdb\u884c\u663e\u5f0f\u7684\u6807\u5fd7\u8f6e\u8be2\u3002 \u5bf9\u4e8e\u7247\u4e0a\u7cfb\u7edf\uff08SoC\uff09\u7684\u786c\u4ef6\u8bbe\u8ba1\u4eba\u5458\u6765\u8bf4\uff0c\u6240\u6709\u7684Load/Store\u64cd\u4f5c\u90fd\u662f\u4ece\u6838\u5fc3\u63a5\u53e3\u53d1\u51fa\u7684\uff0c\u6ca1\u6709\u533a\u522b\uff0c\u751a\u81f3\u4e0d\u4f1a\u7834\u574f\u6838\u5fc3\u5185\u90e8\u7684\u7f13\u5b58\u4e00\u81f4\u6027\uff08Cache Coherency\uff09\u3002 \u4ece\u7f51\u7edc\uff08NoC\uff09\u7684\u89c6\u89d2\u770b\uff0cTMA\u64cd\u4f5c\u4e5f\u662fLoad/Store\u64cd\u4f5c\u7684\u4e00\u79cd\u5f62\u5f0f\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u8fd9\u6bb5\u6587\u5b57\u5f3a\u8c03\u4e86\u73b0\u4ee3CPU\u4e2dLoad/Store\u6307\u4ee4\u5728\u4e0d\u540c\u60c5\u5883\u4e0b\u7684\u8868\u73b0\u548c\u5b9a\u4e49\uff0c\u4ee5\u53ca\u8f6f\u4ef6\u548c\u786c\u4ef6\u89c6\u89d2\u7684\u5dee\u5f02\u3002 \u786c\u4ef6\u5524\u9192\u673a\u5236 \uff1a \u5728\u4f20\u7edf\u7684\u8d85\u6807\u91cf\u548c\u4e71\u5e8f\u6267\u884cCPU\u4e2d\uff0cLoad\u6307\u4ee4\u5b8c\u6210\u540e\uff0c\u786c\u4ef6\u4f1a\u81ea\u52a8\u89e6\u53d1\u4e00\u4e2a\u6807\u5fd7\uff08Flag\uff09\uff0c\u5524\u9192\u4f9d\u8d56\u4e8e\u8be5Load\u6307\u4ee4\u7684\u5176\u4ed6\u6307\u4ee4\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u7531\u786c\u4ef6\u81ea\u52a8\u7ba1\u7406\u7684\uff0c\u8f6f\u4ef6\u5f00\u53d1\u8005\u4e0d\u9700\u8981\u5173\u5fc3\u8fd9\u4e9b\u7ec6\u8282\u3002 \u663e\u5f0f\u7684\u6807\u5fd7\u8f6e\u8be2 \uff1a \u5f53\u6d89\u53ca\u5927\u6570\u636e\u91cf\u7684Load/Store\u64cd\u4f5c\u65f6\uff08\u4f8b\u5982\u77e9\u9635\u8ba1\u7b97\uff09\uff0c\u786c\u4ef6\u53ef\u80fd\u65e0\u6cd5\u5b8c\u5168\u9690\u85cf\u5185\u5b58\u5ef6\u8fdf\uff0c\u6b64\u65f6\u786c\u4ef6\u4f1a\u4f7f\u7528\u663e\u6027\u5730\u5740\u7684\u7f13\u51b2\u533a\uff08Buffer\uff09\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u786c\u4ef6\u4e0d\u518d\u81ea\u52a8\u7ba1\u7406\u6807\u5fd7\u7684\u5524\u9192\u673a\u5236\uff0c\u800c\u662f\u4ea4\u7ed9\u8f6f\u4ef6\u6765\u8fdb\u884c\u663e\u5f0f\u7684\u6807\u5fd7\u8f6e\u8be2\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8f6f\u4ef6\u9700\u8981\u7f16\u5199\u4ee3\u7801\u6765\u68c0\u67e5\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u662f\u5426\u5df2\u7ecf\u51c6\u5907\u597d\uff0c\u7136\u540e\u518d\u7ee7\u7eed\u6267\u884c\u76f8\u5173\u6307\u4ee4\u3002 \u5bf9\u4e8e\u786c\u4ef6\u8bbe\u8ba1\u4eba\u5458\u7684\u89c6\u89d2 \uff1a \u5bf9\u4e8eCPU\u6838\u5fc3\u7684\u786c\u4ef6\u8bbe\u8ba1\u4eba\u5458\u6765\u8bf4\uff0c\u8fd9\u79cd\u673a\u5236\u53ea\u662fLoad/Store\u6307\u4ee4\u7684\u4e00\u79cd\u53d8\u4f53\u3002\u867d\u7136\u786c\u4ef6\u4e0d\u518d\u81ea\u52a8\u7ba1\u7406\u6807\u5fd7\u7684\u5524\u9192\uff0c\u4f46\u4ece\u786c\u4ef6\u8bbe\u8ba1\u7684\u89d2\u5ea6\u770b\uff0c\u8fd9\u4ecd\u7136\u662fLoad/Store\u64cd\u4f5c\u7684\u4e00\u90e8\u5206\u3002 \u786c\u4ef6\u8bbe\u8ba1\u4eba\u5458\u53ea\u662f\u5c06\u5524\u9192\u673a\u5236\u7684\u8d23\u4efb\u4ece\u786c\u4ef6\u8f6c\u79fb\u5230\u4e86\u8f6f\u4ef6\uff0c\u4f46\u672c\u8d28\u4e0a\u4ecd\u7136\u662f\u5728\u6267\u884cLoad/Store\u6307\u4ee4\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u786c\u4ef6\u4e0d\u518d\u81ea\u52a8\u7ba1\u7406Load/Store\u6307\u4ee4\u7684\u5524\u9192\u673a\u5236\uff0c\u800c\u662f\u4ea4\u7ed9\u8f6f\u4ef6\u6765\u663e\u5f0f\u5730\u8fdb\u884c\u6807\u5fd7\u8f6e\u8be2\u3002\u5bf9\u4e8e\u786c\u4ef6\u8bbe\u8ba1\u4eba\u5458\u6765\u8bf4\uff0c\u8fd9\u53ea\u662fLoad/Store\u6307\u4ee4\u6267\u884c\u673a\u5236\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u5e76\u6ca1\u6709\u6539\u53d8\u6307\u4ee4\u7684\u672c\u8d28\u3002 \u8fd9\u91cc\u9762\u8fd8\u662f\u6ca1\u6709\u6d89\u53ca\u5230\u66f4\u5e95\u5c42\u7684\u4e1c\u897f\uff0c\u5c31\u662f\u6982\u5ff5\u7684\u4e00\u4e9b sudo\u5e95\u5c42\u5b9e\u73b0 \u00b6 \u6587\u4ef6\u7684inode\u5c5e\u6027\u4e2d\u6709\u4e00\u4e2a\u662fi_mode. i_mode\u662f16\u4f4d\u7684\uff0c\u524d4\u4f4d\u5b58\u653e\u6587\u4ef6\u7c7b\u578b\uff0c\u4e2d\u95f43\u4f4d\u5b58\u653e\u7279\u6b8a\u6743\u9650\u4f4d\u5982SUID\u3001SGID\u3001Sticky Bit\uff0c\u540e\u97629\u4f4d\u5c31\u5b58\u653e\u6240\u6709\u8005\u6240\u5c5e\u7ec4\u5176\u4ed6\u4eba\u7684rwx\u6743\u9650 SUID\u7684\u4f5c\u7528\u662f\uff1a\u4ee5\u6587\u4ef6\u6240\u6709\u8005\u6743\u9650\u6267\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u3002\u6240\u4ee5\u5149\u6709SUID\u8fd8\u4e0d\u884c\uff0c\u6587\u4ef6\u7684\u6240\u6709\u8005\u8fd8\u5f97\u662froot\uff0c\u4e24\u4e2a\u6761\u4ef6\u7f3a\u4e00\u4e0d\u53ef\u6765\u770b\u770b\u6240\u5c5e\u7528\u6237\u662froot\uff0c\u5177\u5907s\u6743\u9650\u7684sudo\uff0cLinux\u7cfb\u7edf\u662f\u5982\u4f55\u505a\u5230\u4ee5root\u6743\u9650\u8fd0\u884c\u7684Linux\u7cfb\u7edf\u6267\u884csudo\u547d\u4ee4\u7684\u65f6\u5019\uff0c\u4f1a\u521b\u5efa\u8fdb\u7a0b\uff0c\u5bf9\u5e94\u7684\u5185\u6838\u5bf9\u8c61\u662ftask_struct\uff0ctask_struct\u4e2d\u6709\u4e09\u4e2a\u5c5e\u6027\u4e0e\u7528\u6237\u6743\u9650\u76f8\u5173 ptracer_cred\u4e0e\u8c03\u8bd5\u76f8\u5173\uff0creal_cred\u662f\u8fdb\u7a0b\u7684\u771f\u5b9e\u51ed\u8bc1\uff0ccred\u662f\u8fd0\u884c\u65f6\u51ed\u8bc1\u3002SUID\u4f5c\u7528\u7684\u5c31\u662fcred\u4e2d\u7684\u5c5e\u6027euid \u7ed3\u6784\u4f53cred\u4e2d\u4e0euid\u3001gid\u76f8\u5173\u7684\u51e0\u4e2a\u5c5e\u6027 \u4e00\u4e2a\u8fdb\u7a0b\u4e3a\u4ec0\u4e48\u8981\u6709\u4e24\u4e2acred\uff1f\u56e0\u4e3aLinux\u7cfb\u7edf\u63d0\u4f9b\u4e86\u76f8\u5173\u7684\u673a\u5236\u53ef\u4ee5\u53bb\u4fee\u6539\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u6240\u6709\u8005\u4e0e\u6240\u5c5e\u7ec4\u3001\u7c98\u6ede\u4f4d\uff0c\u5206\u5f00\u5b58\u50a8\u3002\u5982\u679c\u4e0d\u5206\u5f00\uff0c\u90a3\u5c31\u4f1a\u628a\u4e00\u4e2a\u7a0b\u5e8f\u53d8\u6210\u771f\u6b63\u7684root\u6743\u9650\uff0c\u5b58\u5728\u5b89\u5168\u9690\u60a3\u3002","title":"0425"},{"location":"daily/0425/#smolagent","text":"\u4ee3\u7801\u77ed\u5c0f\u7cbe\u608d\uff0c\u503c\u5f97\u5b66\u4e60","title":"smolagent"},{"location":"daily/0425/#a-mem","text":"https://github.com/agiresearch/A-mem \u4ee3\u7801\u5f88\u5c11\uff0c\u5c1d\u8bd5\u89e3\u51b3 \u8bb0\u5fc6\u81ea\u52a8\u7ec4\u7ec7\uff0c\u81ea\u52a8\u66f4\u65b0\u7b49\u95ee\u9898\uff0c\u8fd8\u662f\u5168\u90e8\u4f7f\u7528llm \u4ed6\u7684embedding\u662f\u57fa\u4e8e old * weight + new * (1 - weight) \u6709\u70b9\u52a0\u6743\u7684\u610f\u601d","title":"A-mem"},{"location":"daily/0425/#dynamic-parametric-rag","text":"91starts \u5f88\u5c11\uff0c\u4f5c\u8005\u662f\u4e2d\u56fd\u79d1\u5b66\u9662\u7684\u4eba https://arxiv.org/pdf/2503.23895 \u901a\u8fc7\u77e5\u8bc6\u76f4\u63a5\u53d8\u6210lora\uff1f \u65b9\u6cd5\u6838\u5fc3\u662f\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u628a\u77e5\u8bc6\u8f6c\u4e3alora,\u5177\u4f53\u5982\u4e0b\uff1a 1. doc-param \u6587\u672c\u5bf9,\u901a\u8fc7\u5fae\u8c03\u65b9\u5f0f,\u5f97\u5230\u8bad\u7ec3\u540e\u7684lora 2. \u6839\u636edoc\u548clora\uff0c\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u9884\u6d4blora\u7684\u53c2\u6570 3. \u901a\u8fc7\u8fd9\u4e2a\u6a21\u578b\u5f97\u5230\u66f4\u591a\u7684\u6587\u6863\u7684lora \u4f18\u70b9\u662f\uff0c\u8c8c\u4f3c\u80fd\u591f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u7f3a\u70b9\u662f\uff1a 1. \u4e0d\u540c\u7684layer\u7684lora\u53c2\u6570\u4e0d\u540c\uff0c\u662f\u4e0d\u662f\u6bcf\u4e00\u4e2alora\u90fd\u9700\u8981\u4e00\u4e2a\u9884\u6d4b\u5668\u3002 2. \u6cdb\u5316\u6027\u4f1a\u5f88\u597d\u5417\uff1f","title":"Dynamic Parametric RAG"},{"location":"daily/0425/#quant-wiki","text":"\u8c8c\u4f3c\u53ef\u4ee5\u5b66\u8d77\u6765","title":"quant wiki \u91cf\u5316\u767e\u79d1"},{"location":"daily/0425/#n8n","text":"\u89c2\u5bdf\u5e76\u9009\u62e9\u76f8\u5173\u7684\u8282\u70b9","title":"n8n"},{"location":"daily/0425/#moe","text":"\u6d89\u53ca\u7684\u5185\u5bb9\u5305\u62ec\uff1arouter, export, load balance, keep top-k, auxiliary loss, export capacity deepseek moe: shared export isolation(common knowledge)","title":"moe\u539f\u7406"},{"location":"daily/0425/#cuassembler-gpu","text":"CuAssembler \u5bf9\u591a\u67b6\u6784\u7684\u652f\u6301\u66f4\u5b8c\u6574\uff08\u5f53\u524d\u4e3b\u8981\u6709 SM60/SM61/SM70/SM75/SM80/SM86\uff09 \u4e00\u662f\u6027\u80fd\u654f\u611f\u7b97\u5b50\uff08\u5982 conv\u3001gemm \u7b49\uff09\u7684\u6c47\u7f16\u7ea7\u7684\u6781\u81f4\u4f18\u5316\u3002\u7531\u4e8e\u6c47\u7f16\u662f\u8bbe\u5907\u8fd0\u884c\u7684\u6700\u7ec8\u4ee3\u7801\uff0c\u4f7f\u7528\u6c47\u7f16\u53ef\u4ee5\u652f\u6301\u6700\u7ec6\u7c92\u5ea6\u7684\u6027\u80fd\u8c03\u4f18\u3002\u7b2c\u4e8c\u4e2a\u573a\u666f\u662f\u901a\u8fc7\u4e00\u4e9b\u7279\u5b9a\u6c47\u7f16\u4ee3\u7801\u5b9e\u73b0 microbenchmarking\uff0c\u6d4b\u8bd5\u6307\u4ee4\u96c6\u53ca\u5fae\u67b6\u6784\u7684\u6027\u80fd\u4fe1\u606f\uff0c\u4ece\u800c\u4e3a\u7a0b\u5e8f\u6027\u80fd\u4f18\u5316\u63d0\u4f9b\u53c2\u8003\u3002","title":"cuAssembler gpu\u6781\u9650\u6027\u80fd\u5229\u5668"},{"location":"daily/0425/#c","text":"goto \u8df3\u8fc7\u65e0\u610f\u4e49\u903b\u8f91\u5224\u65ad \u5206\u652f\u9884\u6d4b\u4f18\u5316\uff0c likely, unlikely \u6570\u7ec4\u578b\u7ea2\u9ed1\u6811 \u4f7f\u7528c\u98ce\u683c\u6570\u7ec4 \u975e\u5fc5\u8981\u4e0d\u7528 \u5faa\u73af\u5c55\u5f00 \u5c0f\u5185\u5b58\u6570\u7ec4\u76f4\u63a5\u5f00\u8f9f\u5728\u6808\u4e0a, \u8bbf\u95ee\u6808\u66f4\u5bb9\u6613\u7f13\u5b58\u547d\u4e2d. \u6253\u8868\u548c\u8ba1\u7b97\u7ed3\u5408, \u6709\u65f6\u5019\u53ef\u4ee5\u5148\u6253\u8868\u786e\u5b9a\u5927\u81f4\u8303\u56f4\u6216\u4e0d\u7cbe\u786e\u89e3, \u901a\u8fc7\u5c11\u91cf\u8fdb\u4e00\u6b65\u8ba1\u7b97\u83b7\u5f97\u66f4\u7cbe\u786e\u89e3. \u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c gprof \u975e\u5fc5\u8981\u4e0d\u7528: SIMD\u6307\u4ee4 if-else if\u8f6cswitch, \u5982\u679c\u80fd\u4f18\u5316\u7684\u8bdd, \u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u4f18\u5316\u7684. \u591a\u7528 \u4f4d\u8fd0\u7b97\uff0c\u4f4d\u8fd0\u7b97\u53ef\u4ee5\u7528\u7f16\u8bd1\u5668\u5185\u7f6e\u51fd\u6570, \u5982__builtin_ctzll C restrict\u5173\u952e\u5b57. __builtin_prefetch\u63d0\u793a\u6570\u636e\u9884\u53d6 https://www.zhihu.com/question/662526033/answer/1894737937473713792","title":"c++ \u9ad8\u6027\u80fd\u8ba1\u7b97"},{"location":"daily/0425/#framepack","text":"\u672c\u8d28\u662f \"next frame prediction\" + \u5012\u5e8f\u91c7\u6837 \u4f20\u7edf\u505a\u6cd5\u662f\u4e00\u5e27\u4e00\u5e27\u987a\u7740\u751f\u6210\uff0c\u9519\u4e00\u5e27\u5c31\u8d8a\u9519\u8d8a\u591a\u3002 FramePack \u63d0\u51fa\u4e24\u79cd Anti-drifting \u91c7\u6837\u65b9\u6cd5\uff1a \u53cc\u951a\u70b9\u751f\u6210\uff08bi-directional\uff09\uff1a\u5148\u751f\u6210\u5f00\u5934\u548c\u7ed3\u5c3e\u5e27\uff0c\u518d\u586b\u4e2d\u95f4\uff1b \u53cd\u5411\u751f\u6210\uff08inverted\uff09\uff1a\u4ece\u5df2\u77e5\u9ad8\u8d28\u91cf\u5e27\u5012\u7740\u9884\u6d4b\u524d\u5e27\u3002 \u7ed3\u679c\u662f\uff1a\u6bcf\u4e00\u5e27\u90fd\u6709\u201c\u53c2\u8003\u5e27\u201d\uff0c\u8bef\u5dee\u4e0d\u518d\u7d2f\u79ef\uff0c\u6f02\u79fb\u5927\u5e45\u51cf\u5c11\u3002 \u7f3a\u70b9: 1. \u6ca1\u6709\u5168\u5c40\u89c4\u5212\uff0c\u6ca1\u6709storyline\uff0c\u6ca1\u6709scene-level abstraction 2. frame\u88ab\u8fc7\u5ea6\u538b\u7f29\uff0c\u5267\u60c5\u7ebf\u65ad\uff0c\u89d2\u8272\u884c\u4e3a\u4e0d\u8fde\u8d2f 3. \u53cd\u5411\u91c7\u6837\uff0c\u8282\u594f\u53ef\u80fd\u4e0d\u81ea\u7136","title":"framepack"},{"location":"daily/0425/#loadstore","text":"level1: \u4f20\u7edf: \u5f3a\u8c03Load/Store\u662f\u6307\u4ee4\u7684\u540c\u6b65\u884c\u4e3a level2: \u786c\u4ef6\u5524\u9192\u673a\u5236,load\u5728\u6267\u884c\u540e\u4e5f\u662f\u5f02\u6b65\u6302\u8d77\uff0c\u5176\u4ed6\u6307\u4ee4\u90fd\u53ef\u4ee5\u968f\u610f\u4e71\u5e8f\uff0c\u800cLoad\u5b8c\u6210\u65f6\uff0c\u5176Load\u5bf9\u5e94\u7684\u76ee\u6807Reg\u4f1a\u89e6\u53d1\u4e00\u4e2a\u786c\u4ef6\u7684Flag\u89e3\u9664Dependency\uff0c\u5524\u9192\u5176\u76f8\u5173\u7684\u6307\u4ee4\u518d\u6267\u884c level3: \u8f6f\u4ef6polling\u67d0\u4e2aFlag: \u5982\u679cLoad\u9700\u8981\u7684\u6570\u636e\u91cf\u6bd4\u8f83\u5927,\u8d85\u51fa\u4e86Super-Scalar\u7684OoO\u4ee5\u53caRegfile\u7684\u63a7\u5236\u8303\u56f4\uff0c\u786c\u4ef6\u518d\u6ca1\u6709\u529e\u6cd5\u5e2e\u4f60\u9690\u85cf\u5185\u5b58\u5ef6\u8fdf\u5e76\u68c0\u67e5\u76f8\u5173\u6027\u65f6,\u6ca1\u6709Regfile\u4e86\uff0c\u7ed9\u4f60\u653e\u4e00\u4e2a\u663e\u6027\u5730\u5740\u7684Buffer\u5427\uff0c\u4f60\u81ea\u5df1\u628a\u6570\u636e\u642c\u8fdb\u6765\u5e76\u4e14\u81ea\u5df1\u52a0flag polling\u68c0\u67e5\u8fd9\u4e9bdata inside buffer\u7684\u7ed3\u675f\u5427 level4: Buffer\u653e\u4e0d\u4e0b\uff0c\u53d8\u6210Mem to Mem\u65f6 \u73b0\u4ee3CPU\u4e2dLoad/Store\u6307\u4ee4\u7684\u6267\u884c\u673a\u5236\uff0c\u4ee5\u53ca\u5728\u4e0d\u540c\u60c5\u5883\u4e0b\u8fd9\u4e9b\u6307\u4ee4\u7684\u8868\u73b0\u548c\u5b9a\u4e49\uff1a \u73b0\u4ee3CPU\u7684\u6267\u884c\u673a\u5236 \uff1a \u73b0\u4ee3CPU\u91c7\u7528\u4e86\u8d85\u6807\u91cf\uff08Super Scalar\uff09\u548c\u4e71\u5e8f\u6267\u884c\uff08Out-of-Order Execution, OoO\uff09\u6280\u672f\uff0c\u8fd9\u610f\u5473\u7740\u6307\u4ee4\u4e0d\u518d\u4e25\u683c\u6309\u7167\u7a0b\u5e8f\u7f16\u5199\u7684\u987a\u5e8f\u6267\u884c\u3002 Load\u6307\u4ee4\u5728\u6267\u884c\u540e\u4f1a\u5f02\u6b65\u6302\u8d77\uff0c\u5141\u8bb8\u5176\u4ed6\u6307\u4ee4\u7ee7\u7eed\u6267\u884c\u3002\u5f53Load\u6307\u4ee4\u5b8c\u6210\u65f6\uff0c\u4f1a\u89e6\u53d1\u4e00\u4e2a\u786c\u4ef6\u6807\u5fd7\uff08Flag\uff09\uff0c\u89e3\u9664\u76f8\u5173\u6307\u4ee4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5524\u9192\u8fd9\u4e9b\u6307\u4ee4\u7ee7\u7eed\u6267\u884c\u3002 \u8f6f\u4ef6\u5f00\u53d1\u8005\u7684\u89c6\u89d2 \uff1a \u5bf9\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u8fd9\u4e9b\u5e95\u5c42\u7684\u786c\u4ef6\u4f18\u5316\u662f\u900f\u660e\u7684\uff0c\u4ed6\u4eec\u4e0d\u9700\u8981\u611f\u77e5\u8fd9\u4e9b\u7ec6\u8282\u3002 \u4f20\u7edf\u4e0a\uff0c\u8f6f\u4ef6\u5f00\u53d1\u8005\u5c06Load/Store\u6307\u4ee4\u7406\u89e3\u4e3a\u5355\u4e2a\u7684\u3001\u7ec6\u7c92\u5ea6\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5728\u6c47\u7f16\u6307\u4ee4\u4e2d\u8868\u73b0\u4e3a ld \uff08Load\uff09\u3001 st \uff08Store\uff09\u3001 mov \u7b49\u524d\u7f00\u3002 \u5927\u6570\u636e\u91cf\u7684Load/Store\u64cd\u4f5c \uff1a \u5f53Load/Store\u64cd\u4f5c\u6d89\u53ca\u5927\u91cf\u6570\u636e\u65f6\uff08\u4f8b\u5982\u77e9\u9635\u8ba1\u7b97\uff09\uff0c\u8d85\u6807\u91cf\u548c\u4e71\u5e8f\u6267\u884c\u7684\u4f18\u5316\u53ef\u80fd\u65e0\u6cd5\u5b8c\u5168\u9690\u85cf\u5185\u5b58\u5ef6\u8fdf\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u786c\u4ef6\u53ef\u80fd\u4f1a\u4f7f\u7528\u663e\u6027\u5730\u5740\u7684\u7f13\u51b2\u533a\uff08Buffer\uff09\uff0c\u8f6f\u4ef6\u9700\u8981\u81ea\u5df1\u7ba1\u7406\u6570\u636e\u7684\u642c\u8fd0\u548c\u6807\u5fd7\u7684\u8f6e\u8be2\u68c0\u67e5\u3002 \u8fd9\u79cd\u673a\u5236\u5728Nvidia\u7684TMA\uff08Tensor Memory Accelerator\uff09\u548c\u534e\u4e3a\u6607\u817e\u7684MTE\uff08Matrix Tensor Engine\uff09\u4e2d\u6709\u4f53\u73b0\u3002 DMA\uff08\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee\uff09 \uff1a \u4ece\u8f6f\u4ef6\u89c6\u89d2\u770b\uff0c\u8fd9\u79cd\u5927\u6570\u636e\u91cf\u7684Load/Store\u64cd\u4f5c\u7c7b\u4f3c\u4e8eDMA\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8f6f\u4ef6\u9700\u8981\u663e\u5f0f\u5730\u7b49\u5f85\u6570\u636e\u52a0\u8f7d\u5b8c\u6210\u3002 \u7136\u800c\uff0c\u4ece\u786c\u4ef6\u4f53\u7cfb\u7ed3\u6784\u7684\u89c6\u89d2\u770b\uff0c\u8fd9\u4ecd\u7136\u662f\u6307\u4ee4\uff08Instruction\uff09\uff0c\u53ea\u662f\u53d8\u6210\u4e86\u5b8f\u6307\u4ee4\uff08Macro Instruction\uff09\u6216\u590d\u6742\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a\uff08CISC\uff09\u6307\u4ee4\u3002 \u4e0d\u540c\u89c6\u89d2\u7684\u5b9a\u4e49 \uff1a \u5bf9\u4e8eCPU\u6838\u5fc3\uff08Core\uff09\u7684\u786c\u4ef6\u8bbe\u8ba1\u4eba\u5458\u6765\u8bf4\uff0c\u8fd9\u53ea\u662fLoad/Store\u6307\u4ee4\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u4e0d\u9700\u8981\u786c\u4ef6\u5524\u9192\u673a\u5236\uff0c\u800c\u662f\u4ea4\u7ed9\u8f6f\u4ef6\u8fdb\u884c\u663e\u5f0f\u7684\u6807\u5fd7\u8f6e\u8be2\u3002 \u5bf9\u4e8e\u7247\u4e0a\u7cfb\u7edf\uff08SoC\uff09\u7684\u786c\u4ef6\u8bbe\u8ba1\u4eba\u5458\u6765\u8bf4\uff0c\u6240\u6709\u7684Load/Store\u64cd\u4f5c\u90fd\u662f\u4ece\u6838\u5fc3\u63a5\u53e3\u53d1\u51fa\u7684\uff0c\u6ca1\u6709\u533a\u522b\uff0c\u751a\u81f3\u4e0d\u4f1a\u7834\u574f\u6838\u5fc3\u5185\u90e8\u7684\u7f13\u5b58\u4e00\u81f4\u6027\uff08Cache Coherency\uff09\u3002 \u4ece\u7f51\u7edc\uff08NoC\uff09\u7684\u89c6\u89d2\u770b\uff0cTMA\u64cd\u4f5c\u4e5f\u662fLoad/Store\u64cd\u4f5c\u7684\u4e00\u79cd\u5f62\u5f0f\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u8fd9\u6bb5\u6587\u5b57\u5f3a\u8c03\u4e86\u73b0\u4ee3CPU\u4e2dLoad/Store\u6307\u4ee4\u5728\u4e0d\u540c\u60c5\u5883\u4e0b\u7684\u8868\u73b0\u548c\u5b9a\u4e49\uff0c\u4ee5\u53ca\u8f6f\u4ef6\u548c\u786c\u4ef6\u89c6\u89d2\u7684\u5dee\u5f02\u3002 \u786c\u4ef6\u5524\u9192\u673a\u5236 \uff1a \u5728\u4f20\u7edf\u7684\u8d85\u6807\u91cf\u548c\u4e71\u5e8f\u6267\u884cCPU\u4e2d\uff0cLoad\u6307\u4ee4\u5b8c\u6210\u540e\uff0c\u786c\u4ef6\u4f1a\u81ea\u52a8\u89e6\u53d1\u4e00\u4e2a\u6807\u5fd7\uff08Flag\uff09\uff0c\u5524\u9192\u4f9d\u8d56\u4e8e\u8be5Load\u6307\u4ee4\u7684\u5176\u4ed6\u6307\u4ee4\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u7531\u786c\u4ef6\u81ea\u52a8\u7ba1\u7406\u7684\uff0c\u8f6f\u4ef6\u5f00\u53d1\u8005\u4e0d\u9700\u8981\u5173\u5fc3\u8fd9\u4e9b\u7ec6\u8282\u3002 \u663e\u5f0f\u7684\u6807\u5fd7\u8f6e\u8be2 \uff1a \u5f53\u6d89\u53ca\u5927\u6570\u636e\u91cf\u7684Load/Store\u64cd\u4f5c\u65f6\uff08\u4f8b\u5982\u77e9\u9635\u8ba1\u7b97\uff09\uff0c\u786c\u4ef6\u53ef\u80fd\u65e0\u6cd5\u5b8c\u5168\u9690\u85cf\u5185\u5b58\u5ef6\u8fdf\uff0c\u6b64\u65f6\u786c\u4ef6\u4f1a\u4f7f\u7528\u663e\u6027\u5730\u5740\u7684\u7f13\u51b2\u533a\uff08Buffer\uff09\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u786c\u4ef6\u4e0d\u518d\u81ea\u52a8\u7ba1\u7406\u6807\u5fd7\u7684\u5524\u9192\u673a\u5236\uff0c\u800c\u662f\u4ea4\u7ed9\u8f6f\u4ef6\u6765\u8fdb\u884c\u663e\u5f0f\u7684\u6807\u5fd7\u8f6e\u8be2\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8f6f\u4ef6\u9700\u8981\u7f16\u5199\u4ee3\u7801\u6765\u68c0\u67e5\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u662f\u5426\u5df2\u7ecf\u51c6\u5907\u597d\uff0c\u7136\u540e\u518d\u7ee7\u7eed\u6267\u884c\u76f8\u5173\u6307\u4ee4\u3002 \u5bf9\u4e8e\u786c\u4ef6\u8bbe\u8ba1\u4eba\u5458\u7684\u89c6\u89d2 \uff1a \u5bf9\u4e8eCPU\u6838\u5fc3\u7684\u786c\u4ef6\u8bbe\u8ba1\u4eba\u5458\u6765\u8bf4\uff0c\u8fd9\u79cd\u673a\u5236\u53ea\u662fLoad/Store\u6307\u4ee4\u7684\u4e00\u79cd\u53d8\u4f53\u3002\u867d\u7136\u786c\u4ef6\u4e0d\u518d\u81ea\u52a8\u7ba1\u7406\u6807\u5fd7\u7684\u5524\u9192\uff0c\u4f46\u4ece\u786c\u4ef6\u8bbe\u8ba1\u7684\u89d2\u5ea6\u770b\uff0c\u8fd9\u4ecd\u7136\u662fLoad/Store\u64cd\u4f5c\u7684\u4e00\u90e8\u5206\u3002 \u786c\u4ef6\u8bbe\u8ba1\u4eba\u5458\u53ea\u662f\u5c06\u5524\u9192\u673a\u5236\u7684\u8d23\u4efb\u4ece\u786c\u4ef6\u8f6c\u79fb\u5230\u4e86\u8f6f\u4ef6\uff0c\u4f46\u672c\u8d28\u4e0a\u4ecd\u7136\u662f\u5728\u6267\u884cLoad/Store\u6307\u4ee4\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u786c\u4ef6\u4e0d\u518d\u81ea\u52a8\u7ba1\u7406Load/Store\u6307\u4ee4\u7684\u5524\u9192\u673a\u5236\uff0c\u800c\u662f\u4ea4\u7ed9\u8f6f\u4ef6\u6765\u663e\u5f0f\u5730\u8fdb\u884c\u6807\u5fd7\u8f6e\u8be2\u3002\u5bf9\u4e8e\u786c\u4ef6\u8bbe\u8ba1\u4eba\u5458\u6765\u8bf4\uff0c\u8fd9\u53ea\u662fLoad/Store\u6307\u4ee4\u6267\u884c\u673a\u5236\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u5e76\u6ca1\u6709\u6539\u53d8\u6307\u4ee4\u7684\u672c\u8d28\u3002 \u8fd9\u91cc\u9762\u8fd8\u662f\u6ca1\u6709\u6d89\u53ca\u5230\u66f4\u5e95\u5c42\u7684\u4e1c\u897f\uff0c\u5c31\u662f\u6982\u5ff5\u7684\u4e00\u4e9b","title":"\u5bf9load,store\u7684\u5b66\u4e60"},{"location":"daily/0425/#sudo","text":"\u6587\u4ef6\u7684inode\u5c5e\u6027\u4e2d\u6709\u4e00\u4e2a\u662fi_mode. i_mode\u662f16\u4f4d\u7684\uff0c\u524d4\u4f4d\u5b58\u653e\u6587\u4ef6\u7c7b\u578b\uff0c\u4e2d\u95f43\u4f4d\u5b58\u653e\u7279\u6b8a\u6743\u9650\u4f4d\u5982SUID\u3001SGID\u3001Sticky Bit\uff0c\u540e\u97629\u4f4d\u5c31\u5b58\u653e\u6240\u6709\u8005\u6240\u5c5e\u7ec4\u5176\u4ed6\u4eba\u7684rwx\u6743\u9650 SUID\u7684\u4f5c\u7528\u662f\uff1a\u4ee5\u6587\u4ef6\u6240\u6709\u8005\u6743\u9650\u6267\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u3002\u6240\u4ee5\u5149\u6709SUID\u8fd8\u4e0d\u884c\uff0c\u6587\u4ef6\u7684\u6240\u6709\u8005\u8fd8\u5f97\u662froot\uff0c\u4e24\u4e2a\u6761\u4ef6\u7f3a\u4e00\u4e0d\u53ef\u6765\u770b\u770b\u6240\u5c5e\u7528\u6237\u662froot\uff0c\u5177\u5907s\u6743\u9650\u7684sudo\uff0cLinux\u7cfb\u7edf\u662f\u5982\u4f55\u505a\u5230\u4ee5root\u6743\u9650\u8fd0\u884c\u7684Linux\u7cfb\u7edf\u6267\u884csudo\u547d\u4ee4\u7684\u65f6\u5019\uff0c\u4f1a\u521b\u5efa\u8fdb\u7a0b\uff0c\u5bf9\u5e94\u7684\u5185\u6838\u5bf9\u8c61\u662ftask_struct\uff0ctask_struct\u4e2d\u6709\u4e09\u4e2a\u5c5e\u6027\u4e0e\u7528\u6237\u6743\u9650\u76f8\u5173 ptracer_cred\u4e0e\u8c03\u8bd5\u76f8\u5173\uff0creal_cred\u662f\u8fdb\u7a0b\u7684\u771f\u5b9e\u51ed\u8bc1\uff0ccred\u662f\u8fd0\u884c\u65f6\u51ed\u8bc1\u3002SUID\u4f5c\u7528\u7684\u5c31\u662fcred\u4e2d\u7684\u5c5e\u6027euid \u7ed3\u6784\u4f53cred\u4e2d\u4e0euid\u3001gid\u76f8\u5173\u7684\u51e0\u4e2a\u5c5e\u6027 \u4e00\u4e2a\u8fdb\u7a0b\u4e3a\u4ec0\u4e48\u8981\u6709\u4e24\u4e2acred\uff1f\u56e0\u4e3aLinux\u7cfb\u7edf\u63d0\u4f9b\u4e86\u76f8\u5173\u7684\u673a\u5236\u53ef\u4ee5\u53bb\u4fee\u6539\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u6240\u6709\u8005\u4e0e\u6240\u5c5e\u7ec4\u3001\u7c98\u6ede\u4f4d\uff0c\u5206\u5f00\u5b58\u50a8\u3002\u5982\u679c\u4e0d\u5206\u5f00\uff0c\u90a3\u5c31\u4f1a\u628a\u4e00\u4e2a\u7a0b\u5e8f\u53d8\u6210\u771f\u6b63\u7684root\u6743\u9650\uff0c\u5b58\u5728\u5b89\u5168\u9690\u60a3\u3002","title":"sudo\u5e95\u5c42\u5b9e\u73b0"},{"location":"go/basic/","text":"\u4ea4\u53c9\u7f16\u8bd1 \u00b6 GOOS = linux GOARCH = amd64 go build -o myapp-linux GOOS = windows GOARCH = 386 go build -o myapp.exe GOOS = linux GOARCH = arm64 go build -o myapp-arm64 GOOS = darwin GOARCH = amd64 go build -o myapp-macos-intel # Intel GOOS = darwin GOARCH = arm64 go build -o myapp-macos-silicon # Apple M\u7cfb\u5217 go tool dist list \u901a\u8fc7 -ldflags \u6ce8\u5165\u7f16\u8bd1\u65f6\u7684\u7248\u672c\u53f7\uff08\u5982 -X main.version=1.0.0 \uff09\u3002 \u4f7f\u7528 upx \u5de5\u5177\u51cf\u5c0f\u6587\u4ef6\u4f53\u79ef Go \u7684\u7f16\u8bd1\u8fc7\u7a0b\u4e3b\u8981\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u9636\u6bb5\uff1a \u8bcd\u6cd5\u5206\u6790 & \u8bed\u6cd5\u5206\u6790 \u2192 \u751f\u6210\u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09 \u7c7b\u578b\u68c0\u67e5\u4e0e\u8bed\u4e49\u5206\u6790 \u2192 \u786e\u4fdd\u4ee3\u7801\u903b\u8f91\u6b63\u786e \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \u2192 \u8f6c\u6362\u4e3a SSA\uff08\u9759\u6001\u5355\u8d4b\u503c\uff09\u5f62\u5f0f \u673a\u5668\u7801\u751f\u6210 \u2192 \u9488\u5bf9\u76ee\u6807\u5e73\u53f0\uff08GOOS/GOARCH\uff09\u751f\u6210\u673a\u5668\u7801 \u94fe\u63a5 \u2192 \u9759\u6001\u94fe\u63a5\u4f9d\u8d56\uff0c\u751f\u6210\u6700\u7ec8\u4e8c\u8fdb\u5236\u6587\u4ef6 go build -x : \u67e5\u770b\u7f16\u8bd1\u8fc7\u7a0b\u7684\u8be6\u7ec6\u4fe1\u606f \u5de5\u5177 \u00b6 go tool nm : \u67e5\u770b\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u7b26\u53f7\u8868 go tool objdump : \u67e5\u770b\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u6c47\u7f16\u4ee3\u7801 go tool pprof : \u5206\u6790\u6027\u80fd\u6570\u636e go tool trace : \u5206\u6790\u7a0b\u5e8f\u7684\u6267\u884c\u8f68\u8ff9 go tool vet : \u68c0\u67e5\u4ee3\u7801\u7684\u6f5c\u5728\u95ee\u9898 go tool asm : \u67e5\u770b\u6c47\u7f16\u4ee3\u7801 go tool compile : \u7f16\u8bd1 Go \u4ee3\u7801 debug \u00b6 go install github.com/go-delve/delve/cmd/dlv@latest # \u542f\u52a8\u8c03\u8bd5\uff08\u8fdb\u5165\u4ea4\u4e92\u5f0f\u754c\u9762\uff09 dlv debug main.go # \u9644\u52a0\u5230\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b dlv attach <PID> # \u8bbe\u7f6e\u65ad\u70b9 ( dlv ) break main.main ( dlv ) break foo.go:10 # \u6267\u884c\u4e0b\u4e00\u6b65 ( dlv ) next # \u6253\u5370\u53d8\u91cf ( dlv ) print x # \u67e5\u770b\u534f\u7a0b ( dlv ) goroutines # \u7ee7\u7eed\u8fd0\u884c ( dlv ) continue \u8fd0\u884c\u65f6\u5206\u6790\u5de5\u5177 go tool pprof http://localhost:6060/debug/pprof/heap # \u5206\u6790\u5185\u5b58 go tool pprof http://localhost:6060/debug/pprof/profile # \u5206\u6790 CPU # \u534f\u7a0b\u8c03\u5ea6\u8ddf\u8e2a go run main.go --trace = trace.out go tool trace trace.out \u5355\u5143\u6d4b\u8bd5 dlv test . # \u8c03\u8bd5\u5f53\u524d\u5305\u7684\u6240\u6709\u6d4b\u8bd5 dlv test ./pkg -- -test.run TestFoo # \u8c03\u8bd5\u7279\u5b9a\u6d4b\u8bd5 WORK=/var/folders/td/2br0c4zs5mx8w86qrk1tss340000gn/T/go-build331156467 mkdir -p $WORK/b001/ cat >/var/folders/td/2br0c4zs5mx8w86qrk1tss340000gn/T/go-build331156467/b001/importcfg.link << 'EOF' # internal packagefile command-line-arguments=/Users/wangyangzuo/Library/Caches/go-build/cb/cb8a360cbf4de6a7ce5468ee572b19c7caa67ce3d0186cfba601b99bd65335fe-d packagefile runtime=/Users/wangyangzuo/Library/Caches/go-build/e0/e0d0243fe544bb80026ffda6e63c5ebf56cb7b1722fad8f9da590a71b4674ba8-d packagefile internal/abi=/Users/wangyangzuo/Library/Caches/go-build/f9/f9cc50b4663366c39cac8d6ed0b9fb1474a55b99912b0ed32a15697684b7805e-d packagefile internal/bytealg=/Users/wangyangzuo/Library/Caches/go-build/8a/8aec2bb16289441b9cf9361d1fc832a3a49b4bd0f6cfbf2bf08802278acf8faa-d packagefile internal/byteorder=/Users/wangyangzuo/Library/Caches/go-build/1a/1ac33c4603f1e493062b433693964a3550dbbecc60d671540190355ca9f7a4f9-d packagefile internal/chacha8rand=/Users/wangyangzuo/Library/Caches/go-build/9c/9cd3c6719cb309954ff0602b358659c2740ad3b598ea764050740e38ce264213-d packagefile internal/coverage/rtcov=/Users/wangyangzuo/Library/Caches/go-build/ca/ca4c0c159cf4c2dd6bf468e59773e782021a22a1577eacb9b0324e158a97167d-d packagefile internal/cpu=/Users/wangyangzuo/Library/Caches/go-build/e5/e55bfed6575cfe848b3a3d9b22a73d239c3438dff027d8a4b74bcc714a00b66a-d packagefile internal/goarch=/Users/wangyangzuo/Library/Caches/go-build/70/702ec68599075ff341b90e7bc123b941c8f7a792fbe6965c17850ce746020e7a-d packagefile internal/godebugs=/Users/wangyangzuo/Library/Caches/go-build/9f/9fdaf50a907b00f746c9f1d12961188702f70088b4b0c970372601ee342e32df-d packagefile internal/goexperiment=/Users/wangyangzuo/Library/Caches/go-build/cb/cb497f3c33d6c0d90db143972ae18f28bf6a949424e4ecf731b68517757d1e15-d packagefile internal/goos=/Users/wangyangzuo/Library/Caches/go-build/26/266ed5ca3258affee2809c07308e67c9297f93b2e4f8ee63ca3e411894112f23-d packagefile internal/profilerecord=/Users/wangyangzuo/Library/Caches/go-build/78/7887ac0a837c3e42c476c0ea96e9485d2afd0d372b6052f1b8c6f394c21e132b-d packagefile internal/runtime/atomic=/Users/wangyangzuo/Library/Caches/go-build/2f/2f4c17c1099989057a31bfd49a2e96a9d7513aaf92025b811224f560f9fb9c78-d packagefile internal/runtime/exithook=/Users/wangyangzuo/Library/Caches/go-build/e6/e663a8586909b36a2e2c89df9a44e3a78f9e9a165b9ff7a4d5e6cdc9d6c2c79e-d packagefile internal/runtime/maps=/Users/wangyangzuo/Library/Caches/go-build/79/79805c503c65eeb5d0a8f0b530b94f4784ef9b5233de40b04352c131a54e9352-d packagefile internal/runtime/math=/Users/wangyangzuo/Library/Caches/go-build/13/1321b2588497f634cefdbf36b23f230d7e048d2ea08d55d4f5d48f1fa1890b70-d packagefile internal/runtime/sys=/Users/wangyangzuo/Library/Caches/go-build/3d/3d3dda4daf7aeabc38d6045915a51482e7a1968d3cab5103557f54b9be204844-d packagefile internal/stringslite=/Users/wangyangzuo/Library/Caches/go-build/f7/f74cb148242ddc363a10889010abed82f9222bfa0d73ba348ac1286c04457232-d packagefile internal/asan=/Users/wangyangzuo/Library/Caches/go-build/39/3964d694cfa049b1e3b408007f65ee2d997be5c3d95cedcad4bf99765a46dc00-d packagefile internal/msan=/Users/wangyangzuo/Library/Caches/go-build/74/74a05562bbf4218932c5a50b0d20ef90190b9a8db50456cbf3262d67f9bf6f5a-d packagefile internal/race=/Users/wangyangzuo/Library/Caches/go-build/ee/ee5d3bed6b478dea4dc2a9e838f2f273d9d10574e320a53897df5d22bb7bf934-d modinfo \"0w\\xaf\\f\\x92t\\b\\x02A\\xe1\\xc1\\a\\xe6\\xd6\\x18\\xe6path\\tcommand-line-arguments\\nbuild\\t-buildmode=exe\\nbuild\\t-compiler=gc\\nbuild\\t-ldflags=\\\"-s -w\\\"\\nbuild\\tCGO_ENABLED=1\\nbuild\\tCGO_CFLAGS=\\nbuild\\tCGO_CPPFLAGS=\\nbuild\\tCGO_CXXFLAGS=\\nbuild\\tCGO_LDFLAGS=\\nbuild\\tGOARCH=arm64\\nbuild\\tGOOS=darwin\\nbuild\\tGOARM64=v8.0\\n\\xf92C1\\x86\\x18 r\\x00\\x82B\\x10A\\x16\\xd8\\xf2\" EOF mkdir -p $WORK/b001/exe/ cd . GOROOT='/opt/homebrew/Cellar/go/1.24.2/libexec' /opt/homebrew/Cellar/go/1.24.2/libexec/pkg/tool/darwin_arm64/link -o $WORK/b001/exe/a.out -importcfg $WORK/b001/importcfg.link -buildmode=pie -buildid=1WwIR0-q08jpRVU0OLja/kD6mBAn_dyo6TeqULTnB/V2uspWB9SmSMbGnbLoUg/1WwIR0-q08jpRVU0OLja -s -w -extld=cc /Users/wangyangzuo/Library/Caches/go-build/cb/cb8a360cbf4de6a7ce5468ee572b19c7caa67ce3d0186cfba601b99bd65335fe-d /opt/homebrew/Cellar/go/1.24.2/libexec/pkg/tool/darwin_arm64/buildid -w $WORK/b001/exe/a.out # internal mv $WORK/b001/exe/a.out myapp rm -rf $WORK/b001/","title":"Basic"},{"location":"go/basic/#_1","text":"GOOS = linux GOARCH = amd64 go build -o myapp-linux GOOS = windows GOARCH = 386 go build -o myapp.exe GOOS = linux GOARCH = arm64 go build -o myapp-arm64 GOOS = darwin GOARCH = amd64 go build -o myapp-macos-intel # Intel GOOS = darwin GOARCH = arm64 go build -o myapp-macos-silicon # Apple M\u7cfb\u5217 go tool dist list \u901a\u8fc7 -ldflags \u6ce8\u5165\u7f16\u8bd1\u65f6\u7684\u7248\u672c\u53f7\uff08\u5982 -X main.version=1.0.0 \uff09\u3002 \u4f7f\u7528 upx \u5de5\u5177\u51cf\u5c0f\u6587\u4ef6\u4f53\u79ef Go \u7684\u7f16\u8bd1\u8fc7\u7a0b\u4e3b\u8981\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u9636\u6bb5\uff1a \u8bcd\u6cd5\u5206\u6790 & \u8bed\u6cd5\u5206\u6790 \u2192 \u751f\u6210\u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09 \u7c7b\u578b\u68c0\u67e5\u4e0e\u8bed\u4e49\u5206\u6790 \u2192 \u786e\u4fdd\u4ee3\u7801\u903b\u8f91\u6b63\u786e \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \u2192 \u8f6c\u6362\u4e3a SSA\uff08\u9759\u6001\u5355\u8d4b\u503c\uff09\u5f62\u5f0f \u673a\u5668\u7801\u751f\u6210 \u2192 \u9488\u5bf9\u76ee\u6807\u5e73\u53f0\uff08GOOS/GOARCH\uff09\u751f\u6210\u673a\u5668\u7801 \u94fe\u63a5 \u2192 \u9759\u6001\u94fe\u63a5\u4f9d\u8d56\uff0c\u751f\u6210\u6700\u7ec8\u4e8c\u8fdb\u5236\u6587\u4ef6 go build -x : \u67e5\u770b\u7f16\u8bd1\u8fc7\u7a0b\u7684\u8be6\u7ec6\u4fe1\u606f","title":"\u4ea4\u53c9\u7f16\u8bd1"},{"location":"go/basic/#_2","text":"go tool nm : \u67e5\u770b\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u7b26\u53f7\u8868 go tool objdump : \u67e5\u770b\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u6c47\u7f16\u4ee3\u7801 go tool pprof : \u5206\u6790\u6027\u80fd\u6570\u636e go tool trace : \u5206\u6790\u7a0b\u5e8f\u7684\u6267\u884c\u8f68\u8ff9 go tool vet : \u68c0\u67e5\u4ee3\u7801\u7684\u6f5c\u5728\u95ee\u9898 go tool asm : \u67e5\u770b\u6c47\u7f16\u4ee3\u7801 go tool compile : \u7f16\u8bd1 Go \u4ee3\u7801","title":"\u5de5\u5177"},{"location":"go/basic/#debug","text":"go install github.com/go-delve/delve/cmd/dlv@latest # \u542f\u52a8\u8c03\u8bd5\uff08\u8fdb\u5165\u4ea4\u4e92\u5f0f\u754c\u9762\uff09 dlv debug main.go # \u9644\u52a0\u5230\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b dlv attach <PID> # \u8bbe\u7f6e\u65ad\u70b9 ( dlv ) break main.main ( dlv ) break foo.go:10 # \u6267\u884c\u4e0b\u4e00\u6b65 ( dlv ) next # \u6253\u5370\u53d8\u91cf ( dlv ) print x # \u67e5\u770b\u534f\u7a0b ( dlv ) goroutines # \u7ee7\u7eed\u8fd0\u884c ( dlv ) continue \u8fd0\u884c\u65f6\u5206\u6790\u5de5\u5177 go tool pprof http://localhost:6060/debug/pprof/heap # \u5206\u6790\u5185\u5b58 go tool pprof http://localhost:6060/debug/pprof/profile # \u5206\u6790 CPU # \u534f\u7a0b\u8c03\u5ea6\u8ddf\u8e2a go run main.go --trace = trace.out go tool trace trace.out \u5355\u5143\u6d4b\u8bd5 dlv test . # \u8c03\u8bd5\u5f53\u524d\u5305\u7684\u6240\u6709\u6d4b\u8bd5 dlv test ./pkg -- -test.run TestFoo # \u8c03\u8bd5\u7279\u5b9a\u6d4b\u8bd5 WORK=/var/folders/td/2br0c4zs5mx8w86qrk1tss340000gn/T/go-build331156467 mkdir -p $WORK/b001/ cat >/var/folders/td/2br0c4zs5mx8w86qrk1tss340000gn/T/go-build331156467/b001/importcfg.link << 'EOF' # internal packagefile command-line-arguments=/Users/wangyangzuo/Library/Caches/go-build/cb/cb8a360cbf4de6a7ce5468ee572b19c7caa67ce3d0186cfba601b99bd65335fe-d packagefile runtime=/Users/wangyangzuo/Library/Caches/go-build/e0/e0d0243fe544bb80026ffda6e63c5ebf56cb7b1722fad8f9da590a71b4674ba8-d packagefile internal/abi=/Users/wangyangzuo/Library/Caches/go-build/f9/f9cc50b4663366c39cac8d6ed0b9fb1474a55b99912b0ed32a15697684b7805e-d packagefile internal/bytealg=/Users/wangyangzuo/Library/Caches/go-build/8a/8aec2bb16289441b9cf9361d1fc832a3a49b4bd0f6cfbf2bf08802278acf8faa-d packagefile internal/byteorder=/Users/wangyangzuo/Library/Caches/go-build/1a/1ac33c4603f1e493062b433693964a3550dbbecc60d671540190355ca9f7a4f9-d packagefile internal/chacha8rand=/Users/wangyangzuo/Library/Caches/go-build/9c/9cd3c6719cb309954ff0602b358659c2740ad3b598ea764050740e38ce264213-d packagefile internal/coverage/rtcov=/Users/wangyangzuo/Library/Caches/go-build/ca/ca4c0c159cf4c2dd6bf468e59773e782021a22a1577eacb9b0324e158a97167d-d packagefile internal/cpu=/Users/wangyangzuo/Library/Caches/go-build/e5/e55bfed6575cfe848b3a3d9b22a73d239c3438dff027d8a4b74bcc714a00b66a-d packagefile internal/goarch=/Users/wangyangzuo/Library/Caches/go-build/70/702ec68599075ff341b90e7bc123b941c8f7a792fbe6965c17850ce746020e7a-d packagefile internal/godebugs=/Users/wangyangzuo/Library/Caches/go-build/9f/9fdaf50a907b00f746c9f1d12961188702f70088b4b0c970372601ee342e32df-d packagefile internal/goexperiment=/Users/wangyangzuo/Library/Caches/go-build/cb/cb497f3c33d6c0d90db143972ae18f28bf6a949424e4ecf731b68517757d1e15-d packagefile internal/goos=/Users/wangyangzuo/Library/Caches/go-build/26/266ed5ca3258affee2809c07308e67c9297f93b2e4f8ee63ca3e411894112f23-d packagefile internal/profilerecord=/Users/wangyangzuo/Library/Caches/go-build/78/7887ac0a837c3e42c476c0ea96e9485d2afd0d372b6052f1b8c6f394c21e132b-d packagefile internal/runtime/atomic=/Users/wangyangzuo/Library/Caches/go-build/2f/2f4c17c1099989057a31bfd49a2e96a9d7513aaf92025b811224f560f9fb9c78-d packagefile internal/runtime/exithook=/Users/wangyangzuo/Library/Caches/go-build/e6/e663a8586909b36a2e2c89df9a44e3a78f9e9a165b9ff7a4d5e6cdc9d6c2c79e-d packagefile internal/runtime/maps=/Users/wangyangzuo/Library/Caches/go-build/79/79805c503c65eeb5d0a8f0b530b94f4784ef9b5233de40b04352c131a54e9352-d packagefile internal/runtime/math=/Users/wangyangzuo/Library/Caches/go-build/13/1321b2588497f634cefdbf36b23f230d7e048d2ea08d55d4f5d48f1fa1890b70-d packagefile internal/runtime/sys=/Users/wangyangzuo/Library/Caches/go-build/3d/3d3dda4daf7aeabc38d6045915a51482e7a1968d3cab5103557f54b9be204844-d packagefile internal/stringslite=/Users/wangyangzuo/Library/Caches/go-build/f7/f74cb148242ddc363a10889010abed82f9222bfa0d73ba348ac1286c04457232-d packagefile internal/asan=/Users/wangyangzuo/Library/Caches/go-build/39/3964d694cfa049b1e3b408007f65ee2d997be5c3d95cedcad4bf99765a46dc00-d packagefile internal/msan=/Users/wangyangzuo/Library/Caches/go-build/74/74a05562bbf4218932c5a50b0d20ef90190b9a8db50456cbf3262d67f9bf6f5a-d packagefile internal/race=/Users/wangyangzuo/Library/Caches/go-build/ee/ee5d3bed6b478dea4dc2a9e838f2f273d9d10574e320a53897df5d22bb7bf934-d modinfo \"0w\\xaf\\f\\x92t\\b\\x02A\\xe1\\xc1\\a\\xe6\\xd6\\x18\\xe6path\\tcommand-line-arguments\\nbuild\\t-buildmode=exe\\nbuild\\t-compiler=gc\\nbuild\\t-ldflags=\\\"-s -w\\\"\\nbuild\\tCGO_ENABLED=1\\nbuild\\tCGO_CFLAGS=\\nbuild\\tCGO_CPPFLAGS=\\nbuild\\tCGO_CXXFLAGS=\\nbuild\\tCGO_LDFLAGS=\\nbuild\\tGOARCH=arm64\\nbuild\\tGOOS=darwin\\nbuild\\tGOARM64=v8.0\\n\\xf92C1\\x86\\x18 r\\x00\\x82B\\x10A\\x16\\xd8\\xf2\" EOF mkdir -p $WORK/b001/exe/ cd . GOROOT='/opt/homebrew/Cellar/go/1.24.2/libexec' /opt/homebrew/Cellar/go/1.24.2/libexec/pkg/tool/darwin_arm64/link -o $WORK/b001/exe/a.out -importcfg $WORK/b001/importcfg.link -buildmode=pie -buildid=1WwIR0-q08jpRVU0OLja/kD6mBAn_dyo6TeqULTnB/V2uspWB9SmSMbGnbLoUg/1WwIR0-q08jpRVU0OLja -s -w -extld=cc /Users/wangyangzuo/Library/Caches/go-build/cb/cb8a360cbf4de6a7ce5468ee572b19c7caa67ce3d0186cfba601b99bd65335fe-d /opt/homebrew/Cellar/go/1.24.2/libexec/pkg/tool/darwin_arm64/buildid -w $WORK/b001/exe/a.out # internal mv $WORK/b001/exe/a.out myapp rm -rf $WORK/b001/","title":"debug"},{"location":"go/learn01/","text":"\u6c47\u7f16\u4e0ego \u00b6 package main func main () { _ = add ( 3 , 5 ) } func add ( a , b int ) int { return a + b } go tool compile -S main.go Go\u6c47\u7f16\u6307\u4ee4\u683c\u5f0f\u662f\uff1a\u64cd\u4f5c\u7801 + \u6e90\u64cd\u4f5c\u6570 + \u76ee\u6807\u64cd\u4f5c\u6570\u7684\u5f62\u5f0f\u3002 Go \u6c47\u7f16\u4f1a\u5728\u6307\u4ee4\u540e\u52a0\u4e0a B , W , L \u6216 Q , \u5206\u522b\u8868\u793a\u64cd\u4f5c\u6570\u7684\u5927\u5c0f\u4e3a1\u4e2a\uff0c2\u4e2a\uff0c4\u4e2a\u62168\u4e2a\u5b57\u8282\u3002 MOVB $ 1 , DI // 1 byte MOVW $ 0x10 , BX // 2 bytes MOVL $ 1 , DX // 4 bytes MOVQ $ - 10 , AX // 8 bytes","title":"Learn01"},{"location":"go/learn01/#go","text":"package main func main () { _ = add ( 3 , 5 ) } func add ( a , b int ) int { return a + b } go tool compile -S main.go Go\u6c47\u7f16\u6307\u4ee4\u683c\u5f0f\u662f\uff1a\u64cd\u4f5c\u7801 + \u6e90\u64cd\u4f5c\u6570 + \u76ee\u6807\u64cd\u4f5c\u6570\u7684\u5f62\u5f0f\u3002 Go \u6c47\u7f16\u4f1a\u5728\u6307\u4ee4\u540e\u52a0\u4e0a B , W , L \u6216 Q , \u5206\u522b\u8868\u793a\u64cd\u4f5c\u6570\u7684\u5927\u5c0f\u4e3a1\u4e2a\uff0c2\u4e2a\uff0c4\u4e2a\u62168\u4e2a\u5b57\u8282\u3002 MOVB $ 1 , DI // 1 byte MOVW $ 0x10 , BX // 2 bytes MOVL $ 1 , DX // 4 bytes MOVQ $ - 10 , AX // 8 bytes","title":"\u6c47\u7f16\u4e0ego"},{"location":"healthy/behavior/","text":"","title":"Behavior"},{"location":"search/basic/","text":"Xapian \u5b89\u88c5\u4e0e\u4f7f\u7528 \u00b6 # \u66f4\u65b0\u8f6f\u4ef6\u5305\u5217\u8868 sudo apt update # \u5b89\u88c5\u6838\u5fc3Xapian\u5e93\u548c\u5f00\u53d1\u6587\u4ef6 sudo apt install libxapian30 xapian-tools libxapian-dev # \u5b89\u88c5\u7279\u5b9a\u8bed\u8a00\u7684\u7ed1\u5b9a\uff08\u6839\u636e\u9700\u8981\u9009\u62e9\uff09 sudo apt install python3-xapian # Python 3\u7ed1\u5b9a sudo apt install libxapian-ruby # Ruby\u7ed1\u5b9a sudo apt install libxapian-java # Java\u7ed1\u5b9a sudo apt install sqlite3 libsqlite3-dev # SQLite\u7ed1\u5b9a pip3 install sqlalchemy flask-sqlalchemy mmh3 flask","title":"Basic"},{"location":"search/basic/#xapian","text":"# \u66f4\u65b0\u8f6f\u4ef6\u5305\u5217\u8868 sudo apt update # \u5b89\u88c5\u6838\u5fc3Xapian\u5e93\u548c\u5f00\u53d1\u6587\u4ef6 sudo apt install libxapian30 xapian-tools libxapian-dev # \u5b89\u88c5\u7279\u5b9a\u8bed\u8a00\u7684\u7ed1\u5b9a\uff08\u6839\u636e\u9700\u8981\u9009\u62e9\uff09 sudo apt install python3-xapian # Python 3\u7ed1\u5b9a sudo apt install libxapian-ruby # Ruby\u7ed1\u5b9a sudo apt install libxapian-java # Java\u7ed1\u5b9a sudo apt install sqlite3 libsqlite3-dev # SQLite\u7ed1\u5b9a pip3 install sqlalchemy flask-sqlalchemy mmh3 flask","title":"Xapian \u5b89\u88c5\u4e0e\u4f7f\u7528"},{"location":"search/search_engine/","text":"\u5bf9\u201c\u6570\u636e\u5e93\u201d\u7684\u5904\u7406\u65b9\u5f0f \uff0c\u662f Xapian \u548c Elasticsearch \u8fd9\u7c7b\u4f01\u4e1a\u7ea7\u641c\u7d22\u5e73\u53f0\u4e4b\u95f4\u7684**\u672c\u8d28\u5dee\u5f02\u4e4b\u4e00**\u3002\u8fd9\u5173\u7cfb\u5230\u5b83\u4eec\u7684\u8bbe\u8ba1\u54f2\u5b66\u3001\u5e94\u7528\u573a\u666f\u3001\u6269\u5c55\u65b9\u5f0f\uff0c\u751a\u81f3\u4ee3\u7801\u7ed3\u6784\u3002 \ud83e\uddec \u6838\u5fc3\u533a\u522b\uff1aXapian vs. Elasticsearch \u5728\u201c\u6570\u636e\u5e93\u5c42\u201d\u7684\u5904\u7406\u54f2\u5b66 \u00b6 \u7279\u6027 Xapian Elasticsearch \u6570\u636e\u5b58\u50a8\u7ed3\u6784 \u81ea\u5b9a\u4e49 C++ \u6587\u4ef6\u7ed3\u6784\uff08\u5012\u6392 + slot \u5b58\u50a8\uff09 Lucene \u5e95\u5c42 segment + commit \u7ba1\u7406 \u6570\u636e\u5e93\u5b9a\u4f4d \u672c\u5730\u5d4c\u5165\u5f0f\u641c\u7d22\u5e93 \u5206\u5e03\u5f0f\u6587\u6863\u6570\u636e\u5e93\uff08\u57fa\u4e8e Lucene\uff09 \u5199\u5165\u6a21\u578b \u5355\u7ebf\u7a0b\u4e8b\u52a1\u6027\u5199\u5165 \u591a\u7ebf\u7a0b\u5f02\u6b65\u5199\u5165\u3001segment \u5408\u5e76 \u6570\u636e\u6301\u4e45\u5316 \u663e\u5f0f commit / flush \u81ea\u52a8\u5b9a\u671f commit \u4e8b\u52a1\u7ba1\u7406 \u652f\u6301\u7b80\u5355\u4e8b\u52a1\uff0c\u4f46\u4e0d\u590d\u6742 \u4e0d\u652f\u6301 ACID \u4e8b\u52a1\uff08\u66f4\u50cf eventual consistency\uff09 \u6570\u636e\u66f4\u65b0 \u57fa\u4e8e doc-id \u66ff\u6362\uff08\u65e0\u5b57\u6bb5\u66f4\u65b0\uff09 \u6309\u6587\u6863\u6574\u4f53\u66f4\u65b0\uff0csegment \u5f0f \u5206\u7247\u673a\u5236 \u624b\u52a8\u62fc\u63a5\u591a\u5e93\uff08\u591a DB\uff09 \u5185\u5efa\u5206\u7247/\u526f\u672c\u3001\u52a8\u6001\u8def\u7531 \u53ef\u7ef4\u62a4\u6027 \u50cf SQLite \u4e00\u6837\u8f7b\u91cf \u50cf\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u4e00\u6837\u590d\u6742 \u67e5\u8be2\u6267\u884c \u5355\u673a\u672c\u5730\u7d22\u5f15 \u5206\u5e03\u5f0f\u805a\u5408\u7ed3\u679c\u8fd4\u56de \ud83d\udd0d \u4e3e\u4e2a\u4f8b\u5b50\uff1a \u00b6 \u4f60\u53ef\u4ee5\u628a Xapian \u60f3\u8c61\u6210\uff1a \"\u641c\u7d22\u754c\u7684 SQLite\" \uff1a\u5355\u6587\u4ef6\u3001\u5d4c\u5165\u5f0f\u3001\u8f7b\u91cf\u5feb\u901f\u3001\u7a0b\u5e8f\u63a7\u5236\u4e00\u5207\u3002 \u800c Elasticsearch \u66f4\u50cf\uff1a \"\u641c\u7d22\u754c\u7684 MongoDB + Lucene\" \uff1a\u6587\u6863\u578b\u6570\u636e\u5e93\uff0c\u5185\u5efa\u96c6\u7fa4\uff0cAPI \u4e30\u5bcc\uff0c\u81ea\u52a8\u7ba1\u7406\u7d22\u5f15\u7ed3\u6784\u3002 \u2611\ufe0f \u6240\u4ee5\u4f60\u8fd9\u79cd\u573a\u666f\u2014\u2014 \u975e\u5b9e\u65f6\u5199\u5165 + \u4e0d\u8003\u8651\u5b89\u5168/\u6743\u9650\u7ba1\u7406 \uff0cXapian \u662f\u975e\u5e38\u5951\u5408\u7684\uff01 \u00b6 \u4f60\u7684\u573a\u666f\u770b\u8d77\u6765\u662f\uff1a \u00b6 \u5199\u5165\u662f \u5468\u671f\u6027\u7684 \uff08\u975e\u5b9e\u65f6\uff0c\u53ef\u80fd\u662f\u5b9a\u65f6\u6279\u91cf\u5bfc\u5165\uff09 \u91cd\u70b9\u5728\u4e8e \u5168\u6587\u68c0\u7d22\u8d28\u91cf \u4e0d\u9700\u8981\u7528\u6237\u6743\u9650\u3001\u5ba1\u8ba1\u3001\u670d\u52a1\u53ef\u89c6\u5316 \u7cfb\u7edf\u89c4\u6a21\u63a7\u5236\u5728\u4e00\u4e2a\u8282\u70b9\u6216\u4e00\u53f0\u670d\u52a1\u5668\u4e0a \u8fd9\u5b8c\u5168\u53ef\u4ee5\u628a Elasticsearch \u8fd9\u79cd\u201c\u5927\u70ae\u201d\u6362\u6210 Xapian \u8fd9\u79cd\u7cbe\u51c6\u5c0f\u5de5\u5177 \uff0c\u4e0d\u4ec5\u5f00\u53d1\u6548\u7387\u9ad8\uff0c\u90e8\u7f72\u548c\u7ef4\u62a4\u6210\u672c\u4e5f\u66f4\u4f4e\u3002 \ud83d\udd27 \u5b9e\u9645\u4f18\u52bf\u4f60\u53ef\u80fd\u4f1a\u4eab\u53d7\u5230\uff1a \u00b6 \u6570\u636e\u5e93\u5c31\u662f\u4e2a\u6587\u4ef6\u5939\uff0c\u62f7\u8d1d\u3001\u6253\u5305\u3001\u8fc1\u79fb\u90fd\u5bb9\u6613 \u65e0\u9700\u8fd0\u7ef4\u56e2\u961f\u7ef4\u62a4 ES \u96c6\u7fa4 \u7d22\u5f15\u901f\u5ea6\u5feb\uff0c\u5185\u5b58\u4f7f\u7528\u5c0f \u53ef\u4ee5\u81ea\u5b9a\u4e49 Tokenizer\u3001Term\uff0c\u505a\u66f4\u7cbe\u7ec6\u7684\u8bed\u4e49\u63a7\u5236 \u811a\u672c\u8bed\u8a00\u4e2d\u8c03\u7528\u8d85\u65b9\u4fbf\uff08\u6bd4\u5982 Python\uff09 \ud83e\udde0 \u601d\u8003\u5ef6\u4f38\uff1a \u00b6 \u4f60\u8bf4\u7684\u201c\u6570\u636e\u5e93\u5904\u7406\u4e0d\u4e00\u6837\u201d\uff0c\u672c\u8d28\u53ef\u4ee5\u603b\u7ed3\u4e3a\u8fd9\u4e09\u70b9\uff1a \u5b9a\u4f4d\u4e0d\u540c \uff1a Xapian \u662f\u201c\u5d4c\u5165\u5f0f\u641c\u7d22\u5f15\u64ce\u201d\uff0c\u66f4\u50cf\u4e00\u4e2a\u5e93\uff1b Elasticsearch \u662f\u201c\u641c\u7d22\u6570\u636e\u5e93\u670d\u52a1\u201d\uff0c\u66f4\u50cf\u4e00\u4e2a\u5e73\u53f0\u3002 \u63a7\u5236\u6743\u4e0d\u540c \uff1a Xapian \u5f00\u53d1\u8005\u5168\u6743\u63a7\u5236\u7d22\u5f15\u3001\u67e5\u8be2\u3001\u6392\u5e8f\u903b\u8f91\uff1b ES \u8ba9\u4f60\u7528 RESTful API \u5feb\u901f\u6784\u5efa\uff0c\u4f46\u7ec6\u8282\u4e0d\u6613\u63a7\u5236\u3002 \u4f38\u7f29\u80fd\u529b\u4e0d\u540c \uff1a ES \u4e3a\u591a\u79df\u6237\u3001\u5927\u5e76\u53d1\u3001\u6c34\u5e73\u6269\u5c55\u8bbe\u8ba1\uff1b Xapian \u4e3a\u8f7b\u91cf\u7ea7\u3001\u672c\u5730\u5feb\u901f\u54cd\u5e94\u8bbe\u8ba1\u3002 \u5982\u679c\u4f60\u613f\u610f\u6211\u53ef\u4ee5\u7ed9\u4f60\u505a\u4e2a\uff1a - \u5c0f\u578b Xapian \u672c\u5730\u641c\u7d22\u7cfb\u7edf\u7684\u8bbe\u8ba1\u67b6\u6784 - \u6216\u8005\u7ed9\u4f60\u4ee3\u7801 demo\uff1a\u5982\u4f55\u6279\u91cf\u7d22\u5f15 + \u67e5\u8be2 + \u62fc\u5199\u7ea0\u6b63","title":"Search engine"},{"location":"search/search_engine/#xapian-vs-elasticsearch","text":"\u7279\u6027 Xapian Elasticsearch \u6570\u636e\u5b58\u50a8\u7ed3\u6784 \u81ea\u5b9a\u4e49 C++ \u6587\u4ef6\u7ed3\u6784\uff08\u5012\u6392 + slot \u5b58\u50a8\uff09 Lucene \u5e95\u5c42 segment + commit \u7ba1\u7406 \u6570\u636e\u5e93\u5b9a\u4f4d \u672c\u5730\u5d4c\u5165\u5f0f\u641c\u7d22\u5e93 \u5206\u5e03\u5f0f\u6587\u6863\u6570\u636e\u5e93\uff08\u57fa\u4e8e Lucene\uff09 \u5199\u5165\u6a21\u578b \u5355\u7ebf\u7a0b\u4e8b\u52a1\u6027\u5199\u5165 \u591a\u7ebf\u7a0b\u5f02\u6b65\u5199\u5165\u3001segment \u5408\u5e76 \u6570\u636e\u6301\u4e45\u5316 \u663e\u5f0f commit / flush \u81ea\u52a8\u5b9a\u671f commit \u4e8b\u52a1\u7ba1\u7406 \u652f\u6301\u7b80\u5355\u4e8b\u52a1\uff0c\u4f46\u4e0d\u590d\u6742 \u4e0d\u652f\u6301 ACID \u4e8b\u52a1\uff08\u66f4\u50cf eventual consistency\uff09 \u6570\u636e\u66f4\u65b0 \u57fa\u4e8e doc-id \u66ff\u6362\uff08\u65e0\u5b57\u6bb5\u66f4\u65b0\uff09 \u6309\u6587\u6863\u6574\u4f53\u66f4\u65b0\uff0csegment \u5f0f \u5206\u7247\u673a\u5236 \u624b\u52a8\u62fc\u63a5\u591a\u5e93\uff08\u591a DB\uff09 \u5185\u5efa\u5206\u7247/\u526f\u672c\u3001\u52a8\u6001\u8def\u7531 \u53ef\u7ef4\u62a4\u6027 \u50cf SQLite \u4e00\u6837\u8f7b\u91cf \u50cf\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u4e00\u6837\u590d\u6742 \u67e5\u8be2\u6267\u884c \u5355\u673a\u672c\u5730\u7d22\u5f15 \u5206\u5e03\u5f0f\u805a\u5408\u7ed3\u679c\u8fd4\u56de","title":"\ud83e\uddec \u6838\u5fc3\u533a\u522b\uff1aXapian vs. Elasticsearch \u5728\u201c\u6570\u636e\u5e93\u5c42\u201d\u7684\u5904\u7406\u54f2\u5b66"},{"location":"search/search_engine/#_1","text":"\u4f60\u53ef\u4ee5\u628a Xapian \u60f3\u8c61\u6210\uff1a \"\u641c\u7d22\u754c\u7684 SQLite\" \uff1a\u5355\u6587\u4ef6\u3001\u5d4c\u5165\u5f0f\u3001\u8f7b\u91cf\u5feb\u901f\u3001\u7a0b\u5e8f\u63a7\u5236\u4e00\u5207\u3002 \u800c Elasticsearch \u66f4\u50cf\uff1a \"\u641c\u7d22\u754c\u7684 MongoDB + Lucene\" \uff1a\u6587\u6863\u578b\u6570\u636e\u5e93\uff0c\u5185\u5efa\u96c6\u7fa4\uff0cAPI \u4e30\u5bcc\uff0c\u81ea\u52a8\u7ba1\u7406\u7d22\u5f15\u7ed3\u6784\u3002","title":"\ud83d\udd0d \u4e3e\u4e2a\u4f8b\u5b50\uff1a"},{"location":"search/search_engine/#xapian","text":"","title":"\u2611\ufe0f \u6240\u4ee5\u4f60\u8fd9\u79cd\u573a\u666f\u2014\u2014\u975e\u5b9e\u65f6\u5199\u5165 + \u4e0d\u8003\u8651\u5b89\u5168/\u6743\u9650\u7ba1\u7406\uff0cXapian \u662f\u975e\u5e38\u5951\u5408\u7684\uff01"},{"location":"search/search_engine/#_2","text":"\u5199\u5165\u662f \u5468\u671f\u6027\u7684 \uff08\u975e\u5b9e\u65f6\uff0c\u53ef\u80fd\u662f\u5b9a\u65f6\u6279\u91cf\u5bfc\u5165\uff09 \u91cd\u70b9\u5728\u4e8e \u5168\u6587\u68c0\u7d22\u8d28\u91cf \u4e0d\u9700\u8981\u7528\u6237\u6743\u9650\u3001\u5ba1\u8ba1\u3001\u670d\u52a1\u53ef\u89c6\u5316 \u7cfb\u7edf\u89c4\u6a21\u63a7\u5236\u5728\u4e00\u4e2a\u8282\u70b9\u6216\u4e00\u53f0\u670d\u52a1\u5668\u4e0a \u8fd9\u5b8c\u5168\u53ef\u4ee5\u628a Elasticsearch \u8fd9\u79cd\u201c\u5927\u70ae\u201d\u6362\u6210 Xapian \u8fd9\u79cd\u7cbe\u51c6\u5c0f\u5de5\u5177 \uff0c\u4e0d\u4ec5\u5f00\u53d1\u6548\u7387\u9ad8\uff0c\u90e8\u7f72\u548c\u7ef4\u62a4\u6210\u672c\u4e5f\u66f4\u4f4e\u3002","title":"\u4f60\u7684\u573a\u666f\u770b\u8d77\u6765\u662f\uff1a"},{"location":"search/search_engine/#_3","text":"\u6570\u636e\u5e93\u5c31\u662f\u4e2a\u6587\u4ef6\u5939\uff0c\u62f7\u8d1d\u3001\u6253\u5305\u3001\u8fc1\u79fb\u90fd\u5bb9\u6613 \u65e0\u9700\u8fd0\u7ef4\u56e2\u961f\u7ef4\u62a4 ES \u96c6\u7fa4 \u7d22\u5f15\u901f\u5ea6\u5feb\uff0c\u5185\u5b58\u4f7f\u7528\u5c0f \u53ef\u4ee5\u81ea\u5b9a\u4e49 Tokenizer\u3001Term\uff0c\u505a\u66f4\u7cbe\u7ec6\u7684\u8bed\u4e49\u63a7\u5236 \u811a\u672c\u8bed\u8a00\u4e2d\u8c03\u7528\u8d85\u65b9\u4fbf\uff08\u6bd4\u5982 Python\uff09","title":"\ud83d\udd27 \u5b9e\u9645\u4f18\u52bf\u4f60\u53ef\u80fd\u4f1a\u4eab\u53d7\u5230\uff1a"},{"location":"search/search_engine/#_4","text":"\u4f60\u8bf4\u7684\u201c\u6570\u636e\u5e93\u5904\u7406\u4e0d\u4e00\u6837\u201d\uff0c\u672c\u8d28\u53ef\u4ee5\u603b\u7ed3\u4e3a\u8fd9\u4e09\u70b9\uff1a \u5b9a\u4f4d\u4e0d\u540c \uff1a Xapian \u662f\u201c\u5d4c\u5165\u5f0f\u641c\u7d22\u5f15\u64ce\u201d\uff0c\u66f4\u50cf\u4e00\u4e2a\u5e93\uff1b Elasticsearch \u662f\u201c\u641c\u7d22\u6570\u636e\u5e93\u670d\u52a1\u201d\uff0c\u66f4\u50cf\u4e00\u4e2a\u5e73\u53f0\u3002 \u63a7\u5236\u6743\u4e0d\u540c \uff1a Xapian \u5f00\u53d1\u8005\u5168\u6743\u63a7\u5236\u7d22\u5f15\u3001\u67e5\u8be2\u3001\u6392\u5e8f\u903b\u8f91\uff1b ES \u8ba9\u4f60\u7528 RESTful API \u5feb\u901f\u6784\u5efa\uff0c\u4f46\u7ec6\u8282\u4e0d\u6613\u63a7\u5236\u3002 \u4f38\u7f29\u80fd\u529b\u4e0d\u540c \uff1a ES \u4e3a\u591a\u79df\u6237\u3001\u5927\u5e76\u53d1\u3001\u6c34\u5e73\u6269\u5c55\u8bbe\u8ba1\uff1b Xapian \u4e3a\u8f7b\u91cf\u7ea7\u3001\u672c\u5730\u5feb\u901f\u54cd\u5e94\u8bbe\u8ba1\u3002 \u5982\u679c\u4f60\u613f\u610f\u6211\u53ef\u4ee5\u7ed9\u4f60\u505a\u4e2a\uff1a - \u5c0f\u578b Xapian \u672c\u5730\u641c\u7d22\u7cfb\u7edf\u7684\u8bbe\u8ba1\u67b6\u6784 - \u6216\u8005\u7ed9\u4f60\u4ee3\u7801 demo\uff1a\u5982\u4f55\u6279\u91cf\u7d22\u5f15 + \u67e5\u8be2 + \u62fc\u5199\u7ea0\u6b63","title":"\ud83e\udde0 \u601d\u8003\u5ef6\u4f38\uff1a"},{"location":"search/spelling_correction/","text":"\u81ea\u52a8\u62fc\u5199\u4fee\u6b63\uff08Spelling Correction \u6216 Auto-correction\uff09\u901a\u5e38\u662f\u901a\u8fc7\u4e00\u7cfb\u5217\u7b97\u6cd5\u6765\u5b9e\u73b0\u7684\uff0c\u76ee\u7684\u662f\u81ea\u52a8\u4fee\u590d\u7528\u6237\u8f93\u5165\u7684\u62fc\u5199\u9519\u8bef\u3002\u4e0d\u540c\u7684\u641c\u7d22\u5f15\u64ce\u548c\u5de5\u5177\u91c7\u7528\u4e86\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a \u57fa\u4e8e\u7f16\u8f91\u8ddd\u79bb\uff08Levenshtein \u8ddd\u79bb\uff09 \u2022 \u7b97\u6cd5\u6982\u8ff0\uff1aLevenshtein \u8ddd\u79bb\u662f\u4e00\u79cd\u5ea6\u91cf\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u7684\u7b97\u6cd5\uff0c\u8ba1\u7b97\u51fa\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u6240\u9700\u7684\u6700\u5c0f\u64cd\u4f5c\u6570\uff08\u63d2\u5165\u3001\u5220\u9664\u3001\u66ff\u6362\uff09\u3002\u8fd9\u4e2a\u8ddd\u79bb\u53ef\u4ee5\u7528\u6765\u8bc6\u522b\u62fc\u5199\u9519\u8bef\uff0c\u5e76\u627e\u51fa\u6700\u53ef\u80fd\u7684\u6b63\u786e\u5355\u8bcd\u3002 \u2022 \u6b65\u9aa4\uff1a 1. \u8ba1\u7b97\u8ddd\u79bb\uff1a\u5bf9\u7528\u6237\u8f93\u5165\u7684\u62fc\u5199\u9519\u8bef\u4e0e\u5b57\u5178\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\u8ba1\u7b97 Levenshtein \u8ddd\u79bb\u3002 2. \u9009\u62e9\u6700\u5c0f\u8ddd\u79bb\u7684\u5355\u8bcd\uff1a\u9009\u62e9\u4e0e\u7528\u6237\u8f93\u5165\u62fc\u5199\u9519\u8bef\u6700\u63a5\u8fd1\u7684\u5b57\u5178\u5355\u8bcd\u4f5c\u4e3a\u4fee\u6b63\u7ed3\u679c\u3002 \u2022 \u4f18\u70b9\uff1a\u80fd\u591f\u5904\u7406\u5e38\u89c1\u7684\u62fc\u5199\u9519\u8bef\uff0c\u5982\u952e\u5165\u9519\u8bef\u3001\u91cd\u590d\u5b57\u7b26\u7b49\u3002 \u2022 \u7f3a\u70b9\uff1a\u5bf9\u4e8e\u8f83\u957f\u7684\u6587\u672c\u548c\u5927\u5b57\u5178\uff0c\u8ba1\u7b97\u6548\u7387\u8f83\u4f4e\u3002 \u5e94\u7528\u5b9e\u4f8b\uff1a \u2022 Elasticsearch \u548c Typesense \u4f7f\u7528\u7c7b\u4f3c\u7684\u6280\u672f\uff0c\u57fa\u4e8e\u7f16\u8f91\u8ddd\u79bb\u6765\u5b9e\u73b0\u62fc\u5199\u4fee\u6b63\uff0c\u5c24\u5176\u662f\u5728\u6a21\u7cca\u67e5\u8be2\u65f6\u3002 \u57fa\u4e8e n-gram \u6a21\u578b \u2022 \u7b97\u6cd5\u6982\u8ff0\uff1an-gram \u6a21\u578b\u662f\u4e00\u79cd\u7edf\u8ba1\u8bed\u8a00\u6a21\u578b\uff0c\u901a\u8fc7\u5c06\u8bcd\u6c47\u6216\u5b57\u7b26\u5206\u89e3\u6210\u8fde\u7eed\u7684 n \u4e2a\u5b57\u6bcd\u7ec4\u5408\uff0c\u5b66\u4e60\u8bed\u8a00\u4e2d\u7684\u5e38\u89c1\u6a21\u5f0f\u3002\u5b83\u901a\u8fc7\u8ba1\u7b97\u8f93\u5165\u6587\u672c\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u6765\u5224\u65ad\u53ef\u80fd\u7684\u62fc\u5199\u4fee\u6b63\u3002 \u2022 \u6b65\u9aa4\uff1a 1. \u751f\u6210 n-grams\uff1a\u5c06\u6bcf\u4e2a\u8bcd\u6216\u5b57\u7b26\u5206\u89e3\u4e3a n-gram\uff08\u4f8b\u5982\uff0c\u5c06 \u201chello\u201d \u8f6c\u6362\u4e3a \u201che\u201d, \u201cel\u201d, \u201cll\u201d, \u201clo\u201d\uff09\u3002 2. \u8ba1\u7b97\u6982\u7387\uff1a\u6839\u636e\u4e0a\u4e0b\u6587\uff0c\u8ba1\u7b97\u7ed9\u5b9a\u7684 n-gram \u51fa\u73b0\u7684\u6982\u7387\u3002 3. \u5019\u9009\u4fee\u6b63\uff1a\u6839\u636e\u4e0a\u4e0b\u6587\u7684 n-gram \u6982\u7387\uff0c\u627e\u51fa\u62fc\u5199\u9519\u8bef\u7684\u53ef\u80fd\u4fee\u6b63\u3002 \u2022 \u4f18\u70b9\uff1a\u80fd\u591f\u6839\u636e\u4e0a\u4e0b\u6587\u4fe1\u606f\u66f4\u667a\u80fd\u5730\u8fdb\u884c\u62fc\u5199\u4fee\u6b63\u3002 \u2022 \u7f3a\u70b9\uff1a\u9700\u8981\u5927\u91cf\u7684\u8bad\u7ec3\u6570\u636e\u6765\u6784\u5efa\u6709\u6548\u7684\u6a21\u578b\uff0c\u5e76\u4e14 n-gram \u7684\u5927\u5c0f\uff08n\uff09\u9700\u8981\u8c03\u8282\u4ee5\u5e73\u8861\u6027\u80fd\u548c\u8ba1\u7b97\u5f00\u9500\u3002 \u5e94\u7528\u5b9e\u4f8b\uff1a \u2022 MeiliSearch \u548c Typesense \u4f1a\u5229\u7528\u67d0\u4e9b n-gram \u6280\u672f\u6765\u6539\u5584\u6a21\u7cca\u641c\u7d22\u548c\u62fc\u5199\u4fee\u6b63\uff0c\u5c24\u5176\u662f\u5728\u8bed\u8a00\u6a21\u578b\u4e2d\u3002 \u57fa\u4e8e\u5019\u9009\u8bcd\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5 \u2022 \u7b97\u6cd5\u6982\u8ff0\uff1a\u8fd9\u79cd\u65b9\u6cd5\u901a\u8fc7\u8bc6\u522b\u62fc\u5199\u9519\u8bef\uff0c\u5e76\u4ece\u5b57\u5178\u4e2d\u751f\u6210\u53ef\u80fd\u7684\u4fee\u6b63\u5019\u9009\u8bcd\uff0c\u901a\u5e38\u4f7f\u7528\u4e00\u4e9b\u542f\u53d1\u5f0f\u89c4\u5219\uff08\u5982\u5e38\u89c1\u62fc\u5199\u9519\u8bef\u6a21\u5f0f\u3001\u952e\u76d8\u76f8\u90bb\u5b57\u6bcd\u7b49\uff09\u3002 \u2022 \u6b65\u9aa4\uff1a 1. \u751f\u6210\u5019\u9009\u8bcd\uff1a\u6839\u636e\u7528\u6237\u8f93\u5165\u7684\u9519\u8bef\u8bcd\uff0c\u751f\u6210\u4e00\u7ec4\u5019\u9009\u4fee\u6b63\u8bcd\u3002\u4f8b\u5982\uff0c\u901a\u8fc7\u66ff\u6362\u3001\u5220\u9664\u6216\u63d2\u5165\u5b57\u7b26\uff0c\u6216\u8005\u57fa\u4e8e\u5e38\u89c1\u62fc\u5199\u9519\u8bef\uff08\u5982\u201cteh\u201d \u2192 \u201cthe\u201d\uff09\u3002 2. \u8bc4\u4f30\u5019\u9009\u8bcd\u7684\u76f8\u5173\u6027\uff1a\u4f7f\u7528\u5b57\u5178\u9891\u7387\u3001\u4e0a\u4e0b\u6587\u3001\u7f16\u8f91\u8ddd\u79bb\u7b49\u65b9\u5f0f\u8bc4\u4f30\u6bcf\u4e2a\u5019\u9009\u8bcd\u7684\u53ef\u80fd\u6027\u3002 3. \u9009\u62e9\u6700\u4f73\u5019\u9009\uff1a\u9009\u51fa\u6700\u7b26\u5408\u4e0a\u4e0b\u6587\u548c\u5e38\u89c1\u9519\u8bef\u6a21\u5f0f\u7684\u5019\u9009\u8bcd\u3002 \u2022 \u4f18\u70b9\uff1a\u901f\u5ea6\u8f83\u5feb\uff0c\u4e0d\u9700\u8981\u5927\u91cf\u7684\u8ba1\u7b97\u8d44\u6e90\u3002 \u2022 \u7f3a\u70b9\uff1a\u53ef\u80fd\u4ea7\u751f\u4e0d\u592a\u7cbe\u786e\u7684\u4fee\u6b63\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u975e\u6807\u51c6\u62fc\u5199\u6216\u591a\u4e49\u8bcd\u3002 \u5e94\u7528\u5b9e\u4f8b\uff1a \u2022 Xapian \u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u6765\u4fee\u6b63\u62fc\u5199\u9519\u8bef\uff0c\u4f8b\u5982\u901a\u8fc7\u5efa\u7acb\u4e00\u4e2a\u5019\u9009\u8bcd\u751f\u6210\u5668\uff0c\u7ed3\u5408\u5e38\u89c1\u62fc\u5199\u9519\u8bef\u89c4\u5219\u6765\u8fdb\u884c\u4fee\u6b63\u3002 \u57fa\u4e8e\u6982\u7387\u6a21\u578b\u7684\u62fc\u5199\u4fee\u6b63 \u2022 \u7b97\u6cd5\u6982\u8ff0\uff1a\u8fd9\u7c7b\u65b9\u6cd5\u4f7f\u7528\u57fa\u4e8e\u8bed\u8a00\u7684\u6982\u7387\u6a21\u578b\uff08\u5982 Bayesian \u6a21\u578b\uff09\u6765\u5224\u65ad\u54ea\u4e2a\u4fee\u6b63\u6700\u6709\u53ef\u80fd\u3002\u8be5\u6a21\u578b\u4f1a\u6839\u636e\u51fa\u73b0\u7684\u6982\u7387\u4ece\u5019\u9009\u4fee\u6b63\u4e2d\u9009\u51fa\u6700\u4f73\u7684\u62fc\u5199\u4fee\u6b63\u3002 \u2022 \u6b65\u9aa4\uff1a 1. \u8bad\u7ec3\u6982\u7387\u6a21\u578b\uff1a\u4f7f\u7528\u5927\u91cf\u7684\u6587\u672c\u6570\u636e\u8bad\u7ec3\u6a21\u578b\uff0c\u5b66\u4e60\u6bcf\u4e2a\u5355\u8bcd\u5728\u8bed\u8a00\u4e2d\u7684\u6982\u7387\u3002 2. \u751f\u6210\u5019\u9009\u4fee\u6b63\uff1a\u4e3a\u62fc\u5199\u9519\u8bef\u751f\u6210\u5019\u9009\u4fee\u6b63\uff0c\u5e76\u8ba1\u7b97\u6bcf\u4e2a\u5019\u9009\u7684\u6982\u7387\u3002 3. \u9009\u62e9\u6700\u4f73\u5019\u9009\uff1a\u9009\u62e9\u5177\u6709\u6700\u9ad8\u6982\u7387\u7684\u5019\u9009\u4f5c\u4e3a\u62fc\u5199\u4fee\u6b63\u3002 \u2022 \u4f18\u70b9\uff1a\u80fd\u591f\u66f4\u667a\u80fd\u5730\u6839\u636e\u4e0a\u4e0b\u6587\u9009\u62e9\u62fc\u5199\u4fee\u6b63\u3002 \u2022 \u7f3a\u70b9\uff1a\u9700\u8981\u5927\u91cf\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u5e76\u4e14\u8ba1\u7b97\u5f00\u9500\u8f83\u5927\u3002 \u5e94\u7528\u5b9e\u4f8b\uff1a \u2022 Elasticsearch \u7b49\u641c\u7d22\u5f15\u64ce\u4f7f\u7528\u6982\u7387\u6a21\u578b\uff08\u5982 BM25 \u7b97\u6cd5\uff09\u6765\u63d0\u9ad8\u6a21\u7cca\u641c\u7d22\u7684\u8d28\u91cf\uff0c\u4ece\u800c\u4f18\u5316\u62fc\u5199\u4fee\u6b63\u548c\u76f8\u5173\u6027\u6392\u540d\u3002 \u57fa\u4e8e\u8bcd\u5178\u7684\u62fc\u5199\u4fee\u6b63 \u2022 \u7b97\u6cd5\u6982\u8ff0\uff1a\u8fd9\u662f\u4e00\u79cd\u6700\u7b80\u5355\u7684\u62fc\u5199\u4fee\u6b63\u65b9\u6cd5\uff0c\u901a\u8fc7\u4e00\u4e2a\u5305\u542b\u6b63\u786e\u5355\u8bcd\u7684\u5b57\u5178\uff08\u5982\u4f20\u7edf\u7684\u62fc\u5199\u8bcd\u5178\uff09\u6765\u67e5\u627e\u62fc\u5199\u9519\u8bef\u7684\u4fee\u6b63\u3002\u5b83\u901a\u8fc7\u5b57\u5178\u7684\u5b58\u5728\u6027\u6765\u786e\u5b9a\u62fc\u5199\u662f\u5426\u6b63\u786e\uff0c\u5e76\u63d0\u4f9b\u4fee\u6b63\u5efa\u8bae\u3002 \u2022 \u6b65\u9aa4\uff1a 1. \u67e5\u627e\u5b57\u5178\uff1a\u68c0\u67e5\u7528\u6237\u8f93\u5165\u7684\u5355\u8bcd\u662f\u5426\u5728\u5b57\u5178\u4e2d\u3002 2. \u67e5\u627e\u8fd1\u4f3c\u5339\u914d\uff1a\u5982\u679c\u7528\u6237\u8f93\u5165\u7684\u5355\u8bcd\u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u67e5\u627e\u4e0e\u8be5\u5355\u8bcd\u7f16\u8f91\u8ddd\u79bb\u6700\u5c0f\u7684\u8bcd\u6761\u3002 3. \u63d0\u4f9b\u4fee\u6b63\u5efa\u8bae\uff1a\u5982\u679c\u627e\u5230\u62fc\u5199\u9519\u8bef\uff0c\u63d0\u4f9b\u4fee\u6b63\u5efa\u8bae\u3002 \u2022 \u4f18\u70b9\uff1a\u5b9e\u73b0\u7b80\u5355\u4e14\u5feb\u901f\uff0c\u9002\u7528\u4e8e\u8f83\u5c0f\u7684\u8bcd\u5178\u548c\u57fa\u7840\u62fc\u5199\u4fee\u6b63\u9700\u6c42\u3002 \u2022 \u7f3a\u70b9\uff1a\u65e0\u6cd5\u5904\u7406\u590d\u6742\u7684\u62fc\u5199\u9519\u8bef\u6216\u6ca1\u6709\u5728\u8bcd\u5178\u4e2d\u7684\u65b0\u8bcd\u3002 \u5e94\u7528\u5b9e\u4f8b\uff1a \u2022 Xapian \u548c\u5176\u4ed6\u641c\u7d22\u5f15\u64ce\u901a\u5e38\u4f1a\u4f9d\u8d56\u5185\u7f6e\u5b57\u5178\u8fdb\u884c\u62fc\u5199\u4fee\u6b63\uff0c\u4f46\u5e38\u5e38\u7ed3\u5408\u5176\u4ed6\u65b9\u6cd5\u6765\u589e\u5f3a\u51c6\u786e\u6027\u3002 \u2e3b \u603b\u7ed3 \u4e0d\u540c\u641c\u7d22\u5f15\u64ce\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u62fc\u5199\u4fee\u6b63\uff1a \u2022 \u7f16\u8f91\u8ddd\u79bb\uff1a\u57fa\u4e8e Levenshtein \u8ddd\u79bb\u8ba1\u7b97\u62fc\u5199\u8bef\u5dee\uff0c\u5e38\u7528\u4e8e\u5feb\u901f\u4fee\u6b63\u62fc\u5199\u9519\u8bef\u3002 \u2022 n-gram \u6a21\u578b\uff1a\u901a\u8fc7\u5206\u89e3\u8bcd\u6c47\u4e3a n-gram\uff0c\u5229\u7528\u4e0a\u4e0b\u6587\u4fe1\u606f\u8fdb\u884c\u4fee\u6b63\u3002 \u2022 \u5019\u9009\u8bcd\u751f\u6210\u548c\u542f\u53d1\u5f0f\u89c4\u5219\uff1a\u751f\u6210\u4e00\u7cfb\u5217\u62fc\u5199\u5019\u9009\uff0c\u57fa\u4e8e\u5e38\u89c1\u9519\u8bef\u6a21\u5f0f\u8fdb\u884c\u4fee\u6b63\u3002 \u2022 \u6982\u7387\u6a21\u578b\uff1a\u57fa\u4e8e\u8bed\u8a00\u6a21\u578b\u9884\u6d4b\u6700\u53ef\u80fd\u7684\u62fc\u5199\u4fee\u6b63\uff0c\u901a\u5e38\u7ed3\u5408\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002 \u2022 \u8bcd\u5178\u67e5\u627e\uff1a\u901a\u8fc7\u68c0\u67e5\u5b57\u5178\u4e2d\u662f\u5426\u6709\u62fc\u5199\u9519\u8bef\uff0c\u627e\u5230\u6700\u4f73\u5339\u914d\u7684\u5355\u8bcd\u3002 \u641c\u7d22\u5f15\u64ce\u5e38\u5e38\u7ed3\u5408\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u901a\u8fc7\u542f\u53d1\u5f0f\u7b97\u6cd5\u3001\u6a21\u7cca\u67e5\u8be2\u3001\u4e0a\u4e0b\u6587\u5206\u6790\u7b49\u6280\u672f\u6765\u5b9e\u73b0\u9ad8\u6548\u3001\u7cbe\u786e\u7684\u62fc\u5199\u4fee\u6b63\u3002","title":"Spelling correction"},{"location":"search/theone_search_design/","text":"\u7b80\u5316\u7248\u9ad8\u6548\u5b58\u50a8\u65b9\u6848\uff1a\u5e73\u8861\u529f\u80fd\u4e0e\u590d\u6742\u5ea6 \u00b6 \u786e\u5b9e\u4e4b\u524d\u7684\u65b9\u6848\u8003\u8651\u5f97\u8f83\u4e3a\u5168\u9762\u4f46\u4e5f\u76f8\u5bf9\u590d\u6742\u3002\u4e0b\u9762\u6211\u63d0\u4f9b\u4e00\u4e2a\u66f4\u7b80\u6d01\u7684\u5b9e\u73b0\u65b9\u6848\uff0c\u4fdd\u7559\u6838\u5fc3\u529f\u80fd\u7684\u540c\u65f6\u5927\u5e45\u964d\u4f4e\u5b9e\u73b0\u590d\u6742\u5ea6\u3002 \u7b80\u5316\u540e\u67b6\u6784\u8bbe\u8ba1 \u00b6 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u5e94\u7528\u5c42 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Xapian \u2502 # \u4e3b\u5b58\u50a8 \u2502 \u2022 \u5168\u6587\u5185\u5bb9 \u2502 \u2502 \u2022 \u57fa\u672c\u5143\u6570\u636e \u2502 \u2502 \u2022 MinHash\u7b7e\u540d \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 SQLite \u2502 # \u8f85\u52a9\u5b58\u50a8 \u2502 \u2022 \u7cfb\u7edf\u914d\u7f6e \u2502 \u2502 \u2022 \u5c11\u91cf\u5173\u7cfb\u6570\u636e \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u5173\u952e\u7b80\u5316\u70b9 \u00b6 \u53bb\u9664LevelDB \uff1a\u5c06MinHash\u76f4\u63a5\u5b58\u50a8\u5728Xapian\u7684value slot\u4e2d \u51cf\u5c11\u6570\u636e\u5197\u4f59 \uff1a\u53ea\u4fdd\u7559\u5fc5\u8981\u7684\u5143\u6570\u636e\u526f\u672c \u7b80\u5316\u67e5\u8be2\u6d41\u7a0b \uff1a\u5408\u5e76\u67e5\u91cd\u548c\u68c0\u7d22\u7684\u903b\u8f91\u8def\u5f84 \u5177\u4f53\u5b9e\u73b0\u65b9\u6848 \u00b6 1. \u6570\u636e\u7ed3\u6784\u8bbe\u8ba1 \u00b6 Xapian\u5b58\u50a8 \uff08\u4e3b\u5b58\u50a8\uff09\uff1a - \u6587\u6863\u5185\u5bb9\uff08\u53ef\u68c0\u7d22\uff09 - \u6587\u6863\u6807\u9898\uff08\u53ef\u68c0\u7d22\uff0c\u66f4\u9ad8\u6743\u91cd\uff09 - MinHash\u7b7e\u540d\uff08\u5b58\u50a8\u5728value slot\uff09 - \u57fa\u672c\u5143\u6570\u636e\uff08\u521b\u5efa\u65f6\u95f4\u3001\u4f5c\u8005\u7b49\uff09 SQLite\u5b58\u50a8 \uff08\u4ec5\u7528\u4e8e\uff09\uff1a - \u7528\u6237\u914d\u7f6e - \u7cfb\u7edf\u72b6\u6001 - \u9700\u8981\u590d\u6742\u67e5\u8be2\u7684\u5173\u7cfb\u6570\u636e 2. \u6838\u5fc3\u4ee3\u7801\u5b9e\u73b0 \u00b6 \u6587\u6863\u7d22\u5f15 \u00b6 void indexDocument ( const Document & doc ) { // 1. \u751f\u6210MinHash vector < uint64_t > minhash = generateMinHash ( doc . content ); // 2. \u521b\u5efaXapian\u6587\u6863 Xapian :: Document xdoc ; xdoc . set_data ( doc . id ); // \u53ea\u5b58\u50a8ID // \u6dfb\u52a0\u53ef\u68c0\u7d22\u5185\u5bb9 Xapian :: TermGenerator termgen ; termgen . set_document ( xdoc ); termgen . index_text ( doc . title , 1 , \"S\" ); // \u6807\u9898\u66f4\u9ad8\u6743\u91cd termgen . index_text ( doc . content ); // \u5b58\u50a8\u5143\u6570\u636e\u4e3aterm\uff08\u4fbf\u4e8e\u8fc7\u6ee4\uff09 xdoc . add_term ( \"type_\" + doc . type ); xdoc . add_term ( \"author_\" + doc . author ); // \u5b58\u50a8MinHash\uff08\u538b\u7f29\u540e\u653e\u5165value slot\uff09 xdoc . add_value ( MINHASH_SLOT , compressMinHash ( minhash )); // 3. \u63d0\u4ea4\u5230\u6570\u636e\u5e93 db . replace_document ( doc . id , xdoc ); } \u6587\u6863\u67e5\u91cd \u00b6 vector < DuplicateResult > findDuplicates ( string content ) { // 1. \u751f\u6210\u67e5\u8be2MinHash auto query_hash = generateMinHash ( content ); // 2. \u904d\u5386\u6570\u636e\u5e93\u8ba1\u7b97\u76f8\u4f3c\u5ea6\uff08\u5b9e\u9645\u5e94\u7528\u5e94\u4f18\u5316\u6b64\u6b65\u9aa4\uff09 vector < DuplicateResult > results ; Xapian :: PostingIterator it ; for ( it = db . postlist_begin ( \"\" ); it != db . postlist_end ( \"\" ); ++ it ) { Xapian :: Document doc = db . get_document ( * it ); string stored_hash = doc . get_value ( MINHASH_SLOT ); double similarity = compareHashes ( query_hash , decompressMinHash ( stored_hash ) ); if ( similarity > THRESHOLD ) { results . push_back ({ doc . get_data (), // \u5b58\u50a8\u7684doc.id doc . get_value ( TITLE_SLOT ), similarity }); } } // 3. \u6309\u76f8\u4f3c\u5ea6\u6392\u5e8f sort ( results . begin (), results . end (), []( auto & a , auto & b ) { return a . similarity > b . similarity ; }); return results ; } \u6df7\u5408\u67e5\u8be2 \u00b6 vector < SearchResult > search ( const Query & query ) { if ( query . mode == SIMILARITY_SEARCH ) { return findDuplicates ( query . content ); } // \u666e\u901a\u5168\u6587\u68c0\u7d22 Xapian :: Enquire enquire ( db ); Xapian :: Query xquery = parseQuery ( query ); enquire . set_query ( xquery ); vector < SearchResult > results ; Xapian :: MSet matches = enquire . get_mset ( 0 , 20 ); for ( auto it = matches . begin (); it != matches . end (); ++ it ) { Xapian :: Document doc = it . get_document (); results . push_back ({ doc . get_data (), doc . get_value ( TITLE_SLOT ), it . get_percent () / 100.0 }); } return results ; } 3. \u6027\u80fd\u4f18\u5316\u7b56\u7565 \u00b6 MinHash\u5b58\u50a8\u4f18\u5316 \uff1a string compressMinHash ( const vector < uint64_t >& hashes ) { // \u4f7f\u7528\u7b80\u5355\u7684\u5dee\u503c\u7f16\u7801 stringstream ss ; uint64_t last = 0 ; for ( auto h : hashes ) { ss << encodeVarint ( h - last ); last = h ; } return ss . str (); } \u67e5\u91cd\u4f18\u5316 \uff08\u66ff\u4ee3\u5168\u91cf\u626b\u63cf\uff09\uff1a vector < DuplicateResult > optimizedFindDuplicates ( string content ) { auto query_hash = generateMinHash ( content ); // 1. \u63d0\u53d6\u5173\u952eband\u4f5c\u4e3a\u8fc7\u6ee4\u6761\u4ef6 vector < string > query_terms ; for ( int i = 0 ; i < 3 ; i ++ ) { // \u4f7f\u7528\u524d3\u4e2aband query_terms . push_back ( fmt :: format ( \"band{}:{}\" , i , query_hash . bands [ i ])); } // 2. \u6784\u5efaXapian\u67e5\u8be2 Xapian :: Query query ( Xapian :: Query :: OP_OR , query_terms . begin (), query_terms . end ()); // \u5176\u4f59\u903b\u8f91\u76f8\u540c... } \u7f13\u5b58\u70ed\u70b9\u6570\u636e \uff1a class DocumentCache { public : string getTitle ( Xapian :: docid id ) { if ( auto it = title_cache . find ( id ); it != title_cache . end ()) { return it -> second ; } auto doc = db . get_document ( id ); string title = doc . get_value ( TITLE_SLOT ); title_cache [ id ] = title ; return title ; } private : unordered_map < Xapian :: docid , string > title_cache ; Xapian :: Database & db ; }; \u65b9\u6848\u4f18\u52bf \u00b6 \u5b9e\u73b0\u7b80\u5355 \uff1a \u4e3b\u8981\u903b\u8f91\u90fd\u5728Xapian\u4e2d\u5b9e\u73b0 SQLite\u4ec5\u7528\u4e8e\u8f85\u52a9\u5b58\u50a8 \u4ee3\u7801\u91cf\u51cf\u5c1150%\u4ee5\u4e0a \u7ef4\u62a4\u65b9\u4fbf \uff1a \u53ea\u6709\u4e24\u4e2a\u5b58\u50a8\u5f15\u64ce\u9700\u8981\u7ba1\u7406 \u5907\u4efd\u548c\u6062\u590d\u6d41\u7a0b\u7b80\u5355 \u8d44\u6e90\u9700\u6c42\u4f4e \uff1a \u4e0d\u9700\u8981\u7ef4\u62a4LevelDB \u5185\u5b58\u5360\u7528\u66f4\u5c0f \u8db3\u591f\u5e94\u5bf9 \uff1a \u4e07\u7ea7\u6587\u6863\u89c4\u6a21 \u4e2d\u7b49\u67e5\u8be2\u9891\u7387 \u57fa\u672c\u67e5\u91cd\u9700\u6c42 \u9002\u7528\u573a\u666f\u63a8\u8350 \u00b6 \u8fd9\u4e2a\u7b80\u5316\u65b9\u6848\u7279\u522b\u9002\u5408\u4ee5\u4e0b\u60c5\u51b5\uff1a - \u6587\u6863\u6570\u91cf\u572810\u4e07\u4ee5\u5185 - \u6bcf\u5929\u66f4\u65b0\u4e0d\u8d85\u8fc71000\u6b21 - \u4e0d\u9700\u8981\u5206\u5e03\u5f0f\u90e8\u7f72 - \u5f00\u53d1\u8d44\u6e90\u6709\u9650\u7684\u5c0f\u578b\u9879\u76ee \u5982\u679c\u540e\u671f\u9700\u8981\u6269\u5c55\uff0c\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u65b9\u9762\u589e\u5f3a\uff1a 1. \u5c06MinHash\u8fc1\u79fb\u5230Redis\u7b49\u5185\u5b58\u6570\u636e\u5e93 2. \u5bf9Xapian\u6570\u636e\u5e93\u8fdb\u884c\u5206\u7247 3. \u6dfb\u52a0\u67e5\u8be2\u7ed3\u679c\u7f13\u5b58\u5c42 \u8fd9\u6837\u5728\u4fdd\u6301\u7cfb\u7edf\u7b80\u5355\u6027\u7684\u540c\u65f6\uff0c\u4e5f\u4e3a\u672a\u6765\u53ef\u80fd\u7684\u6269\u5c55\u7559\u4e0b\u4e86\u7a7a\u95f4\u3002","title":"\u7b80\u5316\u7248\u9ad8\u6548\u5b58\u50a8\u65b9\u6848\uff1a\u5e73\u8861\u529f\u80fd\u4e0e\u590d\u6742\u5ea6"},{"location":"search/theone_search_design/#_1","text":"\u786e\u5b9e\u4e4b\u524d\u7684\u65b9\u6848\u8003\u8651\u5f97\u8f83\u4e3a\u5168\u9762\u4f46\u4e5f\u76f8\u5bf9\u590d\u6742\u3002\u4e0b\u9762\u6211\u63d0\u4f9b\u4e00\u4e2a\u66f4\u7b80\u6d01\u7684\u5b9e\u73b0\u65b9\u6848\uff0c\u4fdd\u7559\u6838\u5fc3\u529f\u80fd\u7684\u540c\u65f6\u5927\u5e45\u964d\u4f4e\u5b9e\u73b0\u590d\u6742\u5ea6\u3002","title":"\u7b80\u5316\u7248\u9ad8\u6548\u5b58\u50a8\u65b9\u6848\uff1a\u5e73\u8861\u529f\u80fd\u4e0e\u590d\u6742\u5ea6"},{"location":"search/theone_search_design/#_2","text":"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u5e94\u7528\u5c42 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Xapian \u2502 # \u4e3b\u5b58\u50a8 \u2502 \u2022 \u5168\u6587\u5185\u5bb9 \u2502 \u2502 \u2022 \u57fa\u672c\u5143\u6570\u636e \u2502 \u2502 \u2022 MinHash\u7b7e\u540d \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 SQLite \u2502 # \u8f85\u52a9\u5b58\u50a8 \u2502 \u2022 \u7cfb\u7edf\u914d\u7f6e \u2502 \u2502 \u2022 \u5c11\u91cf\u5173\u7cfb\u6570\u636e \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"\u7b80\u5316\u540e\u67b6\u6784\u8bbe\u8ba1"},{"location":"search/theone_search_design/#_3","text":"\u53bb\u9664LevelDB \uff1a\u5c06MinHash\u76f4\u63a5\u5b58\u50a8\u5728Xapian\u7684value slot\u4e2d \u51cf\u5c11\u6570\u636e\u5197\u4f59 \uff1a\u53ea\u4fdd\u7559\u5fc5\u8981\u7684\u5143\u6570\u636e\u526f\u672c \u7b80\u5316\u67e5\u8be2\u6d41\u7a0b \uff1a\u5408\u5e76\u67e5\u91cd\u548c\u68c0\u7d22\u7684\u903b\u8f91\u8def\u5f84","title":"\u5173\u952e\u7b80\u5316\u70b9"},{"location":"search/theone_search_design/#_4","text":"","title":"\u5177\u4f53\u5b9e\u73b0\u65b9\u6848"},{"location":"search/theone_search_design/#1","text":"Xapian\u5b58\u50a8 \uff08\u4e3b\u5b58\u50a8\uff09\uff1a - \u6587\u6863\u5185\u5bb9\uff08\u53ef\u68c0\u7d22\uff09 - \u6587\u6863\u6807\u9898\uff08\u53ef\u68c0\u7d22\uff0c\u66f4\u9ad8\u6743\u91cd\uff09 - MinHash\u7b7e\u540d\uff08\u5b58\u50a8\u5728value slot\uff09 - \u57fa\u672c\u5143\u6570\u636e\uff08\u521b\u5efa\u65f6\u95f4\u3001\u4f5c\u8005\u7b49\uff09 SQLite\u5b58\u50a8 \uff08\u4ec5\u7528\u4e8e\uff09\uff1a - \u7528\u6237\u914d\u7f6e - \u7cfb\u7edf\u72b6\u6001 - \u9700\u8981\u590d\u6742\u67e5\u8be2\u7684\u5173\u7cfb\u6570\u636e","title":"1. \u6570\u636e\u7ed3\u6784\u8bbe\u8ba1"},{"location":"search/theone_search_design/#2","text":"","title":"2. \u6838\u5fc3\u4ee3\u7801\u5b9e\u73b0"},{"location":"search/theone_search_design/#_5","text":"void indexDocument ( const Document & doc ) { // 1. \u751f\u6210MinHash vector < uint64_t > minhash = generateMinHash ( doc . content ); // 2. \u521b\u5efaXapian\u6587\u6863 Xapian :: Document xdoc ; xdoc . set_data ( doc . id ); // \u53ea\u5b58\u50a8ID // \u6dfb\u52a0\u53ef\u68c0\u7d22\u5185\u5bb9 Xapian :: TermGenerator termgen ; termgen . set_document ( xdoc ); termgen . index_text ( doc . title , 1 , \"S\" ); // \u6807\u9898\u66f4\u9ad8\u6743\u91cd termgen . index_text ( doc . content ); // \u5b58\u50a8\u5143\u6570\u636e\u4e3aterm\uff08\u4fbf\u4e8e\u8fc7\u6ee4\uff09 xdoc . add_term ( \"type_\" + doc . type ); xdoc . add_term ( \"author_\" + doc . author ); // \u5b58\u50a8MinHash\uff08\u538b\u7f29\u540e\u653e\u5165value slot\uff09 xdoc . add_value ( MINHASH_SLOT , compressMinHash ( minhash )); // 3. \u63d0\u4ea4\u5230\u6570\u636e\u5e93 db . replace_document ( doc . id , xdoc ); }","title":"\u6587\u6863\u7d22\u5f15"},{"location":"search/theone_search_design/#_6","text":"vector < DuplicateResult > findDuplicates ( string content ) { // 1. \u751f\u6210\u67e5\u8be2MinHash auto query_hash = generateMinHash ( content ); // 2. \u904d\u5386\u6570\u636e\u5e93\u8ba1\u7b97\u76f8\u4f3c\u5ea6\uff08\u5b9e\u9645\u5e94\u7528\u5e94\u4f18\u5316\u6b64\u6b65\u9aa4\uff09 vector < DuplicateResult > results ; Xapian :: PostingIterator it ; for ( it = db . postlist_begin ( \"\" ); it != db . postlist_end ( \"\" ); ++ it ) { Xapian :: Document doc = db . get_document ( * it ); string stored_hash = doc . get_value ( MINHASH_SLOT ); double similarity = compareHashes ( query_hash , decompressMinHash ( stored_hash ) ); if ( similarity > THRESHOLD ) { results . push_back ({ doc . get_data (), // \u5b58\u50a8\u7684doc.id doc . get_value ( TITLE_SLOT ), similarity }); } } // 3. \u6309\u76f8\u4f3c\u5ea6\u6392\u5e8f sort ( results . begin (), results . end (), []( auto & a , auto & b ) { return a . similarity > b . similarity ; }); return results ; }","title":"\u6587\u6863\u67e5\u91cd"},{"location":"search/theone_search_design/#_7","text":"vector < SearchResult > search ( const Query & query ) { if ( query . mode == SIMILARITY_SEARCH ) { return findDuplicates ( query . content ); } // \u666e\u901a\u5168\u6587\u68c0\u7d22 Xapian :: Enquire enquire ( db ); Xapian :: Query xquery = parseQuery ( query ); enquire . set_query ( xquery ); vector < SearchResult > results ; Xapian :: MSet matches = enquire . get_mset ( 0 , 20 ); for ( auto it = matches . begin (); it != matches . end (); ++ it ) { Xapian :: Document doc = it . get_document (); results . push_back ({ doc . get_data (), doc . get_value ( TITLE_SLOT ), it . get_percent () / 100.0 }); } return results ; }","title":"\u6df7\u5408\u67e5\u8be2"},{"location":"search/theone_search_design/#3","text":"MinHash\u5b58\u50a8\u4f18\u5316 \uff1a string compressMinHash ( const vector < uint64_t >& hashes ) { // \u4f7f\u7528\u7b80\u5355\u7684\u5dee\u503c\u7f16\u7801 stringstream ss ; uint64_t last = 0 ; for ( auto h : hashes ) { ss << encodeVarint ( h - last ); last = h ; } return ss . str (); } \u67e5\u91cd\u4f18\u5316 \uff08\u66ff\u4ee3\u5168\u91cf\u626b\u63cf\uff09\uff1a vector < DuplicateResult > optimizedFindDuplicates ( string content ) { auto query_hash = generateMinHash ( content ); // 1. \u63d0\u53d6\u5173\u952eband\u4f5c\u4e3a\u8fc7\u6ee4\u6761\u4ef6 vector < string > query_terms ; for ( int i = 0 ; i < 3 ; i ++ ) { // \u4f7f\u7528\u524d3\u4e2aband query_terms . push_back ( fmt :: format ( \"band{}:{}\" , i , query_hash . bands [ i ])); } // 2. \u6784\u5efaXapian\u67e5\u8be2 Xapian :: Query query ( Xapian :: Query :: OP_OR , query_terms . begin (), query_terms . end ()); // \u5176\u4f59\u903b\u8f91\u76f8\u540c... } \u7f13\u5b58\u70ed\u70b9\u6570\u636e \uff1a class DocumentCache { public : string getTitle ( Xapian :: docid id ) { if ( auto it = title_cache . find ( id ); it != title_cache . end ()) { return it -> second ; } auto doc = db . get_document ( id ); string title = doc . get_value ( TITLE_SLOT ); title_cache [ id ] = title ; return title ; } private : unordered_map < Xapian :: docid , string > title_cache ; Xapian :: Database & db ; };","title":"3. \u6027\u80fd\u4f18\u5316\u7b56\u7565"},{"location":"search/theone_search_design/#_8","text":"\u5b9e\u73b0\u7b80\u5355 \uff1a \u4e3b\u8981\u903b\u8f91\u90fd\u5728Xapian\u4e2d\u5b9e\u73b0 SQLite\u4ec5\u7528\u4e8e\u8f85\u52a9\u5b58\u50a8 \u4ee3\u7801\u91cf\u51cf\u5c1150%\u4ee5\u4e0a \u7ef4\u62a4\u65b9\u4fbf \uff1a \u53ea\u6709\u4e24\u4e2a\u5b58\u50a8\u5f15\u64ce\u9700\u8981\u7ba1\u7406 \u5907\u4efd\u548c\u6062\u590d\u6d41\u7a0b\u7b80\u5355 \u8d44\u6e90\u9700\u6c42\u4f4e \uff1a \u4e0d\u9700\u8981\u7ef4\u62a4LevelDB \u5185\u5b58\u5360\u7528\u66f4\u5c0f \u8db3\u591f\u5e94\u5bf9 \uff1a \u4e07\u7ea7\u6587\u6863\u89c4\u6a21 \u4e2d\u7b49\u67e5\u8be2\u9891\u7387 \u57fa\u672c\u67e5\u91cd\u9700\u6c42","title":"\u65b9\u6848\u4f18\u52bf"},{"location":"search/theone_search_design/#_9","text":"\u8fd9\u4e2a\u7b80\u5316\u65b9\u6848\u7279\u522b\u9002\u5408\u4ee5\u4e0b\u60c5\u51b5\uff1a - \u6587\u6863\u6570\u91cf\u572810\u4e07\u4ee5\u5185 - \u6bcf\u5929\u66f4\u65b0\u4e0d\u8d85\u8fc71000\u6b21 - \u4e0d\u9700\u8981\u5206\u5e03\u5f0f\u90e8\u7f72 - \u5f00\u53d1\u8d44\u6e90\u6709\u9650\u7684\u5c0f\u578b\u9879\u76ee \u5982\u679c\u540e\u671f\u9700\u8981\u6269\u5c55\uff0c\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u65b9\u9762\u589e\u5f3a\uff1a 1. \u5c06MinHash\u8fc1\u79fb\u5230Redis\u7b49\u5185\u5b58\u6570\u636e\u5e93 2. \u5bf9Xapian\u6570\u636e\u5e93\u8fdb\u884c\u5206\u7247 3. \u6dfb\u52a0\u67e5\u8be2\u7ed3\u679c\u7f13\u5b58\u5c42 \u8fd9\u6837\u5728\u4fdd\u6301\u7cfb\u7edf\u7b80\u5355\u6027\u7684\u540c\u65f6\uff0c\u4e5f\u4e3a\u672a\u6765\u53ef\u80fd\u7684\u6269\u5c55\u7559\u4e0b\u4e86\u7a7a\u95f4\u3002","title":"\u9002\u7528\u573a\u666f\u63a8\u8350"},{"location":"search/theone_search_design_impl/","text":"\u5e38\u9a7b\u670d\u52a1\u6a21\u5f0f\u5b9e\u73b0 (Python\u7248\u672c) \u00b6 \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528Python\u5b9e\u73b0\u7684\u5e38\u9a7b\u670d\u52a1\u65b9\u6848\uff0c\u7ed3\u5408\u4e86SQLite\u3001Xapian\u548cFlask web\u6846\u67b6\u3002\u8fd9\u4e2a\u65b9\u6848\u9002\u5408\u4e2d\u5c0f\u89c4\u6a21\u7684\u6587\u6863\u68c0\u7d22\u548c\u67e5\u91cd\u7cfb\u7edf\u3002 \u6838\u5fc3\u670d\u52a1\u67b6\u6784 \u00b6 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Document Service \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2022 Flask HTTP API \u63a5\u53e3 \u2502 \u2502 \u2022 SQLite \u8fde\u63a5\u6c60 \u2502 \u2502 \u2022 Xapian \u6570\u636e\u5e93\u8fde\u63a5 \u2502 \u2502 \u2022 MinHash \u67e5\u91cd\u529f\u80fd \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u5b8c\u6574\u5b9e\u73b0\u4ee3\u7801 \u00b6 1. \u670d\u52a1\u4e3b\u7a0b\u5e8f ( document_service.py ) \u00b6 import sqlite3 from flask import Flask , request , jsonify from xapian import Database , Document , TermGenerator , QueryParser import mmh3 from dataclasses import dataclass from typing import List , Dict from concurrent.futures import ThreadPoolExecutor import threading import time # \u914d\u7f6e\u5e38\u91cf SQLITE_DB_PATH = \"metadata.db\" XAPIAN_DB_PATH = \"xapian_index\" MINHASH_PERMUTATIONS = 128 # MinHash\u7b7e\u540d\u957f\u5ea6 app = Flask ( __name__ ) # \u6570\u636e\u5e93\u8fde\u63a5\u6c60 class ConnectionPool : def __init__ ( self , max_connections = 5 ): self . max_connections = max_connections self . _pool = [] self . _lock = threading . Lock () def get_conn ( self ): with self . _lock : if self . _pool : return self . _pool . pop () if len ( self . _pool ) < self . max_connections : return sqlite3 . connect ( SQLITE_DB_PATH ) raise Exception ( \"Connection pool exhausted\" ) def return_conn ( self , conn ): with self . _lock : self . _pool . append ( conn ) sqlite_pool = ConnectionPool () xapian_db = Database ( XAPIAN_DB_PATH ) # MinHash \u5de5\u5177\u51fd\u6570 def generate_minhash ( text : str , num_perm = MINHASH_PERMUTATIONS ) -> List [ int ]: shingles = set () words = text . split () for i in range ( len ( words ) - 2 ): shingles . add ( \" \" . join ( words [ i : i + 3 ])) minhash = [ float ( 'inf' )] * num_perm for shingle in shingles : for i in range ( num_perm ): hash_val = mmh3 . hash ( f \" { i }{ shingle } \" , signed = False ) if hash_val < minhash [ i ]: minhash [ i ] = hash_val return minhash # API\u7aef\u70b9 @app . route ( '/search' , methods = [ 'GET' ]) def search (): query = request . args . get ( 'q' , '' ) page = int ( request . args . get ( 'page' , 1 )) page_size = int ( request . args . get ( 'page_size' , 10 )) # 1. \u4f7f\u7528Xapian\u8fdb\u884c\u5168\u6587\u68c0\u7d22 query_parser = QueryParser () query_parser . set_stemming ( True ) xapian_query = query_parser . parse_query ( query ) enquire = xapian_db . enquire ( xapian_query ) matches = enquire . get_mset (( page - 1 ) * page_size , page_size ) # 2. \u4eceSQLite\u83b7\u53d6\u5143\u6570\u636e conn = sqlite_pool . get_conn () try : cursor = conn . cursor () doc_ids = [ str ( match . docid ) for match in matches ] placeholders = ',' . join ([ '?' ] * len ( doc_ids )) cursor . execute ( f \"\"\" SELECT id, title, file_path, created_time FROM documents WHERE id IN ( { placeholders } ) \"\"\" , doc_ids ) meta_map = { row [ 0 ]: row [ 1 :] for row in cursor . fetchall ()} # 3. \u5408\u5e76\u7ed3\u679c results = [] for match in matches : doc_id = str ( match . docid ) if doc_id in meta_map : title , path , created = meta_map [ doc_id ] results . append ({ 'id' : doc_id , 'title' : title , 'path' : path , 'score' : match . percent / 100 , 'created' : created }) return jsonify ({ 'results' : results }) finally : sqlite_pool . return_conn ( conn ) @app . route ( '/find_similar' , methods = [ 'POST' ]) def find_similar (): content = request . json . get ( 'content' , '' ) threshold = float ( request . json . get ( 'threshold' , 0.8 )) # 1. \u751f\u6210\u67e5\u8be2MinHash query_minhash = generate_minhash ( content ) # 2. \u904d\u5386Xapian\u6570\u636e\u5e93\u6bd4\u8f83\u76f8\u4f3c\u5ea6 results = [] for doc in xapian_db : stored_minhash = [ int ( x ) for x in doc . get_value ( 0 ) . split ( ',' )] # \u8ba1\u7b97Jaccard\u76f8\u4f3c\u5ea6\u4f30\u8ba1 matches = sum ( 1 for a , b in zip ( query_minhash , stored_minhash ) if a == b ) similarity = matches / MINHASH_PERMUTATIONS if similarity >= threshold : doc_id = doc . get_data () conn = sqlite_pool . get_conn () try : cursor = conn . cursor () cursor . execute ( \"\"\" SELECT title, file_path FROM documents WHERE id = ? \"\"\" , ( doc_id ,)) row = cursor . fetchone () if row : results . append ({ 'id' : doc_id , 'title' : row [ 0 ], 'path' : row [ 1 ], 'similarity' : similarity }) finally : sqlite_pool . return_conn ( conn ) # \u6309\u76f8\u4f3c\u5ea6\u6392\u5e8f results . sort ( key = lambda x : x [ 'similarity' ], reverse = True ) return jsonify ({ 'results' : results }) # \u521d\u59cb\u5316\u51fd\u6570 def initialize_databases (): # \u521d\u59cb\u5316SQLite conn = sqlite3 . connect ( SQLITE_DB_PATH ) try : conn . executescript ( \"\"\" CREATE TABLE IF NOT EXISTS documents ( id TEXT PRIMARY KEY, title TEXT, file_path TEXT UNIQUE, file_type TEXT, created_time INTEGER, updated_time INTEGER ); CREATE INDEX IF NOT EXISTS idx_documents_type ON documents(file_type); CREATE INDEX IF NOT EXISTS idx_documents_time ON documents(created_time); \"\"\" ) conn . commit () finally : conn . close () # \u786e\u4fddXapian\u6570\u636e\u5e93\u5b58\u5728 try : Database ( XAPIAN_DB_PATH ) except : # \u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa db = Database ( XAPIAN_DB_PATH , Database . CREATE_OR_OPEN ) db . close () # \u540e\u53f0\u7d22\u5f15\u4efb\u52a1 def background_indexer (): while True : # \u8fd9\u91cc\u53ef\u4ee5\u6dfb\u52a0\u5b9a\u671f\u7d22\u5f15\u65b0\u6587\u6863\u7684\u903b\u8f91 time . sleep ( 60 * 5 ) # \u6bcf5\u5206\u949f\u68c0\u67e5\u4e00\u6b21 if __name__ == '__main__' : initialize_databases () # \u542f\u52a8\u540e\u53f0\u7d22\u5f15\u7ebf\u7a0b indexer_thread = threading . Thread ( target = background_indexer , daemon = True ) indexer_thread . start () # \u542f\u52a8Flask\u670d\u52a1 app . run ( host = '0.0.0.0' , port = 5000 , threaded = True ) 2. \u5ba2\u6237\u7aef\u8c03\u7528\u793a\u4f8b \u00b6 import requests # \u641c\u7d22\u6587\u6863 response = requests . get ( 'http://localhost:5000/search' , params = { 'q' : '\u4eba\u5de5\u667a\u80fd' , 'page' : 1 , 'page_size' : 10 }) print ( response . json ()) # \u67e5\u627e\u76f8\u4f3c\u6587\u6863 response = requests . post ( 'http://localhost:5000/find_similar' , json = { 'content' : '\u8fd9\u91cc\u662f\u6587\u6863\u7684\u5b8c\u6574\u5185\u5bb9...' , 'threshold' : 0.7 }) print ( response . json ()) \u5173\u952e\u7279\u6027 \u00b6 \u670d\u52a1\u5316\u67b6\u6784 \uff1a \u57fa\u4e8eFlask\u7684HTTP API\u670d\u52a1 \u652f\u6301\u591a\u7ebf\u7a0b\u5e76\u53d1\u8bf7\u6c42 \u5e38\u9a7b\u5185\u5b58\u8fd0\u884c \u6570\u636e\u5e93\u7ba1\u7406 \uff1a SQLite\u8fde\u63a5\u6c60\u7ba1\u7406 Xapian\u6301\u4e45\u5316\u8fde\u63a5 \u81ea\u52a8\u521d\u59cb\u5316\u6570\u636e\u5e93 \u6838\u5fc3\u529f\u80fd \uff1a \u5168\u6587\u68c0\u7d22 (Xapian) \u6587\u6863\u67e5\u91cd (MinHash) \u5206\u9875\u7ed3\u679c\u8fd4\u56de \u6269\u5c55\u80fd\u529b \uff1a \u540e\u53f0\u81ea\u52a8\u7d22\u5f15\u7ebf\u7a0b \u51c6\u5907\u6dfb\u52a0\u65b0\u6587\u6863\u7684\u63a5\u53e3 \u90e8\u7f72\u5efa\u8bae \u00b6 \u751f\u4ea7\u73af\u5883\u90e8\u7f72 \uff1a # \u4f7f\u7528Gunicorn\u4f5c\u4e3aWSGI\u670d\u52a1\u5668 gunicorn -w 4 -b 0 .0.0.0:5000 document_service:app \u76d1\u63a7\u548c\u8fd0\u7ef4 \uff1a \u6dfb\u52a0 /health \u7aef\u70b9\u7528\u4e8e\u5065\u5eb7\u68c0\u67e5 \u4f7f\u7528Supervisor\u7ba1\u7406\u8fdb\u7a0b \u8bb0\u5f55\u67e5\u8be2\u65e5\u5fd7 \u6027\u80fd\u4f18\u5316 \uff1a \u5bf9\u9ad8\u9891\u67e5\u8be2\u6dfb\u52a0\u7f13\u5b58 \u8003\u8651\u5bf9Xapian\u6570\u636e\u5e93\u5206\u7247 \u5bf9MinHash\u6bd4\u8f83\u4f7f\u7528\u66f4\u9ad8\u6548\u7684\u6570\u636e\u7ed3\u6784 \u8fd9\u4e2a\u5b9e\u73b0\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u670d\u52a1\u6846\u67b6\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u6c42\u8fdb\u4e00\u6b65\u6269\u5c55\u529f\u80fd\uff0c\u5982\u6dfb\u52a0\u7528\u6237\u8ba4\u8bc1\u3001\u66f4\u590d\u6742\u7684\u67e5\u8be2\u53c2\u6570\u3001\u6216\u8005\u96c6\u6210\u5176\u4ed6\u5b58\u50a8\u540e\u7aef\u3002","title":"\u5e38\u9a7b\u670d\u52a1\u6a21\u5f0f\u5b9e\u73b0 (Python\u7248\u672c)"},{"location":"search/theone_search_design_impl/#python","text":"\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528Python\u5b9e\u73b0\u7684\u5e38\u9a7b\u670d\u52a1\u65b9\u6848\uff0c\u7ed3\u5408\u4e86SQLite\u3001Xapian\u548cFlask web\u6846\u67b6\u3002\u8fd9\u4e2a\u65b9\u6848\u9002\u5408\u4e2d\u5c0f\u89c4\u6a21\u7684\u6587\u6863\u68c0\u7d22\u548c\u67e5\u91cd\u7cfb\u7edf\u3002","title":"\u5e38\u9a7b\u670d\u52a1\u6a21\u5f0f\u5b9e\u73b0 (Python\u7248\u672c)"},{"location":"search/theone_search_design_impl/#_1","text":"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Document Service \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2022 Flask HTTP API \u63a5\u53e3 \u2502 \u2502 \u2022 SQLite \u8fde\u63a5\u6c60 \u2502 \u2502 \u2022 Xapian \u6570\u636e\u5e93\u8fde\u63a5 \u2502 \u2502 \u2022 MinHash \u67e5\u91cd\u529f\u80fd \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"\u6838\u5fc3\u670d\u52a1\u67b6\u6784"},{"location":"search/theone_search_design_impl/#_2","text":"","title":"\u5b8c\u6574\u5b9e\u73b0\u4ee3\u7801"},{"location":"search/theone_search_design_impl/#1-document_servicepy","text":"import sqlite3 from flask import Flask , request , jsonify from xapian import Database , Document , TermGenerator , QueryParser import mmh3 from dataclasses import dataclass from typing import List , Dict from concurrent.futures import ThreadPoolExecutor import threading import time # \u914d\u7f6e\u5e38\u91cf SQLITE_DB_PATH = \"metadata.db\" XAPIAN_DB_PATH = \"xapian_index\" MINHASH_PERMUTATIONS = 128 # MinHash\u7b7e\u540d\u957f\u5ea6 app = Flask ( __name__ ) # \u6570\u636e\u5e93\u8fde\u63a5\u6c60 class ConnectionPool : def __init__ ( self , max_connections = 5 ): self . max_connections = max_connections self . _pool = [] self . _lock = threading . Lock () def get_conn ( self ): with self . _lock : if self . _pool : return self . _pool . pop () if len ( self . _pool ) < self . max_connections : return sqlite3 . connect ( SQLITE_DB_PATH ) raise Exception ( \"Connection pool exhausted\" ) def return_conn ( self , conn ): with self . _lock : self . _pool . append ( conn ) sqlite_pool = ConnectionPool () xapian_db = Database ( XAPIAN_DB_PATH ) # MinHash \u5de5\u5177\u51fd\u6570 def generate_minhash ( text : str , num_perm = MINHASH_PERMUTATIONS ) -> List [ int ]: shingles = set () words = text . split () for i in range ( len ( words ) - 2 ): shingles . add ( \" \" . join ( words [ i : i + 3 ])) minhash = [ float ( 'inf' )] * num_perm for shingle in shingles : for i in range ( num_perm ): hash_val = mmh3 . hash ( f \" { i }{ shingle } \" , signed = False ) if hash_val < minhash [ i ]: minhash [ i ] = hash_val return minhash # API\u7aef\u70b9 @app . route ( '/search' , methods = [ 'GET' ]) def search (): query = request . args . get ( 'q' , '' ) page = int ( request . args . get ( 'page' , 1 )) page_size = int ( request . args . get ( 'page_size' , 10 )) # 1. \u4f7f\u7528Xapian\u8fdb\u884c\u5168\u6587\u68c0\u7d22 query_parser = QueryParser () query_parser . set_stemming ( True ) xapian_query = query_parser . parse_query ( query ) enquire = xapian_db . enquire ( xapian_query ) matches = enquire . get_mset (( page - 1 ) * page_size , page_size ) # 2. \u4eceSQLite\u83b7\u53d6\u5143\u6570\u636e conn = sqlite_pool . get_conn () try : cursor = conn . cursor () doc_ids = [ str ( match . docid ) for match in matches ] placeholders = ',' . join ([ '?' ] * len ( doc_ids )) cursor . execute ( f \"\"\" SELECT id, title, file_path, created_time FROM documents WHERE id IN ( { placeholders } ) \"\"\" , doc_ids ) meta_map = { row [ 0 ]: row [ 1 :] for row in cursor . fetchall ()} # 3. \u5408\u5e76\u7ed3\u679c results = [] for match in matches : doc_id = str ( match . docid ) if doc_id in meta_map : title , path , created = meta_map [ doc_id ] results . append ({ 'id' : doc_id , 'title' : title , 'path' : path , 'score' : match . percent / 100 , 'created' : created }) return jsonify ({ 'results' : results }) finally : sqlite_pool . return_conn ( conn ) @app . route ( '/find_similar' , methods = [ 'POST' ]) def find_similar (): content = request . json . get ( 'content' , '' ) threshold = float ( request . json . get ( 'threshold' , 0.8 )) # 1. \u751f\u6210\u67e5\u8be2MinHash query_minhash = generate_minhash ( content ) # 2. \u904d\u5386Xapian\u6570\u636e\u5e93\u6bd4\u8f83\u76f8\u4f3c\u5ea6 results = [] for doc in xapian_db : stored_minhash = [ int ( x ) for x in doc . get_value ( 0 ) . split ( ',' )] # \u8ba1\u7b97Jaccard\u76f8\u4f3c\u5ea6\u4f30\u8ba1 matches = sum ( 1 for a , b in zip ( query_minhash , stored_minhash ) if a == b ) similarity = matches / MINHASH_PERMUTATIONS if similarity >= threshold : doc_id = doc . get_data () conn = sqlite_pool . get_conn () try : cursor = conn . cursor () cursor . execute ( \"\"\" SELECT title, file_path FROM documents WHERE id = ? \"\"\" , ( doc_id ,)) row = cursor . fetchone () if row : results . append ({ 'id' : doc_id , 'title' : row [ 0 ], 'path' : row [ 1 ], 'similarity' : similarity }) finally : sqlite_pool . return_conn ( conn ) # \u6309\u76f8\u4f3c\u5ea6\u6392\u5e8f results . sort ( key = lambda x : x [ 'similarity' ], reverse = True ) return jsonify ({ 'results' : results }) # \u521d\u59cb\u5316\u51fd\u6570 def initialize_databases (): # \u521d\u59cb\u5316SQLite conn = sqlite3 . connect ( SQLITE_DB_PATH ) try : conn . executescript ( \"\"\" CREATE TABLE IF NOT EXISTS documents ( id TEXT PRIMARY KEY, title TEXT, file_path TEXT UNIQUE, file_type TEXT, created_time INTEGER, updated_time INTEGER ); CREATE INDEX IF NOT EXISTS idx_documents_type ON documents(file_type); CREATE INDEX IF NOT EXISTS idx_documents_time ON documents(created_time); \"\"\" ) conn . commit () finally : conn . close () # \u786e\u4fddXapian\u6570\u636e\u5e93\u5b58\u5728 try : Database ( XAPIAN_DB_PATH ) except : # \u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa db = Database ( XAPIAN_DB_PATH , Database . CREATE_OR_OPEN ) db . close () # \u540e\u53f0\u7d22\u5f15\u4efb\u52a1 def background_indexer (): while True : # \u8fd9\u91cc\u53ef\u4ee5\u6dfb\u52a0\u5b9a\u671f\u7d22\u5f15\u65b0\u6587\u6863\u7684\u903b\u8f91 time . sleep ( 60 * 5 ) # \u6bcf5\u5206\u949f\u68c0\u67e5\u4e00\u6b21 if __name__ == '__main__' : initialize_databases () # \u542f\u52a8\u540e\u53f0\u7d22\u5f15\u7ebf\u7a0b indexer_thread = threading . Thread ( target = background_indexer , daemon = True ) indexer_thread . start () # \u542f\u52a8Flask\u670d\u52a1 app . run ( host = '0.0.0.0' , port = 5000 , threaded = True )","title":"1. \u670d\u52a1\u4e3b\u7a0b\u5e8f (document_service.py)"},{"location":"search/theone_search_design_impl/#2","text":"import requests # \u641c\u7d22\u6587\u6863 response = requests . get ( 'http://localhost:5000/search' , params = { 'q' : '\u4eba\u5de5\u667a\u80fd' , 'page' : 1 , 'page_size' : 10 }) print ( response . json ()) # \u67e5\u627e\u76f8\u4f3c\u6587\u6863 response = requests . post ( 'http://localhost:5000/find_similar' , json = { 'content' : '\u8fd9\u91cc\u662f\u6587\u6863\u7684\u5b8c\u6574\u5185\u5bb9...' , 'threshold' : 0.7 }) print ( response . json ())","title":"2. \u5ba2\u6237\u7aef\u8c03\u7528\u793a\u4f8b"},{"location":"search/theone_search_design_impl/#_3","text":"\u670d\u52a1\u5316\u67b6\u6784 \uff1a \u57fa\u4e8eFlask\u7684HTTP API\u670d\u52a1 \u652f\u6301\u591a\u7ebf\u7a0b\u5e76\u53d1\u8bf7\u6c42 \u5e38\u9a7b\u5185\u5b58\u8fd0\u884c \u6570\u636e\u5e93\u7ba1\u7406 \uff1a SQLite\u8fde\u63a5\u6c60\u7ba1\u7406 Xapian\u6301\u4e45\u5316\u8fde\u63a5 \u81ea\u52a8\u521d\u59cb\u5316\u6570\u636e\u5e93 \u6838\u5fc3\u529f\u80fd \uff1a \u5168\u6587\u68c0\u7d22 (Xapian) \u6587\u6863\u67e5\u91cd (MinHash) \u5206\u9875\u7ed3\u679c\u8fd4\u56de \u6269\u5c55\u80fd\u529b \uff1a \u540e\u53f0\u81ea\u52a8\u7d22\u5f15\u7ebf\u7a0b \u51c6\u5907\u6dfb\u52a0\u65b0\u6587\u6863\u7684\u63a5\u53e3","title":"\u5173\u952e\u7279\u6027"},{"location":"search/theone_search_design_impl/#_4","text":"\u751f\u4ea7\u73af\u5883\u90e8\u7f72 \uff1a # \u4f7f\u7528Gunicorn\u4f5c\u4e3aWSGI\u670d\u52a1\u5668 gunicorn -w 4 -b 0 .0.0.0:5000 document_service:app \u76d1\u63a7\u548c\u8fd0\u7ef4 \uff1a \u6dfb\u52a0 /health \u7aef\u70b9\u7528\u4e8e\u5065\u5eb7\u68c0\u67e5 \u4f7f\u7528Supervisor\u7ba1\u7406\u8fdb\u7a0b \u8bb0\u5f55\u67e5\u8be2\u65e5\u5fd7 \u6027\u80fd\u4f18\u5316 \uff1a \u5bf9\u9ad8\u9891\u67e5\u8be2\u6dfb\u52a0\u7f13\u5b58 \u8003\u8651\u5bf9Xapian\u6570\u636e\u5e93\u5206\u7247 \u5bf9MinHash\u6bd4\u8f83\u4f7f\u7528\u66f4\u9ad8\u6548\u7684\u6570\u636e\u7ed3\u6784 \u8fd9\u4e2a\u5b9e\u73b0\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u670d\u52a1\u6846\u67b6\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u6c42\u8fdb\u4e00\u6b65\u6269\u5c55\u529f\u80fd\uff0c\u5982\u6dfb\u52a0\u7528\u6237\u8ba4\u8bc1\u3001\u66f4\u590d\u6742\u7684\u67e5\u8be2\u53c2\u6570\u3001\u6216\u8005\u96c6\u6210\u5176\u4ed6\u5b58\u50a8\u540e\u7aef\u3002","title":"\u90e8\u7f72\u5efa\u8bae"},{"location":"search/tools/","text":"","title":"Tools"},{"location":"train/unsloth/","text":"\u6211\u611f\u89c9\u5f97\u5148\u770b\u770b\u6027\u80fd\uff0c\u7136\u540e\u518d\u60f3\u7740\u4ee5\u540e\u4f18\u5316\u3002 from unsloth import FastLanguageModel model , tokenizer = FastLanguageModel . from_pretrained ( model_name = \"unsloth/mistral-7b-bnb-4bit\" , # Supports Llama, Mistral - replace this! max_seq_length = 2048 , # Supports RoPE Scaling internally, so choose any! load_in_4bit = True , ) \u8bad\u7ec3\u6846\u67b6 \u4f18\u70b9 \u7f3a\u70b9 Megatron-LM - \u652f\u6301 Transformer \u6a21\u578b\u7684\u6a21\u578b\u5e76\u884c - \u9002\u7528\u4e8e\u5927\u89c4\u6a21\u6a21\u578b\u8bad\u7ec3 - \u53ef\u80fd\u9700\u8981\u8f83\u9ad8\u7684\u786c\u4ef6\u8d44\u6e90\u548c\u4e13\u5bb6\u77e5\u8bc6 DeepSpeed - \u7528\u4e8e\u8bad\u7ec3\u5927\u578b\u6a21\u578b - \u9ad8\u6548\u7684\u8bad\u7ec3\u548c\u63a8\u7406\u80fd\u529b - \u80fd\u591f\u5904\u7406\u5177\u6709\u6570\u5341\u4ebf\u53c2\u6570\u7684\u6a21\u578b - \u5b9e\u73b0\u4e86\u6781\u81f4\u7684\u538b\u7f29 - \u9700\u8981\u4e13\u4e1a\u7684\u73af\u5883\u914d\u7f6e\u548c\u8f83\u5f3a\u7684\u786c\u4ef6\u652f\u6301 FairScale - \u63d0\u4f9b\u4e86 Fully Sharded Data Parallel (FSDP) - \u6a21\u5757\u5316\u8bbe\u8ba1 - \u63d0\u4f9b\u4e86\u6700\u4f73\u7684\u6027\u80fd\u548c\u9ad8\u6548\u7684\u5e76\u884c\u5316 - \u8f83 steep \u7684\u5b66\u4e60\u66f2\u7ebf ColossalAI - \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5e76\u884c\u7ec4\u4ef6 - \u652f\u6301\u591a\u79cd\u5e76\u884c\u7b56\u7565 - \u914d\u7f6e\u548c\u8c03\u8bd5\u53ef\u80fd\u8f83\u4e3a\u590d\u6742 Alpa - \u7528\u4e8e\u8bad\u7ec3\u548c\u670d\u52a1\u5927\u89c4\u6a21\u795e\u7ecf\u7f51\u7edc - \u5b9e\u73b0\u4e86\u81ea\u52a8\u5e76\u884c\u5316 - \u652f\u6301\u5206\u5e03\u5f0f\u96c6\u7fa4\u4e0a\u7684\u9ad8\u6548\u8bad\u7ec3 - \u4e3b\u8981\u9488\u5bf9\u6709\u4e00\u5b9a\u6df1\u5ea6\u5b66\u4e60\u57fa\u7840\u7684\u7814\u7a76\u4eba\u5458\u548c\u5f00\u53d1\u8005 OneFlow - \u63a5\u53e3\u4e0e PyTorch \u7c7b\u4f3c\uff0c\u6613\u4e8e\u4f7f\u7528 - \u652f\u6301 n \u7ef4\u5e76\u884c/\u5206\u5e03\u5f0f\u6267\u884c - \u63d0\u4f9b\u4e86\u9759\u6001\u56fe\u7f16\u8bd1\u5668 - \u76f8\u5bf9\u8f83\u4f4e\u7684\u793e\u533a\u652f\u6301\u548c\u751f\u6001\u7cfb\u7edf Mesh-Tensorflow - \u7528\u4e8e\u5206\u5e03\u5f0f\u6df1\u5ea6\u5b66\u4e60 - \u9002\u7528\u4e8e\u590d\u6742\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1 - \u4e3b\u8981\u9488\u5bf9\u6709\u4e00\u5b9a TensorFlow \u7ecf\u9a8c\u7684\u7814\u7a76\u4eba\u5458\u548c\u5f00\u53d1\u8005 ParallelFormers - \u57fa\u4e8e Megatron-LM \u7684\u5e93 - \u4e0e Huggingface \u5e93\u5f88\u597d\u5730\u96c6\u6210\u5728\u4e00\u8d77 - \u5141\u8bb8\u7528\u6237\u901a\u8fc7\u4e00\u884c\u4ee3\u7801\u5e76\u884c\u5316\u6a21\u578b - \u4e13\u6ce8\u4e8e\u4e0e Huggingface \u5e93\u7684\u96c6\u6210 \u7b97\u5b50 \u00b6 \u5de5\u7a0b\u5b9e\u73b0 \u00b6 \u76ee\u524d\u8bad\u7ec3\u7684\u6027\u80fd \u00b6","title":"Unsloth"},{"location":"train/unsloth/#_1","text":"","title":"\u7b97\u5b50"},{"location":"train/unsloth/#_2","text":"","title":"\u5de5\u7a0b\u5b9e\u73b0"},{"location":"train/unsloth/#_3","text":"","title":"\u76ee\u524d\u8bad\u7ec3\u7684\u6027\u80fd"},{"location":"train/%E8%87%AA%E5%AE%9A%E4%B9%89/","text":"\u6253\u7b97\u5bf9\u4e00\u4e9b\u7b97\u5b50\u505a\u6d4b\u8bd5\uff0c\u770b\u4e00\u4e0b\u8bad\u7ec3\u7684\u6027\u80fd","title":"\u81ea\u5b9a\u4e49"},{"location":"triton/basic/","text":"basic usage template advanced config theory basic \u00b6 https://triton-lang.org/main/python-api/triton.language.html usage template \u00b6 import torch import triton import triton.language as tl @triton . jit def kernel ( x_ptr , # *Pointer* to first input vector y_ptr , # *Pointer* to second input vector output_ptr , # *Pointer* to output vector n_elements , # Size of the vector BLOCK_SIZE : tl . constexpr , # Number of elements each program should process ): # There are multiple 'program's processing different data. We identify which program # we are here pid = tl . program_id ( axis = 0 ) # We use a 1D launch grid so axis is 0 # This program will process inputs that are offset from the initial data. # for instance, if you had a vector of length 256 and block_size of 64, the programs # would each access the elements [0:64, 64:128, 128:192, 192:256]. # Note that offsets is a list of pointers block_start = pid * BLOCK_SIZE offsets = block_start + tl . arange ( 0 , BLOCK_SIZE ) # Create a mask to guard memory operations against out-of-bounds accesses mask = offsets < n_elements # Load x and y from DRAM, masking out any extra elements in case the input is not a multiple of the block size x = tl . load ( x_ptr + offsets , mask = mask ) y = tl . load ( y_ptr + offsets , mask = mask ) output = x + y # Write x + y back to DRAM tl . store ( output_ptr + offsets , output , mask = mask ) grid = lambda META : ( triton . cdiv ( META [ 'n_elements' ], META [ 'BLOCK_SIZE' ]),) kernel [ grid ]( x , y , output , n_elements , BLOCK_SIZE = 1024 ) advanced config \u00b6 torch.library.triton_op \uff1a - \u8fd9\u662f\u4e00\u4e2a\u88c5\u9970\u5668\uff08decorator\uff09\uff0c\u7528\u4e8e\u5305\u88c5\u53ef\u80fd\u8c03\u7528\u4e00\u4e2a\u6216\u591a\u4e2a Triton \u5185\u6838\u7684\u51fd\u6570 - \u5b83\u5e2e\u52a9\u5c06 Triton \u5185\u6838\u96c6\u6210\u5230 PyTorch \u7684\u8c03\u5ea6\u7cfb\u7edf\u4e2d torch.library.wrap_triton \uff1a - \u8fd9\u662f\u7528\u6765\u76f4\u63a5\u5305\u88c5\u5bf9 Triton \u5185\u6838\u7684\u8c03\u7528 - \u5b83\u5904\u7406 PyTorch \u5f20\u91cf\u548c Triton \u5185\u6838\u4e4b\u95f4\u7684\u6570\u636e\u8f6c\u6362 \u7b80\u5355\u6765\u8bf4\uff0c\u8fd9\u4e24\u4e2a API \u7684\u76ee\u7684\u662f\u8ba9\u5f00\u53d1\u8005\u80fd\u591f\u65b9\u4fbf\u5730\u5728 PyTorch \u4e2d\u4f7f\u7528 Triton \u7f16\u5199\u7684\u9ad8\u6027\u80fd GPU \u5185\u6838\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a import torch import triton import triton.language as tl @triton . jit def add_kernel ( x_ptr , y_ptr , output_ptr , n_elements ): # Triton \u5185\u6838\u7684\u5b9e\u73b0 pass # \u4f7f\u7528 triton_op \u5305\u88c5\u51fd\u6570 @torch . library . triton_op def my_add ( x : torch . Tensor , y : torch . Tensor ) -> torch . Tensor : output = torch . empty_like ( x ) # \u4f7f\u7528 wrap_triton \u5305\u88c5\u5bf9 Triton \u5185\u6838\u7684\u8c03\u7528 torch . library . wrap_triton ( add_kernel )( x . data_ptr (), y . data_ptr (), output . data_ptr (), x . numel () ) return output \u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff1a 1. \u66f4\u597d\u7684\u6027\u80fd\u4f18\u5316 2. \u66f4\u5bb9\u6613\u96c6\u6210\u5230 PyTorch \u7684\u751f\u6001\u7cfb\u7edf\u4e2d 3. \u81ea\u52a8\u5904\u7406\u8bbe\u5907\u95f4\u7684\u6570\u636e\u4f20\u8f93\u548c\u7c7b\u578b\u8f6c\u6362 theory \u00b6","title":"Basic"},{"location":"triton/basic/#basic","text":"https://triton-lang.org/main/python-api/triton.language.html","title":"basic"},{"location":"triton/basic/#usage-template","text":"import torch import triton import triton.language as tl @triton . jit def kernel ( x_ptr , # *Pointer* to first input vector y_ptr , # *Pointer* to second input vector output_ptr , # *Pointer* to output vector n_elements , # Size of the vector BLOCK_SIZE : tl . constexpr , # Number of elements each program should process ): # There are multiple 'program's processing different data. We identify which program # we are here pid = tl . program_id ( axis = 0 ) # We use a 1D launch grid so axis is 0 # This program will process inputs that are offset from the initial data. # for instance, if you had a vector of length 256 and block_size of 64, the programs # would each access the elements [0:64, 64:128, 128:192, 192:256]. # Note that offsets is a list of pointers block_start = pid * BLOCK_SIZE offsets = block_start + tl . arange ( 0 , BLOCK_SIZE ) # Create a mask to guard memory operations against out-of-bounds accesses mask = offsets < n_elements # Load x and y from DRAM, masking out any extra elements in case the input is not a multiple of the block size x = tl . load ( x_ptr + offsets , mask = mask ) y = tl . load ( y_ptr + offsets , mask = mask ) output = x + y # Write x + y back to DRAM tl . store ( output_ptr + offsets , output , mask = mask ) grid = lambda META : ( triton . cdiv ( META [ 'n_elements' ], META [ 'BLOCK_SIZE' ]),) kernel [ grid ]( x , y , output , n_elements , BLOCK_SIZE = 1024 )","title":"usage template"},{"location":"triton/basic/#advanced-config","text":"torch.library.triton_op \uff1a - \u8fd9\u662f\u4e00\u4e2a\u88c5\u9970\u5668\uff08decorator\uff09\uff0c\u7528\u4e8e\u5305\u88c5\u53ef\u80fd\u8c03\u7528\u4e00\u4e2a\u6216\u591a\u4e2a Triton \u5185\u6838\u7684\u51fd\u6570 - \u5b83\u5e2e\u52a9\u5c06 Triton \u5185\u6838\u96c6\u6210\u5230 PyTorch \u7684\u8c03\u5ea6\u7cfb\u7edf\u4e2d torch.library.wrap_triton \uff1a - \u8fd9\u662f\u7528\u6765\u76f4\u63a5\u5305\u88c5\u5bf9 Triton \u5185\u6838\u7684\u8c03\u7528 - \u5b83\u5904\u7406 PyTorch \u5f20\u91cf\u548c Triton \u5185\u6838\u4e4b\u95f4\u7684\u6570\u636e\u8f6c\u6362 \u7b80\u5355\u6765\u8bf4\uff0c\u8fd9\u4e24\u4e2a API \u7684\u76ee\u7684\u662f\u8ba9\u5f00\u53d1\u8005\u80fd\u591f\u65b9\u4fbf\u5730\u5728 PyTorch \u4e2d\u4f7f\u7528 Triton \u7f16\u5199\u7684\u9ad8\u6027\u80fd GPU \u5185\u6838\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a import torch import triton import triton.language as tl @triton . jit def add_kernel ( x_ptr , y_ptr , output_ptr , n_elements ): # Triton \u5185\u6838\u7684\u5b9e\u73b0 pass # \u4f7f\u7528 triton_op \u5305\u88c5\u51fd\u6570 @torch . library . triton_op def my_add ( x : torch . Tensor , y : torch . Tensor ) -> torch . Tensor : output = torch . empty_like ( x ) # \u4f7f\u7528 wrap_triton \u5305\u88c5\u5bf9 Triton \u5185\u6838\u7684\u8c03\u7528 torch . library . wrap_triton ( add_kernel )( x . data_ptr (), y . data_ptr (), output . data_ptr (), x . numel () ) return output \u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff1a 1. \u66f4\u597d\u7684\u6027\u80fd\u4f18\u5316 2. \u66f4\u5bb9\u6613\u96c6\u6210\u5230 PyTorch \u7684\u751f\u6001\u7cfb\u7edf\u4e2d 3. \u81ea\u52a8\u5904\u7406\u8bbe\u5907\u95f4\u7684\u6570\u636e\u4f20\u8f93\u548c\u7c7b\u578b\u8f6c\u6362","title":"advanced config"},{"location":"triton/basic/#theory","text":"","title":"theory"}]}